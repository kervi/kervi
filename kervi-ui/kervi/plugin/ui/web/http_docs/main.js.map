{"version":3,"sources":["webpack:///D:/tim privat/github/kervi/kervi-ui/kervi/ui/web/dist/kervi-js/fesm5/kervi-js.js","webpack:///D:/tim privat/github/kervi/kervi-ui/kervi/ui/web/dist/kervi-zorro/fesm5/kervi-zorro.js","webpack:///D:/tim privat/github/kervi/kervi-ui/kervi/ui/web/dist/ngx-kervi/fesm5/ngx-kervi.js","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/connect/connect.component.css","webpack:///./src/app/connect/connect.component.html","webpack:///./src/app/connect/connect.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/image-viewer/image-viewer.component.html","webpack:///./src/app/image-viewer/image-viewer.component.scss","webpack:///./src/app/image-viewer/image-viewer.component.ts","webpack:///./src/app/image-viewer/image-viewer.config.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/media/media.component.css","webpack:///./src/app/media/media.component.html","webpack:///./src/app/media/media.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACf;AACyB;;AAEhE;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,sDAAQ,yDAAyD,wBAAwB;AACnI;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,iCAAiC;AACxD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,kCAAkC;AACzD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,mCAAmC;AAC1D,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,yCAAyC,wDAAwD;AACjG;AACA,yCAAyC,6CAA6C;AACtF,uBAAuB,EAAE;AACzB,uBAAuB;AACvB;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,8CAA8C,sDAAQ,yDAAyD,wBAAwB;AACvI;AACA,kDAAkD,4DAA4D;AAC9G,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA,0CAA0C,4CAA4C;AACtF,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,4BAA4B;AAC5B;AACA,mFAAmF;AACnF;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mCAAmC,uCAAuC;AAC1E,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iCAAiC,mCAAmC;AACpE,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,yCAAyC,wDAAwD;AACjG;AACA,yCAAyC,6CAA6C;AACtF,uBAAuB,EAAE;AACzB,uBAAuB;AACvB,gDAAgD,+DAA+D;AAC/G,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,gDAAgD,gGAAgG,KAAK;AACrJ;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,4BAA4B;AAC5B;AACA,mFAAmF;AACnF;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,iDAAiD;AACrF;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,8BAA8B,4DAA4D;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mCAAmC,uCAAuC;AAC1E,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA,4CAA4C,iEAAiE;AAC7G;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iCAAiC,mCAAmC;AACpE,mBAAmB,EAAE;AACrB,mBAAmB;AACnB,4CAA4C,+DAA+D;AAC3G;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qBAAqB;AAC9D;AACA;AACA,iBAAiB;AACjB,mBAAmB,EAAE;AACrB,mBAAmB,+CAA+C;AAClE;AACA;AACA;AACA,4CAA4C,6DAA6D;AACzG;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA,4CAA4C,oIAAoI;AAChL;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,2BAA2B,oDAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ,yCAAyC,UAAU;AACrF;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,6BAA6B,oDAAe;AAC5C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0BAA0B;AAC1B;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,2BAA2B;AAC3B;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,kCAAkC,oDAAe;AACjD,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,0BAA0B,sDAAQ,kCAAkC,UAAU;AAC9E;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ,+BAA+B,UAAU;AAC3E;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA,yCAAyC,sDAAQ,kEAAkE,2BAA2B;AAC9I;AACA;AACA;AACA,kCAAkC,sDAAQ,+BAA+B,UAAU;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,+BAA+B,oDAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ,iCAAiC,UAAU;AAC7E;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0BAA0B,sDAAQ,oCAAoC,UAAU;AAChF;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC,eAAe;AAC/C,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ,iCAAiC,UAAU;AAC7E;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA,0BAA0B,sDAAQ,kCAAkC,UAAU;AAC9E;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA,0BAA0B,sDAAQ,kCAAkC,UAAU;AAC9E;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA,0BAA0B,sDAAQ,yCAAyC,UAAU;AACrF;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,8BAA8B,sDAAQ,uCAAuC,UAAU;AACvF;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA,8BAA8B,sDAAQ,wCAAwC,UAAU;AACxF;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA,8BAA8B,sDAAQ,yCAAyC,UAAU;AACzF;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,2BAA2B;AAC3B;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0BAA0B;AAC1B;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,8BAA8B,sDAAQ,sCAAsC,UAAU;AACtF;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ,mCAAmC,UAAU;AAC/E;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA,0BAA0B,sDAAQ,oCAAoC,UAAU;AAChF;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,kCAAkC,sDAAQ,kCAAkC,UAAU;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0BAA0B,sDAAQ,kCAAkC,UAAU;AAC9E;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,kCAAkC,sDAAQ,oCAAoC,UAAU;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,0CAA0C,sDAAQ,qEAAqE,4BAA4B;AACnJ;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sDAAQ,mCAAmC,UAAU;AACnF;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,iCAAiC;AACjC;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,iCAAiC,EAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gCAAgC,sDAAQ,uCAAuC,kBAAkB;AACjG;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oDAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ,yCAAyC,UAAU;AACrF;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,iEAAiE,sDAAQ;AACzE;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,iEAAiE,sDAAQ;AACzE;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,sDAAQ,4DAA4D,yBAAyB;AAC5I;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oCAAoC,sDAAQ,mDAAmD,sBAAsB;AACrH;AACA,2BAA2B,EAAE;AAC7B,6CAA6C,EAAE;AAC/C;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oCAAoC,sDAAQ,mDAAmD,sBAAsB;AACrH;AACA;AACA;AACA,sCAAsC,sDAAQ,uCAAuC,UAAU;AAC/F;AACA;AACA,wDAAwD,sDAAQ,mDAAmD,sBAAsB;AACzI;AACA;AACA;AACA;AACA,2CAA2C,QAAQ,gBAAgB;AACnE;AACA;AACA;AACA;AACA,yCAAyC,0BAA0B;AACnE;AACA;AACA;AACA,mCAAmC,QAAQ,gBAAgB;AAC3D;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA,2BAA2B,oDAAe;AAC1C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,+BAA+B,sDAAQ,oCAAoC,iBAAiB;AAC5F;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,2BAA2B,oDAAe;AAC1C,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,oDAAe;AAC9C,oCAAoC,oDAAe;AACnD;AACA,sCAAsC,oDAAe;AACrD;AACA,gCAAgC,oDAAe;AAC/C,mCAAmC,oDAAe;AAClD,oCAAoC,oDAAe;AACnD,oCAAoC,oDAAe;AACnD;AACA,6BAA6B,oDAAe;AAC5C;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,gCAAgC,oDAAe;AAC/C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,sCAAsC,sDAAQ,kCAAkC,UAAU;AAC1F;AACA;AACA,2CAA2C,EAAE;AAC7C,+DAA+D,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ,gBAAgB;AAC3D;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,sCAAsC,sDAAQ,kCAAkC,UAAU;AAC1F;AACA;AACA,2CAA2C,EAAE;AAC7C,yDAAyD,EAAE;AAC3D;AACA;AACA;AACA;AACA,mCAAmC,QAAQ,gBAAgB;AAC3D;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,sCAAsC,sDAAQ,kCAAkC,UAAU;AAC1F;AACA;AACA,2CAA2C,EAAE;AAC7C,yDAAyD,EAAE;AAC3D;AACA;AACA;AACA;AACA,mCAAmC,QAAQ,gBAAgB;AAC3D;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,8CAA8C,sDAAQ,6CAA6C,oBAAoB;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ,gBAAgB;AAC3D;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,uCAAuC,sBAAsB;AAC7D;AACA;AACA,0BAA0B,sDAAQ,kCAAkC,UAAU;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0BAA0B,sDAAQ,kCAAkC,UAAU;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,qCAAqC,EAAE;AACvC;AACA,oCAAoC,sDAAQ,mDAAmD,sBAAsB;AACrH;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEse;;AAEte,2CAA2C,cAAc,2l0L;;;;;;;;;;;;ACngHzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmJ;AACjH;AAC4S;AACpS;AACL;AACmC;AACzB;AACJ;AACE;AAC4B;AACtB;AACK;;AAExD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD,WAAW;AAC/D,2DAA2D,sEAAgB,EAAE,gDAAgD,gCAAgC,EAAE,gDAAgD;AAC/M;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,yCAAyC,YAAY,KAAK,YAAY,KAAK,aAAa,KAAK,UAAU,KAAK,QAAQ,KAAK,wBAAwB,KAAK,yBAAyB,KAAK,yBAAyB,KAAK,uBAAuB,sBAAsB,OAAO,KAAK,SAAS;AACpR;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,0DAA0D,WAAW;AACrE;AACA,CAAC,CAAC,sEAA4B;;AAE9B;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,yRAAyR,0BAA0B,iEAAiE,sBAAsB,8tBAA8tB,0BAA0B,2FAA2F,sBAAsB;AACnvC;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA,CAAC,CAAC,8DAAoB;;AAEtB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iRAAiR,UAAU,6WAA6W,aAAa,oJAAoJ,8CAA8C,uDAAuD,YAAY;AAC15B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,CAAC,CAAC,8DAAoB;;AAEtB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA,CAAC,CAAC,+DAAqB;;AAEvB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,+LAA+L,wBAAwB;AACvN;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,CAAC,CAAC,8DAAoB;;AAEtB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,CAAC,CAAC,gEAAsB;;AAExB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,CAAC,CAAC,6DAAmB;;AAErB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,QAAQ,kDAAa;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,qDAAqD;AACrD,SAAS,OAAO,yDAAe,EAAE;AACjC,SAAS,OAAO,8DAAoB;AACpC,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,wBAAwB,OAAO,uDAAS,oBAAoB;AAC5D;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uDAAc;AAC9C,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,8DAAoB;AACpC,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,yBAAyB,OAAO,oDAAM,EAAE;AACxC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,QAAQ,kDAAa;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yBAAyB;AAClD;AACA,+BAA+B,uDAAuD;AACtF;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD;AACjD,SAAS,OAAO,yDAAe,EAAE;AACjC,SAAS,OAAO,8DAAoB;AACpC,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,wBAAwB,OAAO,uDAAS,oBAAoB;AAC5D;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,QAAQ,kDAAa;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yBAAyB;AAClD;AACA,+BAA+B,uDAAuD;AACtF;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD;AACtD,SAAS,OAAO,yDAAe,EAAE;AACjC,SAAS,OAAO,8DAAoB;AACpC,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,wBAAwB,OAAO,uDAAS,oBAAoB;AAC5D;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD,+BAA+B,0DAAY;AAC3C;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,oWAAoW,yBAAyB,iKAAiK,0BAA0B;AACxjB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD,WAAW;AACnE;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,uBAAuB,OAAO,oDAAM,EAAE;AACtC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD,+BAA+B,0DAAY;AAC3C;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,yKAAyK,6BAA6B;AACtM;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,uBAAuB,OAAO,oDAAM,EAAE;AACtC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,4CAA4C,iBAAiB,cAAc,aAAa,sBAAsB,YAAY,qBAAqB,kBAAkB,WAAW,UAAU,WAAW;AACjM,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD;AACtD,SAAS,OAAO,yDAAe,EAAE;AACjC,SAAS,OAAO,sEAAY;AAC5B,MAAM;AACN;AACA,wBAAwB,OAAO,mDAAK,EAAE;AACtC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,uBAAuB,OAAO,oDAAM,EAAE;AACtC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,eAAe,OAAO,mDAAK,EAAE;AAC7B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD;AACpD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,oBAAoB,OAAO,mDAAK,EAAE;AAClC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,2BAA2B,OAAO,oDAAM,EAAE;AAC1C;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,kDAAkD,MAAM;AACxD;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,iDAAiD,aAAa;AAC9D;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,qBAAqB;AACrB;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,qBAAqB;AACrB;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA,uCAAuC,EAAE;AACzC;AACA,uCAAuC,EAAE;AACzC;AACA,uCAAuC,EAAE;AACzC;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD;AACjD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,uBAAuB,OAAO,oDAAM,EAAE;AACtC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uEAAa;AACrC,wBAAwB,6DAAmB;AAC3C,wBAAwB,4DAAY;AACpC,wBAAwB,wDAAc;AACtC,wBAAwB,0DAAW;AACnC,wBAAwB,+DAAiB;AACzC,wBAAwB,iEAAkB;AAC1C;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,qDAAqD,WAAW;AAChE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD,WAAW;AACjE;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAY;AACpC,wBAAwB,6DAAmB;AAC3C;AACA,wBAAwB,0DAAW;AACnC,wBAAwB,+DAAiB;AACzC;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,kBAAkB,iCAAiC;AACnD;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,yDAAyD;AACzD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,sBAAsB,OAAO,mDAAK,EAAE;AACpC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,wEAAwE,6CAA6C;AACrH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,yKAAyK,eAAe,SAAS,SAAS,YAAY,gHAAgH,SAAS,yMAAyM,QAAQ,SAAS,mIAAmI,QAAQ,SAAS,WAAW,oKAAoK,0JAA0J,SAAS,SAAS,WAAW,+GAA+G,4BAA4B,sLAAsL,+BAA+B,kOAAkO,kBAAkB,4DAA4D,SAAS,YAAY,iNAAiN,QAAQ,SAAS,WAAW,gFAAgF,QAAQ,SAAS,WAAW,uZAAuZ,4BAA4B,sJAAsJ,+BAA+B;AACzoF;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,qDAAqD;AACrD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,uBAAuB,OAAO,uDAAS,0BAA0B;AACjE;AACA;AACA,CAAC,CAAC,8DAAoB;;AAEtB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,UAAU,kBAAkB;AAC5B;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA,CAAC,CAAC,8DAAoB;;AAEtB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,UAAU,kBAAkB;AAC5B;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,uOAAuO,oBAAoB,2DAA2D,sCAAsC,+BAA+B,eAAe,4KAA4K,qKAAqK,yOAAyO;AACp8B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA,CAAC,CAAC,+DAAqB;;AAEvB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,kEAAkE,kBAAkB;AACpF;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,stBAAstB,oBAAoB,2FAA2F,iBAAiB;AACt1B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD;AACxD,SAAS,OAAO,mEAAqB;AACrC,MAAM;AACN;AACA,2BAA2B,OAAO,uDAAS,SAAS,yDAAW,IAAI;AACnE;AACA;AACA,CAAC,CAAC,+DAAqB;;AAEvB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,6DAA6D,WAAW;AACxE;AACA,CAAC,CAAC,+DAAqB;;AAEvB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA,wBAAwB,uEAAa;AACrC,wBAAwB,6DAAmB;AAC3C,wBAAwB,wDAAc;AACtC;AACA,wBAAwB,+DAAiB;AACzC,wBAAwB,sEAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEmsB;;AAEnsB,2CAA2C,cAAc,21yG;;;;;;;;;;;;ACj0DzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AAC2C;AACT;AACnB;AACpB;;AAEvC;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,CAAC,CAAC,yDAAgB;;AAElB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,0CAA0C,OAAO;AACjD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,sDAAsD,OAAO;AAC7D,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,qCAAqC,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,EAAE;AACvD;AACA;AACA;AACA;AACA,qDAAqD,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,EAAE;AACxD;AACA;AACA;AACA;AACA,sDAAsD,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK,6D;AAClB,+D;AACA,gB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK,4C;AAClB,8C;AACA,gB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,0DAA0D,WAAW;AACrE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0BAA0B,sDAAQ,wCAAwC,UAAU;AACpF;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ,wCAAwC,UAAU;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+DAA+D,WAAW;AAC1E;AACA,0BAA0B,OAAO,mDAAK,EAAE;AACxC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,oBAAoB,OAAO,mDAAK,EAAE;AAClC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,8DAA8D,WAAW;AACzE;AACA,0BAA0B,OAAO,mDAAK,EAAE;AACxC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,uBAAuB,OAAO,mDAAK,EAAE;AACrC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,qCAAqC,EAAE;AACvC,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD,WAAW;AACjE;AACA,mBAAmB,OAAO,mDAAK,EAAE;AACjC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,kCAAkC,sDAAQ,gDAAgD,UAAU;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD,WAAW;AACnE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD,yBAAyB,oDAAe;AACxC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,sCAAsC,EAAE;AACxC,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,iBAAiB,EAAE;AACxC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sDAAQ,4BAA4B,UAAU;AAC5E;AACA;AACA,+CAA+C,EAAE;AACjD;AACA,gDAAgD,EAAE;AAClD;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,oBAAoB,OAAO,mDAAK,EAAE;AAClC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,wBAAwB,OAAO,mDAAK,EAAE;AACtC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD,WAAW;AACjE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,yDAAyD,WAAW;AACpE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA;AACA,4BAA4B,yDAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD,WAAW;AACnE;AACA,qBAAqB,OAAO,mDAAK,EAAE;AACnC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,0DAA0D,WAAW;AACrE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD;AACjD,SAAS,OAAO,sDAAQ;AACxB,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,kDAAI;AACpB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD;AAChD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","file":"main.js","sourcesContent":["import { __extends, __values, __spread } from 'tslib';\nimport { BehaviorSubject } from 'rxjs';\nimport { Injectable, Component, NgModule } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\nvar KerviSpineBase = /** @class */ (function () {\r\n    function KerviSpineBase(constructorOptions) {\r\n        this.constructorOptions = constructorOptions;\r\n        this.isConnected = false;\r\n        this.doAuthenticate = false;\r\n        this.sessionId = null;\r\n        this.queryHandlers = [];\r\n        this.commandHandlers = [];\r\n        this.eventHandlers = [];\r\n        this.streamHandlers = [];\r\n        this.rpcQueue = {};\r\n        this.ready = false;\r\n        this.messageId = 0;\r\n        this.sensors = {};\r\n        this.controllers = {};\r\n        this.sensorTypes = [];\r\n        this.controllerTypes = [];\r\n        this.pointOfInterests = [];\r\n        this.application = null;\r\n        this.allowAnonymous = true;\r\n        this.firstOnOpen = true;\r\n        this.websocket = null;\r\n        this.options = {\r\n            userName: \"anonymous\",\r\n            password: null,\r\n            address: null,\r\n            onOpen: null,\r\n            onClose: null,\r\n            onAuthenticate: null,\r\n            onAuthenticateFailed: null,\r\n            onAuthenticateStart: null,\r\n            onLogOff: null,\r\n            autoConnect: true,\r\n            targetScope: null,\r\n            protocol: \"ws\",\r\n            apiToken: null\r\n        };\r\n        this.addEventHandler = (/**\r\n         * @param {?} eventName\r\n         * @param {?} id\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        function (eventName, id, callback) {\r\n        });\r\n        this.addStreamHandler = (/**\r\n         * @param {?} streamId\r\n         * @param {?} streamEvent\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        function (streamId, streamEvent, callback) {\r\n        });\r\n        console.log(\"Kervi base spine init\", this.options, constructorOptions);\r\n        this.options = this.extend(this.options, constructorOptions);\r\n        console.log(\"kbo\", this.options);\r\n        this.connect();\r\n        /** @type {?} */\r\n        var self = this;\r\n        setInterval((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            var e_1, _a;\r\n            /** @type {?} */\r\n            var hangingNodes = [];\r\n            for (var id_1 in self.rpcQueue) {\r\n                /** @type {?} */\r\n                var query = self.rpcQueue[id_1];\r\n                if (query[\"callbackTimeout\"]) {\r\n                    if (Date.now() - query[\"ts\"] > query[\"timeout\"]) {\r\n                        /** @type {?} */\r\n                        var callback = query[\"callbackTimeout\"];\r\n                        hangingNodes.push(id_1);\r\n                        callback.call(self.options.targetScope);\r\n                    }\r\n                }\r\n            }\r\n            try {\r\n                for (var hangingNodes_1 = __values(hangingNodes), hangingNodes_1_1 = hangingNodes_1.next(); !hangingNodes_1_1.done; hangingNodes_1_1 = hangingNodes_1.next()) {\r\n                    var id = hangingNodes_1_1.value;\r\n                    delete self.rpcQueue[id];\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (hangingNodes_1_1 && !hangingNodes_1_1.done && (_a = hangingNodes_1.return)) _a.call(hangingNodes_1);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }), 1);\r\n    }\r\n    /**\r\n     * @protected\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.extend = /**\r\n     * @protected\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var p = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            p[_i] = arguments[_i];\r\n        }\r\n        for (var i = 1; i < p.length; i++) {\r\n            for (var key in p[i]) {\r\n                if (p[i].hasOwnProperty(key)) {\r\n                    p[0][key] = p[i][key];\r\n                }\r\n            }\r\n        }\r\n        return p[0];\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} id\r\n     * @param {?} callback\r\n     * @param {?} callbackTimeout\r\n     * @param {?} timeout\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.addRPCCallback = /**\r\n     * @protected\r\n     * @param {?} id\r\n     * @param {?} callback\r\n     * @param {?} callbackTimeout\r\n     * @param {?} timeout\r\n     * @return {?}\r\n     */\r\n    function (id, callback, callbackTimeout, timeout) {\r\n        if (callback) {\r\n            this.rpcQueue[id] = {\r\n                \"callback\": callback,\r\n                \"callbackTimeout\": callbackTimeout,\r\n                \"timeout\": timeout,\r\n                \"ts\": Date.now(),\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.handleRPCResponse = /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    function (message) {\r\n        if (message.id in this.rpcQueue) {\r\n            /** @type {?} */\r\n            var callback = this.rpcQueue[message.id][\"callback\"];\r\n            if (callback) {\r\n                delete this.rpcQueue[message.id];\r\n                callback.call(this.options.targetScope, message.response, message.response);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.handleEvent = /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    function (message) {\r\n        //console.log(\"ev\", message)\r\n        /** @type {?} */\r\n        var eventName = message.event;\r\n        /** @type {?} */\r\n        var id = message.id;\r\n        /** @type {?} */\r\n        var eventPath = eventName;\r\n        if (id) {\r\n            eventPath += \"/\" + id;\r\n        }\r\n        /** @type {?} */\r\n        var value = null;\r\n        if (message.args && message.args.length) {\r\n            value = message.args[0];\r\n        }\r\n        for (var n = 0; (n < this.eventHandlers.length); n++) {\r\n            /** @type {?} */\r\n            var h = this.eventHandlers[n];\r\n            if (h.eventName == eventPath)\r\n                h.callback.call(value, id, value);\r\n            else if (h.eventName == eventName)\r\n                h.callback.call(value, id, value);\r\n        }\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @param {?} streamBlob\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.handleStream = /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @param {?} streamBlob\r\n     * @return {?}\r\n     */\r\n    function (message, streamBlob) {\r\n        /** @type {?} */\r\n        var streamTag = message.streamId + '/' + message.streamEvent;\r\n        for (var n = 0; (n < this.streamHandlers.length); n++) {\r\n            /** @type {?} */\r\n            var h = this.streamHandlers[n];\r\n            if (h.streamTag === streamTag) {\r\n                h.callback.call(message.streamId, message.streamId, message.streamEvent, streamBlob);\r\n            }\r\n            else if (h.streamTag === message.streamId) {\r\n                h.callback.call(message.streamId, message.streamId, message.streamEvent, streamBlob);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.handleCommand = /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    function (message) {\r\n        console.log(\"cmd\", this, message);\r\n        /** @type {?} */\r\n        var command = message.command;\r\n        /** @type {?} */\r\n        var args = null;\r\n        if (message.args && message.args.length) {\r\n            args = message.args[0];\r\n        }\r\n        for (var n = 0; (n < this.commandHandlers.length); n++) {\r\n            /** @type {?} */\r\n            var c = this.commandHandlers[n];\r\n            if (c.command == command)\r\n                c.callback.call(this, args);\r\n        }\r\n    };\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.connect = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.onOpen = /**\r\n     * @protected\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    function (evt) {\r\n        console.log(\"Kervi open\", this, evt);\r\n        this.isConnected = true;\r\n        this.eventHandlers = [];\r\n        this.streamHandlers = [];\r\n        this.commandHandlers = [];\r\n        this.queryHandlers = [];\r\n        console.log(\"Kervi spine ready\");\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.onClose = /**\r\n     * @protected\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    function (evt) {\r\n        console.log(\"Kervi spine on close\", evt);\r\n        this.isConnected = false;\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (this.options.onClose)\r\n            this.options.onClose.call(this.options.targetScope, evt);\r\n        this.firstOnOpen = true;\r\n        if (this.options.autoConnect) {\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                self.connect();\r\n            }), 1000);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} userName\r\n     * @param {?} password\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.authenticate = /**\r\n     * @param {?} userName\r\n     * @param {?} password\r\n     * @return {?}\r\n     */\r\n    function (userName, password) {\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.logoff = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.onMessage = /**\r\n     * @protected\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    function (evt) {\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.onError = /**\r\n     * @protected\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    function (evt) {\r\n        console.log(\"Kervi on error\", evt);\r\n    };\r\n    /**\r\n     * @param {?} command\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.addCommandHandler = /**\r\n     * @param {?} command\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    function (command, callback) {\r\n    };\r\n    /**\r\n     * @param {?} query\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.addQueryHandler = /**\r\n     * @param {?} query\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    function (query, callback) {\r\n    };\r\n    /**\r\n     * @param {?} command\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.sendCommand = /**\r\n     * @param {?} command\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    function (command) {\r\n        var p = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            p[_i - 1] = arguments[_i];\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} query\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.sendQuery = /**\r\n     * @param {?} query\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    function (query) {\r\n        var p = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            p[_i - 1] = arguments[_i];\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} eventName\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.triggerEvent = /**\r\n     * @param {?} eventName\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    function (eventName, id) {\r\n    };\r\n    /**\r\n     * @param {?} stream_id\r\n     * @param {?} event\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.streamData = /**\r\n     * @param {?} stream_id\r\n     * @param {?} event\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (stream_id, event, data) {\r\n    };\r\n    return KerviSpineBase;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviWSSpine = /** @class */ (function (_super) {\r\n    __extends(KerviWSSpine, _super);\r\n    function KerviWSSpine(constructorOptions) {\r\n        var _this = _super.call(this, constructorOptions) || this;\r\n        _this.constructorOptions = constructorOptions;\r\n        _this.addEventHandler = (/**\r\n         * @param {?} eventName\r\n         * @param {?} id\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        function (eventName, id, callback) {\r\n            if (id)\r\n                this.eventHandlers.push({ \"eventName\": eventName + \"/\" + id, callback: callback });\r\n            else\r\n                this.eventHandlers.push({ \"eventName\": eventName, callback: callback });\r\n            /** @type {?} */\r\n            var cmd = { id: this.messageId++, \"messageType\": \"registerEventHandler\", \"event\": eventName, \"eventId\": id };\r\n            //console.log(\"add event handler\",cmd);\r\n            this.websocket.send(JSON.stringify(cmd));\r\n        });\r\n        _this.addStreamHandler = (/**\r\n         * @param {?} streamId\r\n         * @param {?} streamEvents\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        function (streamId, streamEvents, callback) {\r\n            var e_1, _a;\r\n            if (streamEvents && streamEvents.length > 0) {\r\n                try {\r\n                    for (var streamEvents_1 = __values(streamEvents), streamEvents_1_1 = streamEvents_1.next(); !streamEvents_1_1.done; streamEvents_1_1 = streamEvents_1.next()) {\r\n                        var event_1 = streamEvents_1_1.value;\r\n                        this.streamHandlers.push({ 'streamTag': streamId + '/' + event_1, callback: callback });\r\n                        /** @type {?} */\r\n                        var cmd = {\r\n                            id: this.messageId++,\r\n                            'messageType': 'registerStreamHandler',\r\n                            'streamId': streamId,\r\n                            'streamEvent': event_1\r\n                        };\r\n                        console.log(\"as\", cmd);\r\n                        this.websocket.send(JSON.stringify(cmd));\r\n                    }\r\n                }\r\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (streamEvents_1_1 && !streamEvents_1_1.done && (_a = streamEvents_1.return)) _a.call(streamEvents_1);\r\n                    }\r\n                    finally { if (e_1) throw e_1.error; }\r\n                }\r\n            }\r\n            else {\r\n                this.streamHandlers.push({ 'streamTag': streamId, callback: callback });\r\n                /** @type {?} */\r\n                var cmd = {\r\n                    id: this.messageId++,\r\n                    'messageType': 'registerStreamHandler',\r\n                    'streamId': streamId,\r\n                    'streamEvent': event\r\n                };\r\n                console.log('as', cmd);\r\n                this.websocket.send(JSON.stringify(cmd));\r\n            }\r\n        });\r\n        console.log(\"kervi spine constructor\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.connect = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.isConnected) {\r\n            console.log(\"Kervi is connected\");\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        var self = this;\r\n        this.websocket = new WebSocket(this.options.protocol + \"://\" + this.options.address);\r\n        this.websocket.binaryType = 'ArrayBuffer';\r\n        this.websocket.onopen = (/**\r\n         * @param {?} evt\r\n         * @return {?}\r\n         */\r\n        function (evt) {\r\n            console.log(\"kervi spine on open\");\r\n            self.onOpen(evt);\r\n        });\r\n        this.websocket.onclose = (/**\r\n         * @param {?} evt\r\n         * @return {?}\r\n         */\r\n        function (evt) {\r\n            self.onClose(evt);\r\n        });\r\n        this.websocket.onmessage = (/**\r\n         * @param {?} evt\r\n         * @return {?}\r\n         */\r\n        function (evt) {\r\n            if (typeof evt.data === 'string') {\r\n                /** @type {?} */\r\n                var message = JSON.parse(evt.data);\r\n                self.onMessage(message);\r\n            }\r\n            else {\r\n                evt.data.slice(0, 4).arrayBuffer().then((/**\r\n                 * @param {?} d\r\n                 * @return {?}\r\n                 */\r\n                function (d) {\r\n                    /** @type {?} */\r\n                    var jsonLen = new Int32Array(d)[0];\r\n                    /** @type {?} */\r\n                    var jsonBlob = evt.data.slice(4, jsonLen + 4);\r\n                    /** @type {?} */\r\n                    var streamBlob = evt.data.slice(4 + jsonLen);\r\n                    jsonBlob.text().then((/**\r\n                     * @param {?} j\r\n                     * @return {?}\r\n                     */\r\n                    function (j) {\r\n                        self.onMessage(JSON.parse(j), streamBlob);\r\n                    }));\r\n                }));\r\n            }\r\n        });\r\n        this.websocket.onerror = (/**\r\n         * @param {?} evt\r\n         * @return {?}\r\n         */\r\n        function (evt) {\r\n            self.onError(evt);\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} userName\r\n     * @param {?} password\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.authenticate = /**\r\n     * @param {?} userName\r\n     * @param {?} password\r\n     * @return {?}\r\n     */\r\n    function (userName, password) {\r\n        this.options.userName = userName;\r\n        this.options.password = password;\r\n        //if (this.options.onAuthenticateStart)\r\n        //\tthis.options.onAuthenticateStart.call(this.options.targetScope);\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"authenticate\", \"userName\": userName, \"password\": password };\r\n        console.log(\"swa\", cmd);\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.logoff = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        //this.options.userName = this.allowAnonymous ? \"anonymous\" : null;\r\n        //this.options.password = null;\r\n        //this.options.userName = this.allowAnonymous ? \"anonymous\" : null;\r\n        //this.options.password = null;\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"logoff\", \"session\": this.sessionId };\r\n        this.sessionId = null;\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} message\r\n     * @param {?=} streamBlob\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.onMessage = /**\r\n     * @param {?} message\r\n     * @param {?=} streamBlob\r\n     * @return {?}\r\n     */\r\n    function (message, streamBlob) {\r\n        //console.log(\"on m\",evt.data);\r\n        if (streamBlob === void 0) { streamBlob = null; }\r\n        //console.log(\"on m\",evt.data);\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (message.messageType == \"authenticate\") {\r\n            console.log(\"authenticate\");\r\n            this.doAuthenticate = true;\r\n            if (this.options.userName)\r\n                this.authenticate(this.options.userName, this.options.password);\r\n            else\r\n                this.options.onAuthenticate.call(this.options.targetScope, message);\r\n        }\r\n        else if (message.messageType == \"authentication_failed\") {\r\n            console.log(\"authentication failed\", this.options.userName);\r\n            if (this.options.userName == \"anonymous\") {\r\n                this.allowAnonymous = false;\r\n                this.options.userName = null;\r\n                this.options.password = null;\r\n                this.sessionId = null;\r\n                console.log(\"x\", self.options);\r\n                if (self.options.onLogOff) {\r\n                    console.log(\"x1\");\r\n                    self.options.onLogOff.call(self.options.targetScope, message);\r\n                }\r\n            }\r\n            else\r\n                this.options.onAuthenticateFailed.call(this.options.targetScope, message);\r\n        }\r\n        else if (message.messageType == \"session_authenticated\") {\r\n            /** @type {?} */\r\n            var date = new Date();\r\n            date.setTime(date.getTime() + (2 * 60 * 60 * 1000));\r\n            /** @type {?} */\r\n            var expires = \"; expires=\" + date.toUTCString();\r\n            this.sessionId = message.session;\r\n            document.cookie = \"kervisession\" + \"=\" + message.session + expires + \"; path=/\";\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                console.log(\"to\", self.options);\r\n                if (self.options.onOpen)\r\n                    self.options.onOpen.call(self.options.targetScope, self.firstOnOpen, message);\r\n                self.firstOnOpen = false;\r\n            }), 100);\r\n        }\r\n        else if (message.messageType == \"session_logoff\") {\r\n            if (self.options.onLogOff)\r\n                self.options.onLogOff.call(self.options.targetScope, message);\r\n            if (this.allowAnonymous && this.options.userName != \"anonymous\") {\r\n                this.authenticate(\"anonymous\", null);\r\n            }\r\n            else {\r\n                self.options.userName = null;\r\n                self.options.password = null;\r\n                self.sessionId = null;\r\n            }\r\n        }\r\n        else if (message.messageType == \"response\")\r\n            this.handleRPCResponse(message);\r\n        else if (message.messageType == \"event\")\r\n            this.handleEvent(message);\r\n        else if (message.messageType == \"stream\")\r\n            this.handleStream(message, streamBlob);\r\n        else if (message.messageType == \"command\")\r\n            this.handleCommand(message);\r\n        else\r\n            console.log(\"Kervi spine message unknown\", this.rpcQueue, message);\r\n    };\r\n    /**\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.onError = /**\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    function (evt) {\r\n        console.log(\"Kervi on error\", evt);\r\n    };\r\n    /**\r\n     * @param {?} command\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.addCommandHandler = /**\r\n     * @param {?} command\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    function (command, callback) {\r\n        this.commandHandlers.push({ command: command, callback: callback });\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"registerCommandHandler\", \"command\": command };\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} query\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.addQueryHandler = /**\r\n     * @param {?} query\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    function (query, callback) {\r\n        this.queryHandlers.push({ query: query, callback: callback });\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"registerQueryHandler\", \"query\": query };\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} command\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.sendCommand = /**\r\n     * @param {?} command\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    function (command) {\r\n        var p = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            p[_i - 1] = arguments[_i];\r\n        }\r\n        console.log(\"sec\", arguments);\r\n        /** @type {?} */\r\n        var args = [];\r\n        /** @type {?} */\r\n        var callback = null;\r\n        for (var i = 0; (i < p.length); i++) {\r\n            if (p[i] instanceof Function)\r\n                callback = p[i];\r\n            else\r\n                args.push(p[i]);\r\n        }\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"command\", \"command\": command, \"args\": args };\r\n        if (callback && callback instanceof Function)\r\n            this.addRPCCallback(cmd.id.toString(), callback, null, 0);\r\n        console.log(\"sendCommand\", this, cmd);\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} query\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.sendQuery = /**\r\n     * @param {?} query\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    function (query) {\r\n        var p = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            p[_i - 1] = arguments[_i];\r\n        }\r\n        /** @type {?} */\r\n        var args = [];\r\n        /** @type {?} */\r\n        var callback = null;\r\n        /** @type {?} */\r\n        var callbackTimeout = null;\r\n        /** @type {?} */\r\n        var timeout = 10000;\r\n        for (var i = 0; (i < p.length); i++) {\r\n            if (p[i] instanceof Function)\r\n                if (!callback)\r\n                    callback = p[i];\r\n                else\r\n                    callbackTimeout = p[i];\r\n            else {\r\n                if (callbackTimeout)\r\n                    timeout = p[i];\r\n                else\r\n                    args.push(p[i]);\r\n            }\r\n        }\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"query\", \"query\": query, \"args\": args };\r\n        this.addRPCCallback(cmd.id.toString(), callback, callbackTimeout, timeout);\r\n        console.log(\"sendQuery\", callback, cmd);\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} eventName\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.triggerEvent = /**\r\n     * @param {?} eventName\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    function (eventName, id) {\r\n        /** @type {?} */\r\n        var e = { id: this.messageId++, \"messageType\": \"event\", \"event\": eventName, \"args\": arguments };\r\n        this.websocket.send(JSON.stringify(e));\r\n    };\r\n    return KerviWSSpine;\r\n}(KerviSpineBase));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviRMQSpine = /** @class */ (function (_super) {\r\n    __extends(KerviRMQSpine, _super);\r\n    function KerviRMQSpine(constructorOptions) {\r\n        var _this = _super.call(this, constructorOptions) || this;\r\n        _this.constructorOptions = constructorOptions;\r\n        _this.exchange = \"/exchange/\";\r\n        _this.addEventHandler = (/**\r\n         * @param {?} eventName\r\n         * @param {?} id\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        function (eventName, id, callback) {\r\n            if (id)\r\n                this.eventHandlers.push({ \"eventName\": eventName + \"/\" + id, callback: callback });\r\n            else\r\n                this.eventHandlers.push({ \"eventName\": eventName, callback: callback });\r\n            /** @type {?} */\r\n            var cmd = { id: this.messageId++, \"messageType\": \"registerEventHandler\", \"event\": eventName, \"eventId\": id };\r\n            this.websocket.send(this.exchange, { topic: \"registerEventHandler\", router_id: this.socketSession }, JSON.stringify(cmd));\r\n        });\r\n        console.log(\"Kervi io spine init y\", _this.options, constructorOptions);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} frame\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.onMQError = /**\r\n     * @private\r\n     * @param {?} frame\r\n     * @return {?}\r\n     */\r\n    function (frame) {\r\n        console.log(\"MQ error\", frame);\r\n    };\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.connect = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.isConnected) {\r\n            console.log(\"Kervi is connected\");\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        var self = this;\r\n        //var mqUrl= this.options.protocol + \"://\" + this.options.address\r\n        /** @type {?} */\r\n        var mqUrl = \"wss://mq.kervi.io:15673/ws\";\r\n        this.websocket = Stomp.client(mqUrl);\r\n        this.websocket.heartbeat.incoming = 0;\r\n        self.exchange = \"/exchange/\" + self.options.apiToken.app_id;\r\n        console.log(\"exchange\", self.exchange);\r\n        this.websocket.connect(self.options.apiToken.api_token, \"ui\", (/**\r\n         * @param {?} frame\r\n         * @return {?}\r\n         */\r\n        function (frame) {\r\n            console.log(\"MQ connect\", frame, self.websocket, this, self);\r\n            self.socketSession = frame.headers.session;\r\n            self.exchange = \"/exchange/\" + self.options.apiToken.app_id;\r\n            self.websocket.subscribe(self.exchange, (/**\r\n             * @param {?} message\r\n             * @return {?}\r\n             */\r\n            function (message) {\r\n                console.log(\"mq \", message);\r\n                if (message.headers[\"topic\"])\r\n                    message.headers[\"topic\"] = message.headers[\"topic\"].replace(new RegExp(\"\\\\c\", \"g\"), \":\");\r\n                if (message.command == \"CONNECTED\") ;\r\n                else if (message.headers[\"topic\"] == \"ping\")\r\n                    self.onPing(message);\r\n                else\r\n                    self.onMessage(message);\r\n            }), {});\r\n        }), self.onMQError, self.options.apiToken.api_channel);\r\n    };\r\n    /**\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.onPing = /**\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    function (message) {\r\n        console.log(\"onping\", this.options.appId, message);\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (!this.isConnected && message.headers[\"connection_id\"] == self.options.apiToken.app_id) {\r\n            this.onOpen(message);\r\n            this.websocket.send(self.exchange, { topic: \"session:new\", router_id: message.headers[\"router_id\"], session_id: this.socketSession }, \"{}\");\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} userName\r\n     * @param {?} password\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.authenticate = /**\r\n     * @param {?} userName\r\n     * @param {?} password\r\n     * @return {?}\r\n     */\r\n    function (userName, password) {\r\n        this.options.userName = userName;\r\n        this.options.password = password;\r\n        if (this.options.onAuthenticateStart)\r\n            this.options.onAuthenticateStart.call(this.options.targetScope);\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"authenticate\", \"userName\": this.options.userName, \"password\": this.options.password };\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.logoff = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        //this.options.userName = this.allowAnonymous ? \"anonymous\" : null;\r\n        //this.options.password = null;\r\n        //this.options.userName = this.allowAnonymous ? \"anonymous\" : null;\r\n        //this.options.password = null;\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"logoff\", \"session\": this.sessionId };\r\n        this.sessionId = null;\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.onMessage = /**\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    function (evt) {\r\n        console.log(\"on m\", evt);\r\n        /** @type {?} */\r\n        var message = JSON.parse(evt.body);\r\n        /** @type {?} */\r\n        var self = this;\r\n        /** @type {?} */\r\n        var topic = evt.headers[\"topic\"];\r\n        if (topic == \"authenticate\") {\r\n            console.log(\"authenticate\");\r\n            this.doAuthenticate = true;\r\n            if (this.options.userName)\r\n                this.authenticate(this.options.userName, this.options.password);\r\n            else\r\n                this.options.onAuthenticate.call(this.options.targetScope, evt);\r\n        }\r\n        else if (topic == \"authentication_failed\") {\r\n            console.log(\"authentication failed\", this.options.userName);\r\n            if (this.options.userName == \"anonymous\") {\r\n                this.allowAnonymous = false;\r\n                this.options.userName = null;\r\n                this.options.password = null;\r\n                this.sessionId = null;\r\n                console.log(\"x\", self.options);\r\n                if (self.options.onLogOff) {\r\n                    console.log(\"x1\");\r\n                    self.options.onLogOff.call(self.options.targetScope, evt);\r\n                }\r\n            }\r\n            else\r\n                this.options.onAuthenticateFailed.call(this.options.targetScope, evt);\r\n        }\r\n        else if (topic == \"session_authenticated\") {\r\n            /** @type {?} */\r\n            var date = new Date();\r\n            date.setTime(date.getTime() + (2 * 60 * 60 * 1000));\r\n            /** @type {?} */\r\n            var expires = \"; expires=\" + date.toUTCString();\r\n            this.sessionId = message.session;\r\n            document.cookie = \"kervisession\" + \"=\" + message.session + expires + \"; path=/\";\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                if (self.options.onOpen)\r\n                    self.options.onOpen.call(self.options.targetScope, self.firstOnOpen, evt);\r\n                self.firstOnOpen = false;\r\n            }), 100);\r\n        }\r\n        else if (topic == \"session_logoff\") {\r\n            if (self.options.onLogOff)\r\n                self.options.onLogOff.call(self.options.targetScope, evt);\r\n            if (this.allowAnonymous && this.options.userName != \"anonymous\") {\r\n                this.authenticate(\"anonymous\", null);\r\n            }\r\n            else {\r\n                self.options.userName = null;\r\n                self.options.password = null;\r\n                self.sessionId = null;\r\n            }\r\n        }\r\n        else if (evt.headers[\"type\"] == \"query_response\") {\r\n            this.handleRPCResponse({ id: evt.headers[\"query_id\"], response: message });\r\n        }\r\n        else if (evt.headers[\"type\"] == \"event\") {\r\n            console.log(\"e\", evt);\r\n            /** @type {?} */\r\n            var topic_tag = evt.headers[\"topic\"].split(\":\");\r\n            this.handleEvent({ event: topic_tag[1], id: topic_tag[2], args: message.args });\r\n        }\r\n        else if (message.messageType == \"command\")\r\n            this.handleCommand(message);\r\n        else\r\n            console.log(\"Kervi spine message unknown\", this.rpcQueue, evt);\r\n    };\r\n    /**\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.onError = /**\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    function (evt) {\r\n        console.log(\"Kervi on error\", evt);\r\n    };\r\n    /**\r\n     * @param {?} command\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.addCommandHandler = /**\r\n     * @param {?} command\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    function (command, callback) {\r\n        this.commandHandlers.push({ command: command, callback: callback });\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"registerCommandHandler\", \"command\": command };\r\n        //this.websocket.send(JSON.stringify(cmd));\r\n        this.websocket.send(this.exchange, { topic: \"registerCommandHandler\", router_id: this.socketSession }, JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} query\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.addQueryHandler = /**\r\n     * @param {?} query\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    function (query, callback) {\r\n        this.queryHandlers.push({ query: query, callback: callback });\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"registerQueryHandler\", \"query\": query };\r\n        this.websocket.send(this.exchange, { topic: \"registerQueryHandler\", router_id: this.socketSession }, JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} command\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.sendCommand = /**\r\n     * @param {?} command\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    function (command) {\r\n        var p = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            p[_i - 1] = arguments[_i];\r\n        }\r\n        console.log(\"sec\", arguments);\r\n        /** @type {?} */\r\n        var args = [];\r\n        /** @type {?} */\r\n        var callback = null;\r\n        for (var i = 0; (i < p.length); i++) {\r\n            if (p[i] instanceof Function)\r\n                callback = p[i];\r\n            else\r\n                args.push(p[i]);\r\n        }\r\n        /*if (p.length>1){\r\n                    var argOffset=1;\r\n                    if ( callback && callback instanceof Function )\r\n                        argOffset+=1;\r\n                    for (var i=argOffset;(i<arguments.length);i++){\r\n                        args.push(arguments[i]);\r\n                    }\r\n                }*/\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"args\": args, kwargs: {} };\r\n        if (callback && callback instanceof Function)\r\n            this.addRPCCallback(cmd.id.toString(), callback, null, 0);\r\n        console.log(\"sendCommand\", this, cmd);\r\n        this.websocket.send(this.exchange, { topic: \"command:\" + command, router_id: this.socketSession }, JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} query\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.sendQuery = /**\r\n     * @param {?} query\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    function (query) {\r\n        var p = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            p[_i - 1] = arguments[_i];\r\n        }\r\n        /** @type {?} */\r\n        var args = [];\r\n        /** @type {?} */\r\n        var callback = null;\r\n        /** @type {?} */\r\n        var callbackTimeout = null;\r\n        /** @type {?} */\r\n        var timeout = 10000;\r\n        for (var i = 0; (i < p.length); i++) {\r\n            if (p[i] instanceof Function)\r\n                if (!callback)\r\n                    callback = p[i];\r\n                else\r\n                    callbackTimeout = p[i];\r\n            else {\r\n                if (callbackTimeout)\r\n                    timeout = p[i];\r\n                else\r\n                    args.push(p[i]);\r\n            }\r\n        }\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"query\", \"query\": query, \"args\": args, kwargs: [], qts: 0 };\r\n        this.addRPCCallback(cmd.id.toString(), callback, callbackTimeout, timeout);\r\n        console.log(\"sendQuery\", callback, cmd);\r\n        //this.websocket.send(JSON.stringify(cmd));\r\n        this.websocket.send(this.exchange, { topic: \"query:\" + query, qts: 0, query_id: cmd.id.toString(), router_id: this.socketSession, response_address: this.socketSession }, JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} eventName\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.triggerEvent = /**\r\n     * @param {?} eventName\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    function (eventName, id) {\r\n        /** @type {?} */\r\n        var e = { id: this.messageId++, \"messageType\": \"event\", \"event\": eventName, \"args\": arguments };\r\n        this.websocket.send(JSON.stringify(e));\r\n    };\r\n    return KerviRMQSpine;\r\n}(KerviSpineBase));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar DashboardLink = /** @class */ (function () {\r\n    /*constructor(dashboardId:string, sectionId:string, sectionName:string){\r\n        this.dashboardId = dashboardId;\r\n        this.sectionId = sectionId;\r\n        this.sectionName = sectionName;\r\n    }*/\r\n    function DashboardLink(component, message) {\r\n        this.dashboardId = message.dashboardId;\r\n        this.panelId = message.sectionId;\r\n        this.panelName = message.sectionName;\r\n        this.component = component;\r\n        this.parameters = message.parameters;\r\n    }\r\n    return DashboardLink;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviValue = /** @class */ (function () {\r\n    function KerviValue() {\r\n        this.componentType = \"KerviValue\";\r\n        this.typeName = null;\r\n        this.dashboards = [];\r\n        this.ui = {\r\n            type: \"\",\r\n            orientation: \"\",\r\n            visible: true\r\n        };\r\n    }\r\n    return KerviValue;\r\n}());\r\n/**\r\n * @abstract\r\n * @template valueType\r\n */\r\nvar  /**\r\n * @abstract\r\n * @template valueType\r\n */\r\nKerviValueType = /** @class */ (function (_super) {\r\n    __extends(KerviValueType, _super);\r\n    function KerviValueType(message, kerviService) {\r\n        var e_1, _a;\r\n        var _this = _super.call(this) || this;\r\n        _this.kerviService = null;\r\n        _this.kerviService = kerviService;\r\n        _this.value$ = new BehaviorSubject(message.value);\r\n        _this.name = message.name;\r\n        _this.isInput = message.isInput;\r\n        _this.ui = message.ui;\r\n        _this.command = message.command;\r\n        _this.id = message.id;\r\n        _this.ui[\"type\"] = message.componentType;\r\n        _this.ui[\"orientation\"] = message.orientation;\r\n        _this.ui[\"visible\"] = message.visible;\r\n        for (var prop in message.ui) {\r\n            if (_this.ui[prop] != undefined)\r\n                _this.ui[prop] = message.ui[prop];\r\n        }\r\n        try {\r\n            for (var _b = __values(message.dashboardLinks), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var dashboardLink = _c.value;\r\n                _this.dashboards.push(new DashboardLink(_this, dashboardLink));\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return _this;\r\n    }\r\n    Object.defineProperty(KerviValueType.prototype, \"value\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            //console.log(\"gv\", this.id, this.value$.value)\r\n            return this.value$.value;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            console.log(\"sv\", this.id);\r\n            this.value$.next(value);\r\n            this.kerviService.spine.sendCommand(this.command, value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {?} v\r\n     * @param {?=} notify\r\n     * @return {?}\r\n     */\r\n    KerviValueType.prototype.set = /**\r\n     * @param {?} v\r\n     * @param {?=} notify\r\n     * @return {?}\r\n     */\r\n    function (v, notify) {\r\n        if (notify === void 0) { notify = true; }\r\n        this.value$.next(v);\r\n        if (notify)\r\n            this.kerviService.spine.sendCommand(this.command, v);\r\n    };\r\n    return KerviValueType;\r\n}(KerviValue));\r\n/** @enum {number} */\r\nvar ValueRangeType = {\r\n    normal: 0, warning: 1, error: 2,\r\n};\r\nValueRangeType[ValueRangeType.normal] = 'normal';\r\nValueRangeType[ValueRangeType.warning] = 'warning';\r\nValueRangeType[ValueRangeType.error] = 'error';\r\nvar ValueRange = /** @class */ (function () {\r\n    function ValueRange(range) {\r\n        this.start = null;\r\n        this.end = null;\r\n        this.type = null;\r\n        this.start = range[\"start\"];\r\n        this.end = range[\"end\"];\r\n        if (range[\"type\"] == \"warning\")\r\n            this.type = ValueRangeType.warning;\r\n        else if (range[\"type\"] == \"error\")\r\n            this.type = ValueRangeType.error;\r\n        else\r\n            this.type = ValueRangeType.normal;\r\n    }\r\n    return ValueRange;\r\n}());\r\nvar KerviEnumOptionModel = /** @class */ (function () {\r\n    function KerviEnumOptionModel(messageOption) {\r\n        this.selected$ = new BehaviorSubject(false);\r\n        this.value = messageOption.value;\r\n        this.text = messageOption.text;\r\n        this.selected$.next(messageOption.selected);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviEnumOptionModel.prototype.updateReferences = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    /**\r\n     * @param {?} component\r\n     * @return {?}\r\n     */\r\n    KerviEnumOptionModel.prototype.reload = /**\r\n     * @param {?} component\r\n     * @return {?}\r\n     */\r\n    function (component) { };\r\n    /**\r\n     * @param {?} components\r\n     * @return {?}\r\n     */\r\n    KerviEnumOptionModel.prototype.removeReferences = /**\r\n     * @param {?} components\r\n     * @return {?}\r\n     */\r\n    function (components) { };\r\n    return KerviEnumOptionModel;\r\n}());\r\nvar SelectValue = /** @class */ (function (_super) {\r\n    __extends(SelectValue, _super);\r\n    function SelectValue(message, kerviService) {\r\n        var e_2, _a;\r\n        var _this = _super.call(this, message, kerviService) || this;\r\n        _this.options = [];\r\n        _this.lastSelected$ = new BehaviorSubject(null);\r\n        /** @type {?} */\r\n        var self = _this;\r\n        _this.options = [];\r\n        try {\r\n            for (var _b = __values(message.options), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var option = _c.value;\r\n                _this.options.push(new KerviEnumOptionModel(option));\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n        _this.selectOptions(_this.value$.value);\r\n        _this.value$.subscribe((/**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            self.selectOptions(v);\r\n        }));\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    SelectValue.prototype.getDefaultValue = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return [];\r\n    };\r\n    /**\r\n     * @param {?} selectedOptions\r\n     * @return {?}\r\n     */\r\n    SelectValue.prototype.selectOptions = /**\r\n     * @param {?} selectedOptions\r\n     * @return {?}\r\n     */\r\n    function (selectedOptions) {\r\n        var e_3, _a, e_4, _b, e_5, _c;\r\n        console.log(\"soc\");\r\n        if (!selectedOptions)\r\n            return;\r\n        try {\r\n            for (var _d = __values(this.options), _e = _d.next(); !_e.done; _e = _d.next()) {\r\n                var option = _e.value;\r\n                option.selected$.next(false);\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        try {\r\n            for (var selectedOptions_1 = __values(selectedOptions), selectedOptions_1_1 = selectedOptions_1.next(); !selectedOptions_1_1.done; selectedOptions_1_1 = selectedOptions_1.next()) {\r\n                var selectedOption = selectedOptions_1_1.value;\r\n                console.log(\"so\", selectedOption);\r\n                try {\r\n                    for (var _f = __values(this.options), _g = _f.next(); !_g.done; _g = _f.next()) {\r\n                        var option = _g.value;\r\n                        console.log(\"sox\", option);\r\n                        if (option.value == selectedOption) {\r\n                            option.selected$.next(true);\r\n                            this.lastSelected$.next(option);\r\n                            console.log(\"os\", option.text, option.selected$.value);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_g && !_g.done && (_c = _f.return)) _c.call(_f);\r\n                    }\r\n                    finally { if (e_5) throw e_5.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n        finally {\r\n            try {\r\n                if (selectedOptions_1_1 && !selectedOptions_1_1.done && (_b = selectedOptions_1.return)) _b.call(selectedOptions_1);\r\n            }\r\n            finally { if (e_4) throw e_4.error; }\r\n        }\r\n    };\r\n    return SelectValue;\r\n}(KerviValueType));\r\nvar NumberValue = /** @class */ (function (_super) {\r\n    __extends(NumberValue, _super);\r\n    function NumberValue(message, kerviService) {\r\n        var e_6, _a, e_7, _b;\r\n        var _this = _super.call(this, message, kerviService) || this;\r\n        _this.qtyUnitTo = null;\r\n        _this.sparkline$ = new BehaviorSubject([]);\r\n        _this.ranges = [];\r\n        _this.unit = message.unit;\r\n        _this.typeName = \"Number\";\r\n        _this.qtyUnitFrom = message.unit;\r\n        if (_this.unit == \"c\" && kerviService.application$.value[\"display\"][\"unit_system\"][\"temperature\"] == \"F\") {\r\n            _this.qtyUnitFrom = \"tempC\";\r\n            _this.qtyUnitTo = \"tempF\";\r\n            _this.unit = \"F\";\r\n        }\r\n        try {\r\n            for (var _c = __values(message.ranges), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var range = _d.value;\r\n                if (_this.qtyUnitTo) {\r\n                    /** @type {?} */\r\n                    var q = new Qty(range[\"start\"], _this.qtyUnitFrom);\r\n                    range[\"start\"] = q.to(_this.qtyUnitTo).scalar;\r\n                    /** @type {?} */\r\n                    var q = new Qty(range[\"end\"], _this.qtyUnitFrom);\r\n                    range[\"end\"] = q.to(_this.qtyUnitTo).scalar;\r\n                    _this.ranges.push(new ValueRange(range));\r\n                }\r\n                else\r\n                    _this.ranges.push(new ValueRange(range));\r\n            }\r\n        }\r\n        catch (e_6_1) { e_6 = { error: e_6_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_6) throw e_6.error; }\r\n        }\r\n        if (_this.qtyUnitTo && message.maxValue) {\r\n            /** @type {?} */\r\n            var q = new Qty(message.maxValue, _this.qtyUnitFrom);\r\n            _this.maxValue = q.to(_this.qtyUnitTo).scalar;\r\n        }\r\n        else\r\n            _this.maxValue = message.maxValue;\r\n        if (_this.qtyUnitTo && message.minValue) {\r\n            /** @type {?} */\r\n            var q = new Qty(message.minValue, _this.qtyUnitFrom);\r\n            _this.minValue = q.to(_this.qtyUnitTo).scalar;\r\n        }\r\n        else\r\n            _this.minValue = message.minValue;\r\n        /** @type {?} */\r\n        var spl = [];\r\n        try {\r\n            for (var _e = __values(message.sparkline), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                var spv = _f.value;\r\n                if (_this.qtyUnitTo) {\r\n                    console.log(\"spv\", spv);\r\n                    /** @type {?} */\r\n                    var q = new Qty(spv.value, _this.qtyUnitFrom);\r\n                    //spv.value = q.to(this.qtyUnitTo).scalar;\r\n                }\r\n                spl.push(spv);\r\n            }\r\n        }\r\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\r\n        finally {\r\n            try {\r\n                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n            }\r\n            finally { if (e_7) throw e_7.error; }\r\n        }\r\n        _this.sparkline$.next(spl);\r\n        _this.set(message.value, false);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    NumberValue.prototype.getDefaultValue = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @param {?} v\r\n     * @param {?=} notify\r\n     * @return {?}\r\n     */\r\n    NumberValue.prototype.set = /**\r\n     * @param {?} v\r\n     * @param {?=} notify\r\n     * @return {?}\r\n     */\r\n    function (v, notify) {\r\n        if (notify === void 0) { notify = true; }\r\n        /** @type {?} */\r\n        var newValue = v;\r\n        if (this.qtyUnitTo) {\r\n            /** @type {?} */\r\n            var q = new Qty(v, this.qtyUnitFrom);\r\n            newValue = q.to(this.qtyUnitTo).scalar;\r\n        }\r\n        this.value$.next(newValue);\r\n        if (notify)\r\n            this.kerviService.spine.sendCommand(this.command, v);\r\n        /** @type {?} */\r\n        var spl = this.sparkline$.value;\r\n        spl.push(newValue);\r\n        if (spl.length > 10)\r\n            spl.shift();\r\n        this.sparkline$.next(spl);\r\n    };\r\n    return NumberValue;\r\n}(KerviValueType));\r\nvar StringValue = /** @class */ (function (_super) {\r\n    __extends(StringValue, _super);\r\n    function StringValue(message, kerviService) {\r\n        var _this = _super.call(this, message, kerviService) || this;\r\n        _this.typeName = \"String\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    StringValue.prototype.getDefaultValue = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return \"\";\r\n    };\r\n    return StringValue;\r\n}(KerviValueType));\r\nvar BooleanValue = /** @class */ (function (_super) {\r\n    __extends(BooleanValue, _super);\r\n    function BooleanValue(message, kerviService) {\r\n        var _this = _super.call(this, message, kerviService) || this;\r\n        _this.typeName = \"Boolean\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    BooleanValue.prototype.getDefaultValue = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return false;\r\n    };\r\n    return BooleanValue;\r\n}(KerviValueType));\r\nvar DateTimeValue = /** @class */ (function (_super) {\r\n    __extends(DateTimeValue, _super);\r\n    function DateTimeValue(message, kerviService) {\r\n        var _this = _super.call(this, message, kerviService) || this;\r\n        _this.subType = message.inputType;\r\n        _this.typeName = \"DateTime\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    DateTimeValue.prototype.getDefaultValue = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new Date();\r\n    };\r\n    return DateTimeValue;\r\n}(KerviValueType));\r\nvar ColorValue = /** @class */ (function (_super) {\r\n    __extends(ColorValue, _super);\r\n    function ColorValue(message, kerviService) {\r\n        var _this = _super.call(this, message, kerviService) || this;\r\n        _this.typeName = \"Color\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    ColorValue.prototype.getDefaultValue = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return \"#ffffff\";\r\n    };\r\n    return ColorValue;\r\n}(KerviValueType));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ComponentRef = /** @class */ (function () {\r\n    function ComponentRef(message) {\r\n        this.id = message.id;\r\n    }\r\n    return ComponentRef;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar Controller = /** @class */ (function () {\r\n    function Controller(message, kerviService) {\r\n        var e_1, _a, e_2, _b, e_3, _c, e_4, _d;\r\n        this.componentType = \"controller\";\r\n        this.ui = {};\r\n        this.inputs = [];\r\n        this.outputs = [];\r\n        this.actions = [];\r\n        this.inputReferences = [];\r\n        this.outputReferences = [];\r\n        this.actionsReferences = [];\r\n        this.dashboards = [];\r\n        this.kerviService = kerviService;\r\n        this.id = message.id;\r\n        this.name = message.name;\r\n        this.type = message.type;\r\n        this.ui = message.ui;\r\n        this.visible = message.visible;\r\n        this.parameters = message.parameters;\r\n        this.template = message.template;\r\n        try {\r\n            for (var _e = __values(message.inputs), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                var ref = _f.value;\r\n                this.inputReferences.push(new ComponentRef(ref));\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        try {\r\n            for (var _g = __values(message.outputs), _h = _g.next(); !_h.done; _h = _g.next()) {\r\n                var ref = _h.value;\r\n                this.outputReferences.push(new ComponentRef(ref));\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n        try {\r\n            for (var _j = __values(message.actions), _k = _j.next(); !_k.done; _k = _j.next()) {\r\n                var ref = _k.value;\r\n                this.actionsReferences.push(new ComponentRef(ref));\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_k && !_k.done && (_c = _j.return)) _c.call(_j);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        try {\r\n            for (var _l = __values(message.dashboardLinks), _m = _l.next(); !_m.done; _m = _l.next()) {\r\n                var dashboardLink = _m.value;\r\n                this.dashboards.push(new DashboardLink(this, dashboardLink));\r\n            }\r\n        }\r\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n        finally {\r\n            try {\r\n                if (_m && !_m.done && (_d = _l.return)) _d.call(_l);\r\n            }\r\n            finally { if (e_4) throw e_4.error; }\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Controller.prototype.updateReferences = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var e_5, _a, e_6, _b, e_7, _c;\r\n        if (this.inputs.length == 0) {\r\n            try {\r\n                for (var _d = __values(this.inputReferences), _e = _d.next(); !_e.done; _e = _d.next()) {\r\n                    var ref = _e.value;\r\n                    /** @type {?} */\r\n                    var component = this.kerviService.getComponent(ref.id);\r\n                    if (component)\r\n                        this.inputs.push(component);\r\n                }\r\n            }\r\n            catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\r\n                }\r\n                finally { if (e_5) throw e_5.error; }\r\n            }\r\n        }\r\n        if (this.outputs.length == 0) {\r\n            try {\r\n                for (var _f = __values(this.outputReferences), _g = _f.next(); !_g.done; _g = _f.next()) {\r\n                    var ref = _g.value;\r\n                    /** @type {?} */\r\n                    var component = this.kerviService.getComponent(ref.id);\r\n                    if (component)\r\n                        this.outputs.push(component);\r\n                }\r\n            }\r\n            catch (e_6_1) { e_6 = { error: e_6_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\r\n                }\r\n                finally { if (e_6) throw e_6.error; }\r\n            }\r\n        }\r\n        if (this.actions.length == 0) {\r\n            try {\r\n                for (var _h = __values(this.actionsReferences), _j = _h.next(); !_j.done; _j = _h.next()) {\r\n                    var ref = _j.value;\r\n                    /** @type {?} */\r\n                    var component = this.kerviService.getComponent(ref.id);\r\n                    if (component)\r\n                        this.actions.push(component);\r\n                }\r\n            }\r\n            catch (e_7_1) { e_7 = { error: e_7_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_j && !_j.done && (_c = _h.return)) _c.call(_h);\r\n                }\r\n                finally { if (e_7) throw e_7.error; }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} components\r\n     * @return {?}\r\n     */\r\n    Controller.prototype.removeReferences = /**\r\n     * @param {?} components\r\n     * @return {?}\r\n     */\r\n    function (components) { };\r\n    /**\r\n     * @param {?} component\r\n     * @return {?}\r\n     */\r\n    Controller.prototype.reload = /**\r\n     * @param {?} component\r\n     * @return {?}\r\n     */\r\n    function (component) { };\r\n    return Controller;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\nvar DashboardSizes = /** @class */ (function () {\r\n    function DashboardSizes() {\r\n        this.valueWidth = \"3rem\";\r\n        this.buttonWidth = \"25px\";\r\n        this.buttonHeight = \"\";\r\n        this.switchWidth = \"25px\";\r\n        this.switchHeight = \"25px\";\r\n        this.gaugeWidth = \"100px\";\r\n        this.gaugeHeight = \"200px\";\r\n    }\r\n    return DashboardSizes;\r\n}());\r\nvar DashboardMessageModel = /** @class */ (function () {\r\n    function DashboardMessageModel(message) {\r\n        this.timestamp = new Date(message.timestamp * 1000);\r\n        this.topic = message.topic;\r\n        this.body = message.body;\r\n        this.type = message.type;\r\n        this.sourceId = message.source_id;\r\n        this.sourceName = message.source_name;\r\n        this.area = message.area;\r\n        this.level = message.level;\r\n    }\r\n    return DashboardMessageModel;\r\n}());\r\nvar DashboardPanelComponent = /** @class */ (function () {\r\n    function DashboardPanelComponent(message) {\r\n        this.message = message;\r\n        this.linkId = message.linkId;\r\n        this.componentId = message.componentId;\r\n        this.component = message.component;\r\n        this.parameters = message.parameters;\r\n    }\r\n    return DashboardPanelComponent;\r\n}());\r\nvar DashboardPanelParameters = /** @class */ (function () {\r\n    function DashboardPanelParameters(messageParameters) {\r\n        this.title = null;\r\n        this.width = null;\r\n        this.height = null;\r\n        this.type = null;\r\n        this.userLog = null;\r\n        this.logLength = 5;\r\n        this.layout = \"row\";\r\n        this.title = messageParameters.label;\r\n        this.height = this.calcSize(messageParameters.height);\r\n        this.width = this.calcSize(messageParameters.width);\r\n        this.userLog = messageParameters.userLog;\r\n        this.logLength = messageParameters.logLength;\r\n        if (messageParameters.type)\r\n            this.type = messageParameters.type;\r\n        if (messageParameters.layout)\r\n            this.layout = messageParameters.layout;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    DashboardPanelParameters.prototype.calcSize = /**\r\n     * @private\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        if (value == null)\r\n            return \"\";\r\n        else if (value === \"\")\r\n            return \"\";\r\n        else if (isNaN(value)) {\r\n            return value;\r\n        }\r\n        else if (value > 0)\r\n            return value + \"%\";\r\n        else\r\n            return \"\";\r\n    };\r\n    return DashboardPanelParameters;\r\n}());\r\nvar DashboardPanel = /** @class */ (function () {\r\n    function DashboardPanel(dashboard, messagePanel) {\r\n        var e_1, _a;\r\n        this.components = [];\r\n        this.subPanels = [];\r\n        this.hasOnlyGroupPanels = true;\r\n        this.dashboard = dashboard;\r\n        this.id = messagePanel.id;\r\n        this.name = messagePanel.name;\r\n        this.type = messagePanel.type;\r\n        this.parameters = new DashboardPanelParameters(messagePanel.uiParameters);\r\n        /*if (messagePanel.components)\r\n            for(var componentRef of messagePanel.components){\r\n                this.components.push(new DashboardPanelComponentModel(componentRef))\r\n            }*/\r\n        if (messagePanel.panels) {\r\n            try {\r\n                //console.log(\"spa\",messagePanel.panels);\r\n                for (var _b = __values(messagePanel.panels), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var subMessagePanel = _c.value;\r\n                    /** @type {?} */\r\n                    var panel = new DashboardPanel(this, subMessagePanel);\r\n                    this.subPanels.push(panel);\r\n                    if (panel.type !== \"group\")\r\n                        this.hasOnlyGroupPanels = false;\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} source\r\n     * @return {?}\r\n     */\r\n    DashboardPanel.prototype.reload = /**\r\n     * @param {?} source\r\n     * @return {?}\r\n     */\r\n    function (source) {\r\n        var e_2, _a, e_3, _b, e_4, _c, e_5, _d, e_6, _e, e_7, _f;\r\n        try {\r\n            //console.log(\"rl\", this);\r\n            for (var _g = __values(source.subPanels), _h = _g.next(); !_h.done; _h = _g.next()) {\r\n                var subPanel = _h.value;\r\n                this.reload(subPanel);\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_h && !_h.done && (_a = _g.return)) _a.call(_g);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n        try {\r\n            for (var _j = __values(source.components), _k = _j.next(); !_k.done; _k = _j.next()) {\r\n                var sourceComponent = _k.value;\r\n                /** @type {?} */\r\n                var found = false;\r\n                try {\r\n                    for (var _l = __values(this.components), _m = _l.next(); !_m.done; _m = _l.next()) {\r\n                        var component = _m.value;\r\n                        if (component.componentId == sourceComponent.componentId) {\r\n                            found = true;\r\n                        }\r\n                    }\r\n                }\r\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_m && !_m.done && (_c = _l.return)) _c.call(_l);\r\n                    }\r\n                    finally { if (e_4) throw e_4.error; }\r\n                }\r\n                if (!found) {\r\n                    this.components.push(sourceComponent);\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_k && !_k.done && (_b = _j.return)) _b.call(_j);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        /** @type {?} */\r\n        var deleteComponents = [];\r\n        try {\r\n            for (var _o = __values(this.components), _p = _o.next(); !_p.done; _p = _o.next()) {\r\n                var component = _p.value;\r\n                /** @type {?} */\r\n                var found = false;\r\n                try {\r\n                    for (var _q = __values(source.components), _r = _q.next(); !_r.done; _r = _q.next()) {\r\n                        var sourceComponent = _r.value;\r\n                        if (sourceComponent.componentId == component.componentId) {\r\n                            found = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                catch (e_6_1) { e_6 = { error: e_6_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_r && !_r.done && (_e = _q.return)) _e.call(_q);\r\n                    }\r\n                    finally { if (e_6) throw e_6.error; }\r\n                }\r\n                if (!found)\r\n                    deleteComponents.push(component);\r\n            }\r\n        }\r\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n        finally {\r\n            try {\r\n                if (_p && !_p.done && (_d = _o.return)) _d.call(_o);\r\n            }\r\n            finally { if (e_5) throw e_5.error; }\r\n        }\r\n        try {\r\n            //console.log(\"dsc\",deleteComponents);\r\n            for (var deleteComponents_1 = __values(deleteComponents), deleteComponents_1_1 = deleteComponents_1.next(); !deleteComponents_1_1.done; deleteComponents_1_1 = deleteComponents_1.next()) {\r\n                var component = deleteComponents_1_1.value;\r\n                this.components.splice(this.components.indexOf(component), 1);\r\n            }\r\n        }\r\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\r\n        finally {\r\n            try {\r\n                if (deleteComponents_1_1 && !deleteComponents_1_1.done && (_f = deleteComponents_1.return)) _f.call(deleteComponents_1);\r\n            }\r\n            finally { if (e_7) throw e_7.error; }\r\n        }\r\n    };\r\n    return DashboardPanel;\r\n}());\r\nvar DashboardBackgroundModel = /** @class */ (function () {\r\n    function DashboardBackgroundModel(message) {\r\n        this.type = message.type;\r\n        this.cameraId = message.cameraId;\r\n    }\r\n    return DashboardBackgroundModel;\r\n}());\r\nvar Dashboard = /** @class */ (function () {\r\n    function Dashboard(message) {\r\n        var e_8, _a;\r\n        this.headerPanel = null;\r\n        this.footerCenterPanel = null;\r\n        this.footerLeftPanel = null;\r\n        this.footerRightPanel = null;\r\n        this.sysPanel = null;\r\n        this.backgroundPanel = null;\r\n        this.controllerPanel = null;\r\n        this.LeftPadXPanel = null;\r\n        this.LeftPadYPanel = null;\r\n        this.RightPadXPanel = null;\r\n        this.RightPadYPanel = null;\r\n        this.dashboards = [];\r\n        this.currentPanel = null;\r\n        this.id = message.id;\r\n        this.name = message.name;\r\n        this.componentType = \"dashboard\";\r\n        this.type = message.type;\r\n        this.isDefault = message.isDefault;\r\n        this.template = message.template;\r\n        this.unitSize = message.unitSize;\r\n        //this.background=new DashboardBackgroundModel(message.background);\r\n        this.panels = [];\r\n        this.sysPanels = [];\r\n        if (!this.template) {\r\n            try {\r\n                for (var _b = __values(message.sections), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var messagePanel = _c.value;\r\n                    if (!messagePanel) {\r\n                        console.log(\"dashboard with null panel\", this.id);\r\n                        continue;\r\n                    }\r\n                    /** @type {?} */\r\n                    var panel = new DashboardPanel(this, messagePanel);\r\n                    /** @type {?} */\r\n                    var sysPanel = true;\r\n                    if (panel.id == \"header_center\")\r\n                        this.headerPanel = panel;\r\n                    else if (panel.id == \"footer_left\")\r\n                        this.footerLeftPanel = panel;\r\n                    else if (panel.id == \"footer_center\")\r\n                        this.footerCenterPanel = panel;\r\n                    else if (panel.id == \"footer_right\")\r\n                        this.footerRightPanel = panel;\r\n                    else if (panel.id == \"header_right\")\r\n                        this.sysPanel = panel;\r\n                    else if (panel.id == \"controllers\")\r\n                        this.controllerPanel = panel;\r\n                    else if (panel.id == \"background\")\r\n                        this.backgroundPanel = panel;\r\n                    else if (panel.id == \"left_pad_x\")\r\n                        this.LeftPadXPanel = panel;\r\n                    else if (panel.id == \"left_pad_y\")\r\n                        this.LeftPadYPanel = panel;\r\n                    else if (panel.id == \"right_pad_x\")\r\n                        this.RightPadXPanel = panel;\r\n                    else if (panel.id == \"right_pad_y\")\r\n                        this.RightPadYPanel = panel;\r\n                    else {\r\n                        sysPanel = false;\r\n                        if (panel.type != \"group\") {\r\n                            if (this.currentPanel == null) {\r\n                                this.currentPanel = new DashboardPanel(this, {\r\n                                    \"id\": null,\r\n                                    \"name\": \"\",\r\n                                    \"type\": \"group\",\r\n                                    \"components\": [],\r\n                                    \"panels\": [],\r\n                                    \"uiParameters\": {\r\n                                        \"title\": \"\",\r\n                                        \"width\": 100,\r\n                                        \"height\": 0,\r\n                                        \"userLog\": false,\r\n                                        \"logLength\": 0\r\n                                    }\r\n                                });\r\n                                this.currentPanel.subPanels.push(panel);\r\n                                this.panels.push(this.currentPanel);\r\n                            }\r\n                            else {\r\n                                this.currentPanel.subPanels.push(panel);\r\n                            }\r\n                        }\r\n                        else {\r\n                            this.panels.push(panel);\r\n                            this.currentPanel = null;\r\n                        }\r\n                    }\r\n                    if (sysPanel)\r\n                        this.sysPanels.push(panel);\r\n                }\r\n            }\r\n            catch (e_8_1) { e_8 = { error: e_8_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_8) throw e_8.error; }\r\n            }\r\n            if (!this.currentPanel) {\r\n                this.currentPanel = new DashboardPanel(this, {\r\n                    \"id\": null,\r\n                    \"name\": \"\",\r\n                    \"type\": \"group\",\r\n                    \"components\": [],\r\n                    \"panels\": [],\r\n                    \"uiParameters\": {\r\n                        \"title\": \"\",\r\n                        \"width\": 100,\r\n                        \"height\": 0,\r\n                        \"userLog\": false,\r\n                        \"logLength\": 0\r\n                    }\r\n                });\r\n                //this.currentPanel.subPanels.push(panel);\r\n                this.panels.push(this.currentPanel);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Dashboard.prototype.isEmpty = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.panels.length == 0;\r\n    };\r\n    /**\r\n     * @param {?} deleteComponents\r\n     * @return {?}\r\n     */\r\n    Dashboard.prototype.removeReferences = /**\r\n     * @param {?} deleteComponents\r\n     * @return {?}\r\n     */\r\n    function (deleteComponents) { };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Dashboard.prototype.updateReferences = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    /**\r\n     * @param {?} component\r\n     * @return {?}\r\n     */\r\n    Dashboard.prototype.reload = /**\r\n     * @param {?} component\r\n     * @return {?}\r\n     */\r\n    function (component) {\r\n        /** @type {?} */\r\n        var source = (/** @type {?} */ (component));\r\n        if (!this.backgroundPanel && source.backgroundPanel)\r\n            this.backgroundPanel = source.backgroundPanel;\r\n        else if (this.backgroundPanel && !source.backgroundPanel)\r\n            this.backgroundPanel = null;\r\n        else if (this.backgroundPanel)\r\n            this.backgroundPanel.reload(source.backgroundPanel);\r\n        if (!this.footerLeftPanel && source.footerLeftPanel)\r\n            this.footerLeftPanel = source.footerLeftPanel;\r\n        else if (this.footerLeftPanel && !source.footerLeftPanel)\r\n            this.footerLeftPanel = null;\r\n        else if (this.footerLeftPanel)\r\n            this.footerLeftPanel.reload(source.footerLeftPanel);\r\n        if (!this.footerRightPanel && source.footerRightPanel)\r\n            this.footerRightPanel = source.footerRightPanel;\r\n        else if (this.footerRightPanel && !source.footerRightPanel)\r\n            this.footerRightPanel = null;\r\n        else if (this.footerRightPanel)\r\n            this.footerRightPanel.reload(source.footerRightPanel);\r\n        if (!this.footerCenterPanel && source.footerCenterPanel)\r\n            this.footerCenterPanel = source.footerCenterPanel;\r\n        else if (this.footerCenterPanel && !source.footerCenterPanel)\r\n            this.footerCenterPanel = null;\r\n        else if (this.footerCenterPanel)\r\n            this.footerCenterPanel.reload(source.footerCenterPanel);\r\n        /*if (!this.headerPanel && source.headerPanel)\r\n            this.headerPanel=source.headerPanel;\r\n        else if (this.headerPanel && !source.headerPanel)\r\n            this.headerPanel = null\r\n        else if (this.headerPanel)\r\n            this.headerPanel.reload(source.headerPanel)*/\r\n        if (!this.sysPanel && source.sysPanel)\r\n            this.sysPanel = source.sysPanel;\r\n        else if (this.sysPanel && !source.sysPanel)\r\n            this.sysPanel = null;\r\n        else if (this.sysPanel)\r\n            this.sysPanel.reload(source.sysPanel);\r\n        if (!this.LeftPadXPanel && source.LeftPadXPanel)\r\n            this.LeftPadXPanel = source.LeftPadXPanel;\r\n        else if (this.LeftPadXPanel && !source.LeftPadXPanel)\r\n            this.LeftPadXPanel = null;\r\n        else if (this.LeftPadXPanel)\r\n            this.LeftPadXPanel.reload(source.LeftPadXPanel);\r\n        if (!this.LeftPadYPanel && source.LeftPadYPanel)\r\n            this.LeftPadYPanel = source.LeftPadYPanel;\r\n        else if (this.LeftPadYPanel && !source.LeftPadYPanel)\r\n            this.LeftPadYPanel = null;\r\n        else if (this.LeftPadYPanel)\r\n            this.LeftPadYPanel.reload(source.LeftPadYPanel);\r\n        if (!this.RightPadXPanel && source.RightPadXPanel)\r\n            this.RightPadXPanel = source.RightPadXPanel;\r\n        else if (this.RightPadXPanel && !source.RightPadXPanel)\r\n            this.RightPadXPanel = null;\r\n        else if (this.RightPadXPanel)\r\n            this.RightPadXPanel.reload(source.RightPadXPanel);\r\n        if (!this.RightPadYPanel && source.RightPadYPanel)\r\n            this.RightPadYPanel = source.RightPadYPanel;\r\n        else if (this.RightPadYPanel && !source.RightPadYPanel)\r\n            this.RightPadYPanel = null;\r\n        else if (this.RightPadYPanel)\r\n            this.RightPadYPanel.reload(source.RightPadYPanel);\r\n        if (!this.controllerPanel && source.controllerPanel)\r\n            this.controllerPanel = source.controllerPanel;\r\n        else if (this.controllerPanel && !source.controllerPanel)\r\n            this.controllerPanel = null;\r\n        else if (this.controllerPanel)\r\n            this.controllerPanel.reload(source.controllerPanel);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} id\r\n     * @param {?} panels\r\n     * @return {?}\r\n     */\r\n    Dashboard.prototype.getDashboardPanelById = /**\r\n     * @private\r\n     * @param {?} id\r\n     * @param {?} panels\r\n     * @return {?}\r\n     */\r\n    function (id, panels) {\r\n        var e_9, _a;\r\n        try {\r\n            for (var panels_1 = __values(panels), panels_1_1 = panels_1.next(); !panels_1_1.done; panels_1_1 = panels_1.next()) {\r\n                var panel = panels_1_1.value;\r\n                if (panel.id == id)\r\n                    return panel;\r\n                else {\r\n                    /** @type {?} */\r\n                    var res = this.getDashboardPanelById(id, panel.subPanels);\r\n                    if (res)\r\n                        return res;\r\n                }\r\n            }\r\n        }\r\n        catch (e_9_1) { e_9 = { error: e_9_1 }; }\r\n        finally {\r\n            try {\r\n                if (panels_1_1 && !panels_1_1.done && (_a = panels_1.return)) _a.call(panels_1);\r\n            }\r\n            finally { if (e_9) throw e_9.error; }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @param {?} link\r\n     * @return {?}\r\n     */\r\n    Dashboard.prototype.addDashboardLink = /**\r\n     * @param {?} link\r\n     * @return {?}\r\n     */\r\n    function (link) {\r\n        if (link.dashboardId == \"*\" || link.dashboardId == this.id || (link.dashboardId == \"**default**\" && this.isDefault)) {\r\n            /** @type {?} */\r\n            var panel = this.getDashboardPanelById(link.panelId, this.panels);\r\n            if (!panel)\r\n                panel = this.getDashboardPanelById(link.panelId, this.sysPanels);\r\n            if (panel) {\r\n                panel.components.push(new DashboardPanelComponent(link));\r\n            }\r\n            else {\r\n                console.log(\"adh\", link);\r\n                /** @type {?} */\r\n                var messagePanel = {\r\n                    id: link.panelId,\r\n                    name: link.panelName,\r\n                    type: \"panel\",\r\n                    uiParameters: {\r\n                        \"title\": \"\",\r\n                        \"width\": 0,\r\n                        \"height\": 0,\r\n                        \"userLog\": false,\r\n                        \"logLength\": 0\r\n                    }\r\n                };\r\n                /** @type {?} */\r\n                var newPanel = new DashboardPanel(this, messagePanel);\r\n                this.currentPanel.subPanels.push(newPanel);\r\n                newPanel.components.push(new DashboardPanelComponent(link));\r\n            }\r\n        }\r\n    };\r\n    return Dashboard;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar Action = /** @class */ (function () {\r\n    function Action(message, kerviService) {\r\n        var e_1, _a;\r\n        this.kerviService = null;\r\n        this.id = null;\r\n        this.name = null;\r\n        this.componentType = 'action';\r\n        this.runCommand = '';\r\n        this.interruptCommand = '';\r\n        this.ui = {\r\n            type: '',\r\n            orientation: '',\r\n            visible: true\r\n        };\r\n        this.dashboards = [];\r\n        this.running$ = new BehaviorSubject(false);\r\n        this.kerviService = kerviService;\r\n        this.id = message.id;\r\n        this.name = message.name;\r\n        this.ui = message.ui;\r\n        this.ui.visible = message.visible;\r\n        this.ui.type = message.type;\r\n        this.runCommand = message.runCommand;\r\n        this.interruptCommand = message.interruptCommand;\r\n        this.running$.next(message.running);\r\n        try {\r\n            for (var _b = __values(message.dashboardLinks), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var dashboardLink = _c.value;\r\n                this.dashboards.push(new DashboardLink(this, dashboardLink));\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} parameters\r\n     * @return {?}\r\n     */\r\n    Action.prototype.run = /**\r\n     * @param {?} parameters\r\n     * @return {?}\r\n     */\r\n    function (parameters) {\r\n        var _a;\r\n        //if (!this.running$.value){\r\n        if (parameters && parameters.length > 0)\r\n            (_a = this.kerviService.spine).sendCommand.apply(_a, __spread([this.runCommand], parameters));\r\n        else\r\n            this.kerviService.spine.sendCommand(this.runCommand);\r\n        //}\r\n    };\r\n    /**\r\n     * @param {?} parameters\r\n     * @return {?}\r\n     */\r\n    Action.prototype.interrupt = /**\r\n     * @param {?} parameters\r\n     * @return {?}\r\n     */\r\n    function (parameters) {\r\n        var _a;\r\n        if (parameters && parameters.length > 0)\r\n            (_a = this.kerviService.spine).sendCommand.apply(_a, __spread([this.interruptCommand], parameters));\r\n        else\r\n            this.kerviService.spine.sendCommand(this.interruptCommand);\r\n    };\r\n    return Action;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ComponentFactory = /** @class */ (function () {\r\n    function ComponentFactory() {\r\n    }\r\n    /**\r\n     * @param {?} message\r\n     * @param {?} kerviService\r\n     * @return {?}\r\n     */\r\n    ComponentFactory.createComponents = /**\r\n     * @param {?} message\r\n     * @param {?} kerviService\r\n     * @return {?}\r\n     */\r\n    function (message, kerviService) {\r\n        /** @type {?} */\r\n        var foundComponents = this.createComponentsRec(message, kerviService);\r\n        this.linkToDashboards(foundComponents[0], foundComponents[1]);\r\n        return foundComponents[0];\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} message\r\n     * @param {?} kerviService\r\n     * @return {?}\r\n     */\r\n    ComponentFactory.createComponentsRec = /**\r\n     * @private\r\n     * @param {?} message\r\n     * @param {?} kerviService\r\n     * @return {?}\r\n     */\r\n    function (message, kerviService) {\r\n        var e_1, _a;\r\n        /** @type {?} */\r\n        var result = [];\r\n        /** @type {?} */\r\n        var dashboards = [];\r\n        if (Array.isArray(message)) {\r\n            for (var i = 0; (i < message.length); i++) {\r\n                subComponents = this.createComponentsRec(message[i], kerviService);\r\n                result = result.concat(subComponents[0]);\r\n                dashboards = dashboards.concat(subComponents[1]);\r\n            }\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var component = null;\r\n            /** @type {?} */\r\n            var subComponents = [];\r\n            if (message.componentType == \"KerviAction\")\r\n                component = new Action(message, kerviService);\r\n            else if (message.componentType == \"dashboard\") {\r\n                component = new Dashboard(message);\r\n                dashboards.push(component);\r\n            }\r\n            else if (message.componentType == \"controller\")\r\n                component = new Controller(message, kerviService);\r\n            else if (message.componentType == \"boolean-value\")\r\n                component = new BooleanValue(message, kerviService);\r\n            else if (message.componentType == \"number-value\")\r\n                component = new NumberValue(message, kerviService);\r\n            else if (message.componentType == \"string-value\")\r\n                component = new StringValue(message, kerviService);\r\n            else if (message.componentType == \"enum-value\")\r\n                component = new SelectValue(message, kerviService);\r\n            else if (message.componentType == \"datetime-value\")\r\n                component = new DateTimeValue(message, kerviService);\r\n            else if (message.componentType == \"color-value\")\r\n                component = new ColorValue(message, kerviService);\r\n            if (component)\r\n                result.push(component);\r\n            if (subComponents) {\r\n                try {\r\n                    for (var subComponents_1 = __values(subComponents), subComponents_1_1 = subComponents_1.next(); !subComponents_1_1.done; subComponents_1_1 = subComponents_1.next()) {\r\n                        var subComponent = subComponents_1_1.value;\r\n                        result.push(subComponent);\r\n                    }\r\n                }\r\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (subComponents_1_1 && !subComponents_1_1.done && (_a = subComponents_1.return)) _a.call(subComponents_1);\r\n                    }\r\n                    finally { if (e_1) throw e_1.error; }\r\n                }\r\n            }\r\n        }\r\n        return [result, dashboards];\r\n    };\r\n    /**\r\n     * @param {?} components\r\n     * @return {?}\r\n     */\r\n    ComponentFactory.FixControllerReferences = /**\r\n     * @param {?} components\r\n     * @return {?}\r\n     */\r\n    function (components) {\r\n        var e_2, _a;\r\n        try {\r\n            for (var components_1 = __values(components), components_1_1 = components_1.next(); !components_1_1.done; components_1_1 = components_1.next()) {\r\n                var component = components_1_1.value;\r\n                /** @type {?} */\r\n                var controller = (/** @type {?} */ (component));\r\n                if (controller && controller.componentType == \"controller\")\r\n                    controller.updateReferences();\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (components_1_1 && !components_1_1.done && (_a = components_1.return)) _a.call(components_1);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} components\r\n     * @param {?} dashboards\r\n     * @return {?}\r\n     */\r\n    ComponentFactory.linkToDashboards = /**\r\n     * @private\r\n     * @param {?} components\r\n     * @param {?} dashboards\r\n     * @return {?}\r\n     */\r\n    function (components, dashboards) {\r\n        var e_3, _a, e_4, _b, e_5, _c;\r\n        console.log(\"ltd\", components, dashboards);\r\n        try {\r\n            for (var components_2 = __values(components), components_2_1 = components_2.next(); !components_2_1.done; components_2_1 = components_2.next()) {\r\n                var component = components_2_1.value;\r\n                if (!(component instanceof Dashboard)) {\r\n                    try {\r\n                        for (var _d = __values(component.dashboards), _e = _d.next(); !_e.done; _e = _d.next()) {\r\n                            var link = _e.value;\r\n                            try {\r\n                                for (var dashboards_1 = __values(dashboards), dashboards_1_1 = dashboards_1.next(); !dashboards_1_1.done; dashboards_1_1 = dashboards_1.next()) {\r\n                                    var dashboard = dashboards_1_1.value;\r\n                                    dashboard.addDashboardLink(link);\r\n                                }\r\n                            }\r\n                            catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n                            finally {\r\n                                try {\r\n                                    if (dashboards_1_1 && !dashboards_1_1.done && (_c = dashboards_1.return)) _c.call(dashboards_1);\r\n                                }\r\n                                finally { if (e_5) throw e_5.error; }\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (_e && !_e.done && (_b = _d.return)) _b.call(_d);\r\n                        }\r\n                        finally { if (e_4) throw e_4.error; }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (components_2_1 && !components_2_1.done && (_a = components_2.return)) _a.call(components_2);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n    };\r\n    return ComponentFactory;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar FileBase = /** @class */ (function () {\r\n    function FileBase() {\r\n        this.isFile = true;\r\n    }\r\n    return FileBase;\r\n}());\r\nvar File = /** @class */ (function (_super) {\r\n    __extends(File, _super);\r\n    function File() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return File;\r\n}(FileBase));\r\nvar Directory = /** @class */ (function (_super) {\r\n    __extends(Directory, _super);\r\n    function Directory(path) {\r\n        var _this = _super.call(this) || this;\r\n        _this.files$ = new BehaviorSubject([]);\r\n        _this.path = path;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} files\r\n     * @return {?}\r\n     */\r\n    Directory.prototype.updateFiles = /**\r\n     * @param {?} files\r\n     * @return {?}\r\n     */\r\n    function (files) {\r\n        var e_1, _a;\r\n        /** @type {?} */\r\n        var result = [];\r\n        try {\r\n            for (var files_1 = __values(files), files_1_1 = files_1.next(); !files_1_1.done; files_1_1 = files_1.next()) {\r\n                var file = files_1_1.value;\r\n                if (file.is_file) {\r\n                    /** @type {?} */\r\n                    var fileEntry = new File();\r\n                    fileEntry.name = file.name;\r\n                    /** @type {?} */\r\n                    var p = this.path !== '/' ? this.path : '';\r\n                    fileEntry.path = p + '/' + file.name;\r\n                    result.push(fileEntry);\r\n                }\r\n                else {\r\n                    /** @type {?} */\r\n                    var p = this.path !== '/' ? this.path : '';\r\n                    /** @type {?} */\r\n                    var directory = new Directory(p + '/' + file.name);\r\n                    directory.name = file.name;\r\n                    directory.isFile = false;\r\n                    result.push(directory);\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (files_1_1 && !files_1_1.done && (_a = files_1.return)) _a.call(files_1);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        this.files$.next(result);\r\n    };\r\n    return Directory;\r\n}(FileBase));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar StreamEvent = /** @class */ (function () {\r\n    function StreamEvent(streamId, streamEvent, data) {\r\n        this.streamId = streamId;\r\n        this.event = streamEvent;\r\n        this.data = data;\r\n    }\r\n    return StreamEvent;\r\n}());\r\nvar Stream = /** @class */ (function () {\r\n    function Stream(streamId, events, kerviService) {\r\n        this.streamId = streamId;\r\n        this.events = events;\r\n        this.kerviService = kerviService;\r\n        this.events$ = new BehaviorSubject(null);\r\n        /** @type {?} */\r\n        var self = this;\r\n        kerviService.spine.addStreamHandler(streamId, events, (/**\r\n         * @param {?} e_streamId\r\n         * @param {?} e_streamEvent\r\n         * @param {?} e_data\r\n         * @return {?}\r\n         */\r\n        function (e_streamId, e_streamEvent, e_data) {\r\n            /** @type {?} */\r\n            var event = new StreamEvent(e_streamId, e_streamEvent, e_data);\r\n            /** @type {?} */\r\n            var notify = false;\r\n            if (events === null || events.length === 0 || events.indexOf(e_streamEvent) >= 0) {\r\n                notify = true;\r\n            }\r\n            if (notify) {\r\n                self.events$.next(event);\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Stream.prototype.close = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        //this.kerviService.spine.removeStreamHandler(streamId)\r\n    };\r\n    return Stream;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @enum {number} */\r\nvar ConnectionState = {\r\n    disconnected: 0, loading: 1, authenticate: 2, connected: 3,\r\n};\r\nConnectionState[ConnectionState.disconnected] = 'disconnected';\r\nConnectionState[ConnectionState.loading] = 'loading';\r\nConnectionState[ConnectionState.authenticate] = 'authenticate';\r\nConnectionState[ConnectionState.connected] = 'connected';\r\n/** @enum {number} */\r\nvar UserLogStateType = {\r\n    normal: 0, warning: 1, error: 2,\r\n};\r\nUserLogStateType[UserLogStateType.normal] = 'normal';\r\nUserLogStateType[UserLogStateType.warning] = 'warning';\r\nUserLogStateType[UserLogStateType.error] = 'error';\r\nvar KerviBaseService = /** @class */ (function () {\r\n    function KerviBaseService() {\r\n        this.spine = null;\r\n        this.appInfo = null;\r\n        this.texts = null;\r\n        this.components = [];\r\n        this.components$ = new BehaviorSubject([]);\r\n        this.connectionState$ = new BehaviorSubject(ConnectionState.disconnected);\r\n        this.doAuthenticate = false;\r\n        this.componentsChanged$ = new BehaviorSubject(false);\r\n        this.logMessages = [];\r\n        this.logMessages$ = new BehaviorSubject([]);\r\n        this.lastLogMessage$ = new BehaviorSubject(null);\r\n        this.LogMessageCount$ = new BehaviorSubject(0);\r\n        this.LogMessageState$ = new BehaviorSubject(UserLogStateType.normal);\r\n        this.streams = {};\r\n        this.IPCReady$ = new BehaviorSubject(false);\r\n        this.authPromise = null;\r\n        console.log('kervi service constructor');\r\n        /** @type {?} */\r\n        var self = this;\r\n        this.application$ = new BehaviorSubject(null);\r\n        this.IPCReady$.subscribe((/**\r\n         * @param {?} connected\r\n         * @return {?}\r\n         */\r\n        function (connected) {\r\n            if (connected) {\r\n                console.log('kervi service ipc ready (connected)');\r\n                self.spine.addEventHandler('valueChanged', '', (/**\r\n                 * @param {?} id\r\n                 * @param {?} value\r\n                 * @return {?}\r\n                 */\r\n                function (id, value) {\r\n                    var e_1, _a;\r\n                    try {\r\n                        for (var _b = __values(self.components), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                            var component = _c.value;\r\n                            if (component.id === value.id) {\r\n                                /** @type {?} */\r\n                                var dynamicValue = (/** @type {?} */ (component));\r\n                                dynamicValue.valueTS = new Date(this.timestamp);\r\n                                dynamicValue.set(value.value, false);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                        }\r\n                        finally { if (e_1) throw e_1.error; }\r\n                    }\r\n                }));\r\n                self.spine.addEventHandler('actionStarted', '', (/**\r\n                 * @param {?} id\r\n                 * @return {?}\r\n                 */\r\n                function (id) {\r\n                    var e_2, _a;\r\n                    console.log('as', id);\r\n                    try {\r\n                        for (var _b = __values(self.components), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                            var component = _c.value;\r\n                            if (component.id === id) {\r\n                                /** @type {?} */\r\n                                var action = (/** @type {?} */ (component));\r\n                                action.running$.next(true);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                        }\r\n                        finally { if (e_2) throw e_2.error; }\r\n                    }\r\n                }));\r\n                self.spine.addEventHandler('actionDone', '', (/**\r\n                 * @param {?} id\r\n                 * @return {?}\r\n                 */\r\n                function (id) {\r\n                    var e_3, _a;\r\n                    console.log('ad', id);\r\n                    try {\r\n                        for (var _b = __values(self.components), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                            var component = _c.value;\r\n                            if (component.id === id) {\r\n                                /** @type {?} */\r\n                                var action = (/** @type {?} */ (component));\r\n                                action.running$.next(false);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                        }\r\n                        finally { if (e_3) throw e_3.error; }\r\n                    }\r\n                }));\r\n                self.spine.addEventHandler('userLogMessage', null, (/**\r\n                 * @param {?} v\r\n                 * @return {?}\r\n                 */\r\n                function (v) {\r\n                    var e_4, _a;\r\n                    /** @type {?} */\r\n                    var messages = self.logMessages$.value;\r\n                    /** @type {?} */\r\n                    var newMessage = new DashboardMessageModel(this);\r\n                    messages.unshift(newMessage);\r\n                    if (messages.length > 10) {\r\n                        messages.pop();\r\n                    }\r\n                    /** @type {?} */\r\n                    var hasErrors = 0;\r\n                    /** @type {?} */\r\n                    var hasWarnings = 0;\r\n                    try {\r\n                        for (var messages_1 = __values(messages), messages_1_1 = messages_1.next(); !messages_1_1.done; messages_1_1 = messages_1.next()) {\r\n                            var message = messages_1_1.value;\r\n                            if (message.level === 1) {\r\n                                hasErrors++;\r\n                            }\r\n                            if (message.level === 2) {\r\n                                hasWarnings++;\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (messages_1_1 && !messages_1_1.done && (_a = messages_1.return)) _a.call(messages_1);\r\n                        }\r\n                        finally { if (e_4) throw e_4.error; }\r\n                    }\r\n                    if (hasErrors) {\r\n                        self.LogMessageState$.next(UserLogStateType.error);\r\n                    }\r\n                    else if (hasWarnings) {\r\n                        self.LogMessageState$.next(UserLogStateType.warning);\r\n                    }\r\n                    else {\r\n                        self.LogMessageState$.next(UserLogStateType.normal);\r\n                    }\r\n                    self.LogMessageCount$.next(messages.length);\r\n                    self.lastLogMessage$.next(newMessage);\r\n                    self.logMessages$.next(messages);\r\n                }));\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * @param {?} path\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.GetDirectory = /**\r\n     * @param {?} path\r\n     * @return {?}\r\n     */\r\n    function (path) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var promise = new Promise((/**\r\n         * @param {?} resolve\r\n         * @param {?} reject\r\n         * @return {?}\r\n         */\r\n        function (resolve, reject) {\r\n            /** @type {?} */\r\n            var directory = new Directory(path);\r\n            _this.spine.sendQuery('files_get_dir', path, (/**\r\n             * @param {?} directoryFiles\r\n             * @return {?}\r\n             */\r\n            function (directoryFiles) {\r\n                directory.updateFiles(directoryFiles);\r\n                resolve(directory);\r\n            }));\r\n        }));\r\n        return promise;\r\n    };\r\n    /**\r\n     * @param {?} path\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.GetThumbnail = /**\r\n     * @param {?} path\r\n     * @return {?}\r\n     */\r\n    function (path) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var promise = new Promise((/**\r\n         * @param {?} resolve\r\n         * @param {?} reject\r\n         * @return {?}\r\n         */\r\n        function (resolve, reject) {\r\n            _this.spine.sendQuery('files_get_thumbnail', path, (/**\r\n             * @param {?} thumbnail\r\n             * @return {?}\r\n             */\r\n            function (thumbnail) {\r\n                resolve(thumbnail);\r\n            }));\r\n        }));\r\n        return promise;\r\n    };\r\n    /**\r\n     * @param {?} path\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.GetFile = /**\r\n     * @param {?} path\r\n     * @return {?}\r\n     */\r\n    function (path) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var promise = new Promise((/**\r\n         * @param {?} resolve\r\n         * @param {?} reject\r\n         * @return {?}\r\n         */\r\n        function (resolve, reject) {\r\n            _this.spine.sendQuery('files_get_file', path, (/**\r\n             * @param {?} file\r\n             * @return {?}\r\n             */\r\n            function (file) {\r\n                resolve(file);\r\n            }));\r\n        }));\r\n        return promise;\r\n    };\r\n    /**\r\n     * @param {?} streamId\r\n     * @param {?=} events\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.GetStream = /**\r\n     * @param {?} streamId\r\n     * @param {?=} events\r\n     * @return {?}\r\n     */\r\n    function (streamId, events) {\r\n        if (events === void 0) { events = []; }\r\n        return new Stream(streamId, events, this);\r\n    };\r\n    /**\r\n     * @param {?} key\r\n     * @param {?=} defaultValue\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.text = /**\r\n     * @param {?} key\r\n     * @param {?=} defaultValue\r\n     * @return {?}\r\n     */\r\n    function (key, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = ''; }\r\n        if (this.texts && key in this.texts) {\r\n            return this.texts[key];\r\n        }\r\n        else {\r\n            return defaultValue;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.getLogMessages$ = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.logMessages$.asObservable();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.getLastLogMessage$ = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.lastLogMessage$.asObservable();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.getLogState$ = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.LogMessageState$.asObservable();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.getLogMessageCount$ = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.LogMessageCount$.asObservable();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.isAppEmpty = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var defaultDashboard = this.getDefaultDashboard();\r\n        if (defaultDashboard) {\r\n            return defaultDashboard.isEmpty();\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * @param {?} id\r\n     * @param {?=} componentType\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.getComponent = /**\r\n     * @param {?} id\r\n     * @param {?=} componentType\r\n     * @return {?}\r\n     */\r\n    function (id, componentType) {\r\n        if (componentType === void 0) { componentType = null; }\r\n        var e_5, _a;\r\n        try {\r\n            for (var _b = __values(this.components), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var component = _c.value;\r\n                if (component.id === id && (componentType == null || component.componentType === componentType)) {\r\n                    return component;\r\n                }\r\n            }\r\n        }\r\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_5) throw e_5.error; }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @param {?} type\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.getComponentsByType = /**\r\n     * @param {?} type\r\n     * @return {?}\r\n     */\r\n    function (type) {\r\n        var e_6, _a;\r\n        /** @type {?} */\r\n        var result = [];\r\n        try {\r\n            for (var _b = __values(this.components), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var component = _c.value;\r\n                if (component.componentType === type) {\r\n                    result.push(component);\r\n                }\r\n            }\r\n        }\r\n        catch (e_6_1) { e_6 = { error: e_6_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_6) throw e_6.error; }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.getDefaultDashboard = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var e_7, _a;\r\n        /** @type {?} */\r\n        var dashboards = (/** @type {?} */ (this.getComponentsByType('dashboard')));\r\n        try {\r\n            for (var dashboards_1 = __values(dashboards), dashboards_1_1 = dashboards_1.next(); !dashboards_1_1.done; dashboards_1_1 = dashboards_1.next()) {\r\n                var dashboard = dashboards_1_1.value;\r\n                if (dashboard.isDefault) {\r\n                    return dashboard;\r\n                }\r\n            }\r\n        }\r\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\r\n        finally {\r\n            try {\r\n                if (dashboards_1_1 && !dashboards_1_1.done && (_a = dashboards_1.return)) _a.call(dashboards_1);\r\n            }\r\n            finally { if (e_7) throw e_7.error; }\r\n        }\r\n        if (dashboards.length > 0) {\r\n            return dashboards[0];\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.connect = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var address = null;\r\n        /** @type {?} */\r\n        var protocol = 'ws';\r\n        try {\r\n            if (kerviSocketAddress) {\r\n                address = kerviSocketAddress;\r\n            }\r\n            if (socketProtocol) {\r\n                protocol = socketProtocol;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // for testing with ng serve\r\n            /** @type {?} */\r\n            var httpProtocol = location.protocol;\r\n            if (httpProtocol === 'https') {\r\n                protocol = 'wss';\r\n            }\r\n            /** @type {?} */\r\n            var httpHost = window.location.hostname;\r\n            address = httpHost + ':9000';\r\n        }\r\n        console.log('ks', address);\r\n        this.spine = new KerviWSSpine({\r\n            address: address,\r\n            protocol: protocol,\r\n            onOpen: this.onOpen,\r\n            onClose: this.onClose,\r\n            onAuthenticate: this.onAuthenticate,\r\n            onAuthenticateFailed: this.onAuthenticateFailed,\r\n            onLogOff: this.onLogoff,\r\n            onAuthenticateStart: this.onAuthenticateStart,\r\n            targetScope: this\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.connectMQ = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        console.log('ks', sessionStorage.getItem('mqc'));\r\n        if (sessionStorage.getItem('mqc')) {\r\n            this.spine = new KerviRMQSpine({\r\n                onOpen: this.onOpen,\r\n                onClose: this.onClose,\r\n                onAuthenticate: this.onAuthenticate,\r\n                onAuthenticateFailed: this.onAuthenticateFailed,\r\n                onLogOff: this.onLogoff,\r\n                onAuthenticateStart: this.onAuthenticateStart,\r\n                targetScope: this,\r\n                apiToken: JSON.parse(sessionStorage.getItem('mqc'))\r\n            });\r\n        }\r\n        else {\r\n            console.log('qmc not found in storage');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.isAnonymous = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.spine.options.userName === 'anonymous';\r\n    };\r\n    /**\r\n     * @param {?} userName\r\n     * @param {?} password\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.authenticate = /**\r\n     * @param {?} userName\r\n     * @param {?} password\r\n     * @return {?}\r\n     */\r\n    function (userName, password) {\r\n        var _this = this;\r\n        console.log('sa', userName, password);\r\n        this.authPromise = new Promise((/**\r\n         * @param {?} resolve\r\n         * @param {?} reject\r\n         * @return {?}\r\n         */\r\n        function (resolve, reject) {\r\n            _this._resolveSelf = resolve;\r\n            _this._rejectSelf = reject;\r\n        }));\r\n        this.spine.authenticate(userName, password);\r\n        return this.authPromise;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.logoff = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.spine.logoff();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onAuthenticateStart = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onAuthenticate = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.doAuthenticate = true;\r\n        this.reset();\r\n        this._resolveSelf('ok');\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onAuthenticateFailed = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._rejectSelf('error');\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onLogoff = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.doAuthenticate = true;\r\n        if (this.spine.firstOnOpen) {\r\n            this.IPCReady$.next(true);\r\n        }\r\n        this.reset();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.reset = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.components = [];\r\n        this.components$.next(this.components);\r\n        /** @type {?} */\r\n        var messages = [];\r\n        this.LogMessageState$.next(UserLogStateType.normal);\r\n        this.LogMessageCount$.next(messages.length);\r\n        this.logMessages$.next(messages);\r\n        if (this.IPCReady$.value) {\r\n            this.connectionState$.next(ConnectionState.authenticate);\r\n        }\r\n        else {\r\n            this.connectionState$.next(ConnectionState.disconnected);\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} retryCount\r\n     * @param {?} module_load\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.getComponentInfo = /**\r\n     * @private\r\n     * @param {?} retryCount\r\n     * @param {?} module_load\r\n     * @return {?}\r\n     */\r\n    function (retryCount, module_load) {\r\n        /** @type {?} */\r\n        var self = this;\r\n        this.spine.sendQuery('GetApplicationInfo', (/**\r\n         * @param {?} appInfo\r\n         * @return {?}\r\n         */\r\n        function (appInfo) {\r\n            console.log('app info', appInfo);\r\n            this.spine.sendQuery('getComponentInfo', (/**\r\n             * @param {?} message\r\n             * @return {?}\r\n             */\r\n            function (message) {\r\n                console.log('component info', message);\r\n                self.application$.next(appInfo);\r\n                self.texts = appInfo.display.texts;\r\n                self.components = ComponentFactory.createComponents(message, self);\r\n                ComponentFactory.FixControllerReferences(self.getComponentsByType('controller'));\r\n                self.components$.next(self.components);\r\n                self.connectionState$.next(ConnectionState.connected);\r\n                if (module_load) {\r\n                    self.componentsChanged$.next(true);\r\n                }\r\n                console.log('components', self.components);\r\n            }), (/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                console.error('get component info timeout');\r\n                if (retryCount > 0) {\r\n                    self.getComponentInfo(retryCount - 1, module_load);\r\n                }\r\n            }));\r\n        }));\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} first\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onOpen = /**\r\n     * @private\r\n     * @param {?} first\r\n     * @return {?}\r\n     */\r\n    function (first) {\r\n        console.log('kervi service on open', this.spine.firstOnOpen, first, this);\r\n        /** @type {?} */\r\n        var self = this;\r\n        this.connectionState$.next(ConnectionState.loading);\r\n        this.doAuthenticate = this.spine.doAuthenticate;\r\n        this.getComponentInfo(2, false);\r\n        if (self.spine.firstOnOpen) {\r\n            this.IPCReady$.next(true);\r\n            this.spine.addEventHandler('moduleStarted', '', (/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                console.log('module loaded', self.components);\r\n                setTimeout((/**\r\n                 * @return {?}\r\n                 */\r\n                function () {\r\n                    self.getComponentInfo(2, true);\r\n                }), 2000);\r\n            }));\r\n            this.spine.addEventHandler('moduleStopped', '', (/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                console.log('module unloaded');\r\n                setTimeout((/**\r\n                 * @return {?}\r\n                 */\r\n                function () {\r\n                    console.log('module unloaded, refresh');\r\n                    self.getComponentInfo(2, true);\r\n                }), 5000);\r\n            }));\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onClose = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.reset();\r\n        console.log('ks on close');\r\n        this.IPCReady$.next(false);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onHeartbeat = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onConnect = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    KerviBaseService.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviBaseService.ctorParameters = function () { return []; };\r\n    return KerviBaseService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviJsComponent = /** @class */ (function () {\r\n    function KerviJsComponent() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviJsComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    KerviJsComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'lib-kervi-js',\r\n                    template: \"\\n    <p>\\n      kervi-js works!\\n    </p>\\n  \",\r\n                    styles: []\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviJsComponent.ctorParameters = function () { return []; };\r\n    return KerviJsComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviJsModule = /** @class */ (function () {\r\n    function KerviJsModule() {\r\n    }\r\n    KerviJsModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [],\r\n                    declarations: [KerviJsComponent],\r\n                    exports: [KerviJsComponent]\r\n                },] },\r\n    ];\r\n    return KerviJsModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { KerviBaseService, ConnectionState, KerviValue, ValueRange, ValueRangeType, KerviValueType, KerviEnumOptionModel, SelectValue, NumberValue, StringValue, BooleanValue, DateTimeValue, ColorValue, DashboardSizes, DashboardMessageModel, DashboardPanelComponent, DashboardPanelParameters, DashboardPanel, DashboardBackgroundModel, Dashboard, Action, DashboardLink, Controller, FileBase, File, Directory, StreamEvent, Stream, UserLogStateType, KerviJsModule, KerviJsComponent as ɵa };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import { Injectable, Component, Input, Output, ElementRef, EventEmitter, NgModule, ViewChild, TemplateRef, defineInjectable } from '@angular/core';\nimport { __extends } from 'tslib';\nimport { KerviDashboardPanelComponent, KerviWidgetComponent, KerviNumberComponent, KerviBooleanComponent, KerviStringComponent, KerviDateTimeComponent, KerviColorComponent, NGXKerviService, KerviTemplateService, NGXKerviPipesModule, KerviCameraComponent, KerviActionComponent, KerviUserLogComponent, NgxKerviModule } from 'ngx-kervi';\nimport { DashboardSizes } from 'kervi-js';\nimport { asapScheduler } from 'rxjs';\nimport { DomSanitizer, BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { NgxGaugeModule } from 'ngx-gauge';\nimport { FormsModule } from '@angular/forms';\nimport { NgZorroAntdModule, NzNotificationService } from 'ng-zorro-antd';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviZorroService = /** @class */ (function () {\r\n    function KerviZorroService() {\r\n    }\r\n    KerviZorroService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviZorroService.ctorParameters = function () { return []; };\r\n    /** @nocollapse */ KerviZorroService.ngInjectableDef = defineInjectable({ factory: function KerviZorroService_Factory() { return new KerviZorroService(); }, token: KerviZorroService, providedIn: \"root\" });\r\n    return KerviZorroService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar DashboardPanelComponent = /** @class */ (function (_super) {\r\n    __extends(DashboardPanelComponent, _super);\r\n    function DashboardPanelComponent() {\r\n        var _this = _super.call(this) || this;\r\n        _this.groupLayout = \"row\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DashboardPanelComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitPanel();\r\n        if (this.panel.hasOnlyGroupPanels)\r\n            this.groupLayout = \"row\";\r\n    };\r\n    DashboardPanelComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-dashboard-panel',\r\n                    template: \"<!-- <p>{{panel.name}} - {{panel.type}} - {{groupLayout}} - {{bodyOnly}} - {{inline}} - {{panel.subPanels.length}} - {{panel.components.length}} - {{headerComponents.length}} - {{bodyComponents.length}}</p> -->\\n<!-- <p>w={{width}} - {{inGroup}}</p> -->\\n<ng-container *ngIf=\\\"panel.type=='group'\\\">\\n    <div class=\\\"kervi-panel-deck\\\" [fxLayout]=\\\"panel.parameters.layout\\\" fxLayout.xs=\\\"column\\\"  fxLayoutGap=\\\"0.5%\\\">\\n        <ng-container *ngFor=\\\"let subPanel of panel.subPanels\\\">\\n            <ng-container *ngIf=\\\"subPanel.type!='group'\\\">\\n                        <kervi-dashboard-panel fxFlex.xs=\\\"100\\\" [fxFlex]=\\\"subPanel.parameters.width\\\" [bodyOnly]=\\\"true\\\" [inGroup]=\\\"true\\\" [dashboardSizes]=\\\"dashboardSizes\\\"  [panel]=\\\"subPanel\\\"></kervi-dashboard-panel>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"subPanel.type=='group'\\\">\\n                    <kervi-dashboard-panel fxFlex.xs=\\\"100\\\" [fxFlex]=\\\"subPanel.parameters.width\\\" [inGroup]=\\\"true\\\" [dashboardSizes]=\\\"dashboardSizes\\\"  [panel]=\\\"subPanel\\\"></kervi-dashboard-panel>\\n            </ng-container>\\n        </ng-container>\\n    </div>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"panel.type!='group' && !inline\\\">\\n    \\n    <nz-card  [nzTitle]=\\\"showHeader ? title : null\\\" [nzExtra]=\\\"headerComponents.length>0 ? extraTemplate : null\\\">\\n        \\n        <ng-template #extraTemplate>\\n            <ng-container *ngFor=\\\"let panelComponent of headerComponents\\\">\\n                        <kervi-widget [component]=\\\"panelComponent.component\\\" [dashboardPanel]=\\\"panel\\\" [inline]=\\\"inline\\\"  [linkParameters]=\\\"panelComponent.parameters\\\"></kervi-widget>\\n            </ng-container>\\n        </ng-template>\\n        <ng-container *ngFor=\\\"let panelComponent of bodyComponents\\\">\\n            <kervi-widget [component]=\\\"panelComponent.component\\\" [dashboardPanel]=\\\"panel\\\"  [inline]=\\\"inline\\\"  [linkParameters]=\\\"panelComponent.parameters\\\"></kervi-widget>\\n        </ng-container>\\n    \\n        <div *ngIf=\\\"panel.parameters.userLog\\\"  >\\n            \\n            <kervi-user-log></kervi-user-log>\\n        </div> \\n    </nz-card>\\n</ng-container>\\n\\n<ng-template [ngIf]=\\\"inline && panel.components.length>0\\\" >\\n    <ng-container *ngFor=\\\"let panelComponent of panel.components\\\" >\\n        <kervi-widget [component]=\\\"panelComponent.component\\\"  [inline]=\\\"inline\\\" [dashboardPanel]=\\\"panel\\\"  [linkParameters]=\\\"panelComponent.parameters\\\"></kervi-widget>\\n    </ng-container>\\n</ng-template>\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DashboardPanelComponent.ctorParameters = function () { return []; };\r\n    return DashboardPanelComponent;\r\n}(KerviDashboardPanelComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar WidgetComponent = /** @class */ (function (_super) {\r\n    __extends(WidgetComponent, _super);\r\n    function WidgetComponent() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    WidgetComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitWidget();\r\n    };\r\n    WidgetComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-widget',\r\n                    template: \"<ng-container *ngIf=\\\"widgetType=='value'\\\">\\n    <div fxLayout=\\\"row\\\" *ngIf=\\\"!inline\\\" class=\\\"kervi-block-widget\\\"> \\n        <div fxFlex=\\\"60\\\" class=\\\"kervi-value-label\\\">\\n            <span   *ngIf=\\\"linkParameters.labelIcon\\\" class=\\\"pi pi-{{linkParameters.labelIcon}}\\\"></span>\\n            <span   *ngIf=\\\"linkParameters.label\\\">{{linkParameters.label}}</span>\\n        </div>\\n        \\n        <div fxFlex class=\\\"kervi-value-section\\\">\\n            <kervi-value *ngIf=\\\"component.componentType=='KerviValue'\\\" [value]=\\\"component\\\" [inline]=\\\"false\\\" [dashboardSizes]=\\\"dashboardSizes\\\"  [linkParameters]=\\\"linkParameters\\\"></kervi-value>\\n            <kervi-action  *ngIf=\\\"component.componentType=='action'\\\" [action]=\\\"component\\\" [inline]=\\\"false\\\" [dashboardSizes]=\\\"dashboardSizes\\\"  [linkParameters]=\\\"linkParameters\\\"></kervi-action>\\n        </div>\\n            \\n    </div>\\n\\n    <div *ngIf=\\\"inline\\\" class=\\\"kervi-inline-widget\\\">\\n        <div class=\\\"kervi-value-label\\\"> \\n            <span style=\\\"display:inline\\\"  *ngIf=\\\"linkParameters.labelIcon\\\" class=\\\"fa fa-{{linkParameters.labelIcon}}\\\"></span>\\n            <span style=\\\"display:inline\\\"  *ngIf=\\\"linkParameters.label\\\"  >{{linkParameters.label}}</span>\\n        </div>\\n        <div class=\\\"kervi-value-section\\\">\\n            <kervi-value *ngIf=\\\"component.componentType=='KerviValue'\\\" [value]=\\\"component\\\" [inline]=\\\"false\\\" [dashboardSizes]=\\\"dashboardSizes\\\"  [linkParameters]=\\\"linkParameters\\\"></kervi-value>\\n            <kervi-action  *ngIf=\\\"component.componentType=='action'\\\" [action]=\\\"component\\\" [inline]=\\\"false\\\" [dashboardSizes]=\\\"dashboardSizes\\\"  [linkParameters]=\\\"linkParameters\\\"></kervi-action>\\n        </div>\\n    </div>\\n</ng-container>    \\n<ng-container *ngIf=\\\"widgetType=='camera'\\\" class=\\\"block-component\\\" >\\n    <kervi-cam-viewer [isBackground]=\\\"false\\\" [camera]=\\\"component\\\" [linkParameters]=\\\"linkParameters\\\"></kervi-cam-viewer>\\n</ng-container>\\n    \\n    \\n<ng-container *ngIf=\\\"widgetType=='gauge'\\\" class=\\\"block-component\\\" >\\n    <kervi-gauge [dashboardSizes]=\\\"dashboardSizes\\\" [value]=\\\"component\\\" [linkParameters]=\\\"linkParameters\\\"></kervi-gauge>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"widgetType=='chart'\\\" class=\\\"\\\" >\\n    <kervi-chart [dashboardSizes]=\\\"dashboardSizes\\\" [value]=\\\"component\\\" [linkParameters]=\\\"linkParameters\\\" ></kervi-chart>\\n</ng-container>\",\r\n                    styles: []\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    WidgetComponent.ctorParameters = function () { return []; };\r\n    return WidgetComponent;\r\n}(KerviWidgetComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NumberComponent = /** @class */ (function (_super) {\r\n    __extends(NumberComponent, _super);\r\n    function NumberComponent(elementRef) {\r\n        var _this = _super.call(this) || this;\r\n        _this.elementRef = elementRef;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NumberComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitNumber();\r\n    };\r\n    NumberComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-number',\r\n                    template: \"<ng-container *ngIf=\\\"linkParameters.isInput\\\">\\n    \\n    <nz-form-control >\\n        <nz-slider [nzMin]=\\\"value.minValue\\\" [nzMax]=\\\"value.maxValue\\\" [nzStep]=\\\"1\\\"  [(ngModel)]=\\\"value.value\\\"></nz-slider>\\n        <nz-input-number id=\\\"{{value.id}}\\\" [nzMin]=\\\"value.minValue\\\" [nzMax]=\\\"value.maxValue\\\" [nzStep]=\\\"1\\\" [(ngModel)]=\\\"value.value\\\"  ></nz-input-number>\\n        \\n    </nz-form-control>\\n    \\n</ng-container>\\n<ng-container *ngIf=\\\"!linkParameters.isInput\\\">\\n\\n    <span class=\\\"value-value\\\" [style.min-width.rem]=\\\"linkParameters.valueSize\\\">\\n        <i *ngIf=\\\"currentIcon\\\" class=\\\"fa fa-{{currentIcon}}\\\"></i>\\n        <value-sparkline *ngIf=\\\"linkParameters.showSparkline && !linkParameters.isInput\\\" [value]=\\\"value\\\"></value-sparkline>\\n        {{(value.value$ | async | number:numberFormat)}}\\n        <span *ngIf=\\\"linkParameters.displayUnit\\\">{{value.unit}}</span>\\n    </span>\\n</ng-container>\\n\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    NumberComponent.ctorParameters = function () { return [\r\n        { type: ElementRef }\r\n    ]; };\r\n    return NumberComponent;\r\n}(KerviNumberComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar BooleanComponent = /** @class */ (function (_super) {\r\n    __extends(BooleanComponent, _super);\r\n    function BooleanComponent() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    BooleanComponent.prototype.changeState = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        this.value.set(event);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    BooleanComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitBoolean();\r\n    };\r\n    BooleanComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-boolean',\r\n                    template: \"<kervi-switchbutton \\n    *ngIf=\\\"displayType!='button'\\\"\\n    [dashboardSizes]=\\\"dashboardSizes\\\" \\n    [inline]=\\\"inline\\\" \\n    [value]=\\\"value.value\\\" \\n    [linkParameters]=\\\"linkParameters\\\"\\n    (buttonState)=\\\"changeState($event)\\\"\\n></kervi-switchbutton>\\n<kervi-button \\n    *ngIf=\\\"displayType=='button'\\\"    \\n    [dashboardSizes]=\\\"dashboardSizes\\\" \\n    [value]=\\\"value\\\" \\n    [inline]=\\\"inline\\\" \\n    [linkParameters]=\\\"linkParameters\\\" \\n    (buttonState)=\\\"changeState($event)\\\" \\n></kervi-button>\\n\\n\\n\\n\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    BooleanComponent.ctorParameters = function () { return []; };\r\n    return BooleanComponent;\r\n}(KerviBooleanComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar StringComponent = /** @class */ (function (_super) {\r\n    __extends(StringComponent, _super);\r\n    function StringComponent(elementRef) {\r\n        var _this = _super.call(this) || this;\r\n        _this.elementRef = elementRef;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    StringComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        this.ngOnInitString();\r\n        this.value.value$.subscribe((/**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            jQuery(\"input\", self.elementRef.nativeElement).val(v).change();\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    StringComponent.prototype.onChange = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        /** @type {?} */\r\n        var v = jQuery(\"input\", this.elementRef.nativeElement).val();\r\n        console.log(\"evv\", v, event);\r\n        this.value.set(v);\r\n    };\r\n    StringComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-string',\r\n                    template: \"<input nz-input *ngIf=\\\"linkParameters.isInput\\\"  [(ngModel)]=\\\"value.value\\\"/>\\n<span *ngIf=\\\"!linkParameters.isInput\\\" class=\\\"form-control pull-right\\\"   >{{(value.value$ | async)}}</span>\\n\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    StringComponent.ctorParameters = function () { return [\r\n        { type: ElementRef }\r\n    ]; };\r\n    return StringComponent;\r\n}(KerviStringComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar DateTimeComponent = /** @class */ (function (_super) {\r\n    __extends(DateTimeComponent, _super);\r\n    function DateTimeComponent() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DateTimeComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitDateTime();\r\n    };\r\n    DateTimeComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-datetime',\r\n                    template: \"<kervi-datetime [type]=\\\"displayType\\\" [format]=\\\"dateTimeFormat\\\" [dateTime]=\\\"value\\\"></kervi-datetime>\\n    \",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DateTimeComponent.ctorParameters = function () { return []; };\r\n    return DateTimeComponent;\r\n}(KerviDateTimeComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ColorComponent = /** @class */ (function (_super) {\r\n    __extends(ColorComponent, _super);\r\n    function ColorComponent() {\r\n        return _super.call(this) || this;\r\n        //console.log(\"cnio\",this);\r\n    }\r\n    /**\r\n     * @param {?} v\r\n     * @return {?}\r\n     */\r\n    ColorComponent.prototype.setValue = /**\r\n     * @param {?} v\r\n     * @return {?}\r\n     */\r\n    function (v) {\r\n        console.log(v);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ColorComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitColor();\r\n    };\r\n    ColorComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-color',\r\n                    template: \"<kervi-color [color]=\\\"(value.value$ | async)\\\" (colorChange)=\\\"setKerviValue($event)\\\" [linkParameters]=\\\"linkParameters\\\" ></kervi-color>\\n\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ColorComponent.ctorParameters = function () { return []; };\r\n    return ColorComponent;\r\n}(KerviColorComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar SparklineComponent = /** @class */ (function () {\r\n    function SparklineComponent(kerviService, templateService) {\r\n        this.kerviService = kerviService;\r\n        this.templateService = templateService;\r\n        this.value = null;\r\n        this.linkParameters = null;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.series = [];\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    SparklineComponent.prototype.createElement = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.series = [this.value.value];\r\n        this.options = {\r\n            chart: {\r\n                height: 14,\r\n                width: 60,\r\n                type: 'area',\r\n                sparkline: {\r\n                    enabled: true\r\n                }\r\n            },\r\n            stroke: {\r\n                curve: 'straight',\r\n                width: 1\r\n            },\r\n            fill: {\r\n                opacity: 0.3,\r\n            },\r\n            series: [{\r\n                    data: this.value.sparkline$.value\r\n                }],\r\n            yaxis: {\r\n                min: 0\r\n            },\r\n            colors: [this.color(\"color\", \".kervi-sparkline\")],\r\n        };\r\n        if (this.chartObj) {\r\n            this.chartObj.destroy();\r\n        }\r\n        console.log(\"create sparkline\", this.value.id);\r\n        this.chartObj = new ApexCharts(this.chartElement.nativeElement, this.options);\r\n        this.chartObj.render();\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    SparklineComponent.prototype.color = /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    function (style, selector) {\r\n        return this.templateService.getColor(style, selector);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SparklineComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var self = this;\r\n        asapScheduler.schedule((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.createElement();\r\n        }));\r\n        this.value.sparkline$.subscribe((/**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            if (self.chartObj && v) {\r\n                self.chartObj.updateSeries([{\r\n                        data: v\r\n                    }]);\r\n            }\r\n        }));\r\n    };\r\n    SparklineComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'value-sparkline',\r\n                    template: \"<div #chart></div>\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    SparklineComponent.ctorParameters = function () { return [\r\n        { type: NGXKerviService },\r\n        { type: KerviTemplateService }\r\n    ]; };\r\n    SparklineComponent.propDecorators = {\r\n        value: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        type: [{ type: Input }],\r\n        size: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        chartElement: [{ type: ViewChild, args: ['chart',] }]\r\n    };\r\n    return SparklineComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar SliderComponent = /** @class */ (function () {\r\n    function SliderComponent(elementRef, templateService) {\r\n        this.elementRef = elementRef;\r\n        this.templateService = templateService;\r\n        this.value = 0;\r\n        this.type = \"horizontal_slider\";\r\n        this.defaultSizes = new DashboardSizes();\r\n        this.sliderChanged = new EventEmitter();\r\n        this.marks = {};\r\n        //console.log(\"cnio\",this);\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    SliderComponent.prototype.color = /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    function (style, selector) {\r\n        return this.templateService.getColor(style, selector);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SliderComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    SliderComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ui-slider',\r\n                    template: \"\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    SliderComponent.ctorParameters = function () { return [\r\n        { type: ElementRef },\r\n        { type: KerviTemplateService }\r\n    ]; };\r\n    SliderComponent.propDecorators = {\r\n        value: [{ type: Input }],\r\n        type: [{ type: Input }],\r\n        tick: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        defaultSizes: [{ type: Input }],\r\n        maxValue: [{ type: Input }],\r\n        minValue: [{ type: Input }],\r\n        sliderChanged: [{ type: Output }]\r\n    };\r\n    return SliderComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar GaugeComponent = /** @class */ (function () {\r\n    function GaugeComponent(kerviService, templateService) {\r\n        this.kerviService = kerviService;\r\n        this.templateService = templateService;\r\n        this.value = null;\r\n        this.linkParameters = null;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.series = [];\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    GaugeComponent.prototype.createElement = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.series = [this.value.value];\r\n        this.options = {\r\n            chart: {\r\n                type: 'radialBar',\r\n                height: this.linkParameters.gaugeSize\r\n            },\r\n            plotOptions: {\r\n                radialBar: {\r\n                    startAngle: -135,\r\n                    endAngle: 135,\r\n                    hollow: {\r\n                        size: '70%',\r\n                    },\r\n                    track: {\r\n                        startAngle: -135,\r\n                        endAngle: 135,\r\n                    },\r\n                    dataLabels: {\r\n                        name: {\r\n                            show: true,\r\n                            color: \"#2d353c\",\r\n                            fontSize: \"14px\"\r\n                        },\r\n                        value: {\r\n                            fontSize: \"24px\",\r\n                            show: true\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            colors: [this.color(\"color\", \".kervi-chart\")],\r\n            // ['#9fd037'],\r\n            series: this.series,\r\n            labels: [this.value.name],\r\n        };\r\n        if (this.chartObj) {\r\n            this.chartObj.destroy();\r\n        }\r\n        console.log(\"create gauge\", this.value.id);\r\n        this.chartObj = new ApexCharts(this.chartElement.nativeElement, this.options);\r\n        this.chartObj.render();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GaugeComponent.prototype.render = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.chartObj.render();\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    GaugeComponent.prototype.color = /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    function (style, selector) {\r\n        return this.templateService.getColor(style, selector);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GaugeComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var self = this;\r\n        asapScheduler.schedule((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.createElement();\r\n        }));\r\n        this.value.value$.subscribe((/**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            if (self.chartObj && v) {\r\n                //self.series=[v];\r\n                console.log(\"gv\", v);\r\n                self.chartObj.updateSeries([v]);\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GaugeComponent.prototype.loadPeriod = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        //console.log(\"lp\", this.periodStart, this.periodEnd);\r\n        //this.kerviService.spine.sendQuery(\"getSensorData\", this.value.id, this.periodStart.toISOString(), this.periodEnd.toISOString(), function (results) {\r\n        //console.log(\"gsd\", results);\r\n        //var sensorData = results;\r\n        //self.chartData.length = 0;\r\n        //for (var i = 0; (i < sensorData.length); i++) {\r\n        //var dataItem = sensorData[i]\r\n        //self.chartData.push({ x: new Date(dataItem.ts + \" utc\"), y: dataItem.value });\r\n        //}\r\n        //self.chart.render();\r\n        //self.chart.update();\r\n        //});\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    GaugeComponent.prototype.cleanData = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // if(this.updateChart){\r\n        //   var doClean = true;\r\n        //   var limitTS = this.getPeriodLimit();\r\n        //   var ds = this.chart.data.datasets[0].data\r\n        //   while ( ds.length>0 && doClean){\r\n        //     if (ds[0].x < limitTS)\r\n        //       ds.shift();\r\n        //     else\r\n        //       doClean = false\r\n        //   }\r\n        // }\r\n    };\r\n    GaugeComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-gauge',\r\n                    template: \"<div #chart></div>\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    GaugeComponent.ctorParameters = function () { return [\r\n        { type: NGXKerviService },\r\n        { type: KerviTemplateService }\r\n    ]; };\r\n    GaugeComponent.propDecorators = {\r\n        value: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        type: [{ type: Input }],\r\n        size: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        chartElement: [{ type: ViewChild, args: ['chart',] }]\r\n    };\r\n    return GaugeComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviChartComponent = /** @class */ (function () {\r\n    function KerviChartComponent(kerviService, templateService) {\r\n        this.kerviService = kerviService;\r\n        this.templateService = templateService;\r\n        this.value = null;\r\n        this.linkParameters = null;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.series = [];\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviChartComponent.prototype.createElement = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.series = [\r\n            {\r\n                name: this.value.name,\r\n                data: []\r\n            }\r\n        ];\r\n        this.options = {\r\n            chart: {\r\n                id: \"chart_\" + this.value.id,\r\n                width: \"100%\",\r\n                height: 300,\r\n                type: this.linkParameters.chartType,\r\n                animations: {\r\n                    enabled: true,\r\n                    easing: 'linear',\r\n                    dynamicAnimation: {\r\n                        speed: 100\r\n                    }\r\n                },\r\n                toolbar: {\r\n                    show: false,\r\n                    tools: {\r\n                        download: true,\r\n                        selection: true,\r\n                        zoom: true,\r\n                        zoomin: true,\r\n                        zoomout: true,\r\n                        pan: true,\r\n                        reset: true,\r\n                        customIcons: []\r\n                    },\r\n                    autoSelected: 'zoom'\r\n                },\r\n                zoom: {\r\n                    enabled: true\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                curve: 'smooth',\r\n                width: 1\r\n            },\r\n            title: {\r\n                text: this.linkParameters.chartTitle,\r\n                align: 'left'\r\n            },\r\n            markers: {\r\n                size: 0\r\n            },\r\n            xaxis: {\r\n                type: 'datetime',\r\n            },\r\n            yaxis: {\r\n                max: this.value.maxValue,\r\n                min: this.value.minValue\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            grid: {\r\n                show: this.linkParameters.chartGrid,\r\n                xaxis: {\r\n                    lines: {\r\n                        show: true,\r\n                        animate: true\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true,\r\n                        animate: true\r\n                    }\r\n                }\r\n            },\r\n            colors: [this.color(\"color\", \".kervi-chart\")],\r\n            // ['#9fd037'],\r\n            series: this.series\r\n        };\r\n        if (this.chartObj) {\r\n            this.chartObj.destroy();\r\n        }\r\n        if (!this.linkParameters.chartTitle)\r\n            delete (this.options[\"title\"]);\r\n        console.log(\"create chart\", this.value.id);\r\n        this.chartObj = new ApexCharts(this.chartElement.nativeElement, this.options);\r\n        this.chartObj.render();\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    KerviChartComponent.prototype.color = /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    function (style, selector) {\r\n        return this.templateService.getColor(style, selector);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviChartComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var self = this;\r\n        asapScheduler.schedule((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.createElement();\r\n        }));\r\n        this.value.value$.subscribe((/**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            if (self.chartObj) {\r\n                self.series[0].data.push([self.value.valueTS.getTime(), v]);\r\n                self.chartObj.updateSeries(self.series);\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviChartComponent.prototype.loadPeriod = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        //console.log(\"lp\", this.periodStart, this.periodEnd);\r\n        //this.kerviService.spine.sendQuery(\"getSensorData\", this.value.id, this.periodStart.toISOString(), this.periodEnd.toISOString(), function (results) {\r\n        //console.log(\"gsd\", results);\r\n        //var sensorData = results;\r\n        //self.chartData.length = 0;\r\n        //for (var i = 0; (i < sensorData.length); i++) {\r\n        //var dataItem = sensorData[i]\r\n        //self.chartData.push({ x: new Date(dataItem.ts + \" utc\"), y: dataItem.value });\r\n        //}\r\n        //self.chart.render();\r\n        //self.chart.update();\r\n        //});\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviChartComponent.prototype.cleanData = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // if(this.updateChart){\r\n        //   var doClean = true;\r\n        //   var limitTS = this.getPeriodLimit();\r\n        //   var ds = this.chart.data.datasets[0].data\r\n        //   while ( ds.length>0 && doClean){\r\n        //     if (ds[0].x < limitTS)\r\n        //       ds.shift();\r\n        //     else\r\n        //       doClean = false\r\n        //   }\r\n        // }\r\n    };\r\n    KerviChartComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-chart',\r\n                    template: \"<div #chart></div>\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviChartComponent.ctorParameters = function () { return [\r\n        { type: NGXKerviService },\r\n        { type: KerviTemplateService }\r\n    ]; };\r\n    KerviChartComponent.propDecorators = {\r\n        value: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        type: [{ type: Input }],\r\n        size: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        chartElement: [{ type: ViewChild, args: ['chart',] }]\r\n    };\r\n    return KerviChartComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar SwitchButtonComponent = /** @class */ (function () {\r\n    function SwitchButtonComponent() {\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.buttonState = new EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SwitchButtonComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        console.log(\"sb\", this.value);\r\n        if (this.linkParameters) {\r\n            if (!this.linkParameters.buttonWidth)\r\n                this.width = this.dashboardSizes.switchWidth;\r\n            else\r\n                this.width = this.linkParameters.buttonWidth;\r\n            if (!this.linkParameters.buttonHeight)\r\n                this.height = this.dashboardSizes.switchHeight;\r\n            else\r\n                this.height = this.linkParameters.buttonHeight;\r\n        }\r\n        else {\r\n            this.width = this.dashboardSizes.switchWidth;\r\n            this.height = this.dashboardSizes.switchHeight;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} state\r\n     * @return {?}\r\n     */\r\n    SwitchButtonComponent.prototype.modelChange = /**\r\n     * @param {?} state\r\n     * @return {?}\r\n     */\r\n    function (state) {\r\n        this.buttonState.emit(state);\r\n    };\r\n    SwitchButtonComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-switchbutton',\r\n                    template: \"<nz-switch \\n    [(ngModel)]=\\\"value\\\"\\n    [nzCheckedChildren]=\\\"checkedTemplate\\\" [nzUnCheckedChildren]=\\\"unCheckedTemplate\\\"\\n    (ngModelChange)=\\\"modelChange($event)\\\"\\n>\\n\\n</nz-switch>\\n<ng-template #checkedTemplate>\\n    <i *ngIf=\\\"linkParameters.onIcon\\\"  nz-icon [type]=\\\"linkParameters.onIcon\\\"></i>\\n    <span >{{ linkParameters.onText }}</span>\\n</ng-template>\\n<ng-template #unCheckedTemplate>\\n    <i *ngIf=\\\"linkParameters.offIcon\\\"  nz-icon [type]=\\\"linkParameters.offIcon\\\"></i>\\n    <span >{{ linkParameters.offText }}</span>\\n</ng-template>\\n\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    SwitchButtonComponent.ctorParameters = function () { return []; };\r\n    SwitchButtonComponent.propDecorators = {\r\n        value: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        buttonState: [{ type: Output }]\r\n    };\r\n    return SwitchButtonComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ButtonComponent = /** @class */ (function () {\r\n    function ButtonComponent() {\r\n        this.linkParameters = null;\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.buttonState = new EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ButtonComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (self.linkParameters) {\r\n            if (!self.linkParameters.buttonWidth)\r\n                this.width = this.dashboardSizes.buttonWidth;\r\n            else\r\n                this.width = self.linkParameters.buttonWidth;\r\n            if (!self.linkParameters.buttonHeight)\r\n                this.height = this.dashboardSizes.buttonHeight;\r\n            else\r\n                this.height = self.linkParameters.buttonHeight;\r\n        }\r\n        else {\r\n            this.width = this.dashboardSizes.buttonWidth;\r\n            this.height = this.dashboardSizes.buttonHeight;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ButtonComponent.prototype.confirm = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        console.log(\"c\", this.value);\r\n        this.buttonState.emit(true);\r\n        this.buttonState.emit(false);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ButtonComponent.prototype.press = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        console.log(\"p\", this.value);\r\n        this.buttonState.emit(true);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ButtonComponent.prototype.release = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.buttonState.emit(false);\r\n    };\r\n    ButtonComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-button',\r\n                    template: \"<ng-template #buttonContentTemplate>\\n    <i *ngIf=\\\"linkParameters.buttonIcon\\\" nz-icon [type]=\\\"linkParameters.buttonIcon\\\"></i>\\n    {{ linkParameters.buttonText }}\\n</ng-template>\\n<button\\n    *ngIf = \\\"linkParameters.confirm\\\"\\n    nz-button nzType=\\\"primary\\\"\\n    (nzOnConfirm)=\\\"confirm()\\\"\\n    nz-popconfirm [nzTitle]=\\\"linkParameters.confirmMessage\\\"\\n>\\n<ng-container *ngTemplateOutlet=\\\"buttonContentTemplate\\\"></ng-container>\\n</button>\\n<button\\n    *ngIf = \\\"!linkParameters.confirm\\\"\\n    nz-button nzType=\\\"primary\\\"\\n    (mousedown)=\\\"press()\\\" \\n    (mouseup)=\\\"release()\\\"\\n>\\n<ng-container *ngTemplateOutlet=\\\"buttonContentTemplate\\\"></ng-container>\\n</button>\\n\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ButtonComponent.ctorParameters = function () { return []; };\r\n    ButtonComponent.propDecorators = {\r\n        value: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        type: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        title: [{ type: Input }],\r\n        buttonState: [{ type: Output }]\r\n    };\r\n    return ButtonComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar MPEGViewerComponent = /** @class */ (function () {\r\n    function MPEGViewerComponent(kerviService, domSanitizer) {\r\n        this.kerviService = kerviService;\r\n        this.domSanitizer = domSanitizer;\r\n        this.width = null;\r\n        this.height = null;\r\n        this.imageLoaded = new EventEmitter();\r\n        this.firstLoad = true;\r\n        this.fpsCounter = 0;\r\n        this.fpsTime = new Date();\r\n        this.fps = 0;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MPEGViewerComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        this.stream = this.kerviService.GetStream(this.cameraSource, ['IMAGE_FRAME']);\r\n        this.stream.events$.subscribe((/**\r\n         * @param {?} event\r\n         * @return {?}\r\n         */\r\n        function (event) {\r\n            //console.log('ce', event);\r\n            if (event) {\r\n                self.streamData = self.domSanitizer.bypassSecurityTrustUrl(URL.createObjectURL(event.data));\r\n                self.fpsCounter += 1;\r\n                /** @type {?} */\r\n                var now = new Date();\r\n                /** @type {?} */\r\n                var fpsDiff = now.getTime() - self.fpsTime.getTime();\r\n                /** @type {?} */\r\n                var seconds = fpsDiff / 1000;\r\n                if (seconds > 1) {\r\n                    self.fps = self.fpsCounter / seconds;\r\n                    console.log(\"fps\", self.fpsCounter, seconds, this.cameraSource, self.fps);\r\n                    self.fpsCounter = 0;\r\n                    self.fpsTime = now;\r\n                }\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MPEGViewerComponent.prototype.imageReady = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.firstLoad) {\r\n            this.firstLoad = false;\r\n            this.imageLoaded.emit(true);\r\n        }\r\n    };\r\n    MPEGViewerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-mpeg-viewer',\r\n                    template: \"<img (load)=\\\"imageReady()\\\" class=\\\"camImage\\\" [attr.src]=\\\"streamData\\\" [style.height.%]=\\\"height\\\" [style.width.%]=\\\"width\\\">\\n\",\r\n                    styles: [\"#video-viewer{margin-top:-20px}.cam-pad-area{z-index:1200;vertical-align:middle;width:200px;display:inline-block;position:absolute;left:389px;top:132px;color:#fff}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MPEGViewerComponent.ctorParameters = function () { return [\r\n        { type: NGXKerviService },\r\n        { type: DomSanitizer }\r\n    ]; };\r\n    MPEGViewerComponent.propDecorators = {\r\n        cameraSource: [{ type: Input }],\r\n        width: [{ type: Input }],\r\n        height: [{ type: Input }],\r\n        imageLoaded: [{ type: Output }],\r\n        streamData: [{ type: Input }],\r\n        fps: [{ type: Input }]\r\n    };\r\n    return MPEGViewerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar DateTimeComponent$1 = /** @class */ (function () {\r\n    function DateTimeComponent(elementRef) {\r\n        this.elementRef = elementRef;\r\n        this.dateTimeChanged = new EventEmitter;\r\n        this.isReady = false;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DateTimeComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    DateTimeComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-datetime',\r\n                    template: \"<nz-date-picker \\n*ngIf=\\\"type=='datetime'\\\"\\nnzShowTime\\n[(ngModel)]=\\\"dateTime.value\\\"\\n[nzFormat] = \\\"format\\\"\\n></nz-date-picker>\\n\\n<nz-date-picker \\n*ngIf=\\\"type=='date'\\\"\\n[(ngModel)]=\\\"dateTime.value\\\"\\n[nzFormat] = \\\"format\\\"\\n></nz-date-picker>\\n\\n\\n<nz-time-picker \\n*ngIf=\\\"type=='time'\\\"\\n[(ngModel)]=\\\"dateTime.value\\\"\\n[nzFormat] = \\\"format\\\"\\n></nz-time-picker>\\n\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DateTimeComponent.ctorParameters = function () { return [\r\n        { type: ElementRef }\r\n    ]; };\r\n    DateTimeComponent.propDecorators = {\r\n        dateTime: [{ type: Input }],\r\n        type: [{ type: Input }],\r\n        format: [{ type: Input }],\r\n        dateTimeChanged: [{ type: Output }]\r\n    };\r\n    return DateTimeComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar IconsComponent = /** @class */ (function () {\r\n    function IconsComponent() {\r\n        this.icon = null;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    IconsComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    IconsComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-icon',\r\n                    template: \"<i class=\\\"pi pi-{{icon}}\\\"></i>\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    IconsComponent.ctorParameters = function () { return []; };\r\n    IconsComponent.propDecorators = {\r\n        icon: [{ type: Input }]\r\n    };\r\n    return IconsComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ColorComponent$1 = /** @class */ (function () {\r\n    function ColorComponent(elementRef) {\r\n        this.elementRef = elementRef;\r\n        this.colorChange = new EventEmitter();\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.picker = null;\r\n    }\r\n    Object.defineProperty(ColorComponent.prototype, \"color\", {\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            console.log(\"cc\", v, this.picker);\r\n            this.colorValue = v;\r\n            if (v) {\r\n                //    jQuery('.color', this.elementRef.nativeElement).css(\"background-color\", v)\r\n                //else\r\n                jQuery('.color', this.elementRef.nativeElement).attr(\"style\", \"background-color:\" + v);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ColorComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (!self.linkParameters.buttonWidth)\r\n            this.width = this.dashboardSizes.switchWidth;\r\n        else\r\n            this.width = self.linkParameters.buttonWidth;\r\n        if (this.linkParameters.isInput) {\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                self.picker = jQuery('.color', self.elementRef.nativeElement).colorPicker({\r\n                    //color: 'rgba(255,12,14,1)',\r\n                    cssAddon: '.cp-color-picker {z-index:2000}',\r\n                    buildCallback: (/**\r\n                     * @param {?} b\r\n                     * @return {?}\r\n                     */\r\n                    function (b) {\r\n                    }),\r\n                    positionCallback: (/**\r\n                     * @param {?} p\r\n                     * @return {?}\r\n                     */\r\n                    function (p) {\r\n                    }),\r\n                    renderCallback: (/**\r\n                     * @param {?} v\r\n                     * @return {?}\r\n                     */\r\n                    function (v) {\r\n                        /** @type {?} */\r\n                        var value = v.text;\r\n                        if (value.indexOf(\"rgb\") == 0) {\r\n                            /** @type {?} */\r\n                            var rgb = v.text.split(',');\r\n                            /** @type {?} */\r\n                            var r = parseInt(rgb[0].substring(4));\r\n                            /** @type {?} */\r\n                            var g = parseInt(rgb[1]);\r\n                            /** @type {?} */\r\n                            var b = parseInt(rgb[2]);\r\n                            value = \"#\" + r.toString(16) + g.toString(16) + b.toString(16);\r\n                        }\r\n                        console.log(\"cc\", value);\r\n                        self.colorChange.emit(value);\r\n                    }),\r\n                    actionCallback: (/**\r\n                     * @param {?} v\r\n                     * @param {?} x\r\n                     * @return {?}\r\n                     */\r\n                    function (v, x) {\r\n                        console.log(\"c\", v, x);\r\n                    })\r\n                });\r\n            }), 0);\r\n        }\r\n    };\r\n    ColorComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-color',\r\n                    template: \"<div style=\\\"max-width:90px\\\" class=\\\"input-group\\\">\\n    <div  [attr.background.value]=\\\"colorValue\\\" class=\\\"form-control color\\\"></div>\\n</div>\\n\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ColorComponent.ctorParameters = function () { return [\r\n        { type: ElementRef }\r\n    ]; };\r\n    ColorComponent.propDecorators = {\r\n        color: [{ type: Input }],\r\n        colorChange: [{ type: Output }],\r\n        linkParameters: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }]\r\n    };\r\n    return ColorComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar UIComponentsModule = /** @class */ (function () {\r\n    function UIComponentsModule() {\r\n    }\r\n    UIComponentsModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    declarations: [\r\n                        SparklineComponent,\r\n                        SliderComponent,\r\n                        IconsComponent,\r\n                        GaugeComponent,\r\n                        KerviChartComponent,\r\n                        SwitchButtonComponent,\r\n                        ButtonComponent,\r\n                        //CamViewerComponent,\r\n                        MPEGViewerComponent,\r\n                        //ImageViewerComponent,\r\n                        //ActionComponent,\r\n                        DateTimeComponent$1,\r\n                        ColorComponent$1\r\n                    ],\r\n                    exports: [\r\n                        SparklineComponent,\r\n                        SliderComponent,\r\n                        IconsComponent,\r\n                        MPEGViewerComponent,\r\n                        GaugeComponent,\r\n                        KerviChartComponent,\r\n                        SwitchButtonComponent,\r\n                        ButtonComponent,\r\n                        //CamViewerComponent,\r\n                        //ActionComponent,\r\n                        DateTimeComponent$1,\r\n                        ColorComponent$1\r\n                    ],\r\n                    imports: [\r\n                        BrowserModule,\r\n                        NGXKerviPipesModule,\r\n                        CommonModule,\r\n                        NgxGaugeModule,\r\n                        FormsModule,\r\n                        NgZorroAntdModule,\r\n                        NgApexchartsModule\r\n                        //KerviPipesModule\r\n                    ],\r\n                    providers: [],\r\n                    bootstrap: []\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    UIComponentsModule.ctorParameters = function () { return []; };\r\n    return UIComponentsModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviValueComponent = /** @class */ (function () {\r\n    function KerviValueComponent() {\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n    }\r\n    KerviValueComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value',\r\n                    template: \"    <kervi-value-number *ngIf=\\\"value.typeName=='Number'\\\" [value]=\\\"value\\\" [dashboardSizes]=\\\"dashboardSizes\\\" [linkParameters]=\\\"linkParameters\\\" [inline]=\\\"inline\\\" ></kervi-value-number>\\n    <kervi-value-boolean *ngIf=\\\"value.typeName=='Boolean'\\\" [dashboardSizes]=\\\"dashboardSizes\\\" [linkParameters]=\\\"linkParameters\\\" [inline]=\\\"inline\\\" [value]=\\\"value\\\"></kervi-value-boolean>\\n    <kervi-value-string *ngIf=\\\"value.typeName=='String'\\\" [dashboardSizes]=\\\"dashboardSizes\\\" [linkParameters]=\\\"linkParameters\\\" [inline]=\\\"inline\\\" [value]=\\\"value\\\"></kervi-value-string>\\n    <kervi-value-color *ngIf=\\\"value.typeName=='Color'\\\" [dashboardSizes]=\\\"dashboardSizes\\\" [linkParameters]=\\\"linkParameters\\\" [inline]=\\\"inline\\\" [value]=\\\"value\\\"></kervi-value-color>\\n    <kervi-value-datetime *ngIf=\\\"value.typeName=='DateTime'\\\" [dashboardSizes]=\\\"dashboardSizes\\\" [linkParameters]=\\\"linkParameters\\\" [inline]=\\\"inline\\\" [value]=\\\"value\\\"></kervi-value-datetime>\\n\",\r\n                    styles: [\"\"]\r\n                    //directives: [ CommonModule  ],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviValueComponent.ctorParameters = function () { return []; };\r\n    KerviValueComponent.propDecorators = {\r\n        value: [{ type: Input }],\r\n        dashboardPanel: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }]\r\n    };\r\n    return KerviValueComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ValuesModule = /** @class */ (function () {\r\n    function ValuesModule() {\r\n    }\r\n    ValuesModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    declarations: [\r\n                        NumberComponent,\r\n                        BooleanComponent,\r\n                        KerviValueComponent,\r\n                        StringComponent,\r\n                        //EnumComponent,\r\n                        DateTimeComponent,\r\n                        ColorComponent\r\n                    ],\r\n                    exports: [\r\n                        NumberComponent,\r\n                        BooleanComponent,\r\n                        KerviValueComponent,\r\n                        StringComponent,\r\n                        //EnumComponent,\r\n                        DateTimeComponent,\r\n                        ColorComponent\r\n                    ],\r\n                    imports: [\r\n                        CommonModule,\r\n                        NGXKerviPipesModule,\r\n                        UIComponentsModule,\r\n                        FormsModule,\r\n                        NgZorroAntdModule\r\n                    ],\r\n                    providers: [],\r\n                    bootstrap: []\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ValuesModule.ctorParameters = function () { return []; };\r\n    return ValuesModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ControllerPadComponent = /** @class */ (function () {\r\n    function ControllerPadComponent(elementRef) {\r\n        this.elementRef = elementRef;\r\n        this.padSize = 180;\r\n        this.moveDelayTimer = null;\r\n        this.inDrag = false;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ControllerPadComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (this.XValue) {\r\n            jQuery(\"input[name='pad-x']\", self.elementRef.nativeElement).val(this.XValue.value$.value).change();\r\n            this.XValue.value$.subscribe((/**\r\n             * @param {?} v\r\n             * @return {?}\r\n             */\r\n            function (v) {\r\n                console.log(\"pad-x\", self.YValue.name, v);\r\n                jQuery(\"input[name='pad-x']\", self.elementRef.nativeElement).val(v).change();\r\n            }));\r\n        }\r\n        if (this.YValue) {\r\n            jQuery(\"input[name='pad-y']\", self.elementRef.nativeElement).val(this.YValue.value$.value).change();\r\n            this.YValue.value$.subscribe((/**\r\n             * @param {?} v\r\n             * @return {?}\r\n             */\r\n            function (v) {\r\n                console.log(\"pad-y\", self.YValue.name, v);\r\n                jQuery(\"input[name='pad-y']\", self.elementRef.nativeElement).val(v).change();\r\n            }));\r\n        }\r\n        /** @type {?} */\r\n        var color = \"rgba(255,255,255,.5)\";\r\n        /** @type {?} */\r\n        var p = jQuery('fieldset', self.elementRef.nativeElement).xy({\r\n            displayPrevious: false,\r\n            min: -100,\r\n            max: 100,\r\n            width: self.padSize,\r\n            height: self.padSize,\r\n            fgColor: color,\r\n            bgColor: color,\r\n            change: (/**\r\n             * @param {?} value\r\n             * @return {?}\r\n             */\r\n            function (value) {\r\n                if (self.moveDelayTimer) {\r\n                    clearTimeout(self.moveDelayTimer);\r\n                }\r\n                self.moveDelayTimer = setTimeout((/**\r\n                 * @return {?}\r\n                 */\r\n                function () {\r\n                    if (self.XValue)\r\n                        self.XValue.set(value[0]);\r\n                    if (self.YValue)\r\n                        self.YValue.set(value[1]);\r\n                }), 0);\r\n            })\r\n        })\r\n            .css({ 'border': '2px solid ' + color });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ControllerPadComponent.prototype.padPress = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.inDrag = true;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ControllerPadComponent.prototype.padRelease = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        console.log(\"pr\", this.inDrag, this.autoCenter);\r\n        this.inDrag = false;\r\n        if (this.autoCenter && this.XValue) {\r\n            console.log(\"x-auto center\");\r\n            jQuery(\"input[name='pad-x']\", this.elementRef.nativeElement).val(0).change();\r\n            this.XValue.set(0);\r\n        }\r\n        if (this.autoCenter && this.YValue) {\r\n            console.log(\"y-auto center\");\r\n            jQuery(\"input[name='pad-y']\", this.elementRef.nativeElement).val(0).change();\r\n            this.YValue.set(0);\r\n        }\r\n    };\r\n    ControllerPadComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-controller-pad',\r\n                    template: \"<div (mousedown)=\\\"padPress()\\\" (mouseup)=\\\"padRelease()\\\">\\n  <fieldset id=\\\"leftPad\\\" style=\\\"position:absolute\\\" class=\\\"pad\\\" [attr.data-width]=\\\"padSize\\\" [attr.data-height]=\\\"padSize\\\" >\\n    <legend></legend>\\n    <input type=\\\"hidden\\\" name=\\\"pad-x\\\" value=\\\"0\\\"><input type=\\\"hidden\\\"  name=\\\"pad-y\\\" value=\\\"0\\\">\\n  </fieldset>\\n</div>\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ControllerPadComponent.ctorParameters = function () { return [\r\n        { type: ElementRef }\r\n    ]; };\r\n    ControllerPadComponent.propDecorators = {\r\n        XValue: [{ type: Input }],\r\n        YValue: [{ type: Input }],\r\n        autoCenter: [{ type: Input }]\r\n    };\r\n    return ControllerPadComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar CamViewerComponent = /** @class */ (function (_super) {\r\n    __extends(CamViewerComponent, _super);\r\n    function CamViewerComponent(elementRef) {\r\n        var _this = _super.call(this) || this;\r\n        _this.elementRef = elementRef;\r\n        _this.showCamPad = false;\r\n        _this.padSize = 180;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CamViewerComponent.prototype.imageLoaded = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var h = this.videoViewer.nativeElement.offsetHeight;\r\n        /** @type {?} */\r\n        var w = this.elementRef.nativeElement.offsetWidth;\r\n        //this.camPadTop = h / 2 - this.padSize/2;\r\n        //this.camPadLeft = w / 2 - this.padSize/2;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CamViewerComponent.prototype.ngAfterViewInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        /** @type {?} */\r\n        var element = self.videoViewer.nativeElement;\r\n        /** @type {?} */\r\n        var viewPortHeight = window.innerHeight;\r\n        /** @type {?} */\r\n        var viewPortWidth = window.innerWidth;\r\n        this.camHeight = viewPortHeight - 65;\r\n        this.camWidth = viewPortWidth;\r\n        console.log(\"avic\", this.camHeight, this.camWidth);\r\n        setTimeout((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            /** @type {?} */\r\n            var h = element.offsetHeight;\r\n            /** @type {?} */\r\n            var w = element.offsetWidth;\r\n            if (w < self.padSize) {\r\n                self.padSize = w - 10;\r\n                //jQuery(\".camPad\", self.elementRef.nativeElement).css({ width: self.padSize, height:  self.padSize });\r\n            }\r\n            console.log(\"cami\", h, w, self.padSize, element);\r\n            self.camPadTop = h / 2 - (self.padSize / 2);\r\n            self.camPadLeft = w / 2 - (self.padSize / 2);\r\n            self.showCamPad = true;\r\n        }), 0);\r\n        // jQuery(window).bind('resize', function () {\r\n        //     var h = element.offsetHeight;\r\n        //     var w = element.offsetWidth;\r\n        //     self.camPadTop = h / 2 - (self.padSize/2)\r\n        //     self.camPadLeft =  w / 2 - (self.padSize / 2);\r\n        // })\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CamViewerComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitCamera();\r\n    };\r\n    CamViewerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-cam-viewer',\r\n                    template: \"<ng-container *ngIf=\\\"isBackground\\\">\\n\\t<div #videoViewer id=\\\"video-viewer\\\" class=\\\"video video-background\\\" style=\\\"text-align:center;position:fixed;top:60px;left:0px;height:100%;\\\" [style.height.px]=\\\"camHeight\\\" [style.width.px]=\\\"camWidth\\\">\\n\\t\\t<span class=\\\"camImage\\\" style=\\\"top:0px;left:0px;\\\">\\n\\t\\t\\t<kervi-mpeg-viewer (imageLoaded)=\\\"imageLoaded()\\\" [height]=100   [cameraSource]=\\\"cameraSource\\\" > </kervi-mpeg-viewer>\\n\\t\\t</span>\\n\\t\\t<canvas id=\\\"camCanvas\\\" style=\\\"position:absolute;top:0px;left:0px;\\\" [style.height.px]=\\\"camHeight\\\" [style.width.px]=\\\"camWidth\\\"></canvas>\\n\\t\\t<canvas id=\\\"poiCanvas\\\" style=\\\"position:absolute;top:0px;left:0px;width:100%;height:100%\\\"></canvas>\\n\\t\\t<div class=\\\"cam-pad-area\\\" *ngIf=\\\"showCamPad\\\" [style.left.px]=\\\"camPadLeft\\\" [style.top.px]=\\\"camPadTop\\\" style=\\\"position:absolute;z-index: 2000\\\">\\n      <kervi-controller-pad [XValue]=\\\"pan\\\" [YValue]=\\\"tilt\\\"> </kervi-controller-pad>\\n\\t\\t</div>\\n\\t\\t<div style=\\\"position:absolute;top:30px;left:0px;width:100%;height:50px\\\">\\n\\t\\t\\t<ng-container  *ngFor=\\\"let action of camera.actions\\\">\\n\\t\\t\\t\\t<kervi-action title=\\\"{{( action.name | translate)}}\\\" *ngIf=\\\"action.visible\\\" [action]=\\\"action\\\" ></kervi-action>\\n\\t\\t\\t</ng-container>\\n\\t\\t\\t<!-- <button class=\\\"btn btn-primary \\\"   (mousedown)=\\\"imageViewer.show()\\\" title=\\\"{{( 'media_folder' | translate)}}\\\">\\n\\t\\t\\t\\t<i  class='fa fa-folder'></i>\\n\\t\\t\\t</button> -->\\n\\t\\t</div>\\n\\t</div>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"!isBackground\\\">\\n\\t<div #videoViewer id=\\\"video-viewer\\\" class=\\\"video\\\" style=\\\"overflow:hidden;position:relative;width:100%\\\">\\n\\t\\t<span class=\\\"camImage\\\" style=\\\"top:0px;left:0px;height:100%;width:100%\\\">\\n\\t\\t\\t<kervi-mpeg-viewer (imageLoaded)=\\\"imageLoaded()\\\" [width]=100  [cameraSource]=\\\"cameraSource\\\" > </kervi-mpeg-viewer>\\n\\t\\t</span>\\n\\t\\t<canvas id=\\\"camCanvas\\\" style=\\\"position:absolute;top:0px;left:0px;width:100%;height:100%\\\"></canvas>\\n\\t\\t<canvas id=\\\"poiCanvas\\\" style=\\\"position:absolute;top:0px;left:0px;width:100%;height:100%\\\"></canvas>\\n\\t\\t<div class=\\\"cam-pad-area\\\" *ngIf=\\\"showCamPad\\\" [style.left.px]=\\\"camPadLeft\\\" [style.top.px]=\\\"camPadTop\\\" style=\\\"position:absolute\\\">\\n      <kervi-controller-pad [XValue]=\\\"pan\\\" [YValue]=\\\"tilt\\\"> </kervi-controller-pad>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div>\\n\\t\\t<ng-container  *ngFor=\\\"let action of camera.actions\\\">\\n\\t\\t\\t<kervi-action *ngIf=\\\"action.ui.visible\\\" title=\\\"{{( action.name | translate)}}\\\" [action]=\\\"action\\\" ></kervi-action>\\n\\t\\t</ng-container>\\n\\t\\t<!-- <button class=\\\"btn btn-primary\\\" (mousedown)=\\\"imageViewer.show()\\\" title=\\\"{{( 'media_folder' | translate)}}\\\">\\n\\t\\t\\t<i  class='fa fa-folder'></i>\\n\\t\\t</button> -->\\n\\t</div>\\n</ng-container>\\n<!-- <kervi-image-viewer #imageViewer [camComponent]=\\\"this\\\" [cameraSource]=\\\"cameraSource\\\"></kervi-image-viewer> -->\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    CamViewerComponent.ctorParameters = function () { return [\r\n        { type: ElementRef }\r\n    ]; };\r\n    CamViewerComponent.propDecorators = {\r\n        videoViewer: [{ type: ViewChild, args: [\"videoViewer\",] }]\r\n    };\r\n    return CamViewerComponent;\r\n}(KerviCameraComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n//import { TemplateService } from '../../template.service';\r\nvar ActionComponent = /** @class */ (function (_super) {\r\n    __extends(ActionComponent, _super);\r\n    function ActionComponent() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ActionComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitAction();\r\n    };\r\n    ActionComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-action',\r\n                    template: \"<kervi-switchbutton \\n    [dashboardSizes]=\\\"dashboardSizes\\\" \\n    [inline]=\\\"inline\\\" \\n    [value]=\\\"(state | async)\\\" \\n    [linkParameters]=\\\"linkParameters\\\"\\n    (buttonState)=\\\"setActionState($event)\\\"\\n    *ngIf=\\\"displayType!='button'\\\"\\n></kervi-switchbutton>\\n<kervi-button \\n    [title]=\\\"action.name\\\" \\n    [dashboardSizes]=\\\"dashboardSizes\\\" \\n    [value]=\\\"(state | async)\\\" \\n    [inline]=\\\"inline\\\" \\n    [linkParameters]=\\\"linkParameters\\\"\\n    (buttonState)=\\\"setActionState($event)\\\" \\n    *ngIf=\\\"displayType=='button'\\\"\\n></kervi-button>\\n\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ActionComponent.ctorParameters = function () { return []; };\r\n    return ActionComponent;\r\n}(KerviActionComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n//import { TemplateService } from '../../template.service';\r\nvar UserLogComponent = /** @class */ (function (_super) {\r\n    __extends(UserLogComponent, _super);\r\n    function UserLogComponent() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserLogComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitUserLog();\r\n    };\r\n    UserLogComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-user-log',\r\n                    template: \"<nz-timeline >\\n    <nz-timeline-item [nzDot]=\\\"message.level==1 ? dotTemplate1 :  message.level==2 ? dotTemplate2 : dotTemplate3\\\" *ngFor=\\\"let message of messages$ | async\\\">\\n            <strong>{{message.sourceName}}</strong><br>\\n            <span style=\\\"font-size:80%\\\">{{message.timestamp | date: 'HH:mm:ss'}}</span><br>    \\n            {{message.topic}}\\n            <nz-divider></nz-divider>\\n    </nz-timeline-item>\\n</nz-timeline>\\n<ng-template #dotTemplate1>\\n    <i nz-icon type=\\\"close-circle\\\" style=\\\"font-size: 16px;\\\" [nzTheme]=\\\"'twotone'\\\" [nzTwotoneColor]=\\\"'#f5222d'\\\"></i>\\n</ng-template>\\n<ng-template #dotTemplate2>\\n    <i nz-icon type=\\\"warning\\\" style=\\\"font-size: 16px;\\\" [nzTheme]=\\\"'twotone'\\\" [nzTwotoneColor]=\\\"'#faad14'\\\"></i>\\n</ng-template>\\n<ng-template #dotTemplate3>\\n    <i nz-icon nz-icon type=\\\"check-circle\\\" [nzTheme]=\\\"'twotone'\\\" [nzTwotoneColor]=\\\"'#52c41a'\\\" style=\\\"font-size: 16px;\\\"></i>\\n</ng-template>\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    UserLogComponent.ctorParameters = function () { return []; };\r\n    return UserLogComponent;\r\n}(KerviUserLogComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar UserMessagesComponent = /** @class */ (function (_super) {\r\n    __extends(UserMessagesComponent, _super);\r\n    function UserMessagesComponent(notification) {\r\n        var _this = _super.call(this) || this;\r\n        _this.notification = notification;\r\n        /** @type {?} */\r\n        var self = _this;\r\n        _this.lastMessage$.subscribe((/**\r\n         * @param {?} message\r\n         * @return {?}\r\n         */\r\n        function (message) {\r\n            if (message) {\r\n                self.notification.template(self.messageTemplate, { nzData: message });\r\n            }\r\n        }));\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserMessagesComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitUserLog();\r\n    };\r\n    UserMessagesComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-user-messages',\r\n                    template: \"<ng-template let-message=\\\"data\\\">\\n    <div class=\\\"ant-notification-notice-content\\\">\\n        <div class=\\\"ant-notification-notice-with-icon\\\">\\n            <span class=\\\"ant-notification-notice-icon\\\">\\n                <i *ngIf=\\\"message.level==3\\\" nz-icon type=\\\"check-circle\\\" [nzTheme]=\\\"'twotone'\\\" [nzTwotoneColor]=\\\"'#52c41a'\\\"></i>\\n                <i *ngIf=\\\"message.level==2\\\" nz-icon type=\\\"warning\\\" [nzTheme]=\\\"'twotone'\\\" [nzTwotoneColor]=\\\"'#faad14'\\\"></i>\\n                <i *ngIf=\\\"message.level==1\\\" nz-icon type=\\\"close-circle\\\" [nzTheme]=\\\"'twotone'\\\" [nzTwotoneColor]=\\\"'#f5222d'\\\"></i>\\n            </span>\\n            <div class=\\\"ant-notification-notice-message\\\">{{message.sourceName}}</div>\\n            <div class=\\\"ant-notification-notice-description\\\">\\n                {{ message.topic }}                \\n            </div>\\n        </div>\\n    </div>\\n    \\n</ng-template>\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    UserMessagesComponent.ctorParameters = function () { return [\r\n        { type: NzNotificationService }\r\n    ]; };\r\n    UserMessagesComponent.propDecorators = {\r\n        messageTemplate: [{ type: ViewChild, args: [TemplateRef,] }]\r\n    };\r\n    return UserMessagesComponent;\r\n}(KerviUserLogComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar UserMessageButtonComponent = /** @class */ (function (_super) {\r\n    __extends(UserMessageButtonComponent, _super);\r\n    function UserMessageButtonComponent() {\r\n        var _this = _super.call(this) || this;\r\n        _this.visible = false;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserMessageButtonComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitUserLog();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserMessageButtonComponent.prototype.open = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.visible = true;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserMessageButtonComponent.prototype.close = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.visible = false;\r\n    };\r\n    UserMessageButtonComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-message-button',\r\n                    template: \"<nz-badge [nzCount]=\\\"messageCount$ | async\\\" [nzOverflowCount]=\\\"99\\\">\\n    <button *ngIf=\\\"(messageCount$ | async)>0\\\" nz-button nzGhost  nzType=\\\"default\\\" nzShape=\\\"circle\\\" (click)=\\\"open()\\\">\\n        <i nz-icon nzType=\\\"notification\\\" nzTheme=\\\"twotone\\\" [nzTwotoneColor]=\\\"'#9fd037'\\\"></i>\\n    </button>\\n</nz-badge>\\n\\n<nz-drawer\\n      [nzClosable]=\\\"false\\\"\\n      [nzVisible]=\\\"visible\\\"\\n      nzPlacement=\\\"right\\\"\\n      nzTitle=\\\"Log\\\"\\n      (nzOnClose)=\\\"close()\\\"\\n    >\\n    <kervi-user-log [inline]=\\\"false\\\"></kervi-user-log>\\n</nz-drawer>\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    UserMessageButtonComponent.ctorParameters = function () { return []; };\r\n    return UserMessageButtonComponent;\r\n}(KerviUserLogComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviZorroModule = /** @class */ (function () {\r\n    function KerviZorroModule() {\r\n    }\r\n    KerviZorroModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        BrowserModule,\r\n                        NGXKerviPipesModule,\r\n                        NgxKerviModule,\r\n                        ValuesModule,\r\n                        NgZorroAntdModule,\r\n                        FlexLayoutModule,\r\n                        UIComponentsModule\r\n                    ],\r\n                    declarations: [\r\n                        DashboardPanelComponent,\r\n                        WidgetComponent,\r\n                        ControllerPadComponent,\r\n                        CamViewerComponent,\r\n                        ActionComponent,\r\n                        UserLogComponent,\r\n                        UserMessageButtonComponent,\r\n                        UserMessagesComponent\r\n                    ],\r\n                    exports: [\r\n                        DashboardPanelComponent,\r\n                        ControllerPadComponent,\r\n                        CamViewerComponent,\r\n                        UserLogComponent,\r\n                        UserMessageButtonComponent,\r\n                        UserMessagesComponent\r\n                    ]\r\n                },] },\r\n    ];\r\n    return KerviZorroModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { KerviZorroService, KerviZorroModule, ActionComponent as ɵw, CamViewerComponent as ɵv, ControllerPadComponent as ɵu, DashboardPanelComponent as ɵs, UserMessageButtonComponent as ɵy, UserMessagesComponent as ɵz, UserLogComponent as ɵx, ButtonComponent as ɵo, KerviChartComponent as ɵm, ColorComponent$1 as ɵr, DateTimeComponent$1 as ɵq, GaugeComponent as ɵl, IconsComponent as ɵk, MPEGViewerComponent as ɵp, SliderComponent as ɵj, SparklineComponent as ɵi, SwitchButtonComponent as ɵn, UIComponentsModule as ɵh, BooleanComponent as ɵc, ColorComponent as ɵg, DateTimeComponent as ɵf, KerviValueComponent as ɵd, NumberComponent as ɵb, StringComponent as ɵe, ValuesModule as ɵa, WidgetComponent as ɵt };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import { __extends, __values } from 'tslib';\nimport { Injectable, Component, Input, NgModule, Injector, Pipe } from '@angular/core';\nimport { KerviBaseService, DashboardSizes, UserLogStateType } from 'kervi-js';\nexport { ConnectionState, DashboardSizes } from 'kervi-js';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NGXKerviService = /** @class */ (function (_super) {\r\n    __extends(NGXKerviService, _super);\r\n    function NGXKerviService() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    NGXKerviService.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    return NGXKerviService;\r\n}(KerviBaseService));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviTemplateService = /** @class */ (function () {\r\n    function KerviTemplateService() {\r\n        this.remUnit = 20;\r\n        console.log(\"kervi service constructor\");\r\n        //console.log(\"ctemplate\");\r\n        this.remUnit = parseFloat(getComputedStyle(document.documentElement).fontSize);\r\n    }\r\n    /**\r\n     * @param {?} rem\r\n     * @return {?}\r\n     */\r\n    KerviTemplateService.prototype.convertRemToPixels = /**\r\n     * @param {?} rem\r\n     * @return {?}\r\n     */\r\n    function (rem) {\r\n        return rem * this.remUnit;\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    KerviTemplateService.prototype.getSizeValue = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        if (value == null)\r\n            return \"100%\";\r\n        else if (value === \"\")\r\n            return \"100%\";\r\n        else if (isNaN(value)) {\r\n            return value;\r\n        }\r\n        else if (value > 0)\r\n            return value + \"%\";\r\n        else\r\n            return \"100%\";\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @param {?} containerSize\r\n     * @return {?}\r\n     */\r\n    KerviTemplateService.prototype.getPixels = /**\r\n     * @param {?} value\r\n     * @param {?} containerSize\r\n     * @return {?}\r\n     */\r\n    function (value, containerSize) {\r\n        //console.log(\"gps\", value, isNaN(value));\r\n        if (isNaN(value)) {\r\n            if (value.lastIndexOf(\"px\") > -1) {\r\n                /** @type {?} */\r\n                var px = parseFloat(value);\r\n                return px;\r\n            }\r\n            else if (value.lastIndexOf(\"rem\") > -1) {\r\n                /** @type {?} */\r\n                var rem = parseFloat(value);\r\n                /** @type {?} */\r\n                var px = this.convertRemToPixels(rem);\r\n                console.log(\"remx\", rem, px);\r\n                return px;\r\n            }\r\n            else if (value.lastIndexOf(\"%\") > -1) {\r\n                /** @type {?} */\r\n                var percentage = parseFloat(value) / 100.0;\r\n                return containerSize * percentage;\r\n            }\r\n        }\r\n        else\r\n            return value;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @param {?} sheet\r\n     * @return {?}\r\n     */\r\n    KerviTemplateService.prototype.getStyleRuleValue = /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @param {?} sheet\r\n     * @return {?}\r\n     */\r\n    function (style, selector, sheet) {\r\n        /** @type {?} */\r\n        var sheets = sheet != null ? [sheet] : document.styleSheets;\r\n        for (var i = 0, l = sheets.length; i < l; i++) {\r\n            /** @type {?} */\r\n            var sheet = sheets[i];\r\n            if (!sheet.cssRules) {\r\n                continue;\r\n            }\r\n            for (var j = 0, k = sheet.cssRules.length; j < k; j++) {\r\n                /** @type {?} */\r\n                var rule = sheet.cssRules[j];\r\n                if (rule.selectorText && rule.selectorText.split(',').indexOf(selector) !== -1) {\r\n                    return rule.style[style];\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviTemplateService.prototype.makeId = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var text = \"\";\r\n        /** @type {?} */\r\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        for (var i = 0; i < 5; i++)\r\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n        return text;\r\n    };\r\n    /**\r\n     * @param {?} colorName\r\n     * @param {?} cssClass\r\n     * @return {?}\r\n     */\r\n    KerviTemplateService.prototype.getColor = /**\r\n     * @param {?} colorName\r\n     * @param {?} cssClass\r\n     * @return {?}\r\n     */\r\n    function (colorName, cssClass) {\r\n        /** @type {?} */\r\n        var styleValue = this.getStyleRuleValue(colorName, cssClass, null);\r\n        //console.log(\"sv\", cssClass,styleValue);\r\n        return styleValue;\r\n    };\r\n    KerviTemplateService.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviTemplateService.ctorParameters = function () { return []; };\r\n    return KerviTemplateService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar AppInjector;\r\n/**\r\n * @param {?} injector\r\n * @return {?}\r\n */\r\nfunction setAppInjector(injector) {\r\n    if (AppInjector) {\r\n        // Should not happen\r\n        console.error('Programming error: AppInjector was already set');\r\n    }\r\n    else {\r\n        AppInjector = injector;\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviDashboardComponent = /** @class */ (function () {\r\n    function KerviDashboardComponent() {\r\n        this.dashboardId = null;\r\n        this.dashboard = null;\r\n        this.dashboards = null;\r\n        this.dashboardSizes = null;\r\n        this.isAppEmpty = true;\r\n        this.showMenu = false;\r\n        this.dashboardPanelsHidden = false;\r\n        this.showPanelController = false;\r\n        this.cameraId = null;\r\n        this.cameraParameters = null;\r\n        this.authenticated = false;\r\n        this.anonymous = true;\r\n        this.showLeftPad = false;\r\n        this.leftPadXValue = null;\r\n        this.leftPadYValue = null;\r\n        this.autoCenterLeftPad = false;\r\n        this.showRightPad = false;\r\n        this.rightPadXValue = null;\r\n        this.rightPadYValue = null;\r\n        this.autoCenterRightPad = false;\r\n        this.inFullScreen = false;\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n        /** @type {?} */\r\n        var self = this;\r\n        this.kerviService.componentsChanged$.subscribe((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            //var dashboard = self.kerviService.getComponent(self.dashboardId, \"dashboard\") as Dashboard\r\n            //if (dashboard)\r\n            self.loadDashboard(self.dashboardId);\r\n        }));\r\n    }\r\n    /**\r\n     * @protected\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    KerviDashboardComponent.prototype.logoff = /**\r\n     * @protected\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        this.kerviService.logoff();\r\n        event.stopPropagation();\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} dashboardId\r\n     * @return {?}\r\n     */\r\n    KerviDashboardComponent.prototype.loadDashboard = /**\r\n     * @protected\r\n     * @param {?} dashboardId\r\n     * @return {?}\r\n     */\r\n    function (dashboardId) {\r\n        this.dashboardId = dashboardId;\r\n        this.dashboard = (/** @type {?} */ (this.kerviService.getComponent(dashboardId, \"dashboard\")));\r\n        this.anonymous = this.kerviService.isAnonymous();\r\n        this.isAppEmpty = this.kerviService.isAppEmpty();\r\n        this.authenticated = this.kerviService.doAuthenticate;\r\n        if (this.dashboard) {\r\n            this.dashboards = this.kerviService.getComponentsByType(\"dashboard\");\r\n            this.showMenu = (this.dashboards.length > 1 || this.kerviService.doAuthenticate);\r\n            this.showPanelController = false;\r\n            this.cameraId = null;\r\n            this.cameraParameters = null;\r\n            this.showLeftPad = false;\r\n            this.showRightPad = false;\r\n            this.dashboardPanelsHidden = false;\r\n            if (this.dashboard.backgroundPanel) {\r\n                if (this.dashboard.backgroundPanel.components.length > 0) {\r\n                    this.dashboardPanelsHidden = true;\r\n                    this.showPanelController = true;\r\n                    this.cameraId = this.dashboard.backgroundPanel.components[0].component.id;\r\n                    this.cameraParameters = this.dashboard.backgroundPanel.components[0].parameters;\r\n                    console.log(\"cam\", this.cameraId, this.cameraParameters);\r\n                }\r\n            }\r\n            if (this.dashboard.LeftPadXPanel && this.dashboard.LeftPadXPanel.components.length || this.dashboard.LeftPadYPanel && this.dashboard.LeftPadYPanel.components.length) {\r\n                this.showLeftPad = true;\r\n                if (this.dashboard.LeftPadXPanel.components.length) {\r\n                    this.leftPadXValue = (/** @type {?} */ (this.dashboard.LeftPadXPanel.components[0].component));\r\n                    if (this.dashboard.LeftPadXPanel.components[0].parameters.padAutoCenter)\r\n                        this.autoCenterLeftPad = true;\r\n                }\r\n                if (this.dashboard.LeftPadYPanel.components.length) {\r\n                    this.leftPadYValue = (/** @type {?} */ (this.dashboard.LeftPadYPanel.components[0].component));\r\n                    if (this.dashboard.LeftPadXPanel.components[0].parameters.padAutoCenter)\r\n                        this.autoCenterLeftPad = true;\r\n                }\r\n            }\r\n            if (this.dashboard.RightPadXPanel && this.dashboard.RightPadXPanel.components.length || this.dashboard.RightPadYPanel && this.dashboard.RightPadYPanel.components.length) {\r\n                this.showRightPad = true;\r\n                if (this.dashboard.RightPadXPanel.components.length) {\r\n                    this.rightPadXValue = (/** @type {?} */ (this.dashboard.RightPadXPanel.components[0].component));\r\n                    if (this.dashboard.LeftPadXPanel.components[0].parameters.padAutoCenter)\r\n                        this.autoCenterRightPad = true;\r\n                }\r\n                if (this.dashboard.RightPadYPanel.components.length) {\r\n                    this.rightPadYValue = (/** @type {?} */ (this.dashboard.RightPadYPanel.components[0].component));\r\n                    if (this.dashboard.RightPadXPanel.components[0].parameters.padAutoCenter)\r\n                        this.autoCenterRightPad = true;\r\n                }\r\n            }\r\n            console.log(\"load db\", dashboardId, this.dashboard, this);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviDashboardComponent.prototype.toggleFullScreen = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        console.log(\"fs\", this.inFullScreen);\r\n        /** @type {?} */\r\n        var doc;\r\n        doc = document;\r\n        if ((doc.fullScreenElement && doc.fullScreenElement !== null)) \r\n        /*(!doc.mozFullScreen && !document.webkitIsFullScreen))*/ {\r\n            this.inFullScreen = true;\r\n            if (doc.documentElement.requestFullScreen) {\r\n                doc.documentElement.requestFullScreen();\r\n            }\r\n            else if (doc.documentElement.mozRequestFullScreen) {\r\n                doc.documentElement.mozRequestFullScreen();\r\n            } // } else if (document.documentElement.webkitRequestFullScreen) {  \r\n            //   doc.documentElement.webkitRequestFullScreen();  \r\n            // }  \r\n        }\r\n        else {\r\n            this.inFullScreen = false;\r\n            if (doc.cancelFullScreen) {\r\n                doc.cancelFullScreen();\r\n            }\r\n            else if (doc.mozCancelFullScreen) {\r\n                doc.mozCancelFullScreen();\r\n            } // } else if (document.webkitCancelFullScreen) {  \r\n            //   doc.webkitCancelFullScreen();  \r\n            // }  \r\n        }\r\n    };\r\n    KerviDashboardComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-dashboard',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviDashboardComponent.ctorParameters = function () { return []; };\r\n    return KerviDashboardComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviDashboardPanelComponent = /** @class */ (function () {\r\n    function KerviDashboardPanelComponent() {\r\n        this.panel = null;\r\n        this.inline = false;\r\n        this.inGroup = false;\r\n        this.bodyOnly = false;\r\n        this.width = \"\";\r\n        this.showHeader = false;\r\n        this.expanded = false;\r\n        this.title = null;\r\n        this.bodyComponents = [];\r\n        this.headerComponents = [];\r\n        this.footerComponents = [];\r\n        //messages: DashboardMessageModel[] = [];\r\n        //panelComponents:IComponent[] = []\r\n        this.templateService = null;\r\n        this.kerviService = null;\r\n        this.templateService = AppInjector.get(KerviTemplateService);\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    /**\r\n     * @param {?} panel\r\n     * @param {?} inGroup\r\n     * @return {?}\r\n     */\r\n    KerviDashboardPanelComponent.prototype.calcWidth = /**\r\n     * @param {?} panel\r\n     * @param {?} inGroup\r\n     * @return {?}\r\n     */\r\n    function (panel, inGroup) {\r\n        if (panel.type == \"group\") {\r\n            if (panel.parameters.width == null || panel.parameters.width == \"0\")\r\n                return \"100%\";\r\n            else\r\n                return this.templateService.getSizeValue(panel.parameters.width);\r\n        }\r\n        else\r\n            return inGroup ? \"\" : this.templateService.getSizeValue(panel.parameters.width);\r\n    };\r\n    /**\r\n     * @param {?} panel\r\n     * @return {?}\r\n     */\r\n    KerviDashboardPanelComponent.prototype.showPanelHeader = /**\r\n     * @param {?} panel\r\n     * @return {?}\r\n     */\r\n    function (panel) {\r\n        var e_1, _a;\r\n        /** @type {?} */\r\n        var hasHeaderComponents = false;\r\n        try {\r\n            for (var _b = __values(this.panel.components), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var component = _c.value;\r\n                if (component.parameters.linkToHeader)\r\n                    hasHeaderComponents = true;\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return (panel.parameters.title != null && panel.parameters.title.length > 0) || hasHeaderComponents;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviDashboardPanelComponent.prototype.ngOnInitPanel = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var e_2, _a;\r\n        this.title = this.panel.parameters.title;\r\n        try {\r\n            for (var _b = __values(this.panel.components), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var component = _c.value;\r\n                if (component.parameters.linkToHeader)\r\n                    this.headerComponents.push(component);\r\n                else\r\n                    this.bodyComponents.push(component);\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n        this.showHeader = (this.panel.parameters.title != null && this.panel.parameters.title.length > 0) || (this.headerComponents.length > 0);\r\n        if (this.panel.type == \"group\") {\r\n            if (this.panel.parameters.width == null || this.panel.parameters.width == \"0\" || this.panel.parameters.width == \"\")\r\n                this.width = \"100%\";\r\n            else\r\n                this.width = this.templateService.getSizeValue(this.panel.parameters.width);\r\n        }\r\n        else\r\n            //this.width = this.inGroup ? \"100%\" : this.templateService.getSizeValue(this.panel.parameters.width);\r\n            this.width = this.templateService.getSizeValue(this.panel.parameters.width);\r\n    };\r\n    KerviDashboardPanelComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-dashboard-panel-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviDashboardPanelComponent.ctorParameters = function () { return []; };\r\n    KerviDashboardPanelComponent.propDecorators = {\r\n        dashboardSizes: [{ type: Input }],\r\n        panel: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        inGroup: [{ type: Input }],\r\n        bodyOnly: [{ type: Input }]\r\n    };\r\n    return KerviDashboardPanelComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviControllerPadComponent = /** @class */ (function () {\r\n    function KerviControllerPadComponent() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviControllerPadComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    KerviControllerPadComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-controller-pad-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviControllerPadComponent.ctorParameters = function () { return []; };\r\n    KerviControllerPadComponent.propDecorators = {\r\n        dashboardSizes: [{ type: Input }]\r\n    };\r\n    return KerviControllerPadComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviWidgetComponent = /** @class */ (function () {\r\n    function KerviWidgetComponent() {\r\n        this.component = null;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.widgetType = \"value\";\r\n        //console.log(\"cnio\",this);\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    Object.defineProperty(KerviWidgetComponent.prototype, \"componentId\", {\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this.component = this.kerviService.getComponent(this.componentId);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviWidgetComponent.prototype.ngOnInitWidget = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.linkParameters)\r\n            this.linkParameters = this.component.ui;\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        //console.log(\"widget\", this.component, this.linkParameters);\r\n        if (this.component.componentType == \"controller\") {\r\n            /** @type {?} */\r\n            var controller = (/** @type {?} */ (this.component));\r\n            console.log(\"widget ctrl\", controller);\r\n            if (controller.type == \"camera\")\r\n                this.widgetType = \"camera\";\r\n        }\r\n        else if (this.linkParameters.type) {\r\n            if (this.linkParameters.type.indexOf(\"gauge\") > -1) {\r\n                this.widgetType = \"gauge\";\r\n            }\r\n            else if (this.linkParameters.type == \"chart\") {\r\n                this.widgetType = \"chart\";\r\n            }\r\n        }\r\n    };\r\n    KerviWidgetComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-widget-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviWidgetComponent.ctorParameters = function () { return []; };\r\n    KerviWidgetComponent.propDecorators = {\r\n        componentId: [{ type: Input }],\r\n        component: [{ type: Input }],\r\n        dashboardPanel: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        inline: [{ type: Input }]\r\n    };\r\n    return KerviWidgetComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @template T\r\n */\r\nvar KerviValueComponent = /** @class */ (function () {\r\n    function KerviValueComponent() {\r\n        this.value = null;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    Object.defineProperty(KerviValueComponent.prototype, \"valueId\", {\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this.value = (/** @type {?} */ (this.kerviService.getComponent(this.valueId)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviValueComponent.prototype.ngOnInitValue = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.linkParameters)\r\n            this.linkParameters = this.value.ui;\r\n    };\r\n    KerviValueComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviValueComponent.ctorParameters = function () { return []; };\r\n    KerviValueComponent.propDecorators = {\r\n        valueId: [{ type: Input }],\r\n        value: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        inline: [{ type: Input }]\r\n    };\r\n    return KerviValueComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviNumberComponent = /** @class */ (function (_super) {\r\n    __extends(KerviNumberComponent, _super);\r\n    function KerviNumberComponent() {\r\n        var _this = _super.call(this) || this;\r\n        _this.numberFormat = \"1.2-2\";\r\n        _this.displayValue = 0;\r\n        _this.displayUnit = \"\";\r\n        _this.displayType = \"\";\r\n        _this.currentIcon = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    KerviNumberComponent.prototype.setKerviValue = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        this.value.set(value);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviNumberComponent.prototype.ngOnInitNumber = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitValue();\r\n        /** @type {?} */\r\n        var self = this;\r\n        this.numberFormat = this.linkParameters.minIntegerDigits + \".\" + this.linkParameters.minFractionDigits + \"-\" + this.linkParameters.maxFractionDigits;\r\n        if (!this.linkParameters.valueIcon)\r\n            this.currentIcon = null;\r\n        else if (typeof (this.linkParameters.valueIcon) == \"string\")\r\n            this.currentIcon = this.linkParameters.valueIcon;\r\n        else {\r\n            this.value.value$.subscribe((/**\r\n             * @param {?} v\r\n             * @return {?}\r\n             */\r\n            function (v) {\r\n                var e_1, _a;\r\n                try {\r\n                    for (var _b = __values(self.linkParameters.valueIcon), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                        var iconSection = _c.value;\r\n                        if (v >= iconSection.range[0] && v <= iconSection.range[1]) {\r\n                            self.currentIcon = iconSection.icon;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                    }\r\n                    finally { if (e_1) throw e_1.error; }\r\n                }\r\n            }));\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        else if (!this.inline && this.linkParameters.size > 0) {\r\n            this.inline = true;\r\n        }\r\n    };\r\n    KerviNumberComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-number-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviNumberComponent.ctorParameters = function () { return []; };\r\n    return KerviNumberComponent;\r\n}(KerviValueComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviBooleanComponent = /** @class */ (function (_super) {\r\n    __extends(KerviBooleanComponent, _super);\r\n    function KerviBooleanComponent() {\r\n        var _this = _super.call(this) || this;\r\n        _this.displayType = \"switch\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    KerviBooleanComponent.prototype.setKerviValue = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        this.value.set(value);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBooleanComponent.prototype.ngOnInitBoolean = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitValue();\r\n        if (this.linkParameters.type) {\r\n            this.displayType = this.linkParameters.type;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        else if (!this.inline && this.linkParameters.size > 0) {\r\n            this.inline = true;\r\n        }\r\n    };\r\n    KerviBooleanComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-boolean-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviBooleanComponent.ctorParameters = function () { return []; };\r\n    return KerviBooleanComponent;\r\n}(KerviValueComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviActionComponent = /** @class */ (function () {\r\n    function KerviActionComponent() {\r\n        this.action = null;\r\n        this.linkParameters = null;\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.state = new BehaviorSubject(false);\r\n        this.displayType = 'switch';\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviActionComponent.prototype.ngOnInitAction = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (!this.linkParameters)\r\n            this.linkParameters = this.action.ui;\r\n        if (this.linkParameters.displayType) {\r\n            this.displayType = this.linkParameters.displayType;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        self.state.next(this.action.running$.value);\r\n        this.action.running$.subscribe((/**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            console.log(\"ar\", self.action.id, v);\r\n            self.state.next(v);\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    KerviActionComponent.prototype.setActionState = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        if (value)\r\n            this.action.run(this.linkParameters.actionParameters);\r\n        else\r\n            this.action.interrupt(this.linkParameters.interruptParameters);\r\n    };\r\n    KerviActionComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-action-base',\r\n                    template: '',\r\n                    styles: [],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviActionComponent.ctorParameters = function () { return []; };\r\n    KerviActionComponent.propDecorators = {\r\n        action: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }]\r\n    };\r\n    return KerviActionComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviCameraComponent = /** @class */ (function () {\r\n    function KerviCameraComponent() {\r\n        this.linkParameters = null;\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.isBackground = false;\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    Object.defineProperty(KerviCameraComponent.prototype, \"cameraId\", {\r\n        set: /**\r\n         * @param {?} id\r\n         * @return {?}\r\n         */\r\n        function (id) {\r\n            console.log(\"setcamid\", id);\r\n            this.camera = (/** @type {?} */ (this.kerviService.getComponent(id)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(KerviCameraComponent.prototype, \"camera\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () { return this.cam; },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            var e_1, _a;\r\n            console.log(\"setcam\", v);\r\n            this.cam = v;\r\n            try {\r\n                for (var _b = __values(v.outputs), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var i = _c.value;\r\n                    if (i.id.endsWith(\".pan\"))\r\n                        this.pan = (/** @type {?} */ (i));\r\n                    else if (i.id.endsWith(\".tilt\"))\r\n                        this.tilt = (/** @type {?} */ (i));\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n            this.cameraType = v.ui.type;\r\n            if (this.cameraType == \"frame\") {\r\n                if (v.ui.source) {\r\n                    //this.cameraSource = v.ui.source.server + v.ui.source.path;\r\n                    this.cameraSource = this.cam.id;\r\n                }\r\n                this.cameraSource = this.cam.id;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {?} v\r\n     * @return {?}\r\n     */\r\n    KerviCameraComponent.prototype.setPan = /**\r\n     * @param {?} v\r\n     * @return {?}\r\n     */\r\n    function (v) {\r\n        this.pan.set(v);\r\n    };\r\n    /**\r\n     * @param {?} v\r\n     * @return {?}\r\n     */\r\n    KerviCameraComponent.prototype.setTilt = /**\r\n     * @param {?} v\r\n     * @return {?}\r\n     */\r\n    function (v) {\r\n        this.tilt.set(v);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviCameraComponent.prototype.ngOnInitCamera = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        console.log(\"ngi cam\");\r\n        if (!this.linkParameters)\r\n            this.linkParameters = this.camera.ui;\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n    };\r\n    KerviCameraComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-camera-base',\r\n                    template: '',\r\n                    styles: [],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviCameraComponent.ctorParameters = function () { return []; };\r\n    KerviCameraComponent.propDecorators = {\r\n        cameraId: [{ type: Input }],\r\n        camera: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        isBackground: [{ type: Input }]\r\n    };\r\n    return KerviCameraComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviColorComponent = /** @class */ (function (_super) {\r\n    __extends(KerviColorComponent, _super);\r\n    function KerviColorComponent() {\r\n        var _this = _super.call(this) || this;\r\n        _this.displayType = \"button\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    KerviColorComponent.prototype.setKerviValue = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        this.value.set(value);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviColorComponent.prototype.ngOnInitColor = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitValue();\r\n        if (this.linkParameters.type) {\r\n            this.displayType = this.linkParameters.type;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        else if (!this.inline && this.linkParameters.size > 0) {\r\n            this.inline = true;\r\n        }\r\n    };\r\n    KerviColorComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-color-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviColorComponent.ctorParameters = function () { return []; };\r\n    return KerviColorComponent;\r\n}(KerviValueComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviDateTimeComponent = /** @class */ (function (_super) {\r\n    __extends(KerviDateTimeComponent, _super);\r\n    function KerviDateTimeComponent() {\r\n        var _this = _super.call(this) || this;\r\n        _this.displayType = \"datetime\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    KerviDateTimeComponent.prototype.setKerviValue = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        this.value.set(value);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviDateTimeComponent.prototype.ngOnInitDateTime = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitValue();\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (this.linkParameters.type) {\r\n            this.displayType = this.linkParameters.type;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        if (self.linkParameters.type == \"time\")\r\n            this.dateTimeFormat = this.kerviService.application$.value.display.unit_system.datetime.time;\r\n        else if (self.linkParameters.type == \"date\")\r\n            this.dateTimeFormat = self.kerviService.application$.value.display.unit_system.datetime.date;\r\n        else\r\n            this.dateTimeFormat = this.kerviService.application$.value.display.unit_system.datetime.datetime;\r\n    };\r\n    KerviDateTimeComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-datetime-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviDateTimeComponent.ctorParameters = function () { return []; };\r\n    return KerviDateTimeComponent;\r\n}(KerviValueComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviStringComponent = /** @class */ (function (_super) {\r\n    __extends(KerviStringComponent, _super);\r\n    function KerviStringComponent() {\r\n        var _this = _super.call(this) || this;\r\n        _this.displayType = \"\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    KerviStringComponent.prototype.setKerviValue = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        this.value.set(value);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviStringComponent.prototype.ngOnInitString = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitValue();\r\n        if (this.linkParameters.type) {\r\n            this.displayType = this.linkParameters.type;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n    };\r\n    KerviStringComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-string-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviStringComponent.ctorParameters = function () { return []; };\r\n    return KerviStringComponent;\r\n}(KerviValueComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviUserLogComponent = /** @class */ (function () {\r\n    function KerviUserLogComponent() {\r\n        this.logLength = 10;\r\n        this.linkParameters = null;\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.lastMessage$ = null;\r\n        this.messages$ = null;\r\n        this.messageCount$ = null;\r\n        this.logState$ = null;\r\n        this.messageCount = 0;\r\n        this.UserLogState = UserLogStateType.normal;\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n        this.messages$ = this.kerviService.getLogMessages$();\r\n        this.lastMessage$ = this.kerviService.getLastLogMessage$();\r\n        this.messageCount$ = this.kerviService.getLogMessageCount$();\r\n        this.logState$ = this.kerviService.getLogState$();\r\n        this.messageCount$.subscribe((/**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this.messageCount = v;\r\n        }));\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    KerviUserLogComponent.prototype.ngOnInitUserLog = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    KerviUserLogComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-user-log-base',\r\n                    template: '',\r\n                    styles: [],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviUserLogComponent.ctorParameters = function () { return []; };\r\n    KerviUserLogComponent.propDecorators = {\r\n        logLength: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }]\r\n    };\r\n    return KerviUserLogComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviDirectoryComponent = /** @class */ (function () {\r\n    function KerviDirectoryComponent() {\r\n        this.path = '/';\r\n        this.directory = null;\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    KerviDirectoryComponent.prototype.loadDirectory = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        //this.directory = this.kerviService.GetDirectory(this.path);\r\n    };\r\n    KerviDirectoryComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-directory',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviDirectoryComponent.ctorParameters = function () { return []; };\r\n    return KerviDirectoryComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NgxKerviComponent = /** @class */ (function () {\r\n    function NgxKerviComponent() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxKerviComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    NgxKerviComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'lib-ngx-kervi',\r\n                    template: \"\\n    <p>\\n      ngx-kervi works!\\n    </p>\\n  \",\r\n                    styles: []\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    NgxKerviComponent.ctorParameters = function () { return []; };\r\n    return NgxKerviComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NgxKerviModule = /** @class */ (function () {\r\n    function NgxKerviModule(injector) {\r\n        this.injector = injector;\r\n        setAppInjector(injector);\r\n    }\r\n    NgxKerviModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [],\r\n                    declarations: [\r\n                        NgxKerviComponent,\r\n                        KerviDashboardComponent,\r\n                        KerviDashboardPanelComponent,\r\n                        KerviControllerPadComponent,\r\n                        KerviNumberComponent,\r\n                        KerviStringComponent,\r\n                        KerviBooleanComponent,\r\n                        KerviColorComponent,\r\n                        KerviDateTimeComponent,\r\n                        KerviActionComponent,\r\n                        KerviValueComponent,\r\n                        KerviWidgetComponent,\r\n                        KerviCameraComponent,\r\n                        KerviUserLogComponent,\r\n                        KerviDirectoryComponent\r\n                    ],\r\n                    providers: [NGXKerviService, KerviTemplateService],\r\n                    exports: [\r\n                        NgxKerviComponent,\r\n                        KerviDashboardComponent,\r\n                        KerviDashboardPanelComponent,\r\n                        KerviControllerPadComponent,\r\n                        KerviNumberComponent,\r\n                        KerviWidgetComponent,\r\n                        KerviStringComponent,\r\n                        KerviBooleanComponent,\r\n                        KerviColorComponent,\r\n                        KerviDateTimeComponent,\r\n                        KerviActionComponent,\r\n                        KerviCameraComponent,\r\n                        KerviUserLogComponent,\r\n                        KerviActionComponent\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    NgxKerviModule.ctorParameters = function () { return [\r\n        { type: Injector }\r\n    ]; };\r\n    return NgxKerviModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar TranslatePipe = /** @class */ (function () {\r\n    function TranslatePipe(kerviService) {\r\n        this.kerviService = kerviService;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @param {?=} args\r\n     * @return {?}\r\n     */\r\n    TranslatePipe.prototype.transform = /**\r\n     * @param {?} value\r\n     * @param {?=} args\r\n     * @return {?}\r\n     */\r\n    function (value, args) {\r\n        return this.kerviService.text(value, value);\r\n    };\r\n    TranslatePipe.decorators = [\r\n        { type: Pipe, args: [{\r\n                    name: 'translate'\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    TranslatePipe.ctorParameters = function () { return [\r\n        { type: NGXKerviService }\r\n    ]; };\r\n    return TranslatePipe;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NGXKerviPipesModule = /** @class */ (function () {\r\n    function NGXKerviPipesModule() {\r\n    }\r\n    NGXKerviPipesModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [],\r\n                    exports: [\r\n                        TranslatePipe\r\n                    ],\r\n                    providers: [],\r\n                    declarations: [\r\n                        TranslatePipe\r\n                    ]\r\n                },] },\r\n    ];\r\n    return NGXKerviPipesModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { KerviTemplateService, KerviDashboardComponent, KerviDashboardPanelComponent, KerviControllerPadComponent, KerviWidgetComponent, KerviNumberComponent, KerviBooleanComponent, KerviActionComponent, KerviCameraComponent, KerviColorComponent, KerviDateTimeComponent, KerviStringComponent, KerviUserLogComponent, KerviDirectoryComponent, AppInjector, NGXKerviService, NgxKerviComponent, NgxKerviModule, NGXKerviPipesModule, TranslatePipe as ɵb, KerviValueComponent as ɵa };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy93ZWJBcHAvc3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<router-outlet>\\r\\n              \\r\\n</router-outlet>\\r\\n<kervi-user-messages></kervi-user-messages>\"","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { NGXKerviService } from \"ngx-kervi\";\r\nimport { ConnectionState } from \"ngx-kervi\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  private currentPage=null;\r\n  \r\n  constructor (private kerviService:NGXKerviService, private router:Router, private route:ActivatedRoute){\r\n    var self = this;\r\n    \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n\r\n    this.kerviService.connectionState$.subscribe(function(connectedState){\r\n      console.log(\"connected service state\",connectedState, self);\r\n      if (connectedState == ConnectionState.disconnected){\r\n        self.router.navigate(['/connect']);\r\n      }\r\n      if (connectedState == ConnectionState.loading){\r\n      }\r\n      if (connectedState == ConnectionState.authenticate){\r\n        self.router.navigate(['/authenticate']);\r\n      }\r\n      if (connectedState == ConnectionState.connected){\r\n        if (self.currentPage)\r\n          self.router.navigate([self.currentPage]);\r\n        else {\r\n          var defaultDashboard = self.kerviService.getDefaultDashboard();\r\n          self.router.navigate(['/'+defaultDashboard.componentType+'/'+defaultDashboard.id])\r\n        }\r\n      }\r\n    });\r\n\r\n    setTimeout(function(){\r\n      self.kerviService.connect();\r\n    },0)\r\n    \r\n  }\r\n}\r\n","\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\n\r\nimport { NgZorroAntdModule, NZ_I18N, NZ_ICONS, en_US } from 'ng-zorro-antd';\r\nimport { IconDefinition } from '@ant-design/icons-angular';\r\nimport * as AllIcons from '@ant-design/icons-angular/icons'\r\nimport { registerLocaleData } from '@angular/common';\r\nimport en from '@angular/common/locales/en';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ConnectComponent } from './connect/connect.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { MediaComponent } from './media/media.component' ;\r\nimport { NgxKerviModule } from 'ngx-kervi';\r\nimport { NGXKerviPipesModule } from 'ngx-kervi'\r\nimport { KerviZorroModule  } from 'kervi-zorro'\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { ImgViewerComponent } from './image-viewer/image-viewer.component'\r\n\r\n\r\nregisterLocaleData(en);\r\n\r\nconst antDesignIcons = AllIcons as {\r\n  [key: string]: IconDefinition;\r\n};\r\nconst icons: IconDefinition[] = Object.keys(antDesignIcons).map(key => antDesignIcons[key])\r\n\r\n\r\nconst ROUTES: Routes = [\r\n\r\n  { path: 'connect', component: ConnectComponent },\r\n  { path: 'authenticate', component: LoginComponent },\r\n  { path: 'dashboard/:name', component: DashboardComponent },\r\n  { path: 'media', component: MediaComponent },\r\n  {\r\n    path: '',\r\n    redirectTo: '',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    ConnectComponent,\r\n    DashboardComponent,\r\n    MediaComponent,\r\n    ImgViewerComponent\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    NgxKerviModule,\r\n    NGXKerviPipesModule,\r\n    KerviZorroModule,\r\n    FlexLayoutModule,\r\n    NgZorroAntdModule,\r\n    //NgxKerviComponentsModule,\r\n    RouterModule.forRoot(ROUTES)\r\n  ],\r\n  providers:[\r\n    { provide: NZ_I18N, useValue: en_US },\r\n    { provide: NZ_ICONS, useValue: icons }\r\n  ],\r\n  \r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy93ZWJBcHAvc3JjL2FwcC9jb25uZWN0L2Nvbm5lY3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nz-layout>\\r\\n    <nz-content class=\\\"kervi-app-initializing\\\">\\r\\n      <div nz-row>\\r\\n        <div nz-col nzSpan=\\\"12\\\" nzOffset=\\\"9\\\">\\r\\n          <nz-steps [nzCurrent]=\\\"current\\\" nzDirection=\\\"vertical\\\">\\r\\n            <nz-step nzTitle=\\\"Initializing\\\" nzDescription=\\\"&nbsp;\\\" nzIcon=\\\"setting\\\" ></nz-step>\\r\\n            <nz-step nzTitle=\\\"Connecting\\\" nzDescription=\\\"&nbsp;\\\" nzIcon=\\\"wifi\\\"></nz-step>\\r\\n            <nz-step nzTitle=\\\"Loading dashboards\\\" nzDescription=\\\"&nbsp;\\\" nzIcon=\\\"download\\\"></nz-step>\\r\\n          </nz-steps>\\r\\n        </div>\\r\\n      </div>\\r\\n    </nz-content>\\r\\n</nz-layout>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ConnectionState } from \"ngx-kervi\";\r\nimport { NGXKerviService } from \"ngx-kervi\";\r\n@Component({\r\n  selector: 'app-connect',\r\n  templateUrl: './connect.component.html',\r\n  styleUrls: ['./connect.component.css']\r\n})\r\nexport class ConnectComponent implements OnInit {\r\n\r\n  current = 1;\r\n\r\n  constructor(private kerviService:NGXKerviService,) { \r\n    \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    this.kerviService.connectionState$.subscribe(function(connectedState){\r\n      console.log(\"connected service state\",connectedState, self);\r\n      if (connectedState == ConnectionState.disconnected){\r\n        self.current=1\r\n      }\r\n      if (connectedState == ConnectionState.loading){\r\n        self.current=2\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".dashboard-panels-hidden{\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n::ng-deep .vertical-center-modal {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    z-index:4000;\\r\\n    /* width:90%; */\\r\\n    height:90%;\\r\\n    \\r\\n  }\\r\\n\\r\\n::ng-deep .vertical-center-modal .ant-modal {\\r\\n    top: 0;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL3dlYkFwcC9zcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2QixZQUFZO0lBQ1osZUFBZTtJQUNmLFVBQVU7O0VBRVo7O0FBRUE7SUFDRSxNQUFNO0VBQ1IiLCJmaWxlIjoicHJvamVjdHMvd2ViQXBwL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRhc2hib2FyZC1wYW5lbHMtaGlkZGVue1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuOjpuZy1kZWVwIC52ZXJ0aWNhbC1jZW50ZXItbW9kYWwge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIHotaW5kZXg6NDAwMDtcclxuICAgIC8qIHdpZHRoOjkwJTsgKi9cclxuICAgIGhlaWdodDo5MCU7XHJcbiAgICBcclxuICB9XHJcblxyXG4gIDo6bmctZGVlcCAudmVydGljYWwtY2VudGVyLW1vZGFsIC5hbnQtbW9kYWwge1xyXG4gICAgdG9wOiAwO1xyXG4gIH0iXX0= */\"","module.exports = \"<nz-layout *ngIf=\\\"dashboard\\\">\\r\\n\\t<nz-header *ngIf='!isAppEmpty'>\\r\\n\\t\\t<div nz-row>\\r\\n\\t\\t\\t<div nz-col nzSpan=\\\"6\\\">\\t\\t\\r\\n\\t\\t\\t\\t<ul nz-menu  nzMode=\\\"horizontal\\\" class=\\\"kervi-main-menu\\\">\\r\\n\\t\\t\\t\\t\\t<li nz-submenu  *ngIf=\\\"showMenu\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<span title><i nz-icon nzTheme=\\\"twotone\\\" type=\\\"dashboard\\\" [nzTwotoneColor]=\\\"'#9fd037'\\\"></i> {{dashboard.name}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-container *ngIf=\\\"dashboards.length > 1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li nz-menu-item *ngFor=\\\"let dashboard of dashboards\\\" [routerLink]=\\\"['/dashboard', dashboard.id]\\\">{{dashboard.name}}</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li *ngIf=\\\"authenticated && dashboards.length > 1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<nz-divider></nz-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li nz-menu-item *ngIf=\\\"authenticated && anonymous\\\" href=\\\"javascript: return false;\\\" (click)=\\\"logoff($event)\\\" ><i nz-icon type=\\\"login\\\"></i> {{('login' | translate)}}</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li nz-menu-item *ngIf=\\\"authenticated && !anonymous\\\" href=\\\"javascript: return false;\\\" (click)=\\\"logoff($event)\\\"><i nz-icon type=\\\"logout\\\"></i>{{('logout' | translate)}}</li>\\r\\n\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t<li nz-menu-item *ngIf=\\\"showPanelController\\\">\\r\\n\\t\\t\\t\\t\\t\\t<a  (click)=\\\"dashboardPanelsHidden = !dashboardPanelsHidden;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<i nz-icon type=\\\"sliders\\\" nzTheme=\\\"twotone\\\" [nzTwotoneColor]=\\\"'#9fd037'\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"kervi-sys-panel\\\" *ngIf=\\\"dashboard && dashboard.sysPanel\\\" nz-col nzSpan=\\\"18\\\">\\r\\n\\t\\t\\t\\t<kervi-dashboard-panel [dashboardSizes]=\\\"dashboardSizes\\\" [inline]=\\\"true\\\" [panel]=\\\"dashboard.sysPanel\\\" ></kervi-dashboard-panel>\\r\\n\\t\\t\\t\\t&nbsp;<a  (click)=\\\"mediaHidden = !mediaHidden;\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i nz-icon nzType=\\\"folder-open\\\" nzTheme=\\\"twotone\\\" [nzTwotoneColor]=\\\"'#9fd037'\\\"> </i>\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t<kervi-message-button></kervi-message-button>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t</div>\\r\\n\\t</nz-header>\\r\\n\\t\\t\\r\\n\\t<nz-content>\\r\\n\\r\\n\\t\\t<ng-container *ngIf=\\\"isAppEmpty\\\">\\r\\n\\t\\t\\t<div nz-row>\\r\\n\\t\\t\\t\\t<div nz-col nzSpan=\\\"12\\\" nzOffset=\\\"6\\\">\\r\\n\\t\\t\\t\\t\\t<nz-alert\\r\\n\\t\\t\\t\\t\\t\\tnzType=\\\"error\\\"\\r\\n\\t\\t\\t\\t\\t\\t[nzMessage] =\\\"'hello_world' | translate\\\"\\r\\n\\t\\t\\t\\t\\t\\t[nzDescription]=\\\" 'empty_app' | translate\\\"\\r\\n\\t\\t\\t\\t\\t\\tnzShowIcon\\t\\r\\n\\t\\t\\t\\t\\t  >\\r\\n\\t\\t\\t\\t\\t  </nz-alert>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</ng-container>\\r\\n\\t\\t<kervi-cam-viewer *ngIf=\\\"cameraId\\\" [isBackground]=\\\"true\\\" [cameraId]=\\\"cameraId\\\" [linkParameters]=\\\"cameraParameters\\\"></kervi-cam-viewer>\\r\\n\\t\\t<div #leftPad class=\\\"kervi-controller-pad\\\" *ngIf=\\\"showLeftPad\\\" [style.left.px]=\\\"leftPadLeft\\\" [style.top.px]=\\\"leftPadTop\\\" >\\r\\n\\t\\t\\t<kervi-controller-pad [autoCenter]=\\\"autoCenterLeftPad\\\" [XValue]=\\\"leftPadXValue\\\" [YValue]=\\\"leftPadYValue\\\"></kervi-controller-pad>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div #rightPad class=\\\"kervi-controller-pad\\\" *ngIf=\\\"showRightPad\\\" [style.left.px]=\\\"rightPadLeft\\\" [style.top.px]=\\\"rightPadTop\\\" >\\r\\n\\t\\t\\t<kervi-controller-pad [autoCenter]=\\\"autoCenterRightPad\\\" [XValue]=\\\"rightPadXValue\\\" [YValue]=\\\"rightPadYValue\\\"></kervi-controller-pad>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<div class=\\\"kervi-panels\\\" fxLayout=\\\" column\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"0.5%\\\" fxLayoutAlign=\\\"\\\"  *ngIf=\\\"!dashboardPanelsHidden\\\" style=\\\"\\\">\\r\\n\\t\\t\\t<ng-container *ngFor=\\\"let panel of dashboard.panels\\\">\\r\\n\\t\\t\\t\\t\\t<kervi-dashboard-panel [fxFlex]=\\\"panel.parameters.width\\\" fxFlex.xs=\\\"100%\\\" [dashboardSizes]=\\\"defaultSizes\\\" [panel]=\\\"panel\\\"></kervi-dashboard-panel>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t</div>\\r\\n\\t</nz-content>\\r\\n\\t<nz-footer *ngIf='!isAppEmpty'>\\r\\n\\t\\t<div nz-col nzSpan=\\\"8\\\" style=\\\"text-align: left\\\">\\r\\n\\t\\t\\t<kervi-dashboard-panel [inline]=\\\"true\\\" *ngIf=\\\"dashboard.footerLeftPanel\\\" [dashboardSizes]=\\\"defaultSizes\\\" [panel]=\\\"dashboard.footerLeftPanel\\\"></kervi-dashboard-panel>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div nz-col nzSpan=\\\"8\\\" style=\\\"text-align:center\\\">\\r\\n\\t\\t\\t<kervi-dashboard-panel [inline]=\\\"true\\\" *ngIf=\\\"dashboard.footerCenterPanel\\\" [dashboardSizes]=\\\"defaultSizes\\\" [panel]=\\\"dashboard.footerCenterPanel\\\"></kervi-dashboard-panel>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div nz-col nzSpan=\\\"8\\\"  style=\\\"text-align: right\\\">\\r\\n\\t\\t\\t<kervi-dashboard-panel [inline]=\\\"true\\\" *ngIf=\\\"dashboard.footerRightPanel\\\" [dashboardSizes]=\\\"defaultSizes\\\" [panel]=\\\"dashboard.footerRightPanel\\\"></kervi-dashboard-panel>\\r\\n\\t\\t\\t<button nz-button nzShape=\\\"round\\\" (mousedown)=\\\"toggleFullScreen()\\\"><i nz-icon [nzType]=\\\"inFullScreen ? 'fullscreen' : 'fullscreen-exit'\\\" title=\\\"{{( 'toggle_screen' | translate)}}\\\"></i></button>\\r\\n\\t\\t</div>\\r\\n\\t</nz-footer>\\r\\n</nz-layout>\\r\\n\\r\\n<nz-modal \\r\\n\\tnzWrapClassName=\\\"vertical-center-modal\\\"\\r\\n\\t[(nzVisible)]=\\\"!mediaHidden\\\"\\r\\n\\tnzTitle=\\\"Media\\\"\\r\\n\\t(nzOnCancel)=\\\"handleMediaClose()\\\"\\r\\n\\t\\r\\n>\\r\\n<div style=\\\"display:inline-block;width:100%\\\"> <app-media ></app-media></div>\\t\\r\\n\\r\\n</nz-modal>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router} from '@angular/router';\r\nimport { KerviDashboardComponent, NGXKerviService, ConnectionState} from 'ngx-kervi'\r\ndeclare var window:any;\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent extends KerviDashboardComponent implements OnInit {\r\n  @ViewChild(\"leftPad\") leftPad:ElementRef;\r\n  @ViewChild(\"rightPad\") rightPad:ElementRef;\r\n  private padSize=180;\r\n  private isConnected:false;\r\n  public leftPadTop:number;\r\n  public leftPadLeft:number;\r\n  \r\n  public rightPadTop:number;\r\n  public rightPadLeft:number;\r\n\r\n  mediaHidden = true;\r\n  \r\n  constructor(private router:Router, private activatedRoute:ActivatedRoute ) {\r\n    super();\r\n   }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n\r\n    this.activatedRoute.params.subscribe(params => {\r\n      var dashboardId = params['name'];\r\n      console.log(\"dbi\", dashboardId);\r\n      this.loadDashboard(dashboardId);\r\n      \r\n      console.log(\"rid\", dashboardId);\r\n      setTimeout(() => {\r\n        var h = window.innerHeight;\r\n        var w = window.innerWidth;\r\n\r\n        self.leftPadTop = h / 2 - self.padSize/2\r\n        self.leftPadLeft = w / 4 - self.padSize/2 \r\n        \r\n        self.rightPadTop = h / 2 - self.padSize/2\r\n        self.rightPadLeft = w - w / 4 - self.padSize/2 \r\n        \r\n\r\n      }, 0);\r\n    });\r\n  }\r\n\r\n  handleMediaClose(): void {\r\n    console.log('click ok');\r\n    this.mediaHidden = true;\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"img-viewer {{imgViewerClass}}\\\">\\r\\n    <div class=\\\"img-viewer-panel\\\">\\r\\n      <div class=\\\"img-viewer-panel-header\\\">\\r\\n        <div nz-row>\\r\\n          <div nz-col nzSpan=\\\"3\\\">\\r\\n              <i nz-icon (click)=\\\"closeImageViewer()\\\" nzType=\\\"rollback\\\" nzTheme=\\\"outline\\\"></i>\\r\\n          </div>\\r\\n        <div nz-col nzSpan=\\\"21\\\">\\r\\n          <div *ngIf=\\\"showOperate\\\" class=\\\"img-viewer-panel-header-operation\\\">\\r\\n            <span nz-tooltip nzPlacement=\\\"bottom\\\" [nzTitle]=\\\"imageViewerType.zoomInToolTip\\\" *ngIf=\\\"zoom\\\" (click)=\\\"zoomInImg()\\\"><i nz-icon nzType=\\\"zoom-in\\\"></i></span>\\r\\n            <span nz-tooltip nzPlacement=\\\"bottom\\\" [nzTitle]=\\\"imageViewerType.zoomOutToolTip\\\" *ngIf=\\\"zoom\\\" (click)=\\\"zoomOutImg()\\\"><i nz-icon nzType=\\\"zoom-out\\\"></i></span>\\r\\n            <span nz-tooltip nzPlacement=\\\"bottom\\\" [nzTitle]=\\\"imageViewerType.rotateLeftToolTip\\\" *ngIf=\\\"rotate\\\" (click)=\\\"rotateImg(false)\\\"><i nz-icon nzType=\\\"undo\\\"></i></span>\\r\\n            <span nz-tooltip nzPlacement=\\\"bottom\\\" [nzTitle]=\\\"imageViewerType.rotateRightToolTip\\\" *ngIf=\\\"rotate\\\" (click)=\\\"rotateImg(true)\\\"><i nz-icon nzType=\\\"redo\\\"></i></span>\\r\\n            <span nz-tooltip nzPlacement=\\\"bottom\\\" [nzTitle]=\\\"imageViewerType.resetToolTip\\\" *ngIf=\\\"reset\\\" (click)=\\\"showImg()\\\"><i nz-icon nzType=\\\"sync\\\"></i></span>\\r\\n            <span nz-tooltip nzPlacement=\\\"bottom\\\" [nzTitle]=\\\"imageViewerType.fullScreenToolTip\\\" *ngIf=\\\"fullscreen\\\" (click)=\\\"fullscreenImg()\\\"><i nz-icon nzType=\\\"fullscreen\\\"></i></span>\\r\\n            <span nz-tooltip nzPlacement=\\\"bottom\\\" [nzTitle]=\\\"imageViewerType.downloadToolTip\\\" *ngIf=\\\"download\\\" (click)=\\\"downloadImg()\\\"><i nz-icon nzType=\\\"download\\\"></i></span>\\r\\n          </div>\\r\\n      </div>\\r\\n      </div>\\r\\n      </div>\\r\\n      <div class=\\\"img-viewer-panel-body\\\" [class.img-viewer-panel-body-has-footer]=\\\"images.length > 1\\\">\\r\\n        <div class=\\\"img-viewer-panel-body-content\\\">\\r\\n  \\r\\n        </div>\\r\\n        <span *ngIf=\\\"imgTotal > 1\\\" class=\\\"img-viewer-panel-body-prev\\\" (click)=\\\"prevImg()\\\"><i nz-icon nzType=\\\"left\\\"></i></span>\\r\\n        <span *ngIf=\\\"imgTotal > 1\\\" class=\\\"img-viewer-panel-body-next\\\" (click)=\\\"nextImg()\\\"><i nz-icon nzType=\\\"right\\\"></i></span>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"imgTotal > 1\\\" class=\\\"img-viewer-panel-footer\\\">\\r\\n      {{currentImgIndex}} / {{imgTotal}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"","module.exports = \".img-viewer {\\n  position: relative;\\n  line-height: 1.5;\\n  font-family: Consolas, Menlo, Courier, monospace;\\n  text-align: left;\\n  color: rgba(0, 0, 0, 0.65);\\n  width: 100%;\\n  height: 450px; }\\n  .img-viewer .img-viewer-panel {\\n    width: 100%;\\n    height: 100%;\\n    font-size: 12px;\\n    border: 1px solid none;\\n    display: inline-block;\\n    border-radius: 4px;\\n    vertical-align: middle;\\n    position: relative;\\n    padding-top: 50px; }\\n  .img-viewer .img-viewer-panel-header {\\n      padding: 8px 12px;\\n      height: 50px;\\n      border-radius: 4px 4px 0 0;\\n      border-bottom: 1px solid none;\\n      overflow: hidden;\\n      position: absolute;\\n      top: 0;\\n      left: 0;\\n      width: 100%;\\n      font-size: 24px;\\n      line-height: 33px; }\\n  .img-viewer .img-viewer-panel-header-pdf {\\n        position: absolute;\\n        left: 12px; }\\n  .img-viewer .img-viewer-panel-header-operation {\\n        position: absolute;\\n        right: 12px; }\\n  .img-viewer .img-viewer-panel-header-operation span {\\n          margin: 0 3px; }\\n  .img-viewer .img-viewer-panel-body {\\n      height: 100%;\\n      font-size: 12px;\\n      position: relative; }\\n  .img-viewer .img-viewer-panel-body .switch, .img-viewer .img-viewer-panel-body .img-viewer-panel-body-prev, .img-viewer .img-viewer-panel-body .img-viewer-panel-body-next {\\n        position: absolute;\\n        top: 50%;\\n        -webkit-transform: translate(0, -50%);\\n                transform: translate(0, -50%);\\n        font-size: 24px; }\\n  .img-viewer .img-viewer-panel-body .switch:hover, .img-viewer .img-viewer-panel-body .img-viewer-panel-body-prev:hover, .img-viewer .img-viewer-panel-body .img-viewer-panel-body-next:hover {\\n          color: #cccccc; }\\n  .img-viewer .img-viewer-panel-body-prev {\\n        left: 12px; }\\n  .img-viewer .img-viewer-panel-body-next {\\n        right: 12px; }\\n  .img-viewer .img-viewer-panel-body-content {\\n        padding: 0;\\n        overflow: hidden;\\n        height: 100%; }\\n  .img-viewer .img-viewer-panel-body-has-footer {\\n        padding-bottom: 50px; }\\n  .img-viewer .img-viewer-panel-footer {\\n      height: 50px;\\n      border-radius: 0 0 4px 4px;\\n      border-top: 1px solid none;\\n      overflow: hidden;\\n      position: absolute;\\n      bottom: 0;\\n      left: 0;\\n      width: 100%;\\n      font-size: 16px;\\n      text-align: center;\\n      line-height: 50px;\\n      background-color: #cacaca; }\\n  :host ::ng-deep .iv-loader {\\n  border-top: 1.1em solid rgba(0, 0, 0, 0.7);\\n  border-right: 1.1em solid rgba(36, 239, 43, 0.7);\\n  border-bottom: 1.1em solid rgba(254, 202, 55, 0.7);\\n  border-left: 1.1em solid rgba(254, 207, 219, 0.7); }\\n  :host ::ng-deep .iv-snap-view {\\n  display: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL3dlYkFwcC9zcmMvYXBwL2ltYWdlLXZpZXdlci9EOlxcdGltIHByaXZhdFxcZ2l0aHViXFxrZXJ2aVxca2VydmktdWlcXGtlcnZpXFx1aVxcd2ViL3Byb2plY3RzXFx3ZWJBcHBcXHNyY1xcYXBwXFxpbWFnZS12aWV3ZXJcXGltYWdlLXZpZXdlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNQTtFQUNFLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsZ0RBQWdEO0VBQ2hELGdCQUFnQjtFQUNoQiwwQkFUd0I7RUFVeEIsV0FBVztFQUNYLGFBQWEsRUFBQTtFQVBmO0lBVUksV0FaTztJQWFQLFlBYk87SUFjUCxlQWpCTztJQWtCUCxzQkFoQmM7SUFpQmQscUJBQXFCO0lBQ3JCLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLGlCQUFpQixFQUFBO0VBbEJyQjtNQXFCTSxpQkFBaUI7TUFDakIsWUFBWTtNQUNaLDBCQUEwQjtNQUMxQiw2QkEzQlk7TUE0QlosZ0JBQWdCO01BQ2hCLGtCQUFrQjtNQUNsQixNQUFNO01BQ04sT0FBTztNQUNQLFdBL0JLO01BZ0NMLGVBQWU7TUFDZixpQkFBaUIsRUFBQTtFQS9CdkI7UUFrQ1Esa0JBQWtCO1FBQ2xCLFVBQVUsRUFBQTtFQW5DbEI7UUF1Q1Esa0JBQWtCO1FBQ2xCLFdBQVcsRUFBQTtFQXhDbkI7VUEyQ1UsYUFBYSxFQUFBO0VBM0N2QjtNQWlETSxZQUFZO01BQ1osZUF2REs7TUF3REwsa0JBQWtCLEVBQUE7RUFuRHhCO1FBc0RRLGtCQUFrQjtRQUNsQixRQUFRO1FBQ1IscUNBQTZCO2dCQUE3Qiw2QkFBNkI7UUFDN0IsZUFBZSxFQUFBO0VBekR2QjtVQTREVSxjQUFjLEVBQUE7RUE1RHhCO1FBa0VRLFVBQVUsRUFBQTtFQWxFbEI7UUF1RVEsV0FBVyxFQUFBO0VBdkVuQjtRQTJFUSxVQUFVO1FBQ1YsZ0JBQWdCO1FBQ2hCLFlBQVksRUFBQTtFQTdFcEI7UUFpRlEsb0JBQW9CLEVBQUE7RUFqRjVCO01Bc0ZNLFlBQVk7TUFDWiwwQkFBMEI7TUFDMUIsMEJBM0ZZO01BNEZaLGdCQUFnQjtNQUNoQixrQkFBa0I7TUFDbEIsU0FBUztNQUNULE9BQU87TUFDUCxXQUFXO01BQ1gsZUFBZTtNQUNmLGtCQUFrQjtNQUNsQixpQkFBaUI7TUFDakIseUJBQXlCLEVBQUE7RUFLL0I7RUFDRSwwQ0FBMEM7RUFDMUMsZ0RBQWdEO0VBQ2hELGtEQUFrRDtFQUNsRCxpREFBaUQsRUFBQTtFQUduRDtFQUNFLGFBQWEsRUFBQSIsImZpbGUiOiJwcm9qZWN0cy93ZWJBcHAvc3JjL2FwcC9pbWFnZS12aWV3ZXIvaW1hZ2Utdmlld2VyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiJHByZWZpeDogJ2ltZy12aWV3ZXInO1xyXG4kc2l6ZTogMTJweDtcclxuJGNvbG9yOiByZ2JhKDAsIDAsIDAsIC42NSk7XHJcbiRib3JkZXJDb2xvcjogbm9uZTtcclxuJGZ1bGw6IDEwMCU7XHJcblxyXG4uI3skcHJlZml4fSB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjU7XHJcbiAgZm9udC1mYW1pbHk6IENvbnNvbGFzLCBNZW5sbywgQ291cmllciwgbW9ub3NwYWNlO1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgY29sb3I6ICRjb2xvcjtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDQ1MHB4O1xyXG5cclxuICAuI3skcHJlZml4fS1wYW5lbCB7XHJcbiAgICB3aWR0aDogJGZ1bGw7XHJcbiAgICBoZWlnaHQ6ICRmdWxsO1xyXG4gICAgZm9udC1zaXplOiAkc2l6ZTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRib3JkZXJDb2xvcjtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBwYWRkaW5nLXRvcDogNTBweDtcclxuXHJcbiAgICAmLWhlYWRlciB7XHJcbiAgICAgIHBhZGRpbmc6IDhweCAxMnB4O1xyXG4gICAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IDRweCA0cHggMCAwO1xyXG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGJvcmRlckNvbG9yO1xyXG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHRvcDogMDtcclxuICAgICAgbGVmdDogMDtcclxuICAgICAgd2lkdGg6ICRmdWxsO1xyXG4gICAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiAzM3B4O1xyXG5cclxuICAgICAgJi1wZGYge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBsZWZ0OiAxMnB4O1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmLW9wZXJhdGlvbiB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHJpZ2h0OiAxMnB4O1xyXG5cclxuICAgICAgICBzcGFuIHtcclxuICAgICAgICAgIG1hcmdpbjogMCAzcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi1ib2R5IHtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICBmb250LXNpemU6ICRzaXplO1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgICAuc3dpdGNoIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiA1MCU7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgLTUwJSk7XHJcbiAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG5cclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgIGNvbG9yOiAjY2NjY2NjO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgJi1wcmV2IHtcclxuICAgICAgICBAZXh0ZW5kIC5zd2l0Y2g7XHJcbiAgICAgICAgbGVmdDogMTJweDtcclxuICAgICAgfVxyXG5cclxuICAgICAgJi1uZXh0IHtcclxuICAgICAgICBAZXh0ZW5kIC5zd2l0Y2g7XHJcbiAgICAgICAgcmlnaHQ6IDEycHg7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICYtY29udGVudCB7XHJcbiAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgfVxyXG5cclxuICAgICAgJi1oYXMtZm9vdGVyIHtcclxuICAgICAgICBwYWRkaW5nLWJvdHRvbTogNTBweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYtZm9vdGVyIHtcclxuICAgICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgICBib3JkZXItcmFkaXVzOiAwIDAgNHB4IDRweDtcclxuICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRib3JkZXJDb2xvcjtcclxuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICBib3R0b206IDA7XHJcbiAgICAgIGxlZnQ6IDA7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgbGluZS1oZWlnaHQ6IDUwcHg7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNjYWNhY2E7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLml2LWxvYWRlciB7XHJcbiAgYm9yZGVyLXRvcDogMS4xZW0gc29saWQgcmdiYSgwLCAwLCAwLCAwLjcpO1xyXG4gIGJvcmRlci1yaWdodDogMS4xZW0gc29saWQgcmdiYSgzNiwgMjM5LCA0MywgMC43KTtcclxuICBib3JkZXItYm90dG9tOiAxLjFlbSBzb2xpZCByZ2JhKDI1NCwgMjAyLCA1NSwgMC43KTtcclxuICBib3JkZXItbGVmdDogMS4xZW0gc29saWQgcmdiYSgyNTQsIDIwNywgMjE5LCAwLjcpO1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLml2LXNuYXAtdmlld3tcclxuICBkaXNwbGF5OiBub25lO1xyXG59Il19 */\"","\r\n//based on https://github.com/LZHD/ng-picture-viewer\r\n//Copyright 2019 Tim Wentzlau\r\n// Licensed under MIT\r\nimport {\r\n    AfterViewInit,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Inject,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Optional,\r\n    Output,\r\n    Renderer2\r\n  } from '@angular/core';\r\n  import {DOCUMENT} from '@angular/common';\r\n  import ImageViewer from 'iv-viewer';\r\n  import {FullScreenViewer} from 'iv-viewer';\r\n  import {ImgViewerConfig} from './image-viewer.config';\r\n  import {IvViewerType} from './interfaces/iv-viewer.type';\r\n  import {ImgViewerType} from './interfaces/img-viewer.type';\r\n\r\n  @Component({\r\n    selector: 'nz-picture-viewer',\r\n    templateUrl: './image-viewer.component.html',\r\n    styleUrls: ['./image-viewer.component.scss']\r\n  })\r\n  export class ImgViewerComponent implements OnInit, OnDestroy, AfterViewInit {\r\n    @Input() imgViewerClass: string;\r\n    @Input() images: string[] = [];\r\n    @Input() showOperate = true;\r\n    @Input() zoom = true;\r\n    @Input() rotate = true;\r\n    @Input() reset = true;\r\n    @Input() fullscreen = true;\r\n    @Input() download = true;\r\n    @Input() defaultName = 'download';\r\n    @Output() prevChange: EventEmitter<number> = new EventEmitter<number>();\r\n    @Output() nextChange: EventEmitter<number> = new EventEmitter<number>();\r\n    @Output() closeViewer: EventEmitter<number> = new EventEmitter();\r\n    ROTATE_ANGLE = 90;\r\n    imageViewer$: any;\r\n    fullScreenViewer$: any;\r\n    element: HTMLElement;\r\n    currentImgIndex = 1;\r\n    imgTotal = 0;\r\n    zoomValue = 100;\r\n    isVertical = false;\r\n    imgRotate = 0;\r\n    imgViewerConfig: ImgViewerConfig;\r\n    ivViewerType: IvViewerType;\r\n    imageViewerType: ImgViewerType;\r\n\r\n    constructor(\r\n      private el: ElementRef,\r\n      private renderer: Renderer2,\r\n      @Inject(DOCUMENT) private doc: Document,\r\n      @Optional() private config: ImgViewerConfig\r\n    ) {\r\n      this.element = this.el.nativeElement as HTMLElement;\r\n      this.imgViewerConfig = new ImgViewerConfig();\r\n      this.ivViewerType = this.imgViewerConfig.ivViewerType;\r\n      this.imageViewerType = this.imgViewerConfig.imageViewerType;\r\n      if (this.config && this.config.ivViewerType) {\r\n        this.ivViewerType = Object.assign(this.ivViewerType, this.config.ivViewerType);\r\n      }\r\n      if (this.config && this.config.imageViewerType) {\r\n        this.imageViewerType = Object.assign(this.imageViewerType, this.config.imageViewerType);\r\n      }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n      this.imgTotal = this.images.length;\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n      this.initImgViewer();\r\n    }\r\n\r\n    zoomInImg(): void {\r\n      this.zoomValue += 10;\r\n      this.imageViewer$.zoom(this.zoomValue);\r\n    }\r\n\r\n    zoomOutImg(): void {\r\n      if (this.zoomValue === 100) {\r\n        return;\r\n      }\r\n      this.zoomValue -= 10;\r\n      if (this.zoomValue < 0) {\r\n        this.zoomValue = 0;\r\n      }\r\n      this.imageViewer$.zoom(this.zoomValue);\r\n    }\r\n\r\n    rotateImg(isClockwise: boolean): void {\r\n      this.beforeRotateImg().then((time: number) => {\r\n        if (isClockwise) {\r\n          this.imgRotate += this.ROTATE_ANGLE;\r\n        } else {\r\n          this.imgRotate -= this.ROTATE_ANGLE;\r\n        }\r\n        this.isVertical = !this.isVertical;\r\n        time <= 0 ? this.addImgRotate() : setTimeout(() => this.addImgRotate(), time);\r\n      });\r\n    }\r\n\r\n    fullscreenImg(): void {\r\n      this.beforeRotateImg().then((time: number) => {\r\n        if (time <= 0) {\r\n          this.fullScreenViewer$.show(this.images[this.currentImgIndex - 1]);\r\n          this.addImgRotate(false);\r\n        } else {\r\n          setTimeout(() => {\r\n            this.fullScreenViewer$.show(this.images[this.currentImgIndex - 1]);\r\n            this.addImgRotate(false);\r\n          }, time);\r\n        }\r\n      });\r\n    }\r\n\r\n    downloadImg(): void {\r\n      const download = this.renderer.createElement('a');\r\n      this.renderer.setAttribute(download, 'download', `${this.defaultName}-${this.currentImgIndex}`);\r\n      this.renderer.setAttribute(download, 'display', 'none');\r\n      this.renderer.setAttribute(download, 'href', this.images[this.currentImgIndex - 1]);\r\n      this.renderer.setAttribute(download, 'target', '_blank');\r\n      this.renderer.appendChild(this.element, download);\r\n      download.click();\r\n      this.renderer.removeChild(this.renderer, download);\r\n    }\r\n\r\n    prevImg(): void {\r\n      this.isVertical = false;\r\n      this.currentImgIndex--;\r\n      if (this.currentImgIndex <= 0) {\r\n        this.currentImgIndex = this.imgTotal;\r\n      }\r\n      //this.showImg();\r\n      this.prevChange.emit(this.currentImgIndex);\r\n    }\r\n\r\n    nextImg(): void {\r\n      this.isVertical = false;\r\n      this.currentImgIndex++;\r\n      if (this.currentImgIndex > this.imgTotal) {\r\n        this.currentImgIndex = 1;\r\n      }\r\n      //this.showImg();\r\n      this.nextChange.emit(this.currentImgIndex);\r\n    }\r\n\r\n    closeImageViewer(){\r\n      this.closeViewer.emit();\r\n    }\r\n\r\n    private initImgViewer(): void {\r\n      this.imageViewer$ = new ImageViewer(this.element.querySelector('.img-viewer-panel-body-content'), this.ivViewerType);\r\n      this.fullScreenViewer$ = new FullScreenViewer(this.ivViewerType);\r\n      //this.showImg();\r\n    }\r\n\r\n    private addImgRotate(isAnimation = true): void {\r\n      let scale = '';\r\n      if (this.isVertical && this.isImgOverVertical()) {\r\n        scale = `scale(${this.getScale()})`;\r\n      }\r\n      const rotate = `rotate(${this.imgRotate}deg)`;\r\n      if (isAnimation) {\r\n        this.addTransition('iv-snap-image');\r\n        this.addTransition('iv-small-image');\r\n      }\r\n      this.setImgRotate('iv-snap-image', rotate, scale);\r\n      this.setImgRotate('iv-small-image', rotate, scale);\r\n      setTimeout(() => {\r\n        if (isAnimation) {\r\n          this.removeAnimation('iv-snap-image');\r\n          this.removeAnimation('iv-small-image');\r\n        }\r\n      }, 500);\r\n    }\r\n\r\n    private async beforeRotateImg(): Promise<any> {\r\n      this.zoomValue = 100;\r\n      const time: number = this.imageViewer$._state.zoomValue - this.zoomValue;\r\n      await this.imageViewer$.resetZoom();\r\n      await this.imageViewer$.refresh();\r\n      return time === 0 ? 0 : 500;\r\n    }\r\n\r\n    private beforeShowImg(): void {\r\n      this.imgRotate = 0;\r\n      this.isVertical = false;\r\n      const currentImg = this.element.querySelector('.iv-small-image');\r\n      if (!!currentImg) {\r\n        this.renderer.removeChild(this.element, currentImg);\r\n      }\r\n      this.setStyle('iv-loader', 'visibility', 'auto');\r\n      this.setStyle('options-image-viewer', 'visibility', 'inherit');\r\n    }\r\n\r\n    showImg(): void {\r\n      this.beforeShowImg();\r\n      \r\n      this.imageViewer$.load(this.images[0]);\r\n    }\r\n\r\n    private isImgOverVertical(): boolean {\r\n      const imgViewerHeight = this.element.clientHeight;\r\n      const currentImgWidth = this.element.querySelector('.iv-small-image').clientWidth;\r\n      return imgViewerHeight < currentImgWidth + 10;\r\n    }\r\n\r\n    private getScale(): number {\r\n      const imgViewerHeight = this.element.querySelector('.img-viewer-panel-body-content').clientHeight;\r\n      const currentImgWidth = this.element.querySelector('.iv-small-image').clientWidth;\r\n      const differenceWidth = currentImgWidth - imgViewerHeight;\r\n      if (differenceWidth >= 250 && differenceWidth < 300) {\r\n        return differenceWidth / imgViewerHeight - 0.1;\r\n      } else if (differenceWidth >= 300 && differenceWidth < 400) {\r\n        return differenceWidth / imgViewerHeight - 0.15;\r\n      } else if (differenceWidth >= 400) {\r\n        return differenceWidth / imgViewerHeight - 0.32;\r\n      } else if (differenceWidth < 0) {\r\n        return 1;\r\n      }\r\n      return 0.6;\r\n    }\r\n\r\n    private addTransition(node): void {\r\n      this.setStyle(node, 'transition', '0.5s linear');\r\n    }\r\n\r\n    private removeAnimation(node): void {\r\n      this.setStyle(node, 'transition', 'auto');\r\n    }\r\n\r\n    private setImgRotate(node, roate, scale): void {\r\n      this.setStyle(node, 'transform', `${roate} ${scale}`);\r\n    }\r\n\r\n    private setStyle(node, name, value): void {\r\n      const elements = this.doc.querySelectorAll(`.${node}`);\r\n      elements.forEach(ele => this.renderer.setStyle(ele, name, value));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n      if (!!this.imageViewer$) {\r\n        this.imageViewer$ = this.imageViewer$.destroy();\r\n      }\r\n      if (!!this.fullScreenViewer$) {\r\n        this.fullScreenViewer$ = this.fullScreenViewer$.destroy();\r\n      }\r\n    }\r\n  }\r\n","import {IvViewerType} from './interfaces/iv-viewer.type';\r\nimport {ImgViewerType} from './interfaces/img-viewer.type';\r\n\r\nexport class ImgViewerConfig {\r\n  ivViewerType?: IvViewerType = {\r\n    zoomValue: 100,\r\n    maxZoom: 500,\r\n    snapView: false,\r\n    refreshOnResize: true,\r\n    zoomOnMouseWheel: true,\r\n  };\r\n  imageViewerType?: ImgViewerType = {\r\n    zoomInToolTip: 'Zoom in',\r\n    zoomOutToolTip: 'Zoom put',\r\n    rotateLeftToolTip: 'Rotate left',\r\n    rotateRightToolTip: 'Rotate right',\r\n    resetToolTip: 'Reset tools',\r\n    fullScreenToolTip: 'Full screen',\r\n    downloadToolTip: 'Download',\r\n  };\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy93ZWJBcHAvc3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nz-layout>\\r\\n  <nz-content class=\\\"kervi-app-initializing\\\">\\r\\n    <div nz-row>\\r\\n      <div nz-col nzSpan=\\\"12\\\" nzOffset=\\\"6\\\">\\r\\n        <form nz-form \\r\\n          [formGroup]=\\\"loginForm\\\" \\r\\n          (ngSubmit)=\\\"submitForm()\\\"\\r\\n        >\\r\\n            <nz-form-item>\\r\\n              <nz-form-control>\\r\\n                <nz-input-group [nzPrefix]=\\\"prefixUser\\\">\\r\\n                  <input formControlName=\\\"userName\\\" nz-input placeholder=\\\"Username\\\" />\\r\\n                </nz-input-group>\\r\\n                <nz-form-explain *ngIf=\\\"loginForm.get('userName')?.dirty && loginForm.get('userName')?.errors\\\"\\r\\n                  >Please input your username!</nz-form-explain\\r\\n                >\\r\\n              </nz-form-control>\\r\\n            </nz-form-item>\\r\\n            <nz-form-item>\\r\\n              <nz-form-control>\\r\\n                <nz-input-group [nzPrefix]=\\\"prefixLock\\\">\\r\\n                  <input formControlName=\\\"password\\\" nz-input type=\\\"password\\\" placeholder=\\\"Password\\\" />\\r\\n                </nz-input-group>\\r\\n                <nz-form-explain *ngIf=\\\"loginForm.get('password')?.dirty && loginForm.get('password')?.errors\\\"\\r\\n                  >Please input your Password!</nz-form-explain\\r\\n                >\\r\\n              </nz-form-control>\\r\\n            </nz-form-item>\\r\\n            <nz-form-item>\\r\\n              <nz-form-control>\\r\\n                <button nz-button nzType=\\\"primary\\\" [disabled]=\\\"!loginForm.valid\\\">Log in</button>\\r\\n                <nz-form-explain *ngIf=\\\"invalidCredentials\\\"\\r\\n                  >Invalid user name or password</nz-form-explain\\r\\n                >\\r\\n              </nz-form-control>\\r\\n            </nz-form-item>\\r\\n          </form>\\r\\n          <ng-template #prefixUser><i nz-icon type=\\\"user\\\"></i></ng-template>\\r\\n          <ng-template #prefixLock><i nz-icon type=\\\"lock\\\"></i></ng-template>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nz-content>\\r\\n</nz-layout>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { NGXKerviService } from 'ngx-kervi'\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  userName: AbstractControl;\r\n  password: AbstractControl;\r\n  invalidCredentials:boolean = false;\r\n  \r\n  \r\n  constructor(fb: FormBuilder, private kerviService:NGXKerviService) {\r\n    var self = this;\r\n    this.loginForm = fb.group({  \r\n    'userName':  ['', Validators.required],\r\n    'password':  ['', Validators.required]  \r\n    });\r\n    \r\n    this.userName = this.loginForm.controls['userName'];\r\n    this.password = this.loginForm.controls['password']; \r\n   }\r\n\r\n   submitForm(): void {\r\n     var self = this;\r\n     if (this.loginForm.valid){\r\n      console.log(\"fv\");\r\n      this.kerviService.authenticate(this.userName.value, this.password.value)\r\n      .then(function(){\r\n         console.log(\"login ok\");\r\n       }).catch(function(){\r\n         console.log(\"login error\");\r\n         self.invalidCredentials=true;\r\n       });\r\n     } else {\r\n       console.log(\"fve\");\r\n    //   // for (const i in this.loginForm.controls) {\r\n    //   //   this.loginForm.controls[i].markAsDirty();\r\n    //   //   this.loginForm.controls[i].updateValueAndValidity();\r\n    //   // }\r\n     }\r\n    \r\n  } \r\n  ngOnInit() {\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy93ZWJBcHAvc3JjL2FwcC9tZWRpYS9tZWRpYS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div [hidden]=\\\"!showImageViewer\\\">\\r\\n\\t<nz-picture-viewer (closeViewer)=\\\"closeViewer()\\\" (prevChange)='nextImage($event)' (nextChange)='nextImage($event)' #imageViewer></nz-picture-viewer>\\r\\n</div>\\r\\n<div [hidden]=\\\"showImageViewer\\\">\\r\\n\\t<div style=\\\"max-height: 80%;overflow-y: auto; \\\" nz-col nzSpan=\\\"8\\\">\\r\\n\\t\\t<nz-tree [nzData]=\\\"nodes\\\" [nzExpandedKeys]=\\\"defaultExpandedKeys\\\" nzAsyncData (nzClick)=\\\"nzEvent($event)\\\" (nzExpandChange)=\\\"nzEvent($event)\\\"> </nz-tree>\\r\\n\\t</div>\\r\\n\\t<div style=\\\"min-height:40px;max-height: 300px;overflow-y: auto; border-left: 1px solid black;\\\" nz-col nzSpan=\\\"16\\\">\\r\\n\\t\\t\\r\\n\\t\\t<nz-empty *ngIf=\\\"files.length==0\\\" nzNotFoundContent=\\\"No files in folder\\\"></nz-empty>\\r\\n\\t\\t<div (dblclick)=\\\"showImage(file.key)\\\"  style=\\\"display: inline-block;margin-left:5px; margin-bottom:5px;\\\" *ngFor=\\\"let file of files\\\" nzHoverable >\\r\\n\\t\\t\\t<img alt=\\\"example\\\" [attr.src]=\\\"'data:image/png;base64,' + file.thumb\\\" />\\r\\n\\t\\t</div>\\r\\n\\t\\t<!-- <nz-card style=\\\"display: inline-block;\\\" *ngFor=\\\"let file of files\\\" nzHoverable style=\\\"width:140px\\\" >\\r\\n\\t\\t\\t<img alt=\\\"example\\\" [attr.src]=\\\"'data:image/png;base64,' + file.data\\\" />\\r\\n\\t\\t\\t<ng-template #coverTemplate>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</nz-card> -->\\r\\n\\t\\t\\r\\n\\t</div>\\r\\n</div>\\r\\n\"","// Copyright (c) 2019, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\r\nimport { KerviDirectoryComponent } from 'ngx-kervi';\r\nimport { NzFormatEmitEvent, NzTreeNodeOptions, NzTreeComponent } from 'ng-zorro-antd';\r\nimport { ImgViewerComponent } from '../image-viewer/image-viewer.component';\r\n\r\n@Component({\r\n  selector: 'app-media',\r\n  templateUrl: './media.component.html',\r\n  styleUrls: ['./media.component.css']\r\n})\r\nexport class MediaComponent extends KerviDirectoryComponent implements OnInit {\r\n  @ViewChild('nzTreeComponent') nzTreeComponent: NzTreeComponent;\r\n  @ViewChild('imageViewer') imageViewer: ImgViewerComponent;\r\n  @Input() files = [\r\n\r\n  ];\r\n  showImageViewer = false;\r\n  directoryFiles = {};\r\n\r\n\r\n  @Input() nodes: NzTreeNodeOptions[] = [\r\n    { title: 'root', key: '/' }\r\n  ];\r\n\r\n  defaultExpandedKeys = [];\r\n\r\n  constructor( ) {\r\n    super();\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  nzEvent(event: Required<NzFormatEmitEvent>): void {\r\n    console.log('trev', event);\r\n    const node = event.node;\r\n    if (event.eventName === 'click') {\r\n      this.files = [];\r\n      this.kerviService.GetDirectory(node.key).then( d => {\r\n        const files = d.files$.getValue();\r\n        for(const file of files) {\r\n          if (file.isFile){\r\n            this.kerviService.GetThumbnail(file.path).then( t =>{\r\n              this.files.push( { title: file.name, key: file.path, thumb: t});\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n    if (event.eventName === 'expand') {\r\n      if (node && node.getChildren().length === 0 && node.isExpanded) {\r\n        this.kerviService.GetDirectory(node.key).then( d => {\r\n          const files = d.files$.getValue();\r\n          const dirs = [];\r\n          for(const file of files) {\r\n            if (!file.isFile) {\r\n              dirs.push({ title: file.name, key: file.path, isLeaf: false});\r\n            }\r\n          }\r\n          node.addChildren(dirs);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  showImage(filePath) {\r\n    this.showImageViewer = true;\r\n    this.imageViewer.imgTotal = this.files.length;\r\n    this.kerviService.GetFile(filePath).then( f => {\r\n      this.imageViewer.images = ['data:image/png;base64,' + f];\r\n      this.imageViewer.showImg();\r\n    });\r\n  }\r\n\r\n  nextImage(event){\r\n    console.log(\"ni\", event);\r\n    const filePath = this.files[this.imageViewer.currentImgIndex-1].key;\r\n    this.kerviService.GetFile(filePath).then( f => {\r\n      this.imageViewer.images = ['data:image/png;base64,' + f];\r\n      this.imageViewer.showImg();\r\n    });\r\n  }\r\n\r\n  closeViewer(){\r\n    this.showImageViewer = false;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}