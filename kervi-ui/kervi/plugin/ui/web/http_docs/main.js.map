{"version":3,"sources":["webpack:///D:/dev/kervi/kervi/kervi-ui/kervi/ui/web/dist/kervi-js/fesm5/kervi-js.js","webpack:///D:/dev/kervi/kervi/kervi-ui/kervi/ui/web/dist/kervi-zorro/fesm5/kervi-zorro.js","webpack:///D:/dev/kervi/kervi/kervi-ui/kervi/ui/web/dist/ngx-kervi/fesm5/ngx-kervi.js","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/connect/connect.component.css","webpack:///./src/app/connect/connect.component.html","webpack:///./src/app/connect/connect.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACf;AACyB;;AAEhE;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,sDAAQ,yDAAyD,wBAAwB;AACnI;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,iCAAiC;AACxD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,mCAAmC;AAC1D,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,yCAAyC,wDAAwD;AACjG;AACA,yCAAyC,6CAA6C;AACtF,uBAAuB,EAAE;AACzB,uBAAuB;AACvB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,4BAA4B;AAC5B;AACA,mFAAmF;AACnF;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mCAAmC,uCAAuC;AAC1E,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iCAAiC,mCAAmC;AACpE,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,yCAAyC,wDAAwD;AACjG;AACA,yCAAyC,6CAA6C;AACtF,uBAAuB,EAAE;AACzB,uBAAuB;AACvB,gDAAgD,+DAA+D;AAC/G,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,gDAAgD,gGAAgG,KAAK;AACrJ;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,4BAA4B;AAC5B;AACA,mFAAmF;AACnF;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,iDAAiD;AACrF;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,8BAA8B,4DAA4D;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mCAAmC,uCAAuC;AAC1E,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA,4CAA4C,iEAAiE;AAC7G;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iCAAiC,mCAAmC;AACpE,mBAAmB,EAAE;AACrB,mBAAmB;AACnB,4CAA4C,+DAA+D;AAC3G;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qBAAqB;AAC9D;AACA;AACA,iBAAiB;AACjB,mBAAmB,EAAE;AACrB,mBAAmB,+CAA+C;AAClE;AACA;AACA;AACA,4CAA4C,6DAA6D;AACzG;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA,4CAA4C,oIAAoI;AAChL;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,2BAA2B,oDAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ,yCAAyC,UAAU;AACrF;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,6BAA6B,oDAAe;AAC5C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0BAA0B;AAC1B;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,2BAA2B;AAC3B;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,kCAAkC,oDAAe;AACjD,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,0BAA0B,sDAAQ,kCAAkC,UAAU;AAC9E;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ,+BAA+B,UAAU;AAC3E;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA,yCAAyC,sDAAQ,kEAAkE,2BAA2B;AAC9I;AACA;AACA;AACA,kCAAkC,sDAAQ,+BAA+B,UAAU;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,+BAA+B,oDAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ,iCAAiC,UAAU;AAC7E;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0BAA0B,sDAAQ,oCAAoC,UAAU;AAChF;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC,eAAe;AAC/C,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ,iCAAiC,UAAU;AAC7E;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA,0BAA0B,sDAAQ,kCAAkC,UAAU;AAC9E;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA,0BAA0B,sDAAQ,kCAAkC,UAAU;AAC9E;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA,0BAA0B,sDAAQ,yCAAyC,UAAU;AACrF;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,8BAA8B,sDAAQ,uCAAuC,UAAU;AACvF;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA,8BAA8B,sDAAQ,wCAAwC,UAAU;AACxF;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA,8BAA8B,sDAAQ,yCAAyC,UAAU;AACzF;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,2BAA2B;AAC3B;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0BAA0B;AAC1B;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,8BAA8B,sDAAQ,sCAAsC,UAAU;AACtF;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ,mCAAmC,UAAU;AAC/E;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA,0BAA0B,sDAAQ,oCAAoC,UAAU;AAChF;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,kCAAkC,sDAAQ,kCAAkC,UAAU;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0BAA0B,sDAAQ,kCAAkC,UAAU;AAC9E;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,kCAAkC,sDAAQ,oCAAoC,UAAU;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,0CAA0C,sDAAQ,qEAAqE,4BAA4B;AACnJ;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sDAAQ,mCAAmC,UAAU;AACnF;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,iCAAiC;AACjC;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,iCAAiC,EAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gCAAgC,sDAAQ,uCAAuC,kBAAkB;AACjG;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oDAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ,yCAAyC,UAAU;AACrF;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,iEAAiE,sDAAQ;AACzE;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,iEAAiE,sDAAQ;AACzE;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,sDAAQ,4DAA4D,yBAAyB;AAC5I;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oCAAoC,sDAAQ,mDAAmD,sBAAsB;AACrH;AACA,2BAA2B,EAAE;AAC7B,6CAA6C,EAAE;AAC/C;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oCAAoC,sDAAQ,mDAAmD,sBAAsB;AACrH;AACA;AACA;AACA,sCAAsC,sDAAQ,uCAAuC,UAAU;AAC/F;AACA;AACA,wDAAwD,sDAAQ,mDAAmD,sBAAsB;AACzI;AACA;AACA;AACA;AACA,2CAA2C,QAAQ,gBAAgB;AACnE;AACA;AACA;AACA;AACA,yCAAyC,0BAA0B;AACnE;AACA;AACA;AACA,mCAAmC,QAAQ,gBAAgB;AAC3D;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,oDAAe;AAC9C,oCAAoC,oDAAe;AACnD;AACA,sCAAsC,oDAAe;AACrD;AACA,gCAAgC,oDAAe;AAC/C,mCAAmC,oDAAe;AAClD,oCAAoC,oDAAe;AACnD,oCAAoC,oDAAe;AACnD,6BAA6B,oDAAe;AAC5C;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,gCAAgC,oDAAe;AAC/C,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,sCAAsC,sDAAQ,kCAAkC,UAAU;AAC1F;AACA;AACA,2CAA2C,EAAE;AAC7C,+DAA+D,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ,gBAAgB;AAC3D;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,sCAAsC,sDAAQ,kCAAkC,UAAU;AAC1F;AACA;AACA,2CAA2C,EAAE;AAC7C,yDAAyD,EAAE;AAC3D;AACA;AACA;AACA;AACA,mCAAmC,QAAQ,gBAAgB;AAC3D;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,sCAAsC,sDAAQ,kCAAkC,UAAU;AAC1F;AACA;AACA,2CAA2C,EAAE;AAC7C,yDAAyD,EAAE;AAC3D;AACA;AACA;AACA;AACA,mCAAmC,QAAQ,gBAAgB;AAC3D;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,8CAA8C,sDAAQ,6CAA6C,oBAAoB;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ,gBAAgB;AAC3D;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,uCAAuC,sBAAsB;AAC7D;AACA;AACA,0BAA0B,sDAAQ,kCAAkC,UAAU;AAC9E;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0BAA0B,sDAAQ,kCAAkC,UAAU;AAC9E;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,qCAAqC,EAAE;AACvC;AACA,oCAAoC,sDAAQ,mDAAmD,sBAAsB;AACrH;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,4CAA4C,6LAA6L;AACzO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEsb;;AAEtb,2CAA2C,cAAc,+tyK;;;;;;;;;;;;ACxqGzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmJ;AACjH;AAC4S;AACpS;AACL;AACU;AACW;AACf;AACE;AAC4B;AACtB;AACK;;AAExD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD,WAAW;AAC/D,2DAA2D,sEAAgB,EAAE,gDAAgD,gCAAgC,EAAE,gDAAgD;AAC/M;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,yCAAyC,YAAY,KAAK,YAAY,KAAK,aAAa,KAAK,UAAU,KAAK,QAAQ,KAAK,wBAAwB,KAAK,yBAAyB,KAAK,yBAAyB,KAAK,uBAAuB,sBAAsB,OAAO,KAAK,SAAS;AACpR;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,0DAA0D,WAAW;AACrE;AACA,CAAC,CAAC,sEAA4B;;AAE9B;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,yRAAyR,0BAA0B,iEAAiE,sBAAsB,8tBAA8tB,0BAA0B,2FAA2F,sBAAsB;AACnvC;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA,CAAC,CAAC,8DAAoB;;AAEtB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,wIAAwI,UAAU,0jBAA0jB,aAAa,oJAAoJ,8CAA8C,uDAAuD,YAAY;AAC99B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,CAAC,CAAC,8DAAoB;;AAEtB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA,CAAC,CAAC,+DAAqB;;AAEvB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,+LAA+L,wBAAwB;AACvN;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,CAAC,CAAC,8DAAoB;;AAEtB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,CAAC,CAAC,gEAAsB;;AAExB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,CAAC,CAAC,6DAAmB;;AAErB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,QAAQ,kDAAa;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,qDAAqD;AACrD,SAAS,OAAO,yDAAe,EAAE;AACjC,SAAS,OAAO,8DAAoB;AACpC,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,wBAAwB,OAAO,uDAAS,oBAAoB;AAC5D;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uDAAc;AAC9C,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,8DAAoB;AACpC,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,yBAAyB,OAAO,oDAAM,EAAE;AACxC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,QAAQ,kDAAa;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yBAAyB;AAClD;AACA,+BAA+B,uDAAuD;AACtF;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD;AACjD,SAAS,OAAO,yDAAe,EAAE;AACjC,SAAS,OAAO,8DAAoB;AACpC,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,wBAAwB,OAAO,uDAAS,oBAAoB;AAC5D;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,QAAQ,kDAAa;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yBAAyB;AAClD;AACA,+BAA+B,uDAAuD;AACtF;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD;AACtD,SAAS,OAAO,yDAAe,EAAE;AACjC,SAAS,OAAO,8DAAoB;AACpC,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,wBAAwB,OAAO,uDAAS,oBAAoB;AAC5D;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD,+BAA+B,0DAAY;AAC3C;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,oWAAoW,yBAAyB,iKAAiK,0BAA0B;AACxjB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD,WAAW;AACnE;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,uBAAuB,OAAO,oDAAM,EAAE;AACtC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD,+BAA+B,0DAAY;AAC3C;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,yKAAyK,6BAA6B;AACtM;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,uBAAuB,OAAO,oDAAM,EAAE;AACtC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,uFAAuF,cAAc;AACrG,4CAA4C,iBAAiB,cAAc,aAAa,sBAAsB,YAAY,qBAAqB,kBAAkB,WAAW,UAAU,WAAW;AACjM,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD,WAAW;AACjE;AACA,wBAAwB,OAAO,mDAAK,EAAE;AACtC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,uBAAuB,OAAO,oDAAM,EAAE;AACtC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD;AACpD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,oBAAoB,OAAO,mDAAK,EAAE;AAClC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,2BAA2B,OAAO,oDAAM,EAAE;AAC1C;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,kDAAkD,MAAM;AACxD;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,iDAAiD,aAAa;AAC9D;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,qBAAqB;AACrB;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,qBAAqB;AACrB;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA,uCAAuC,EAAE;AACzC;AACA,uCAAuC,EAAE;AACzC;AACA,uCAAuC,EAAE;AACzC;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD;AACjD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,uBAAuB,OAAO,oDAAM,EAAE;AACtC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uEAAa;AACrC,wBAAwB,6DAAmB;AAC3C,wBAAwB,4DAAY;AACpC,wBAAwB,wDAAc;AACtC,wBAAwB,0DAAW;AACnC,wBAAwB,+DAAiB;AACzC,wBAAwB,iEAAkB;AAC1C;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,qDAAqD,WAAW;AAChE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD,WAAW;AACjE;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAY;AACpC,wBAAwB,6DAAmB;AAC3C;AACA,wBAAwB,0DAAW;AACnC,wBAAwB,+DAAiB;AACzC;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,kBAAkB,iCAAiC;AACnD;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,yDAAyD;AACzD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,sBAAsB,OAAO,mDAAK,EAAE;AACpC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,wEAAwE,6CAA6C;AACrH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,yKAAyK,eAAe,SAAS,SAAS,YAAY,gHAAgH,SAAS,yMAAyM,QAAQ,SAAS,mIAAmI,QAAQ,SAAS,WAAW,oKAAoK,0JAA0J,SAAS,SAAS,WAAW,+GAA+G,4BAA4B,sLAAsL,+BAA+B,kOAAkO,kBAAkB,4DAA4D,SAAS,YAAY,iNAAiN,QAAQ,SAAS,WAAW,gFAAgF,QAAQ,SAAS,WAAW,oZAAoZ,4BAA4B,sJAAsJ,+BAA+B;AACtoF;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,qDAAqD;AACrD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,uBAAuB,OAAO,uDAAS,0BAA0B;AACjE;AACA;AACA,CAAC,CAAC,8DAAoB;;AAEtB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,UAAU,kBAAkB;AAC5B;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA,CAAC,CAAC,8DAAoB;;AAEtB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,UAAU,kBAAkB;AAC5B;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,uOAAuO,oBAAoB,2DAA2D,sCAAsC,+BAA+B,eAAe,4KAA4K,qKAAqK,yOAAyO;AACp8B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA,CAAC,CAAC,+DAAqB;;AAEvB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,kEAAkE,kBAAkB;AACpF;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,stBAAstB,oBAAoB,2FAA2F,iBAAiB;AACt1B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD;AACxD,SAAS,OAAO,mEAAqB;AACrC,MAAM;AACN;AACA,2BAA2B,OAAO,uDAAS,SAAS,yDAAW,IAAI;AACnE;AACA;AACA,CAAC,CAAC,+DAAqB;;AAEvB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,6DAA6D,WAAW;AACxE;AACA,CAAC,CAAC,+DAAqB;;AAEvB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA,wBAAwB,uEAAa;AACrC,wBAAwB,6DAAmB;AAC3C,wBAAwB,wDAAc;AACtC;AACA,wBAAwB,+DAAiB;AACzC,wBAAwB,sEAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEmsB;;AAEnsB,2CAA2C,cAAc,mn1G;;;;;;;;;;;;AC91DzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AAC2C;AACT;AACnB;AACpB;;AAEvC;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,CAAC,CAAC,yDAAgB;;AAElB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,0CAA0C,OAAO;AACjD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,sDAAsD,OAAO;AAC7D,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,qCAAqC,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,EAAE;AACvD;AACA;AACA;AACA;AACA,qDAAqD,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,EAAE;AACxD;AACA;AACA;AACA;AACA,sDAAsD,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK,6D;AAClB,+D;AACA,gB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK,4C;AAClB,8C;AACA,gB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,0DAA0D,WAAW;AACrE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0BAA0B,sDAAQ,wCAAwC,UAAU;AACpF;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ,wCAAwC,UAAU;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+DAA+D,WAAW;AAC1E;AACA,0BAA0B,OAAO,mDAAK,EAAE;AACxC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,oBAAoB,OAAO,mDAAK,EAAE;AAClC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,8DAA8D,WAAW;AACzE;AACA,0BAA0B,OAAO,mDAAK,EAAE;AACxC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,uBAAuB,OAAO,mDAAK,EAAE;AACrC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,qCAAqC,EAAE;AACvC,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD,WAAW;AACjE;AACA,mBAAmB,OAAO,mDAAK,EAAE;AACjC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,kCAAkC,sDAAQ,gDAAgD,UAAU;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD,WAAW;AACnE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD,yBAAyB,oDAAe;AACxC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,sCAAsC,EAAE;AACxC,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,iBAAiB,EAAE;AACxC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sDAAQ,4BAA4B,UAAU;AAC5E;AACA;AACA,+CAA+C,EAAE;AACjD;AACA,gDAAgD,EAAE;AAClD;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,oBAAoB,OAAO,mDAAK,EAAE;AAClC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,wBAAwB,OAAO,mDAAK,EAAE;AACtC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD,WAAW;AACjE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,yDAAyD,WAAW;AACpE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA;AACA,4BAA4B,yDAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD,WAAW;AACnE;AACA,qBAAqB,OAAO,mDAAK,EAAE;AACnC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"main.js","sourcesContent":["import { __values, __spread, __extends } from 'tslib';\nimport { BehaviorSubject } from 'rxjs';\nimport { Injectable, Component, NgModule } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\nvar KerviSpineBase = /** @class */ (function () {\r\n    function KerviSpineBase(constructorOptions) {\r\n        this.constructorOptions = constructorOptions;\r\n        this.isConnected = false;\r\n        this.doAuthenticate = false;\r\n        this.sessionId = null;\r\n        this.queryHandlers = [];\r\n        this.commandHandlers = [];\r\n        this.eventHandlers = [];\r\n        this.rpcQueue = {};\r\n        this.ready = false;\r\n        this.messageId = 0;\r\n        this.sensors = {};\r\n        this.controllers = {};\r\n        this.sensorTypes = [];\r\n        this.controllerTypes = [];\r\n        this.pointOfInterests = [];\r\n        this.application = null;\r\n        this.allowAnonymous = true;\r\n        this.firstOnOpen = true;\r\n        this.websocket = null;\r\n        this.options = {\r\n            userName: \"anonymous\",\r\n            password: null,\r\n            address: null,\r\n            onOpen: null,\r\n            onClose: null,\r\n            onAuthenticate: null,\r\n            onAuthenticateFailed: null,\r\n            onAuthenticateStart: null,\r\n            onLogOff: null,\r\n            autoConnect: true,\r\n            targetScope: null,\r\n            protocol: \"ws\",\r\n            apiToken: null\r\n        };\r\n        this.addEventHandler = (/**\r\n         * @param {?} eventName\r\n         * @param {?} id\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        function (eventName, id, callback) {\r\n        });\r\n        console.log(\"Kervi base spine init\", this.options, constructorOptions);\r\n        this.options = this.extend(this.options, constructorOptions);\r\n        console.log(\"kbo\", this.options);\r\n        this.connect();\r\n        /** @type {?} */\r\n        var self = this;\r\n        setInterval((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            var e_1, _a;\r\n            /** @type {?} */\r\n            var hangingNodes = [];\r\n            for (var id_1 in self.rpcQueue) {\r\n                /** @type {?} */\r\n                var query = self.rpcQueue[id_1];\r\n                if (query[\"callbackTimeout\"]) {\r\n                    if (Date.now() - query[\"ts\"] > query[\"timeout\"]) {\r\n                        /** @type {?} */\r\n                        var callback = query[\"callbackTimeout\"];\r\n                        hangingNodes.push(id_1);\r\n                        callback.call(self.options.targetScope);\r\n                    }\r\n                }\r\n            }\r\n            try {\r\n                for (var hangingNodes_1 = __values(hangingNodes), hangingNodes_1_1 = hangingNodes_1.next(); !hangingNodes_1_1.done; hangingNodes_1_1 = hangingNodes_1.next()) {\r\n                    var id = hangingNodes_1_1.value;\r\n                    delete self.rpcQueue[id];\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (hangingNodes_1_1 && !hangingNodes_1_1.done && (_a = hangingNodes_1.return)) _a.call(hangingNodes_1);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }), 1);\r\n    }\r\n    /**\r\n     * @protected\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.extend = /**\r\n     * @protected\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var p = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            p[_i] = arguments[_i];\r\n        }\r\n        for (var i = 1; i < p.length; i++)\r\n            for (var key in p[i])\r\n                if (p[i].hasOwnProperty(key))\r\n                    p[0][key] = p[i][key];\r\n        return p[0];\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} id\r\n     * @param {?} callback\r\n     * @param {?} callbackTimeout\r\n     * @param {?} timeout\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.addRPCCallback = /**\r\n     * @protected\r\n     * @param {?} id\r\n     * @param {?} callback\r\n     * @param {?} callbackTimeout\r\n     * @param {?} timeout\r\n     * @return {?}\r\n     */\r\n    function (id, callback, callbackTimeout, timeout) {\r\n        if (callback)\r\n            this.rpcQueue[id] = {\r\n                \"callback\": callback,\r\n                \"callbackTimeout\": callbackTimeout,\r\n                \"timeout\": timeout,\r\n                \"ts\": Date.now(),\r\n            };\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.handleRPCResponse = /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    function (message) {\r\n        if (message.id in this.rpcQueue) {\r\n            /** @type {?} */\r\n            var callback = this.rpcQueue[message.id][\"callback\"];\r\n            if (callback) {\r\n                delete this.rpcQueue[message.id];\r\n                callback.call(this.options.targetScope, message.response, message.response);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.handleEvent = /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    function (message) {\r\n        //console.log(\"ev\", message)\r\n        /** @type {?} */\r\n        var eventName = message.event;\r\n        /** @type {?} */\r\n        var id = message.id;\r\n        /** @type {?} */\r\n        var eventPath = eventName;\r\n        if (id) {\r\n            eventPath += \"/\" + id;\r\n        }\r\n        /** @type {?} */\r\n        var value = null;\r\n        if (message.args && message.args.length) {\r\n            value = message.args[0];\r\n        }\r\n        for (var n = 0; (n < this.eventHandlers.length); n++) {\r\n            /** @type {?} */\r\n            var h = this.eventHandlers[n];\r\n            if (h.eventName == eventPath)\r\n                h.callback.call(value, id, value);\r\n            else if (h.eventName == eventName)\r\n                h.callback.call(value, id, value);\r\n        }\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.handleCommand = /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    function (message) {\r\n        console.log(\"cmd\", this, message);\r\n        /** @type {?} */\r\n        var command = message.command;\r\n        /** @type {?} */\r\n        var args = null;\r\n        if (message.args && message.args.length) {\r\n            args = message.args[0];\r\n        }\r\n        for (var n = 0; (n < this.commandHandlers.length); n++) {\r\n            /** @type {?} */\r\n            var c = this.commandHandlers[n];\r\n            if (c.command == command)\r\n                c.callback.call(this, args);\r\n        }\r\n    };\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.connect = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.onOpen = /**\r\n     * @protected\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    function (evt) {\r\n        console.log(\"Kervi open\", this, evt);\r\n        this.isConnected = true;\r\n        this.eventHandlers = [];\r\n        this.commandHandlers = [];\r\n        this.queryHandlers = [];\r\n        console.log(\"Kervi spine ready\");\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.onClose = /**\r\n     * @protected\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    function (evt) {\r\n        console.log(\"Kervi spine on close\", evt);\r\n        this.isConnected = false;\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (this.options.onClose)\r\n            this.options.onClose.call(this.options.targetScope, evt);\r\n        this.firstOnOpen = true;\r\n        if (this.options.autoConnect) {\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                self.connect();\r\n            }), 1000);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} userName\r\n     * @param {?} password\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.authenticate = /**\r\n     * @param {?} userName\r\n     * @param {?} password\r\n     * @return {?}\r\n     */\r\n    function (userName, password) {\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.logoff = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.onMessage = /**\r\n     * @protected\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    function (evt) {\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.onError = /**\r\n     * @protected\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    function (evt) {\r\n        console.log(\"Kervi on error\", evt);\r\n    };\r\n    /**\r\n     * @param {?} command\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.addCommandHandler = /**\r\n     * @param {?} command\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    function (command, callback) {\r\n    };\r\n    /**\r\n     * @param {?} query\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.addQueryHandler = /**\r\n     * @param {?} query\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    function (query, callback) {\r\n    };\r\n    /**\r\n     * @param {?} command\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.sendCommand = /**\r\n     * @param {?} command\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    function (command) {\r\n        var p = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            p[_i - 1] = arguments[_i];\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} query\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.sendQuery = /**\r\n     * @param {?} query\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    function (query) {\r\n        var p = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            p[_i - 1] = arguments[_i];\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} eventName\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.triggerEvent = /**\r\n     * @param {?} eventName\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    function (eventName, id) {\r\n    };\r\n    return KerviSpineBase;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviWSSpine = /** @class */ (function (_super) {\r\n    __extends(KerviWSSpine, _super);\r\n    function KerviWSSpine(constructorOptions) {\r\n        var _this = _super.call(this, constructorOptions) || this;\r\n        _this.constructorOptions = constructorOptions;\r\n        _this.addEventHandler = (/**\r\n         * @param {?} eventName\r\n         * @param {?} id\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        function (eventName, id, callback) {\r\n            if (id)\r\n                this.eventHandlers.push({ \"eventName\": eventName + \"/\" + id, callback: callback });\r\n            else\r\n                this.eventHandlers.push({ \"eventName\": eventName, callback: callback });\r\n            /** @type {?} */\r\n            var cmd = { id: this.messageId++, \"messageType\": \"registerEventHandler\", \"event\": eventName, \"eventId\": id };\r\n            //console.log(\"add event handler\",cmd);\r\n            this.websocket.send(JSON.stringify(cmd));\r\n        });\r\n        console.log(\"kervi spine constructor\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.connect = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.isConnected) {\r\n            console.log(\"Kervi is connected\");\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        var self = this;\r\n        this.websocket = new WebSocket(this.options.protocol + \"://\" + this.options.address);\r\n        this.websocket.onopen = (/**\r\n         * @param {?} evt\r\n         * @return {?}\r\n         */\r\n        function (evt) {\r\n            console.log(\"kervi spine on open\");\r\n            self.onOpen(evt);\r\n        });\r\n        this.websocket.onclose = (/**\r\n         * @param {?} evt\r\n         * @return {?}\r\n         */\r\n        function (evt) {\r\n            self.onClose(evt);\r\n        });\r\n        this.websocket.onmessage = (/**\r\n         * @param {?} evt\r\n         * @return {?}\r\n         */\r\n        function (evt) {\r\n            self.onMessage(evt);\r\n        });\r\n        this.websocket.onerror = (/**\r\n         * @param {?} evt\r\n         * @return {?}\r\n         */\r\n        function (evt) {\r\n            self.onError(evt);\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} userName\r\n     * @param {?} password\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.authenticate = /**\r\n     * @param {?} userName\r\n     * @param {?} password\r\n     * @return {?}\r\n     */\r\n    function (userName, password) {\r\n        this.options.userName = userName;\r\n        this.options.password = password;\r\n        //if (this.options.onAuthenticateStart)\r\n        //\tthis.options.onAuthenticateStart.call(this.options.targetScope);\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"authenticate\", \"userName\": userName, \"password\": password };\r\n        console.log(\"swa\", cmd);\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.logoff = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        //this.options.userName = this.allowAnonymous ? \"anonymous\" : null;\r\n        //this.options.password = null;\r\n        //this.options.userName = this.allowAnonymous ? \"anonymous\" : null;\r\n        //this.options.password = null;\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"logoff\", \"session\": this.sessionId };\r\n        this.sessionId = null;\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.onMessage = /**\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    function (evt) {\r\n        //console.log(\"on m\",evt.data);\r\n        /** @type {?} */\r\n        var message = JSON.parse(evt.data);\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (message.messageType == \"authenticate\") {\r\n            console.log(\"authenticate\");\r\n            this.doAuthenticate = true;\r\n            if (this.options.userName)\r\n                this.authenticate(this.options.userName, this.options.password);\r\n            else\r\n                this.options.onAuthenticate.call(this.options.targetScope, evt);\r\n        }\r\n        else if (message.messageType == \"authentication_failed\") {\r\n            console.log(\"authentication failed\", this.options.userName);\r\n            if (this.options.userName == \"anonymous\") {\r\n                this.allowAnonymous = false;\r\n                this.options.userName = null;\r\n                this.options.password = null;\r\n                this.sessionId = null;\r\n                console.log(\"x\", self.options);\r\n                if (self.options.onLogOff) {\r\n                    console.log(\"x1\");\r\n                    self.options.onLogOff.call(self.options.targetScope, evt);\r\n                }\r\n            }\r\n            else\r\n                this.options.onAuthenticateFailed.call(this.options.targetScope, evt);\r\n        }\r\n        else if (message.messageType == \"session_authenticated\") {\r\n            /** @type {?} */\r\n            var date = new Date();\r\n            date.setTime(date.getTime() + (2 * 60 * 60 * 1000));\r\n            /** @type {?} */\r\n            var expires = \"; expires=\" + date.toUTCString();\r\n            this.sessionId = message.session;\r\n            document.cookie = \"kervisession\" + \"=\" + message.session + expires + \"; path=/\";\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                console.log(\"to\", self.options);\r\n                if (self.options.onOpen)\r\n                    self.options.onOpen.call(self.options.targetScope, self.firstOnOpen, evt);\r\n                self.firstOnOpen = false;\r\n            }), 100);\r\n        }\r\n        else if (message.messageType == \"session_logoff\") {\r\n            if (self.options.onLogOff)\r\n                self.options.onLogOff.call(self.options.targetScope, evt);\r\n            if (this.allowAnonymous && this.options.userName != \"anonymous\") {\r\n                this.authenticate(\"anonymous\", null);\r\n            }\r\n            else {\r\n                self.options.userName = null;\r\n                self.options.password = null;\r\n                self.sessionId = null;\r\n            }\r\n        }\r\n        else if (message.messageType == \"response\")\r\n            this.handleRPCResponse(message);\r\n        else if (message.messageType == \"event\")\r\n            this.handleEvent(message);\r\n        else if (message.messageType == \"command\")\r\n            this.handleCommand(message);\r\n        else\r\n            console.log(\"Kervi spine message unknown\", this.rpcQueue, evt);\r\n    };\r\n    /**\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.onError = /**\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    function (evt) {\r\n        console.log(\"Kervi on error\", evt);\r\n    };\r\n    /**\r\n     * @param {?} command\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.addCommandHandler = /**\r\n     * @param {?} command\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    function (command, callback) {\r\n        this.commandHandlers.push({ command: command, callback: callback });\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"registerCommandHandler\", \"command\": command };\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} query\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.addQueryHandler = /**\r\n     * @param {?} query\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    function (query, callback) {\r\n        this.queryHandlers.push({ query: query, callback: callback });\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"registerQueryHandler\", \"query\": query };\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} command\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.sendCommand = /**\r\n     * @param {?} command\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    function (command) {\r\n        var p = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            p[_i - 1] = arguments[_i];\r\n        }\r\n        console.log(\"sec\", arguments);\r\n        /** @type {?} */\r\n        var args = [];\r\n        /** @type {?} */\r\n        var callback = null;\r\n        for (var i = 0; (i < p.length); i++) {\r\n            if (p[i] instanceof Function)\r\n                callback = p[i];\r\n            else\r\n                args.push(p[i]);\r\n        }\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"command\", \"command\": command, \"args\": args };\r\n        if (callback && callback instanceof Function)\r\n            this.addRPCCallback(cmd.id.toString(), callback, null, 0);\r\n        console.log(\"sendCommand\", this, cmd);\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} query\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.sendQuery = /**\r\n     * @param {?} query\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    function (query) {\r\n        var p = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            p[_i - 1] = arguments[_i];\r\n        }\r\n        /** @type {?} */\r\n        var args = [];\r\n        /** @type {?} */\r\n        var callback = null;\r\n        /** @type {?} */\r\n        var callbackTimeout = null;\r\n        /** @type {?} */\r\n        var timeout = 10000;\r\n        for (var i = 0; (i < p.length); i++) {\r\n            if (p[i] instanceof Function)\r\n                if (!callback)\r\n                    callback = p[i];\r\n                else\r\n                    callbackTimeout = p[i];\r\n            else {\r\n                if (callbackTimeout)\r\n                    timeout = p[i];\r\n                else\r\n                    args.push(p[i]);\r\n            }\r\n        }\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"query\", \"query\": query, \"args\": args };\r\n        this.addRPCCallback(cmd.id.toString(), callback, callbackTimeout, timeout);\r\n        console.log(\"sendQuery\", callback, cmd);\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} eventName\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.triggerEvent = /**\r\n     * @param {?} eventName\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    function (eventName, id) {\r\n        /** @type {?} */\r\n        var e = { id: this.messageId++, \"messageType\": \"event\", \"event\": eventName, \"args\": arguments };\r\n        this.websocket.send(JSON.stringify(e));\r\n    };\r\n    return KerviWSSpine;\r\n}(KerviSpineBase));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviRMQSpine = /** @class */ (function (_super) {\r\n    __extends(KerviRMQSpine, _super);\r\n    function KerviRMQSpine(constructorOptions) {\r\n        var _this = _super.call(this, constructorOptions) || this;\r\n        _this.constructorOptions = constructorOptions;\r\n        _this.exchange = \"/exchange/\";\r\n        _this.addEventHandler = (/**\r\n         * @param {?} eventName\r\n         * @param {?} id\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        function (eventName, id, callback) {\r\n            if (id)\r\n                this.eventHandlers.push({ \"eventName\": eventName + \"/\" + id, callback: callback });\r\n            else\r\n                this.eventHandlers.push({ \"eventName\": eventName, callback: callback });\r\n            /** @type {?} */\r\n            var cmd = { id: this.messageId++, \"messageType\": \"registerEventHandler\", \"event\": eventName, \"eventId\": id };\r\n            this.websocket.send(this.exchange, { topic: \"registerEventHandler\", router_id: this.socketSession }, JSON.stringify(cmd));\r\n        });\r\n        console.log(\"Kervi io spine init y\", _this.options, constructorOptions);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} frame\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.onMQError = /**\r\n     * @private\r\n     * @param {?} frame\r\n     * @return {?}\r\n     */\r\n    function (frame) {\r\n        console.log(\"MQ error\", frame);\r\n    };\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.connect = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.isConnected) {\r\n            console.log(\"Kervi is connected\");\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        var self = this;\r\n        //var mqUrl= this.options.protocol + \"://\" + this.options.address\r\n        /** @type {?} */\r\n        var mqUrl = \"wss://mq.kervi.io:15673/ws\";\r\n        this.websocket = Stomp.client(mqUrl);\r\n        this.websocket.heartbeat.incoming = 0;\r\n        self.exchange = \"/exchange/\" + self.options.apiToken.app_id;\r\n        console.log(\"exchange\", self.exchange);\r\n        this.websocket.connect(self.options.apiToken.api_token, \"ui\", (/**\r\n         * @param {?} frame\r\n         * @return {?}\r\n         */\r\n        function (frame) {\r\n            console.log(\"MQ connect\", frame, self.websocket, this, self);\r\n            self.socketSession = frame.headers.session;\r\n            self.exchange = \"/exchange/\" + self.options.apiToken.app_id;\r\n            self.websocket.subscribe(self.exchange, (/**\r\n             * @param {?} message\r\n             * @return {?}\r\n             */\r\n            function (message) {\r\n                console.log(\"mq \", message);\r\n                if (message.headers[\"topic\"])\r\n                    message.headers[\"topic\"] = message.headers[\"topic\"].replace(new RegExp(\"\\\\c\", \"g\"), \":\");\r\n                if (message.command == \"CONNECTED\") ;\r\n                else if (message.headers[\"topic\"] == \"ping\")\r\n                    self.onPing(message);\r\n                else\r\n                    self.onMessage(message);\r\n            }), {});\r\n        }), self.onMQError, self.options.apiToken.api_channel);\r\n    };\r\n    /**\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.onPing = /**\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    function (message) {\r\n        console.log(\"onping\", this.options.appId, message);\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (!this.isConnected && message.headers[\"connection_id\"] == self.options.apiToken.app_id) {\r\n            this.onOpen(message);\r\n            this.websocket.send(self.exchange, { topic: \"session:new\", router_id: message.headers[\"router_id\"], session_id: this.socketSession }, \"{}\");\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} userName\r\n     * @param {?} password\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.authenticate = /**\r\n     * @param {?} userName\r\n     * @param {?} password\r\n     * @return {?}\r\n     */\r\n    function (userName, password) {\r\n        this.options.userName = userName;\r\n        this.options.password = password;\r\n        if (this.options.onAuthenticateStart)\r\n            this.options.onAuthenticateStart.call(this.options.targetScope);\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"authenticate\", \"userName\": this.options.userName, \"password\": this.options.password };\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.logoff = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        //this.options.userName = this.allowAnonymous ? \"anonymous\" : null;\r\n        //this.options.password = null;\r\n        //this.options.userName = this.allowAnonymous ? \"anonymous\" : null;\r\n        //this.options.password = null;\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"logoff\", \"session\": this.sessionId };\r\n        this.sessionId = null;\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.onMessage = /**\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    function (evt) {\r\n        console.log(\"on m\", evt);\r\n        /** @type {?} */\r\n        var message = JSON.parse(evt.body);\r\n        /** @type {?} */\r\n        var self = this;\r\n        /** @type {?} */\r\n        var topic = evt.headers[\"topic\"];\r\n        if (topic == \"authenticate\") {\r\n            console.log(\"authenticate\");\r\n            this.doAuthenticate = true;\r\n            if (this.options.userName)\r\n                this.authenticate(this.options.userName, this.options.password);\r\n            else\r\n                this.options.onAuthenticate.call(this.options.targetScope, evt);\r\n        }\r\n        else if (topic == \"authentication_failed\") {\r\n            console.log(\"authentication failed\", this.options.userName);\r\n            if (this.options.userName == \"anonymous\") {\r\n                this.allowAnonymous = false;\r\n                this.options.userName = null;\r\n                this.options.password = null;\r\n                this.sessionId = null;\r\n                console.log(\"x\", self.options);\r\n                if (self.options.onLogOff) {\r\n                    console.log(\"x1\");\r\n                    self.options.onLogOff.call(self.options.targetScope, evt);\r\n                }\r\n            }\r\n            else\r\n                this.options.onAuthenticateFailed.call(this.options.targetScope, evt);\r\n        }\r\n        else if (topic == \"session_authenticated\") {\r\n            /** @type {?} */\r\n            var date = new Date();\r\n            date.setTime(date.getTime() + (2 * 60 * 60 * 1000));\r\n            /** @type {?} */\r\n            var expires = \"; expires=\" + date.toUTCString();\r\n            this.sessionId = message.session;\r\n            document.cookie = \"kervisession\" + \"=\" + message.session + expires + \"; path=/\";\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                if (self.options.onOpen)\r\n                    self.options.onOpen.call(self.options.targetScope, self.firstOnOpen, evt);\r\n                self.firstOnOpen = false;\r\n            }), 100);\r\n        }\r\n        else if (topic == \"session_logoff\") {\r\n            if (self.options.onLogOff)\r\n                self.options.onLogOff.call(self.options.targetScope, evt);\r\n            if (this.allowAnonymous && this.options.userName != \"anonymous\") {\r\n                this.authenticate(\"anonymous\", null);\r\n            }\r\n            else {\r\n                self.options.userName = null;\r\n                self.options.password = null;\r\n                self.sessionId = null;\r\n            }\r\n        }\r\n        else if (evt.headers[\"type\"] == \"query_response\") {\r\n            this.handleRPCResponse({ id: evt.headers[\"query_id\"], response: message });\r\n        }\r\n        else if (evt.headers[\"type\"] == \"event\") {\r\n            console.log(\"e\", evt);\r\n            /** @type {?} */\r\n            var topic_tag = evt.headers[\"topic\"].split(\":\");\r\n            this.handleEvent({ event: topic_tag[1], id: topic_tag[2], args: message.args });\r\n        }\r\n        else if (message.messageType == \"command\")\r\n            this.handleCommand(message);\r\n        else\r\n            console.log(\"Kervi spine message unknown\", this.rpcQueue, evt);\r\n    };\r\n    /**\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.onError = /**\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    function (evt) {\r\n        console.log(\"Kervi on error\", evt);\r\n    };\r\n    /**\r\n     * @param {?} command\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.addCommandHandler = /**\r\n     * @param {?} command\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    function (command, callback) {\r\n        this.commandHandlers.push({ command: command, callback: callback });\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"registerCommandHandler\", \"command\": command };\r\n        //this.websocket.send(JSON.stringify(cmd));\r\n        this.websocket.send(this.exchange, { topic: \"registerCommandHandler\", router_id: this.socketSession }, JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} query\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.addQueryHandler = /**\r\n     * @param {?} query\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    function (query, callback) {\r\n        this.queryHandlers.push({ query: query, callback: callback });\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"registerQueryHandler\", \"query\": query };\r\n        this.websocket.send(this.exchange, { topic: \"registerQueryHandler\", router_id: this.socketSession }, JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} command\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.sendCommand = /**\r\n     * @param {?} command\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    function (command) {\r\n        var p = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            p[_i - 1] = arguments[_i];\r\n        }\r\n        console.log(\"sec\", arguments);\r\n        /** @type {?} */\r\n        var args = [];\r\n        /** @type {?} */\r\n        var callback = null;\r\n        for (var i = 0; (i < p.length); i++) {\r\n            if (p[i] instanceof Function)\r\n                callback = p[i];\r\n            else\r\n                args.push(p[i]);\r\n        }\r\n        /*if (p.length>1){\r\n                    var argOffset=1;\r\n                    if ( callback && callback instanceof Function )\r\n                        argOffset+=1;\r\n                    for (var i=argOffset;(i<arguments.length);i++){\r\n                        args.push(arguments[i]);\r\n                    }\r\n                }*/\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"args\": args, kwargs: {} };\r\n        if (callback && callback instanceof Function)\r\n            this.addRPCCallback(cmd.id.toString(), callback, null, 0);\r\n        console.log(\"sendCommand\", this, cmd);\r\n        this.websocket.send(this.exchange, { topic: \"command:\" + command, router_id: this.socketSession }, JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} query\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.sendQuery = /**\r\n     * @param {?} query\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    function (query) {\r\n        var p = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            p[_i - 1] = arguments[_i];\r\n        }\r\n        /** @type {?} */\r\n        var args = [];\r\n        /** @type {?} */\r\n        var callback = null;\r\n        /** @type {?} */\r\n        var callbackTimeout = null;\r\n        /** @type {?} */\r\n        var timeout = 10000;\r\n        for (var i = 0; (i < p.length); i++) {\r\n            if (p[i] instanceof Function)\r\n                if (!callback)\r\n                    callback = p[i];\r\n                else\r\n                    callbackTimeout = p[i];\r\n            else {\r\n                if (callbackTimeout)\r\n                    timeout = p[i];\r\n                else\r\n                    args.push(p[i]);\r\n            }\r\n        }\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"query\", \"query\": query, \"args\": args, kwargs: [], qts: 0 };\r\n        this.addRPCCallback(cmd.id.toString(), callback, callbackTimeout, timeout);\r\n        console.log(\"sendQuery\", callback, cmd);\r\n        //this.websocket.send(JSON.stringify(cmd));\r\n        this.websocket.send(this.exchange, { topic: \"query:\" + query, qts: 0, query_id: cmd.id.toString(), router_id: this.socketSession, response_address: this.socketSession }, JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} eventName\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.triggerEvent = /**\r\n     * @param {?} eventName\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    function (eventName, id) {\r\n        /** @type {?} */\r\n        var e = { id: this.messageId++, \"messageType\": \"event\", \"event\": eventName, \"args\": arguments };\r\n        this.websocket.send(JSON.stringify(e));\r\n    };\r\n    return KerviRMQSpine;\r\n}(KerviSpineBase));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar DashboardLink = /** @class */ (function () {\r\n    /*constructor(dashboardId:string, sectionId:string, sectionName:string){\r\n        this.dashboardId = dashboardId;\r\n        this.sectionId = sectionId;\r\n        this.sectionName = sectionName;\r\n    }*/\r\n    function DashboardLink(component, message) {\r\n        this.dashboardId = message.dashboardId;\r\n        this.panelId = message.sectionId;\r\n        this.panelName = message.sectionName;\r\n        this.component = component;\r\n        this.parameters = message.parameters;\r\n    }\r\n    return DashboardLink;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviValue = /** @class */ (function () {\r\n    function KerviValue() {\r\n        this.componentType = \"KerviValue\";\r\n        this.typeName = null;\r\n        this.dashboards = [];\r\n        this.ui = {\r\n            type: \"\",\r\n            orientation: \"\",\r\n            visible: true\r\n        };\r\n    }\r\n    return KerviValue;\r\n}());\r\n/**\r\n * @abstract\r\n * @template valueType\r\n */\r\nvar  /**\r\n * @abstract\r\n * @template valueType\r\n */\r\nKerviValueType = /** @class */ (function (_super) {\r\n    __extends(KerviValueType, _super);\r\n    function KerviValueType(message, kerviService) {\r\n        var e_1, _a;\r\n        var _this = _super.call(this) || this;\r\n        _this.kerviService = null;\r\n        _this.kerviService = kerviService;\r\n        _this.value$ = new BehaviorSubject(message.value);\r\n        _this.name = message.name;\r\n        _this.isInput = message.isInput;\r\n        _this.ui = message.ui;\r\n        _this.command = message.command;\r\n        _this.id = message.id;\r\n        _this.ui[\"type\"] = message.componentType;\r\n        _this.ui[\"orientation\"] = message.orientation;\r\n        _this.ui[\"visible\"] = message.visible;\r\n        for (var prop in message.ui) {\r\n            if (_this.ui[prop] != undefined)\r\n                _this.ui[prop] = message.ui[prop];\r\n        }\r\n        try {\r\n            for (var _b = __values(message.dashboardLinks), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var dashboardLink = _c.value;\r\n                _this.dashboards.push(new DashboardLink(_this, dashboardLink));\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return _this;\r\n    }\r\n    Object.defineProperty(KerviValueType.prototype, \"value\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            //console.log(\"gv\", this.id, this.value$.value)\r\n            return this.value$.value;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            console.log(\"sv\", this.id);\r\n            this.value$.next(value);\r\n            this.kerviService.spine.sendCommand(this.command, value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {?} v\r\n     * @param {?=} notify\r\n     * @return {?}\r\n     */\r\n    KerviValueType.prototype.set = /**\r\n     * @param {?} v\r\n     * @param {?=} notify\r\n     * @return {?}\r\n     */\r\n    function (v, notify) {\r\n        if (notify === void 0) { notify = true; }\r\n        this.value$.next(v);\r\n        if (notify)\r\n            this.kerviService.spine.sendCommand(this.command, v);\r\n    };\r\n    return KerviValueType;\r\n}(KerviValue));\r\n/** @enum {number} */\r\nvar ValueRangeType = {\r\n    normal: 0, warning: 1, error: 2,\r\n};\r\nValueRangeType[ValueRangeType.normal] = 'normal';\r\nValueRangeType[ValueRangeType.warning] = 'warning';\r\nValueRangeType[ValueRangeType.error] = 'error';\r\nvar ValueRange = /** @class */ (function () {\r\n    function ValueRange(range) {\r\n        this.start = null;\r\n        this.end = null;\r\n        this.type = null;\r\n        this.start = range[\"start\"];\r\n        this.end = range[\"end\"];\r\n        if (range[\"type\"] == \"warning\")\r\n            this.type = ValueRangeType.warning;\r\n        else if (range[\"type\"] == \"error\")\r\n            this.type = ValueRangeType.error;\r\n        else\r\n            this.type = ValueRangeType.normal;\r\n    }\r\n    return ValueRange;\r\n}());\r\nvar KerviEnumOptionModel = /** @class */ (function () {\r\n    function KerviEnumOptionModel(messageOption) {\r\n        this.selected$ = new BehaviorSubject(false);\r\n        this.value = messageOption.value;\r\n        this.text = messageOption.text;\r\n        this.selected$.next(messageOption.selected);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviEnumOptionModel.prototype.updateReferences = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    /**\r\n     * @param {?} component\r\n     * @return {?}\r\n     */\r\n    KerviEnumOptionModel.prototype.reload = /**\r\n     * @param {?} component\r\n     * @return {?}\r\n     */\r\n    function (component) { };\r\n    /**\r\n     * @param {?} components\r\n     * @return {?}\r\n     */\r\n    KerviEnumOptionModel.prototype.removeReferences = /**\r\n     * @param {?} components\r\n     * @return {?}\r\n     */\r\n    function (components) { };\r\n    return KerviEnumOptionModel;\r\n}());\r\nvar SelectValue = /** @class */ (function (_super) {\r\n    __extends(SelectValue, _super);\r\n    function SelectValue(message, kerviService) {\r\n        var e_2, _a;\r\n        var _this = _super.call(this, message, kerviService) || this;\r\n        _this.options = [];\r\n        _this.lastSelected$ = new BehaviorSubject(null);\r\n        /** @type {?} */\r\n        var self = _this;\r\n        _this.options = [];\r\n        try {\r\n            for (var _b = __values(message.options), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var option = _c.value;\r\n                _this.options.push(new KerviEnumOptionModel(option));\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n        _this.selectOptions(_this.value$.value);\r\n        _this.value$.subscribe((/**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            self.selectOptions(v);\r\n        }));\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    SelectValue.prototype.getDefaultValue = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return [];\r\n    };\r\n    /**\r\n     * @param {?} selectedOptions\r\n     * @return {?}\r\n     */\r\n    SelectValue.prototype.selectOptions = /**\r\n     * @param {?} selectedOptions\r\n     * @return {?}\r\n     */\r\n    function (selectedOptions) {\r\n        var e_3, _a, e_4, _b, e_5, _c;\r\n        console.log(\"soc\");\r\n        if (!selectedOptions)\r\n            return;\r\n        try {\r\n            for (var _d = __values(this.options), _e = _d.next(); !_e.done; _e = _d.next()) {\r\n                var option = _e.value;\r\n                option.selected$.next(false);\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        try {\r\n            for (var selectedOptions_1 = __values(selectedOptions), selectedOptions_1_1 = selectedOptions_1.next(); !selectedOptions_1_1.done; selectedOptions_1_1 = selectedOptions_1.next()) {\r\n                var selectedOption = selectedOptions_1_1.value;\r\n                console.log(\"so\", selectedOption);\r\n                try {\r\n                    for (var _f = __values(this.options), _g = _f.next(); !_g.done; _g = _f.next()) {\r\n                        var option = _g.value;\r\n                        console.log(\"sox\", option);\r\n                        if (option.value == selectedOption) {\r\n                            option.selected$.next(true);\r\n                            this.lastSelected$.next(option);\r\n                            console.log(\"os\", option.text, option.selected$.value);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_g && !_g.done && (_c = _f.return)) _c.call(_f);\r\n                    }\r\n                    finally { if (e_5) throw e_5.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n        finally {\r\n            try {\r\n                if (selectedOptions_1_1 && !selectedOptions_1_1.done && (_b = selectedOptions_1.return)) _b.call(selectedOptions_1);\r\n            }\r\n            finally { if (e_4) throw e_4.error; }\r\n        }\r\n    };\r\n    return SelectValue;\r\n}(KerviValueType));\r\nvar NumberValue = /** @class */ (function (_super) {\r\n    __extends(NumberValue, _super);\r\n    function NumberValue(message, kerviService) {\r\n        var e_6, _a, e_7, _b;\r\n        var _this = _super.call(this, message, kerviService) || this;\r\n        _this.qtyUnitTo = null;\r\n        _this.sparkline$ = new BehaviorSubject([]);\r\n        _this.ranges = [];\r\n        _this.unit = message.unit;\r\n        _this.typeName = \"Number\";\r\n        _this.qtyUnitFrom = message.unit;\r\n        if (_this.unit == \"c\" && kerviService.application$.value[\"display\"][\"unit_system\"][\"temperature\"] == \"F\") {\r\n            _this.qtyUnitFrom = \"tempC\";\r\n            _this.qtyUnitTo = \"tempF\";\r\n            _this.unit = \"F\";\r\n        }\r\n        try {\r\n            for (var _c = __values(message.ranges), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var range = _d.value;\r\n                if (_this.qtyUnitTo) {\r\n                    /** @type {?} */\r\n                    var q = new Qty(range[\"start\"], _this.qtyUnitFrom);\r\n                    range[\"start\"] = q.to(_this.qtyUnitTo).scalar;\r\n                    /** @type {?} */\r\n                    var q = new Qty(range[\"end\"], _this.qtyUnitFrom);\r\n                    range[\"end\"] = q.to(_this.qtyUnitTo).scalar;\r\n                    _this.ranges.push(new ValueRange(range));\r\n                }\r\n                else\r\n                    _this.ranges.push(new ValueRange(range));\r\n            }\r\n        }\r\n        catch (e_6_1) { e_6 = { error: e_6_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_6) throw e_6.error; }\r\n        }\r\n        if (_this.qtyUnitTo && message.maxValue) {\r\n            /** @type {?} */\r\n            var q = new Qty(message.maxValue, _this.qtyUnitFrom);\r\n            _this.maxValue = q.to(_this.qtyUnitTo).scalar;\r\n        }\r\n        else\r\n            _this.maxValue = message.maxValue;\r\n        if (_this.qtyUnitTo && message.minValue) {\r\n            /** @type {?} */\r\n            var q = new Qty(message.minValue, _this.qtyUnitFrom);\r\n            _this.minValue = q.to(_this.qtyUnitTo).scalar;\r\n        }\r\n        else\r\n            _this.minValue = message.minValue;\r\n        /** @type {?} */\r\n        var spl = [];\r\n        try {\r\n            for (var _e = __values(message.sparkline), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                var spv = _f.value;\r\n                if (_this.qtyUnitTo) {\r\n                    console.log(\"spv\", spv);\r\n                    /** @type {?} */\r\n                    var q = new Qty(spv.value, _this.qtyUnitFrom);\r\n                    //spv.value = q.to(this.qtyUnitTo).scalar;\r\n                }\r\n                spl.push(spv);\r\n            }\r\n        }\r\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\r\n        finally {\r\n            try {\r\n                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n            }\r\n            finally { if (e_7) throw e_7.error; }\r\n        }\r\n        _this.sparkline$.next(spl);\r\n        _this.set(message.value, false);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    NumberValue.prototype.getDefaultValue = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @param {?} v\r\n     * @param {?=} notify\r\n     * @return {?}\r\n     */\r\n    NumberValue.prototype.set = /**\r\n     * @param {?} v\r\n     * @param {?=} notify\r\n     * @return {?}\r\n     */\r\n    function (v, notify) {\r\n        if (notify === void 0) { notify = true; }\r\n        /** @type {?} */\r\n        var newValue = v;\r\n        if (this.qtyUnitTo) {\r\n            /** @type {?} */\r\n            var q = new Qty(v, this.qtyUnitFrom);\r\n            newValue = q.to(this.qtyUnitTo).scalar;\r\n        }\r\n        this.value$.next(newValue);\r\n        if (notify)\r\n            this.kerviService.spine.sendCommand(this.command, v);\r\n        /** @type {?} */\r\n        var spl = this.sparkline$.value;\r\n        spl.push(newValue);\r\n        if (spl.length > 10)\r\n            spl.shift();\r\n        this.sparkline$.next(spl);\r\n    };\r\n    return NumberValue;\r\n}(KerviValueType));\r\nvar StringValue = /** @class */ (function (_super) {\r\n    __extends(StringValue, _super);\r\n    function StringValue(message, kerviService) {\r\n        var _this = _super.call(this, message, kerviService) || this;\r\n        _this.typeName = \"String\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    StringValue.prototype.getDefaultValue = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return \"\";\r\n    };\r\n    return StringValue;\r\n}(KerviValueType));\r\nvar BooleanValue = /** @class */ (function (_super) {\r\n    __extends(BooleanValue, _super);\r\n    function BooleanValue(message, kerviService) {\r\n        var _this = _super.call(this, message, kerviService) || this;\r\n        _this.typeName = \"Boolean\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    BooleanValue.prototype.getDefaultValue = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return false;\r\n    };\r\n    return BooleanValue;\r\n}(KerviValueType));\r\nvar DateTimeValue = /** @class */ (function (_super) {\r\n    __extends(DateTimeValue, _super);\r\n    function DateTimeValue(message, kerviService) {\r\n        var _this = _super.call(this, message, kerviService) || this;\r\n        _this.subType = message.inputType;\r\n        _this.typeName = \"DateTime\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    DateTimeValue.prototype.getDefaultValue = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new Date();\r\n    };\r\n    return DateTimeValue;\r\n}(KerviValueType));\r\nvar ColorValue = /** @class */ (function (_super) {\r\n    __extends(ColorValue, _super);\r\n    function ColorValue(message, kerviService) {\r\n        var _this = _super.call(this, message, kerviService) || this;\r\n        _this.typeName = \"Color\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    ColorValue.prototype.getDefaultValue = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return \"#ffffff\";\r\n    };\r\n    return ColorValue;\r\n}(KerviValueType));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ComponentRef = /** @class */ (function () {\r\n    function ComponentRef(message) {\r\n        this.id = message.id;\r\n    }\r\n    return ComponentRef;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar Controller = /** @class */ (function () {\r\n    function Controller(message, kerviService) {\r\n        var e_1, _a, e_2, _b, e_3, _c, e_4, _d;\r\n        this.componentType = \"controller\";\r\n        this.ui = {};\r\n        this.inputs = [];\r\n        this.outputs = [];\r\n        this.actions = [];\r\n        this.inputReferences = [];\r\n        this.outputReferences = [];\r\n        this.actionsReferences = [];\r\n        this.dashboards = [];\r\n        this.kerviService = kerviService;\r\n        this.id = message.id;\r\n        this.name = message.name;\r\n        this.type = message.type;\r\n        this.ui = message.ui;\r\n        this.visible = message.visible;\r\n        this.parameters = message.parameters;\r\n        this.template = message.template;\r\n        try {\r\n            for (var _e = __values(message.inputs), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                var ref = _f.value;\r\n                this.inputReferences.push(new ComponentRef(ref));\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        try {\r\n            for (var _g = __values(message.outputs), _h = _g.next(); !_h.done; _h = _g.next()) {\r\n                var ref = _h.value;\r\n                this.outputReferences.push(new ComponentRef(ref));\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n        try {\r\n            for (var _j = __values(message.actions), _k = _j.next(); !_k.done; _k = _j.next()) {\r\n                var ref = _k.value;\r\n                this.actionsReferences.push(new ComponentRef(ref));\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_k && !_k.done && (_c = _j.return)) _c.call(_j);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        try {\r\n            for (var _l = __values(message.dashboardLinks), _m = _l.next(); !_m.done; _m = _l.next()) {\r\n                var dashboardLink = _m.value;\r\n                this.dashboards.push(new DashboardLink(this, dashboardLink));\r\n            }\r\n        }\r\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n        finally {\r\n            try {\r\n                if (_m && !_m.done && (_d = _l.return)) _d.call(_l);\r\n            }\r\n            finally { if (e_4) throw e_4.error; }\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Controller.prototype.updateReferences = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var e_5, _a, e_6, _b, e_7, _c;\r\n        if (this.inputs.length == 0) {\r\n            try {\r\n                for (var _d = __values(this.inputReferences), _e = _d.next(); !_e.done; _e = _d.next()) {\r\n                    var ref = _e.value;\r\n                    /** @type {?} */\r\n                    var component = this.kerviService.getComponent(ref.id);\r\n                    if (component)\r\n                        this.inputs.push(component);\r\n                }\r\n            }\r\n            catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\r\n                }\r\n                finally { if (e_5) throw e_5.error; }\r\n            }\r\n        }\r\n        if (this.outputs.length == 0) {\r\n            try {\r\n                for (var _f = __values(this.outputReferences), _g = _f.next(); !_g.done; _g = _f.next()) {\r\n                    var ref = _g.value;\r\n                    /** @type {?} */\r\n                    var component = this.kerviService.getComponent(ref.id);\r\n                    if (component)\r\n                        this.outputs.push(component);\r\n                }\r\n            }\r\n            catch (e_6_1) { e_6 = { error: e_6_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\r\n                }\r\n                finally { if (e_6) throw e_6.error; }\r\n            }\r\n        }\r\n        if (this.actions.length == 0) {\r\n            try {\r\n                for (var _h = __values(this.actionsReferences), _j = _h.next(); !_j.done; _j = _h.next()) {\r\n                    var ref = _j.value;\r\n                    /** @type {?} */\r\n                    var component = this.kerviService.getComponent(ref.id);\r\n                    if (component)\r\n                        this.actions.push(component);\r\n                }\r\n            }\r\n            catch (e_7_1) { e_7 = { error: e_7_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_j && !_j.done && (_c = _h.return)) _c.call(_h);\r\n                }\r\n                finally { if (e_7) throw e_7.error; }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} components\r\n     * @return {?}\r\n     */\r\n    Controller.prototype.removeReferences = /**\r\n     * @param {?} components\r\n     * @return {?}\r\n     */\r\n    function (components) { };\r\n    /**\r\n     * @param {?} component\r\n     * @return {?}\r\n     */\r\n    Controller.prototype.reload = /**\r\n     * @param {?} component\r\n     * @return {?}\r\n     */\r\n    function (component) { };\r\n    return Controller;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\nvar DashboardSizes = /** @class */ (function () {\r\n    function DashboardSizes() {\r\n        this.valueWidth = \"3rem\";\r\n        this.buttonWidth = \"25px\";\r\n        this.buttonHeight = \"\";\r\n        this.switchWidth = \"25px\";\r\n        this.switchHeight = \"25px\";\r\n        this.gaugeWidth = \"100px\";\r\n        this.gaugeHeight = \"200px\";\r\n    }\r\n    return DashboardSizes;\r\n}());\r\nvar DashboardMessageModel = /** @class */ (function () {\r\n    function DashboardMessageModel(message) {\r\n        this.timestamp = new Date(message.timestamp * 1000);\r\n        this.topic = message.topic;\r\n        this.body = message.body;\r\n        this.type = message.type;\r\n        this.sourceId = message.source_id;\r\n        this.sourceName = message.source_name;\r\n        this.area = message.area;\r\n        this.level = message.level;\r\n    }\r\n    return DashboardMessageModel;\r\n}());\r\nvar DashboardPanelComponent = /** @class */ (function () {\r\n    function DashboardPanelComponent(message) {\r\n        this.message = message;\r\n        this.linkId = message.linkId;\r\n        this.componentId = message.componentId;\r\n        this.component = message.component;\r\n        this.parameters = message.parameters;\r\n    }\r\n    return DashboardPanelComponent;\r\n}());\r\nvar DashboardPanelParameters = /** @class */ (function () {\r\n    function DashboardPanelParameters(messageParameters) {\r\n        this.title = null;\r\n        this.width = null;\r\n        this.height = null;\r\n        this.type = null;\r\n        this.userLog = null;\r\n        this.logLength = 5;\r\n        this.layout = \"row\";\r\n        this.title = messageParameters.label;\r\n        this.height = this.calcSize(messageParameters.height);\r\n        this.width = this.calcSize(messageParameters.width);\r\n        this.userLog = messageParameters.userLog;\r\n        this.logLength = messageParameters.logLength;\r\n        if (messageParameters.type)\r\n            this.type = messageParameters.type;\r\n        if (messageParameters.layout)\r\n            this.layout = messageParameters.layout;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    DashboardPanelParameters.prototype.calcSize = /**\r\n     * @private\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        if (value == null)\r\n            return \"\";\r\n        else if (value === \"\")\r\n            return \"\";\r\n        else if (isNaN(value)) {\r\n            return value;\r\n        }\r\n        else if (value > 0)\r\n            return value + \"%\";\r\n        else\r\n            return \"\";\r\n    };\r\n    return DashboardPanelParameters;\r\n}());\r\nvar DashboardPanel = /** @class */ (function () {\r\n    function DashboardPanel(dashboard, messagePanel) {\r\n        var e_1, _a;\r\n        this.components = [];\r\n        this.subPanels = [];\r\n        this.hasOnlyGroupPanels = true;\r\n        this.dashboard = dashboard;\r\n        this.id = messagePanel.id;\r\n        this.name = messagePanel.name;\r\n        this.type = messagePanel.type;\r\n        this.parameters = new DashboardPanelParameters(messagePanel.uiParameters);\r\n        /*if (messagePanel.components)\r\n            for(var componentRef of messagePanel.components){\r\n                this.components.push(new DashboardPanelComponentModel(componentRef))\r\n            }*/\r\n        if (messagePanel.panels) {\r\n            try {\r\n                //console.log(\"spa\",messagePanel.panels);\r\n                for (var _b = __values(messagePanel.panels), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var subMessagePanel = _c.value;\r\n                    /** @type {?} */\r\n                    var panel = new DashboardPanel(this, subMessagePanel);\r\n                    this.subPanels.push(panel);\r\n                    if (panel.type !== \"group\")\r\n                        this.hasOnlyGroupPanels = false;\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} source\r\n     * @return {?}\r\n     */\r\n    DashboardPanel.prototype.reload = /**\r\n     * @param {?} source\r\n     * @return {?}\r\n     */\r\n    function (source) {\r\n        var e_2, _a, e_3, _b, e_4, _c, e_5, _d, e_6, _e, e_7, _f;\r\n        try {\r\n            //console.log(\"rl\", this);\r\n            for (var _g = __values(source.subPanels), _h = _g.next(); !_h.done; _h = _g.next()) {\r\n                var subPanel = _h.value;\r\n                this.reload(subPanel);\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_h && !_h.done && (_a = _g.return)) _a.call(_g);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n        try {\r\n            for (var _j = __values(source.components), _k = _j.next(); !_k.done; _k = _j.next()) {\r\n                var sourceComponent = _k.value;\r\n                /** @type {?} */\r\n                var found = false;\r\n                try {\r\n                    for (var _l = __values(this.components), _m = _l.next(); !_m.done; _m = _l.next()) {\r\n                        var component = _m.value;\r\n                        if (component.componentId == sourceComponent.componentId) {\r\n                            found = true;\r\n                        }\r\n                    }\r\n                }\r\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_m && !_m.done && (_c = _l.return)) _c.call(_l);\r\n                    }\r\n                    finally { if (e_4) throw e_4.error; }\r\n                }\r\n                if (!found) {\r\n                    this.components.push(sourceComponent);\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_k && !_k.done && (_b = _j.return)) _b.call(_j);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        /** @type {?} */\r\n        var deleteComponents = [];\r\n        try {\r\n            for (var _o = __values(this.components), _p = _o.next(); !_p.done; _p = _o.next()) {\r\n                var component = _p.value;\r\n                /** @type {?} */\r\n                var found = false;\r\n                try {\r\n                    for (var _q = __values(source.components), _r = _q.next(); !_r.done; _r = _q.next()) {\r\n                        var sourceComponent = _r.value;\r\n                        if (sourceComponent.componentId == component.componentId) {\r\n                            found = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                catch (e_6_1) { e_6 = { error: e_6_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_r && !_r.done && (_e = _q.return)) _e.call(_q);\r\n                    }\r\n                    finally { if (e_6) throw e_6.error; }\r\n                }\r\n                if (!found)\r\n                    deleteComponents.push(component);\r\n            }\r\n        }\r\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n        finally {\r\n            try {\r\n                if (_p && !_p.done && (_d = _o.return)) _d.call(_o);\r\n            }\r\n            finally { if (e_5) throw e_5.error; }\r\n        }\r\n        try {\r\n            //console.log(\"dsc\",deleteComponents);\r\n            for (var deleteComponents_1 = __values(deleteComponents), deleteComponents_1_1 = deleteComponents_1.next(); !deleteComponents_1_1.done; deleteComponents_1_1 = deleteComponents_1.next()) {\r\n                var component = deleteComponents_1_1.value;\r\n                this.components.splice(this.components.indexOf(component), 1);\r\n            }\r\n        }\r\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\r\n        finally {\r\n            try {\r\n                if (deleteComponents_1_1 && !deleteComponents_1_1.done && (_f = deleteComponents_1.return)) _f.call(deleteComponents_1);\r\n            }\r\n            finally { if (e_7) throw e_7.error; }\r\n        }\r\n    };\r\n    return DashboardPanel;\r\n}());\r\nvar DashboardBackgroundModel = /** @class */ (function () {\r\n    function DashboardBackgroundModel(message) {\r\n        this.type = message.type;\r\n        this.cameraId = message.cameraId;\r\n    }\r\n    return DashboardBackgroundModel;\r\n}());\r\nvar Dashboard = /** @class */ (function () {\r\n    function Dashboard(message) {\r\n        var e_8, _a;\r\n        this.headerPanel = null;\r\n        this.footerCenterPanel = null;\r\n        this.footerLeftPanel = null;\r\n        this.footerRightPanel = null;\r\n        this.sysPanel = null;\r\n        this.backgroundPanel = null;\r\n        this.controllerPanel = null;\r\n        this.LeftPadXPanel = null;\r\n        this.LeftPadYPanel = null;\r\n        this.RightPadXPanel = null;\r\n        this.RightPadYPanel = null;\r\n        this.dashboards = [];\r\n        this.currentPanel = null;\r\n        this.id = message.id;\r\n        this.name = message.name;\r\n        this.componentType = \"dashboard\";\r\n        this.type = message.type;\r\n        this.isDefault = message.isDefault;\r\n        this.template = message.template;\r\n        this.unitSize = message.unitSize;\r\n        //this.background=new DashboardBackgroundModel(message.background);\r\n        this.panels = [];\r\n        this.sysPanels = [];\r\n        if (!this.template) {\r\n            try {\r\n                for (var _b = __values(message.sections), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var messagePanel = _c.value;\r\n                    if (!messagePanel) {\r\n                        console.log(\"dashboard with null panel\", this.id);\r\n                        continue;\r\n                    }\r\n                    /** @type {?} */\r\n                    var panel = new DashboardPanel(this, messagePanel);\r\n                    /** @type {?} */\r\n                    var sysPanel = true;\r\n                    if (panel.id == \"header_center\")\r\n                        this.headerPanel = panel;\r\n                    else if (panel.id == \"footer_left\")\r\n                        this.footerLeftPanel = panel;\r\n                    else if (panel.id == \"footer_center\")\r\n                        this.footerCenterPanel = panel;\r\n                    else if (panel.id == \"footer_right\")\r\n                        this.footerRightPanel = panel;\r\n                    else if (panel.id == \"header_right\")\r\n                        this.sysPanel = panel;\r\n                    else if (panel.id == \"controllers\")\r\n                        this.controllerPanel = panel;\r\n                    else if (panel.id == \"background\")\r\n                        this.backgroundPanel = panel;\r\n                    else if (panel.id == \"left_pad_x\")\r\n                        this.LeftPadXPanel = panel;\r\n                    else if (panel.id == \"left_pad_y\")\r\n                        this.LeftPadYPanel = panel;\r\n                    else if (panel.id == \"right_pad_x\")\r\n                        this.RightPadXPanel = panel;\r\n                    else if (panel.id == \"right_pad_y\")\r\n                        this.RightPadYPanel = panel;\r\n                    else {\r\n                        sysPanel = false;\r\n                        if (panel.type != \"group\") {\r\n                            if (this.currentPanel == null) {\r\n                                this.currentPanel = new DashboardPanel(this, {\r\n                                    \"id\": null,\r\n                                    \"name\": \"\",\r\n                                    \"type\": \"group\",\r\n                                    \"components\": [],\r\n                                    \"panels\": [],\r\n                                    \"uiParameters\": {\r\n                                        \"title\": \"\",\r\n                                        \"width\": 100,\r\n                                        \"height\": 0,\r\n                                        \"userLog\": false,\r\n                                        \"logLength\": 0\r\n                                    }\r\n                                });\r\n                                this.currentPanel.subPanels.push(panel);\r\n                                this.panels.push(this.currentPanel);\r\n                            }\r\n                            else {\r\n                                this.currentPanel.subPanels.push(panel);\r\n                            }\r\n                        }\r\n                        else {\r\n                            this.panels.push(panel);\r\n                            this.currentPanel = null;\r\n                        }\r\n                    }\r\n                    if (sysPanel)\r\n                        this.sysPanels.push(panel);\r\n                }\r\n            }\r\n            catch (e_8_1) { e_8 = { error: e_8_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_8) throw e_8.error; }\r\n            }\r\n            if (!this.currentPanel) {\r\n                this.currentPanel = new DashboardPanel(this, {\r\n                    \"id\": null,\r\n                    \"name\": \"\",\r\n                    \"type\": \"group\",\r\n                    \"components\": [],\r\n                    \"panels\": [],\r\n                    \"uiParameters\": {\r\n                        \"title\": \"\",\r\n                        \"width\": 100,\r\n                        \"height\": 0,\r\n                        \"userLog\": false,\r\n                        \"logLength\": 0\r\n                    }\r\n                });\r\n                //this.currentPanel.subPanels.push(panel);\r\n                this.panels.push(this.currentPanel);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Dashboard.prototype.isEmpty = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.panels.length == 0;\r\n    };\r\n    /**\r\n     * @param {?} deleteComponents\r\n     * @return {?}\r\n     */\r\n    Dashboard.prototype.removeReferences = /**\r\n     * @param {?} deleteComponents\r\n     * @return {?}\r\n     */\r\n    function (deleteComponents) { };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Dashboard.prototype.updateReferences = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    /**\r\n     * @param {?} component\r\n     * @return {?}\r\n     */\r\n    Dashboard.prototype.reload = /**\r\n     * @param {?} component\r\n     * @return {?}\r\n     */\r\n    function (component) {\r\n        /** @type {?} */\r\n        var source = (/** @type {?} */ (component));\r\n        if (!this.backgroundPanel && source.backgroundPanel)\r\n            this.backgroundPanel = source.backgroundPanel;\r\n        else if (this.backgroundPanel && !source.backgroundPanel)\r\n            this.backgroundPanel = null;\r\n        else if (this.backgroundPanel)\r\n            this.backgroundPanel.reload(source.backgroundPanel);\r\n        if (!this.footerLeftPanel && source.footerLeftPanel)\r\n            this.footerLeftPanel = source.footerLeftPanel;\r\n        else if (this.footerLeftPanel && !source.footerLeftPanel)\r\n            this.footerLeftPanel = null;\r\n        else if (this.footerLeftPanel)\r\n            this.footerLeftPanel.reload(source.footerLeftPanel);\r\n        if (!this.footerRightPanel && source.footerRightPanel)\r\n            this.footerRightPanel = source.footerRightPanel;\r\n        else if (this.footerRightPanel && !source.footerRightPanel)\r\n            this.footerRightPanel = null;\r\n        else if (this.footerRightPanel)\r\n            this.footerRightPanel.reload(source.footerRightPanel);\r\n        if (!this.footerCenterPanel && source.footerCenterPanel)\r\n            this.footerCenterPanel = source.footerCenterPanel;\r\n        else if (this.footerCenterPanel && !source.footerCenterPanel)\r\n            this.footerCenterPanel = null;\r\n        else if (this.footerCenterPanel)\r\n            this.footerCenterPanel.reload(source.footerCenterPanel);\r\n        /*if (!this.headerPanel && source.headerPanel)\r\n            this.headerPanel=source.headerPanel;\r\n        else if (this.headerPanel && !source.headerPanel)\r\n            this.headerPanel = null\r\n        else if (this.headerPanel)\r\n            this.headerPanel.reload(source.headerPanel)*/\r\n        if (!this.sysPanel && source.sysPanel)\r\n            this.sysPanel = source.sysPanel;\r\n        else if (this.sysPanel && !source.sysPanel)\r\n            this.sysPanel = null;\r\n        else if (this.sysPanel)\r\n            this.sysPanel.reload(source.sysPanel);\r\n        if (!this.LeftPadXPanel && source.LeftPadXPanel)\r\n            this.LeftPadXPanel = source.LeftPadXPanel;\r\n        else if (this.LeftPadXPanel && !source.LeftPadXPanel)\r\n            this.LeftPadXPanel = null;\r\n        else if (this.LeftPadXPanel)\r\n            this.LeftPadXPanel.reload(source.LeftPadXPanel);\r\n        if (!this.LeftPadYPanel && source.LeftPadYPanel)\r\n            this.LeftPadYPanel = source.LeftPadYPanel;\r\n        else if (this.LeftPadYPanel && !source.LeftPadYPanel)\r\n            this.LeftPadYPanel = null;\r\n        else if (this.LeftPadYPanel)\r\n            this.LeftPadYPanel.reload(source.LeftPadYPanel);\r\n        if (!this.RightPadXPanel && source.RightPadXPanel)\r\n            this.RightPadXPanel = source.RightPadXPanel;\r\n        else if (this.RightPadXPanel && !source.RightPadXPanel)\r\n            this.RightPadXPanel = null;\r\n        else if (this.RightPadXPanel)\r\n            this.RightPadXPanel.reload(source.RightPadXPanel);\r\n        if (!this.RightPadYPanel && source.RightPadYPanel)\r\n            this.RightPadYPanel = source.RightPadYPanel;\r\n        else if (this.RightPadYPanel && !source.RightPadYPanel)\r\n            this.RightPadYPanel = null;\r\n        else if (this.RightPadYPanel)\r\n            this.RightPadYPanel.reload(source.RightPadYPanel);\r\n        if (!this.controllerPanel && source.controllerPanel)\r\n            this.controllerPanel = source.controllerPanel;\r\n        else if (this.controllerPanel && !source.controllerPanel)\r\n            this.controllerPanel = null;\r\n        else if (this.controllerPanel)\r\n            this.controllerPanel.reload(source.controllerPanel);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} id\r\n     * @param {?} panels\r\n     * @return {?}\r\n     */\r\n    Dashboard.prototype.getDashboardPanelById = /**\r\n     * @private\r\n     * @param {?} id\r\n     * @param {?} panels\r\n     * @return {?}\r\n     */\r\n    function (id, panels) {\r\n        var e_9, _a;\r\n        try {\r\n            for (var panels_1 = __values(panels), panels_1_1 = panels_1.next(); !panels_1_1.done; panels_1_1 = panels_1.next()) {\r\n                var panel = panels_1_1.value;\r\n                if (panel.id == id)\r\n                    return panel;\r\n                else {\r\n                    /** @type {?} */\r\n                    var res = this.getDashboardPanelById(id, panel.subPanels);\r\n                    if (res)\r\n                        return res;\r\n                }\r\n            }\r\n        }\r\n        catch (e_9_1) { e_9 = { error: e_9_1 }; }\r\n        finally {\r\n            try {\r\n                if (panels_1_1 && !panels_1_1.done && (_a = panels_1.return)) _a.call(panels_1);\r\n            }\r\n            finally { if (e_9) throw e_9.error; }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @param {?} link\r\n     * @return {?}\r\n     */\r\n    Dashboard.prototype.addDashboardLink = /**\r\n     * @param {?} link\r\n     * @return {?}\r\n     */\r\n    function (link) {\r\n        if (link.dashboardId == \"*\" || link.dashboardId == this.id || (link.dashboardId == \"**default**\" && this.isDefault)) {\r\n            /** @type {?} */\r\n            var panel = this.getDashboardPanelById(link.panelId, this.panels);\r\n            if (!panel)\r\n                panel = this.getDashboardPanelById(link.panelId, this.sysPanels);\r\n            if (panel) {\r\n                panel.components.push(new DashboardPanelComponent(link));\r\n            }\r\n            else {\r\n                console.log(\"adh\", link);\r\n                /** @type {?} */\r\n                var messagePanel = {\r\n                    id: link.panelId,\r\n                    name: link.panelName,\r\n                    type: \"panel\",\r\n                    uiParameters: {\r\n                        \"title\": \"\",\r\n                        \"width\": 0,\r\n                        \"height\": 0,\r\n                        \"userLog\": false,\r\n                        \"logLength\": 0\r\n                    }\r\n                };\r\n                /** @type {?} */\r\n                var newPanel = new DashboardPanel(this, messagePanel);\r\n                this.currentPanel.subPanels.push(newPanel);\r\n                newPanel.components.push(new DashboardPanelComponent(link));\r\n            }\r\n        }\r\n    };\r\n    return Dashboard;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar Action = /** @class */ (function () {\r\n    function Action(message, kerviService) {\r\n        var e_1, _a;\r\n        this.kerviService = null;\r\n        this.id = null;\r\n        this.name = null;\r\n        this.componentType = \"action\";\r\n        this.runCommand = \"\";\r\n        this.interruptCommand = \"\";\r\n        this.ui = {\r\n            type: \"\",\r\n            orientation: \"\",\r\n            visible: true\r\n        };\r\n        this.dashboards = [];\r\n        this.running$ = new BehaviorSubject(false);\r\n        this.kerviService = kerviService;\r\n        this.id = message.id;\r\n        this.name = message.name;\r\n        this.ui = message.ui;\r\n        this.ui.visible = message.visible;\r\n        this.ui.type = message.type;\r\n        this.runCommand = message.runCommand;\r\n        this.interruptCommand = message.interruptCommand;\r\n        this.running$.next(message.running);\r\n        try {\r\n            for (var _b = __values(message.dashboardLinks), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var dashboardLink = _c.value;\r\n                this.dashboards.push(new DashboardLink(this, dashboardLink));\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} parameters\r\n     * @return {?}\r\n     */\r\n    Action.prototype.run = /**\r\n     * @param {?} parameters\r\n     * @return {?}\r\n     */\r\n    function (parameters) {\r\n        var _a;\r\n        //if (!this.running$.value){\r\n        if (parameters && parameters.length > 0)\r\n            (_a = this.kerviService.spine).sendCommand.apply(_a, __spread([this.runCommand], parameters));\r\n        else\r\n            this.kerviService.spine.sendCommand(this.runCommand);\r\n        //}\r\n    };\r\n    /**\r\n     * @param {?} parameters\r\n     * @return {?}\r\n     */\r\n    Action.prototype.interrupt = /**\r\n     * @param {?} parameters\r\n     * @return {?}\r\n     */\r\n    function (parameters) {\r\n        var _a;\r\n        if (parameters && parameters.length > 0)\r\n            (_a = this.kerviService.spine).sendCommand.apply(_a, __spread([this.interruptCommand], parameters));\r\n        else\r\n            this.kerviService.spine.sendCommand(this.interruptCommand);\r\n    };\r\n    return Action;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ComponentFactory = /** @class */ (function () {\r\n    function ComponentFactory() {\r\n    }\r\n    /**\r\n     * @param {?} message\r\n     * @param {?} kerviService\r\n     * @return {?}\r\n     */\r\n    ComponentFactory.createComponents = /**\r\n     * @param {?} message\r\n     * @param {?} kerviService\r\n     * @return {?}\r\n     */\r\n    function (message, kerviService) {\r\n        /** @type {?} */\r\n        var foundComponents = this.createComponentsRec(message, kerviService);\r\n        this.linkToDashboards(foundComponents[0], foundComponents[1]);\r\n        return foundComponents[0];\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} message\r\n     * @param {?} kerviService\r\n     * @return {?}\r\n     */\r\n    ComponentFactory.createComponentsRec = /**\r\n     * @private\r\n     * @param {?} message\r\n     * @param {?} kerviService\r\n     * @return {?}\r\n     */\r\n    function (message, kerviService) {\r\n        var e_1, _a;\r\n        /** @type {?} */\r\n        var result = [];\r\n        /** @type {?} */\r\n        var dashboards = [];\r\n        if (Array.isArray(message)) {\r\n            for (var i = 0; (i < message.length); i++) {\r\n                subComponents = this.createComponentsRec(message[i], kerviService);\r\n                result = result.concat(subComponents[0]);\r\n                dashboards = dashboards.concat(subComponents[1]);\r\n            }\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var component = null;\r\n            /** @type {?} */\r\n            var subComponents = [];\r\n            if (message.componentType == \"KerviAction\")\r\n                component = new Action(message, kerviService);\r\n            else if (message.componentType == \"dashboard\") {\r\n                component = new Dashboard(message);\r\n                dashboards.push(component);\r\n            }\r\n            else if (message.componentType == \"controller\")\r\n                component = new Controller(message, kerviService);\r\n            else if (message.componentType == \"boolean-value\")\r\n                component = new BooleanValue(message, kerviService);\r\n            else if (message.componentType == \"number-value\")\r\n                component = new NumberValue(message, kerviService);\r\n            else if (message.componentType == \"string-value\")\r\n                component = new StringValue(message, kerviService);\r\n            else if (message.componentType == \"enum-value\")\r\n                component = new SelectValue(message, kerviService);\r\n            else if (message.componentType == \"datetime-value\")\r\n                component = new DateTimeValue(message, kerviService);\r\n            else if (message.componentType == \"color-value\")\r\n                component = new ColorValue(message, kerviService);\r\n            if (component)\r\n                result.push(component);\r\n            if (subComponents) {\r\n                try {\r\n                    for (var subComponents_1 = __values(subComponents), subComponents_1_1 = subComponents_1.next(); !subComponents_1_1.done; subComponents_1_1 = subComponents_1.next()) {\r\n                        var subComponent = subComponents_1_1.value;\r\n                        result.push(subComponent);\r\n                    }\r\n                }\r\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (subComponents_1_1 && !subComponents_1_1.done && (_a = subComponents_1.return)) _a.call(subComponents_1);\r\n                    }\r\n                    finally { if (e_1) throw e_1.error; }\r\n                }\r\n            }\r\n        }\r\n        return [result, dashboards];\r\n    };\r\n    /**\r\n     * @param {?} components\r\n     * @return {?}\r\n     */\r\n    ComponentFactory.FixControllerReferences = /**\r\n     * @param {?} components\r\n     * @return {?}\r\n     */\r\n    function (components) {\r\n        var e_2, _a;\r\n        try {\r\n            for (var components_1 = __values(components), components_1_1 = components_1.next(); !components_1_1.done; components_1_1 = components_1.next()) {\r\n                var component = components_1_1.value;\r\n                /** @type {?} */\r\n                var controller = (/** @type {?} */ (component));\r\n                if (controller && controller.componentType == \"controller\")\r\n                    controller.updateReferences();\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (components_1_1 && !components_1_1.done && (_a = components_1.return)) _a.call(components_1);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} components\r\n     * @param {?} dashboards\r\n     * @return {?}\r\n     */\r\n    ComponentFactory.linkToDashboards = /**\r\n     * @private\r\n     * @param {?} components\r\n     * @param {?} dashboards\r\n     * @return {?}\r\n     */\r\n    function (components, dashboards) {\r\n        var e_3, _a, e_4, _b, e_5, _c;\r\n        console.log(\"ltd\", components, dashboards);\r\n        try {\r\n            for (var components_2 = __values(components), components_2_1 = components_2.next(); !components_2_1.done; components_2_1 = components_2.next()) {\r\n                var component = components_2_1.value;\r\n                if (!(component instanceof Dashboard)) {\r\n                    try {\r\n                        for (var _d = __values(component.dashboards), _e = _d.next(); !_e.done; _e = _d.next()) {\r\n                            var link = _e.value;\r\n                            try {\r\n                                for (var dashboards_1 = __values(dashboards), dashboards_1_1 = dashboards_1.next(); !dashboards_1_1.done; dashboards_1_1 = dashboards_1.next()) {\r\n                                    var dashboard = dashboards_1_1.value;\r\n                                    dashboard.addDashboardLink(link);\r\n                                }\r\n                            }\r\n                            catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n                            finally {\r\n                                try {\r\n                                    if (dashboards_1_1 && !dashboards_1_1.done && (_c = dashboards_1.return)) _c.call(dashboards_1);\r\n                                }\r\n                                finally { if (e_5) throw e_5.error; }\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (_e && !_e.done && (_b = _d.return)) _b.call(_d);\r\n                        }\r\n                        finally { if (e_4) throw e_4.error; }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (components_2_1 && !components_2_1.done && (_a = components_2.return)) _a.call(components_2);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n    };\r\n    return ComponentFactory;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @enum {number} */\r\nvar ConnectionState = {\r\n    disconnected: 0, loading: 1, authenticate: 2, connected: 3,\r\n};\r\nConnectionState[ConnectionState.disconnected] = 'disconnected';\r\nConnectionState[ConnectionState.loading] = 'loading';\r\nConnectionState[ConnectionState.authenticate] = 'authenticate';\r\nConnectionState[ConnectionState.connected] = 'connected';\r\n/** @enum {number} */\r\nvar UserLogStateType = {\r\n    normal: 0, warning: 1, error: 2,\r\n};\r\nUserLogStateType[UserLogStateType.normal] = 'normal';\r\nUserLogStateType[UserLogStateType.warning] = 'warning';\r\nUserLogStateType[UserLogStateType.error] = 'error';\r\nvar KerviBaseService = /** @class */ (function () {\r\n    function KerviBaseService() {\r\n        this.spine = null;\r\n        this.appInfo = null;\r\n        this.texts = null;\r\n        this.components = [];\r\n        this.components$ = new BehaviorSubject([]);\r\n        this.connectionState$ = new BehaviorSubject(ConnectionState.disconnected);\r\n        this.doAuthenticate = false;\r\n        this.componentsChanged$ = new BehaviorSubject(false);\r\n        this.logMessages = [];\r\n        this.logMessages$ = new BehaviorSubject([]);\r\n        this.lastLogMessage$ = new BehaviorSubject(null);\r\n        this.LogMessageCount$ = new BehaviorSubject(0);\r\n        this.LogMessageState$ = new BehaviorSubject(UserLogStateType.normal);\r\n        this.IPCReady$ = new BehaviorSubject(false);\r\n        this.authPromise = null;\r\n        console.log(\"kervi service constructor\");\r\n        /** @type {?} */\r\n        var self = this;\r\n        this.application$ = new BehaviorSubject(null);\r\n        /** @type {?} */\r\n        var s1 = this.IPCReady$.subscribe((/**\r\n         * @param {?} connected\r\n         * @return {?}\r\n         */\r\n        function (connected) {\r\n            if (connected) {\r\n                console.log(\"kervi service ipc ready (connected)\");\r\n                self.spine.addEventHandler(\"valueChanged\", \"\", (/**\r\n                 * @param {?} id\r\n                 * @param {?} value\r\n                 * @return {?}\r\n                 */\r\n                function (id, value) {\r\n                    var e_1, _a;\r\n                    try {\r\n                        for (var _b = __values(self.components), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                            var component = _c.value;\r\n                            if (component.id == value.id) {\r\n                                /** @type {?} */\r\n                                var dynamicValue = (/** @type {?} */ (component));\r\n                                console.log(\"nv\", component.id, value.value, this.timestamp, new Date(this.timestamp));\r\n                                dynamicValue.valueTS = new Date(this.timestamp);\r\n                                dynamicValue.set(value.value, false);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                        }\r\n                        finally { if (e_1) throw e_1.error; }\r\n                    }\r\n                }));\r\n                self.spine.addEventHandler(\"actionStarted\", \"\", (/**\r\n                 * @param {?} id\r\n                 * @return {?}\r\n                 */\r\n                function (id) {\r\n                    var e_2, _a;\r\n                    console.log(\"as\", id);\r\n                    try {\r\n                        for (var _b = __values(self.components), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                            var component = _c.value;\r\n                            if (component.id == id) {\r\n                                /** @type {?} */\r\n                                var action = (/** @type {?} */ (component));\r\n                                action.running$.next(true);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                        }\r\n                        finally { if (e_2) throw e_2.error; }\r\n                    }\r\n                }));\r\n                self.spine.addEventHandler(\"actionDone\", \"\", (/**\r\n                 * @param {?} id\r\n                 * @return {?}\r\n                 */\r\n                function (id) {\r\n                    var e_3, _a;\r\n                    console.log(\"ad\", id);\r\n                    try {\r\n                        for (var _b = __values(self.components), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                            var component = _c.value;\r\n                            if (component.id == id) {\r\n                                /** @type {?} */\r\n                                var action = (/** @type {?} */ (component));\r\n                                action.running$.next(false);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                        }\r\n                        finally { if (e_3) throw e_3.error; }\r\n                    }\r\n                }));\r\n                self.spine.addEventHandler(\"userLogMessage\", null, (/**\r\n                 * @param {?} v\r\n                 * @return {?}\r\n                 */\r\n                function (v) {\r\n                    var e_4, _a;\r\n                    /** @type {?} */\r\n                    var messages = self.logMessages$.value\r\n                    //Wconsole.log(\"lm\", this);\r\n                    ;\r\n                    //Wconsole.log(\"lm\", this);\r\n                    /** @type {?} */\r\n                    var newMessage = new DashboardMessageModel(this);\r\n                    messages.unshift(newMessage);\r\n                    if (messages.length > 10)\r\n                        messages.pop();\r\n                    /** @type {?} */\r\n                    var hasErrors = 0;\r\n                    /** @type {?} */\r\n                    var hasWarnings = 0;\r\n                    try {\r\n                        for (var messages_1 = __values(messages), messages_1_1 = messages_1.next(); !messages_1_1.done; messages_1_1 = messages_1.next()) {\r\n                            var message = messages_1_1.value;\r\n                            if (message.level == 1)\r\n                                hasErrors++;\r\n                            if (message.level == 2)\r\n                                hasWarnings++;\r\n                        }\r\n                    }\r\n                    catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (messages_1_1 && !messages_1_1.done && (_a = messages_1.return)) _a.call(messages_1);\r\n                        }\r\n                        finally { if (e_4) throw e_4.error; }\r\n                    }\r\n                    if (hasErrors)\r\n                        self.LogMessageState$.next(UserLogStateType.error);\r\n                    else if (hasWarnings)\r\n                        self.LogMessageState$.next(UserLogStateType.warning);\r\n                    else\r\n                        self.LogMessageState$.next(UserLogStateType.normal);\r\n                    self.LogMessageCount$.next(messages.length);\r\n                    self.lastLogMessage$.next(newMessage);\r\n                    self.logMessages$.next(messages);\r\n                }));\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * @param {?} key\r\n     * @param {?=} defaultValue\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.text = /**\r\n     * @param {?} key\r\n     * @param {?=} defaultValue\r\n     * @return {?}\r\n     */\r\n    function (key, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = \"\"; }\r\n        //  console.log(\"t\", key, this.texts);\r\n        if (this.texts && key in this.texts) {\r\n            return this.texts[key];\r\n        }\r\n        else\r\n            return defaultValue;\r\n    };\r\n    // public getComponents$(){\r\n    //   return this.components$.asObservable();\r\n    // }\r\n    // public getComponents$(){\r\n    //   return this.components$.asObservable();\r\n    // }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.getLogMessages$ = \r\n    // public getComponents$(){\r\n    //   return this.components$.asObservable();\r\n    // }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.logMessages$.asObservable();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.getLastLogMessage$ = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.lastLogMessage$.asObservable();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.getLogState$ = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.LogMessageState$.asObservable();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.getLogMessageCount$ = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.LogMessageCount$.asObservable();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.isAppEmpty = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var defaultDashboard = this.getDefaultDashboard();\r\n        if (defaultDashboard)\r\n            return defaultDashboard.isEmpty();\r\n        return true;\r\n    };\r\n    /**\r\n     * @param {?} id\r\n     * @param {?=} componentType\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.getComponent = /**\r\n     * @param {?} id\r\n     * @param {?=} componentType\r\n     * @return {?}\r\n     */\r\n    function (id, componentType) {\r\n        if (componentType === void 0) { componentType = null; }\r\n        var e_5, _a;\r\n        try {\r\n            for (var _b = __values(this.components), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var component = _c.value;\r\n                if (component.id == id && (componentType == null || component.componentType == componentType))\r\n                    return component;\r\n            }\r\n        }\r\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_5) throw e_5.error; }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @param {?} type\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.getComponentsByType = /**\r\n     * @param {?} type\r\n     * @return {?}\r\n     */\r\n    function (type) {\r\n        var e_6, _a;\r\n        /** @type {?} */\r\n        var result = [];\r\n        try {\r\n            for (var _b = __values(this.components), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var component = _c.value;\r\n                if (component.componentType == type)\r\n                    result.push(component);\r\n            }\r\n        }\r\n        catch (e_6_1) { e_6 = { error: e_6_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_6) throw e_6.error; }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.getDefaultDashboard = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var e_7, _a;\r\n        /** @type {?} */\r\n        var dashboards = (/** @type {?} */ (this.getComponentsByType(\"dashboard\")));\r\n        try {\r\n            for (var dashboards_1 = __values(dashboards), dashboards_1_1 = dashboards_1.next(); !dashboards_1_1.done; dashboards_1_1 = dashboards_1.next()) {\r\n                var dashboard = dashboards_1_1.value;\r\n                if (dashboard.isDefault)\r\n                    return dashboard;\r\n            }\r\n        }\r\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\r\n        finally {\r\n            try {\r\n                if (dashboards_1_1 && !dashboards_1_1.done && (_a = dashboards_1.return)) _a.call(dashboards_1);\r\n            }\r\n            finally { if (e_7) throw e_7.error; }\r\n        }\r\n        if (dashboards.length > 0)\r\n            return dashboards[0];\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.connect = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var address = null;\r\n        /** @type {?} */\r\n        var protocol = \"ws\";\r\n        try {\r\n            if (kerviSocketAddress) {\r\n                address = kerviSocketAddress;\r\n            }\r\n            if (socketProtocol) {\r\n                protocol = socketProtocol;\r\n            }\r\n        }\r\n        catch (e) {\r\n            //for testing with ng serve\r\n            /** @type {?} */\r\n            var httpProtocol = location.protocol;\r\n            if (httpProtocol == \"https\")\r\n                protocol = \"wss\";\r\n            /** @type {?} */\r\n            var httpHost = window.location.hostname;\r\n            address = httpHost + \":9000\";\r\n        }\r\n        console.log(\"ks\", address);\r\n        this.spine = new KerviWSSpine({\r\n            address: address,\r\n            protocol: protocol,\r\n            onOpen: this.onOpen,\r\n            onClose: this.onClose,\r\n            onAuthenticate: this.onAuthenticate,\r\n            onAuthenticateFailed: this.onAuthenticateFailed,\r\n            onLogOff: this.onLogoff,\r\n            onAuthenticateStart: this.onAuthenticateStart,\r\n            targetScope: this\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.connectMQ = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        //if (!sessionStorage.getItem(\"mqc\"))\r\n        //  sessionStorage.setItem(\"mqc\", '{\"key_id\":\"c5bd0824bda44ffeaba8010383f1af96\",\"api_token\":\"4776ec9d4bdf4b3192ffa6a1f37d15aa145e2e665ae64e46afd766ee851ac046\",\"api_channel\":\"20bddf88a4434e99ba0e014de2b875c7\",\"app_id\":\"app_1\"}');\r\n        console.log(\"ks\", sessionStorage.getItem(\"mqc\"));\r\n        if (sessionStorage.getItem(\"mqc\")) {\r\n            this.spine = new KerviRMQSpine({\r\n                onOpen: this.onOpen,\r\n                onClose: this.onClose,\r\n                onAuthenticate: this.onAuthenticate,\r\n                onAuthenticateFailed: this.onAuthenticateFailed,\r\n                onLogOff: this.onLogoff,\r\n                onAuthenticateStart: this.onAuthenticateStart,\r\n                targetScope: this,\r\n                apiToken: JSON.parse(sessionStorage.getItem(\"mqc\"))\r\n            });\r\n        }\r\n        else {\r\n            console.log(\"qmc not found in storage\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.isAnonymous = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.spine.options.userName == \"anonymous\";\r\n    };\r\n    /**\r\n     * @param {?} userName\r\n     * @param {?} password\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.authenticate = /**\r\n     * @param {?} userName\r\n     * @param {?} password\r\n     * @return {?}\r\n     */\r\n    function (userName, password) {\r\n        var _this = this;\r\n        //this.authenticationFailed$.next(false);\r\n        console.log(\"ksa\", userName, password);\r\n        this.authPromise = new Promise((/**\r\n         * @param {?} resolve\r\n         * @param {?} reject\r\n         * @return {?}\r\n         */\r\n        function (resolve, reject) {\r\n            _this._resolveSelf = resolve;\r\n            _this._rejectSelf = reject;\r\n        }));\r\n        this.spine.authenticate(userName, password);\r\n        return this.authPromise;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.logoff = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.spine.logoff();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onAuthenticateStart = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onAuthenticate = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.doAuthenticate = true;\r\n        //this.connectionState$.next(ConnectionState.authenticate);\r\n        this.reset();\r\n        this._resolveSelf(\"ok\");\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onAuthenticateFailed = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        //this.authenticationFailed$.next(true);\r\n        this._rejectSelf(\"error\");\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onLogoff = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        console.log(\"olxrc\");\r\n        this.doAuthenticate = true;\r\n        if (this.spine.firstOnOpen)\r\n            this.IPCReady$.next(true);\r\n        this.reset();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.reset = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.components = [];\r\n        this.components$.next(this.components);\r\n        /** @type {?} */\r\n        var messages = [];\r\n        this.LogMessageState$.next(UserLogStateType.normal);\r\n        this.LogMessageCount$.next(messages.length);\r\n        this.logMessages$.next(messages);\r\n        if (this.IPCReady$.value)\r\n            this.connectionState$.next(ConnectionState.authenticate);\r\n        else\r\n            this.connectionState$.next(ConnectionState.disconnected);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} retryCount\r\n     * @param {?} module_load\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.getComponentInfo = /**\r\n     * @private\r\n     * @param {?} retryCount\r\n     * @param {?} module_load\r\n     * @return {?}\r\n     */\r\n    function (retryCount, module_load) {\r\n        /** @type {?} */\r\n        var self = this;\r\n        this.spine.sendQuery(\"GetApplicationInfo\", (/**\r\n         * @param {?} appInfo\r\n         * @return {?}\r\n         */\r\n        function (appInfo) {\r\n            console.log(\"appinfo\", appInfo);\r\n            this.spine.sendQuery(\"getComponentInfo\", (/**\r\n             * @param {?} message\r\n             * @return {?}\r\n             */\r\n            function (message) {\r\n                console.log(\"component info\", message);\r\n                self.application$.next(appInfo);\r\n                self.texts = appInfo.display.texts;\r\n                self.components = ComponentFactory.createComponents(message, self);\r\n                ComponentFactory.FixControllerReferences(self.getComponentsByType(\"controller\"));\r\n                self.components$.next(self.components);\r\n                self.connectionState$.next(ConnectionState.connected);\r\n                if (module_load)\r\n                    self.componentsChanged$.next(true);\r\n                console.log(\"components\", self.components);\r\n            }), (/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                console.log(\"get component info timeout\");\r\n                if (retryCount > 0)\r\n                    self.getComponentInfo(retryCount - 1, module_load);\r\n            }));\r\n        }));\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} first\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onOpen = /**\r\n     * @private\r\n     * @param {?} first\r\n     * @return {?}\r\n     */\r\n    function (first) {\r\n        console.log(\"kervice service on open\", this.spine.firstOnOpen, first, this);\r\n        /** @type {?} */\r\n        var self = this;\r\n        this.connectionState$.next(ConnectionState.loading);\r\n        this.doAuthenticate = this.spine.doAuthenticate;\r\n        this.getComponentInfo(2, false);\r\n        if (self.spine.firstOnOpen) {\r\n            this.IPCReady$.next(true);\r\n            this.spine.addEventHandler(\"moduleStarted\", \"\", (/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                console.log(\"module loaded\", self.components);\r\n                setTimeout((/**\r\n                 * @return {?}\r\n                 */\r\n                function () {\r\n                    self.getComponentInfo(2, true);\r\n                }), 2000);\r\n            }));\r\n            this.spine.addEventHandler(\"moduleStopped\", \"\", (/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                console.log(\"module unloaded\");\r\n                setTimeout((/**\r\n                 * @return {?}\r\n                 */\r\n                function () {\r\n                    console.log(\"module unloaded, refresh\");\r\n                    self.getComponentInfo(2, true);\r\n                }), 5000);\r\n            }));\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onClose = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.reset();\r\n        console.log(\"ks on close\");\r\n        this.IPCReady$.next(false);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onHeartbeat = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onConnect = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    KerviBaseService.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviBaseService.ctorParameters = function () { return []; };\r\n    return KerviBaseService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviJsComponent = /** @class */ (function () {\r\n    function KerviJsComponent() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviJsComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    KerviJsComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'lib-kervi-js',\r\n                    template: \"\\n    <p>\\n      kervi-js works!\\n    </p>\\n  \",\r\n                    styles: []\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviJsComponent.ctorParameters = function () { return []; };\r\n    return KerviJsComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviJsModule = /** @class */ (function () {\r\n    function KerviJsModule() {\r\n    }\r\n    KerviJsModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [],\r\n                    declarations: [KerviJsComponent],\r\n                    exports: [KerviJsComponent]\r\n                },] },\r\n    ];\r\n    return KerviJsModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { KerviBaseService, ConnectionState, KerviValue, ValueRange, ValueRangeType, KerviValueType, KerviEnumOptionModel, SelectValue, NumberValue, StringValue, BooleanValue, DateTimeValue, ColorValue, DashboardSizes, DashboardMessageModel, DashboardPanelComponent, DashboardPanelParameters, DashboardPanel, DashboardBackgroundModel, Dashboard, Action, DashboardLink, Controller, UserLogStateType, KerviJsModule, KerviJsComponent as ɵa };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import { Injectable, Component, Input, Output, ElementRef, EventEmitter, NgModule, ViewChild, TemplateRef, defineInjectable } from '@angular/core';\nimport { __extends } from 'tslib';\nimport { KerviDashboardPanelComponent, KerviWidgetComponent, KerviNumberComponent, KerviBooleanComponent, KerviStringComponent, KerviDateTimeComponent, KerviColorComponent, NGXKerviService, KerviTemplateService, NGXKerviPipesModule, KerviCameraComponent, KerviActionComponent, KerviUserLogComponent, NgxKerviModule } from 'ngx-kervi';\nimport { DashboardSizes } from 'kervi-js';\nimport { asapScheduler } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxGaugeModule } from 'ngx-gauge';\nimport { FormsModule } from '@angular/forms';\nimport { NgZorroAntdModule, NzNotificationService } from 'ng-zorro-antd';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviZorroService = /** @class */ (function () {\r\n    function KerviZorroService() {\r\n    }\r\n    KerviZorroService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviZorroService.ctorParameters = function () { return []; };\r\n    /** @nocollapse */ KerviZorroService.ngInjectableDef = defineInjectable({ factory: function KerviZorroService_Factory() { return new KerviZorroService(); }, token: KerviZorroService, providedIn: \"root\" });\r\n    return KerviZorroService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar DashboardPanelComponent = /** @class */ (function (_super) {\r\n    __extends(DashboardPanelComponent, _super);\r\n    function DashboardPanelComponent() {\r\n        var _this = _super.call(this) || this;\r\n        _this.groupLayout = \"row\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DashboardPanelComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitPanel();\r\n        if (this.panel.hasOnlyGroupPanels)\r\n            this.groupLayout = \"row\";\r\n    };\r\n    DashboardPanelComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-dashboard-panel',\r\n                    template: \"<!-- <p>{{panel.name}} - {{panel.type}} - {{groupLayout}} - {{bodyOnly}} - {{inline}} - {{panel.subPanels.length}} - {{panel.components.length}} - {{headerComponents.length}} - {{bodyComponents.length}}</p> -->\\n<!-- <p>w={{width}} - {{inGroup}}</p> -->\\n<ng-container *ngIf=\\\"panel.type=='group'\\\">\\n    <div class=\\\"kervi-panel-deck\\\" [fxLayout]=\\\"panel.parameters.layout\\\" fxLayout.xs=\\\"column\\\"  fxLayoutGap=\\\"0.5%\\\">\\n        <ng-container *ngFor=\\\"let subPanel of panel.subPanels\\\">\\n            <ng-container *ngIf=\\\"subPanel.type!='group'\\\">\\n                        <kervi-dashboard-panel fxFlex.xs=\\\"100\\\" [fxFlex]=\\\"subPanel.parameters.width\\\" [bodyOnly]=\\\"true\\\" [inGroup]=\\\"true\\\" [dashboardSizes]=\\\"dashboardSizes\\\"  [panel]=\\\"subPanel\\\"></kervi-dashboard-panel>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"subPanel.type=='group'\\\">\\n                    <kervi-dashboard-panel fxFlex.xs=\\\"100\\\" [fxFlex]=\\\"subPanel.parameters.width\\\" [inGroup]=\\\"true\\\" [dashboardSizes]=\\\"dashboardSizes\\\"  [panel]=\\\"subPanel\\\"></kervi-dashboard-panel>\\n            </ng-container>\\n        </ng-container>\\n    </div>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"panel.type!='group' && !inline\\\">\\n    \\n    <nz-card  [nzTitle]=\\\"showHeader ? title : null\\\" [nzExtra]=\\\"headerComponents.length>0 ? extraTemplate : null\\\">\\n        \\n        <ng-template #extraTemplate>\\n            <ng-container *ngFor=\\\"let panelComponent of headerComponents\\\">\\n                        <kervi-widget [component]=\\\"panelComponent.component\\\" [dashboardPanel]=\\\"panel\\\" [inline]=\\\"inline\\\"  [linkParameters]=\\\"panelComponent.parameters\\\"></kervi-widget>\\n            </ng-container>\\n        </ng-template>\\n        <ng-container *ngFor=\\\"let panelComponent of bodyComponents\\\">\\n            <kervi-widget [component]=\\\"panelComponent.component\\\" [dashboardPanel]=\\\"panel\\\"  [inline]=\\\"inline\\\"  [linkParameters]=\\\"panelComponent.parameters\\\"></kervi-widget>\\n        </ng-container>\\n    \\n        <div *ngIf=\\\"panel.parameters.userLog\\\"  >\\n            \\n            <kervi-user-log></kervi-user-log>\\n        </div> \\n    </nz-card>\\n</ng-container>\\n\\n<ng-template [ngIf]=\\\"inline && panel.components.length>0\\\" >\\n    <ng-container *ngFor=\\\"let panelComponent of panel.components\\\" >\\n        <kervi-widget [component]=\\\"panelComponent.component\\\"  [inline]=\\\"inline\\\" [dashboardPanel]=\\\"panel\\\"  [linkParameters]=\\\"panelComponent.parameters\\\"></kervi-widget>\\n    </ng-container>\\n</ng-template>\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DashboardPanelComponent.ctorParameters = function () { return []; };\r\n    return DashboardPanelComponent;\r\n}(KerviDashboardPanelComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar WidgetComponent = /** @class */ (function (_super) {\r\n    __extends(WidgetComponent, _super);\r\n    function WidgetComponent() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    WidgetComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitWidget();\r\n    };\r\n    WidgetComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-widget',\r\n                    template: \"<ng-container *ngIf=\\\"widgetType=='value'\\\">\\n    <div fxLayout=\\\"row\\\" *ngIf=\\\"!inline\\\" class=\\\"kervi-block-widget\\\"> \\n        <div fxFlex=\\\"60\\\" class=\\\"kervi-value-label\\\">\\n            <span   *ngIf=\\\"linkParameters.labelIcon\\\" class=\\\"pi pi-{{linkParameters.labelIcon}}\\\"></span>\\n            <span   *ngIf=\\\"linkParameters.label\\\">{{linkParameters.label}}</span>\\n        </div>\\n        \\n        <div fxFlex class=\\\"kervi-value-section\\\">\\n            <kervi-value *ngIf=\\\"component.componentType=='KerviValue'\\\" [value]=\\\"component\\\" [inline]=\\\"false\\\" [dashboardSizes]=\\\"dashboardSizes\\\"  [linkParameters]=\\\"linkParameters\\\"></kervi-value>\\n            <kervi-action  *ngIf=\\\"component.componentType=='action'\\\" [action]=\\\"component\\\" [inline]=\\\"false\\\" [dashboardSizes]=\\\"dashboardSizes\\\"  [linkParameters]=\\\"linkParameters\\\"></kervi-action>\\n        </div>\\n            \\n    </div>\\n\\n    <div *ngIf=\\\"inline\\\" class=\\\"kervi-inline-widget\\\">\\n        <div class=\\\"kervi-value-label\\\"> \\n            <span style=\\\"display:inline\\\"  *ngIf=\\\"linkParameters.labelIcon\\\" class=\\\"fa fa-{{linkParameters.labelIcon}}\\\"></span>\\n            <span style=\\\"display:inline\\\"  *ngIf=\\\"linkParameters.label\\\"  >{{linkParameters.label}}</span>\\n        </div>\\n        <div class=\\\"kervi-value-section\\\">\\n            <kervi-value *ngIf=\\\"component.componentType=='KerviValue'\\\" [value]=\\\"component\\\" [inline]=\\\"false\\\" [dashboardSizes]=\\\"dashboardSizes\\\"  [linkParameters]=\\\"linkParameters\\\"></kervi-value>\\n            <kervi-action  *ngIf=\\\"component.componentType=='action'\\\" [action]=\\\"component\\\" [inline]=\\\"false\\\" [dashboardSizes]=\\\"dashboardSizes\\\"  [linkParameters]=\\\"linkParameters\\\"></kervi-action>\\n        </div>\\n    </div>\\n</ng-container>    \\n<ng-container *ngIf=\\\"widgetType=='camera'\\\" class=\\\"block-component\\\" >\\n    <kervi-cam-viewer [isBackground]=\\\"false\\\" [camera]=\\\"component\\\" [linkParameters]=\\\"linkParameters\\\"></kervi-cam-viewer>\\n</ng-container>\\n    \\n    \\n<ng-container *ngIf=\\\"widgetType=='gauge'\\\" class=\\\"block-component\\\" >\\n    <kervi-gauge [dashboardSizes]=\\\"dashboardSizes\\\" [value]=\\\"component\\\" [linkParameters]=\\\"linkParameters\\\"></kervi-gauge>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"widgetType=='chart'\\\" class=\\\"\\\" >\\n    <kervi-chart [dashboardSizes]=\\\"dashboardSizes\\\" [value]=\\\"component\\\" [linkParameters]=\\\"linkParameters\\\" ></kervi-chart>\\n</ng-container>\",\r\n                    styles: []\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    WidgetComponent.ctorParameters = function () { return []; };\r\n    return WidgetComponent;\r\n}(KerviWidgetComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NumberComponent = /** @class */ (function (_super) {\r\n    __extends(NumberComponent, _super);\r\n    function NumberComponent(elementRef) {\r\n        var _this = _super.call(this) || this;\r\n        _this.elementRef = elementRef;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NumberComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitNumber();\r\n    };\r\n    NumberComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-number',\r\n                    template: \"<ng-container *ngIf=\\\"linkParameters.isInput\\\">\\n    <nz-form-control >\\n        <nz-input-number id=\\\"{{value.id}}\\\" [nzMin]=\\\"value.minValue\\\" [nzMax]=\\\"value.maxValue\\\" [nzStep]=\\\"1\\\" [(ngModel)]=\\\"value.value\\\"  ></nz-input-number>\\n        \\n    </nz-form-control>\\n    <!-- <ui-slider [value]=\\\"(value.value$ | async)\\\" (sliderChanged)=\\\"setKerviValue($event)\\\" [minValue]=\\\"value.minValue\\\" [maxValue]=\\\"value.maxValue\\\" [linkParameters]=\\\"linkParameters\\\"></ui-slider> -->\\n</ng-container>\\n<ng-container *ngIf=\\\"!linkParameters.isInput\\\">\\n\\n    <span class=\\\"value-value\\\" [style.min-width.rem]=\\\"linkParameters.valueSize\\\">\\n        <i *ngIf=\\\"currentIcon\\\" class=\\\"fa fa-{{currentIcon}}\\\"></i>\\n        <value-sparkline *ngIf=\\\"linkParameters.showSparkline && !linkParameters.isInput\\\" [value]=\\\"value\\\"></value-sparkline>\\n        {{(value.value$ | async | number:numberFormat)}}\\n        <span *ngIf=\\\"linkParameters.displayUnit\\\">{{value.unit}}</span>\\n    </span>\\n</ng-container>\\n\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    NumberComponent.ctorParameters = function () { return [\r\n        { type: ElementRef }\r\n    ]; };\r\n    return NumberComponent;\r\n}(KerviNumberComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar BooleanComponent = /** @class */ (function (_super) {\r\n    __extends(BooleanComponent, _super);\r\n    function BooleanComponent() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    BooleanComponent.prototype.changeState = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        this.value.set(event);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    BooleanComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitBoolean();\r\n    };\r\n    BooleanComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-boolean',\r\n                    template: \"<kervi-switchbutton \\n    *ngIf=\\\"displayType!='button'\\\"\\n    [dashboardSizes]=\\\"dashboardSizes\\\" \\n    [inline]=\\\"inline\\\" \\n    [value]=\\\"value.value\\\" \\n    [linkParameters]=\\\"linkParameters\\\"\\n    (buttonState)=\\\"changeState($event)\\\"\\n></kervi-switchbutton>\\n<kervi-button \\n    *ngIf=\\\"displayType=='button'\\\"    \\n    [dashboardSizes]=\\\"dashboardSizes\\\" \\n    [value]=\\\"value\\\" \\n    [inline]=\\\"inline\\\" \\n    [linkParameters]=\\\"linkParameters\\\" \\n    (buttonState)=\\\"changeState($event)\\\" \\n></kervi-button>\\n\\n\\n\\n\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    BooleanComponent.ctorParameters = function () { return []; };\r\n    return BooleanComponent;\r\n}(KerviBooleanComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar StringComponent = /** @class */ (function (_super) {\r\n    __extends(StringComponent, _super);\r\n    function StringComponent(elementRef) {\r\n        var _this = _super.call(this) || this;\r\n        _this.elementRef = elementRef;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    StringComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        this.ngOnInitString();\r\n        this.value.value$.subscribe((/**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            jQuery(\"input\", self.elementRef.nativeElement).val(v).change();\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    StringComponent.prototype.onChange = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        /** @type {?} */\r\n        var v = jQuery(\"input\", this.elementRef.nativeElement).val();\r\n        console.log(\"evv\", v, event);\r\n        this.value.set(v);\r\n    };\r\n    StringComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-string',\r\n                    template: \"<input nz-input *ngIf=\\\"linkParameters.isInput\\\"  [(ngModel)]=\\\"value.value\\\"/>\\n<span *ngIf=\\\"!linkParameters.isInput\\\" class=\\\"form-control pull-right\\\"   >{{(value.value$ | async)}}</span>\\n\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    StringComponent.ctorParameters = function () { return [\r\n        { type: ElementRef }\r\n    ]; };\r\n    return StringComponent;\r\n}(KerviStringComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar DateTimeComponent = /** @class */ (function (_super) {\r\n    __extends(DateTimeComponent, _super);\r\n    function DateTimeComponent() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DateTimeComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitDateTime();\r\n    };\r\n    DateTimeComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-datetime',\r\n                    template: \"<kervi-datetime [type]=\\\"displayType\\\" [format]=\\\"dateTimeFormat\\\" [dateTime]=\\\"value\\\"></kervi-datetime>\\n    \",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DateTimeComponent.ctorParameters = function () { return []; };\r\n    return DateTimeComponent;\r\n}(KerviDateTimeComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ColorComponent = /** @class */ (function (_super) {\r\n    __extends(ColorComponent, _super);\r\n    function ColorComponent() {\r\n        return _super.call(this) || this;\r\n        //console.log(\"cnio\",this);\r\n    }\r\n    /**\r\n     * @param {?} v\r\n     * @return {?}\r\n     */\r\n    ColorComponent.prototype.setValue = /**\r\n     * @param {?} v\r\n     * @return {?}\r\n     */\r\n    function (v) {\r\n        console.log(v);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ColorComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitColor();\r\n    };\r\n    ColorComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-color',\r\n                    template: \"<kervi-color [color]=\\\"(value.value$ | async)\\\" (colorChange)=\\\"setKerviValue($event)\\\" [linkParameters]=\\\"linkParameters\\\" ></kervi-color>\\n\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ColorComponent.ctorParameters = function () { return []; };\r\n    return ColorComponent;\r\n}(KerviColorComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar SparklineComponent = /** @class */ (function () {\r\n    function SparklineComponent(kerviService, templateService) {\r\n        this.kerviService = kerviService;\r\n        this.templateService = templateService;\r\n        this.value = null;\r\n        this.linkParameters = null;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.series = [];\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    SparklineComponent.prototype.createElement = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.series = [this.value.value];\r\n        this.options = {\r\n            chart: {\r\n                height: 14,\r\n                width: 60,\r\n                type: 'area',\r\n                sparkline: {\r\n                    enabled: true\r\n                }\r\n            },\r\n            stroke: {\r\n                curve: 'straight',\r\n                width: 1\r\n            },\r\n            fill: {\r\n                opacity: 0.3,\r\n            },\r\n            series: [{\r\n                    data: this.value.sparkline$.value\r\n                }],\r\n            yaxis: {\r\n                min: 0\r\n            },\r\n            colors: [this.color(\"color\", \".kervi-sparkline\")],\r\n        };\r\n        if (this.chartObj) {\r\n            this.chartObj.destroy();\r\n        }\r\n        console.log(\"create sparkline\", this.value.id);\r\n        this.chartObj = new ApexCharts(this.chartElement.nativeElement, this.options);\r\n        this.chartObj.render();\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    SparklineComponent.prototype.color = /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    function (style, selector) {\r\n        return this.templateService.getColor(style, selector);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SparklineComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var self = this;\r\n        asapScheduler.schedule((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.createElement();\r\n        }));\r\n        this.value.sparkline$.subscribe((/**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            if (self.chartObj && v) {\r\n                self.chartObj.updateSeries([{\r\n                        data: v\r\n                    }]);\r\n            }\r\n        }));\r\n    };\r\n    SparklineComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'value-sparkline',\r\n                    template: \"<div #chart></div>\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    SparklineComponent.ctorParameters = function () { return [\r\n        { type: NGXKerviService },\r\n        { type: KerviTemplateService }\r\n    ]; };\r\n    SparklineComponent.propDecorators = {\r\n        value: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        type: [{ type: Input }],\r\n        size: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        chartElement: [{ type: ViewChild, args: ['chart',] }]\r\n    };\r\n    return SparklineComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar SliderComponent = /** @class */ (function () {\r\n    function SliderComponent(elementRef, templateService) {\r\n        this.elementRef = elementRef;\r\n        this.templateService = templateService;\r\n        this.sliderValue = 0;\r\n        this.isReady = false;\r\n        this.ignoreChange = false;\r\n        this.type = \"horizontal_slider\";\r\n        this.defaultSizes = new DashboardSizes();\r\n        this.sliderChanged = new EventEmitter();\r\n        this.moveDelayTimer = null;\r\n        this.inSlide = false;\r\n        //console.log(\"cnio\",this);\r\n    }\r\n    Object.defineProperty(SliderComponent.prototype, \"value\", {\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            if (value != this.sliderValue) {\r\n                this.sliderValue = value;\r\n                if (this.isReady) {\r\n                    this.ignoreChange = true;\r\n                    jQuery(\"input\", this.elementRef.nativeElement).bootstrapSlider('setValue', value);\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    SliderComponent.prototype.color = /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    function (style, selector) {\r\n        return this.templateService.getColor(style, selector);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SliderComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        /** @type {?} */\r\n        var color = this.color(\"color\", \".number-gauge-template\");\r\n        setTimeout((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            jQuery('input', self.elementRef.nativeElement).bootstrapSlider({\r\n                tooltip: \"hide\",\r\n                min: self.minValue,\r\n                max: self.maxValue,\r\n                step: self.tick,\r\n                orientation: self.type == \"horizontal_slider\" ? \"horizontal\" : \"vertical\"\r\n            });\r\n            jQuery('.slider', self.elementRef.nativeElement).on(\"change\", (/**\r\n             * @param {?} e\r\n             * @param {?} x\r\n             * @return {?}\r\n             */\r\n            function (e, x) {\r\n                console.log(\"slsv\", e, x);\r\n                if (e.value.newValue && !self.ignoreChange)\r\n                    self.sliderChanged.emit(e.value.newValue);\r\n                self.ignoreChange = false;\r\n            }));\r\n            jQuery('.slider', self.elementRef.nativeElement).on(\"slideStart\", (/**\r\n             * @param {?} e\r\n             * @return {?}\r\n             */\r\n            function (e) {\r\n                self.inSlide = true;\r\n            }));\r\n            jQuery('.slider', self.elementRef.nativeElement).on(\"slideStop\", (/**\r\n             * @param {?} e\r\n             * @return {?}\r\n             */\r\n            function (e) {\r\n                self.inSlide = false;\r\n            }));\r\n            self.isReady = true;\r\n        }), 0);\r\n    };\r\n    /**\r\n     * @param {?} v\r\n     * @return {?}\r\n     */\r\n    SliderComponent.prototype.step = /**\r\n     * @param {?} v\r\n     * @return {?}\r\n     */\r\n    function (v) {\r\n        this.sliderChanged.emit(this.sliderValue + v);\r\n    };\r\n    SliderComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ui-slider',\r\n                    template: \"\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    SliderComponent.ctorParameters = function () { return [\r\n        { type: ElementRef },\r\n        { type: KerviTemplateService }\r\n    ]; };\r\n    SliderComponent.propDecorators = {\r\n        value: [{ type: Input }],\r\n        type: [{ type: Input }],\r\n        tick: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        defaultSizes: [{ type: Input }],\r\n        maxValue: [{ type: Input }],\r\n        minValue: [{ type: Input }],\r\n        sliderChanged: [{ type: Output }]\r\n    };\r\n    return SliderComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar GaugeComponent = /** @class */ (function () {\r\n    function GaugeComponent(kerviService, templateService) {\r\n        this.kerviService = kerviService;\r\n        this.templateService = templateService;\r\n        this.value = null;\r\n        this.linkParameters = null;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.series = [];\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    GaugeComponent.prototype.createElement = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.series = [this.value.value];\r\n        this.options = {\r\n            chart: {\r\n                type: 'radialBar',\r\n                height: this.linkParameters.gaugeSize\r\n            },\r\n            plotOptions: {\r\n                radialBar: {\r\n                    startAngle: -135,\r\n                    endAngle: 135,\r\n                    hollow: {\r\n                        size: '70%',\r\n                    },\r\n                    track: {\r\n                        startAngle: -135,\r\n                        endAngle: 135,\r\n                    },\r\n                    dataLabels: {\r\n                        name: {\r\n                            show: true,\r\n                            color: \"#2d353c\",\r\n                            fontSize: \"14px\"\r\n                        },\r\n                        value: {\r\n                            fontSize: \"24px\",\r\n                            show: true\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            colors: [this.color(\"color\", \".kervi-chart\")],\r\n            // ['#9fd037'],\r\n            series: this.series,\r\n            labels: [this.value.name],\r\n        };\r\n        if (this.chartObj) {\r\n            this.chartObj.destroy();\r\n        }\r\n        console.log(\"create gauge\", this.value.id);\r\n        this.chartObj = new ApexCharts(this.chartElement.nativeElement, this.options);\r\n        this.chartObj.render();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GaugeComponent.prototype.render = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.chartObj.render();\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    GaugeComponent.prototype.color = /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    function (style, selector) {\r\n        return this.templateService.getColor(style, selector);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GaugeComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var self = this;\r\n        asapScheduler.schedule((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.createElement();\r\n        }));\r\n        this.value.value$.subscribe((/**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            if (self.chartObj && v) {\r\n                //self.series=[v];\r\n                console.log(\"gv\", v);\r\n                self.chartObj.updateSeries([v]);\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GaugeComponent.prototype.loadPeriod = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        //console.log(\"lp\", this.periodStart, this.periodEnd);\r\n        //this.kerviService.spine.sendQuery(\"getSensorData\", this.value.id, this.periodStart.toISOString(), this.periodEnd.toISOString(), function (results) {\r\n        //console.log(\"gsd\", results);\r\n        //var sensorData = results;\r\n        //self.chartData.length = 0;\r\n        //for (var i = 0; (i < sensorData.length); i++) {\r\n        //var dataItem = sensorData[i]\r\n        //self.chartData.push({ x: new Date(dataItem.ts + \" utc\"), y: dataItem.value });\r\n        //}\r\n        //self.chart.render();\r\n        //self.chart.update();\r\n        //});\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    GaugeComponent.prototype.cleanData = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // if(this.updateChart){\r\n        //   var doClean = true;\r\n        //   var limitTS = this.getPeriodLimit();\r\n        //   var ds = this.chart.data.datasets[0].data\r\n        //   while ( ds.length>0 && doClean){\r\n        //     if (ds[0].x < limitTS)\r\n        //       ds.shift();\r\n        //     else\r\n        //       doClean = false\r\n        //   }\r\n        // }\r\n    };\r\n    GaugeComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-gauge',\r\n                    template: \"<div #chart></div>\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    GaugeComponent.ctorParameters = function () { return [\r\n        { type: NGXKerviService },\r\n        { type: KerviTemplateService }\r\n    ]; };\r\n    GaugeComponent.propDecorators = {\r\n        value: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        type: [{ type: Input }],\r\n        size: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        chartElement: [{ type: ViewChild, args: ['chart',] }]\r\n    };\r\n    return GaugeComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviChartComponent = /** @class */ (function () {\r\n    function KerviChartComponent(kerviService, templateService) {\r\n        this.kerviService = kerviService;\r\n        this.templateService = templateService;\r\n        this.value = null;\r\n        this.linkParameters = null;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.series = [];\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviChartComponent.prototype.createElement = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.series = [\r\n            {\r\n                name: this.value.name,\r\n                data: []\r\n            }\r\n        ];\r\n        this.options = {\r\n            chart: {\r\n                id: \"chart_\" + this.value.id,\r\n                width: \"100%\",\r\n                height: 300,\r\n                type: this.linkParameters.chartType,\r\n                animations: {\r\n                    enabled: true,\r\n                    easing: 'linear',\r\n                    dynamicAnimation: {\r\n                        speed: 100\r\n                    }\r\n                },\r\n                toolbar: {\r\n                    show: false,\r\n                    tools: {\r\n                        download: true,\r\n                        selection: true,\r\n                        zoom: true,\r\n                        zoomin: true,\r\n                        zoomout: true,\r\n                        pan: true,\r\n                        reset: true,\r\n                        customIcons: []\r\n                    },\r\n                    autoSelected: 'zoom'\r\n                },\r\n                zoom: {\r\n                    enabled: true\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                curve: 'smooth',\r\n                width: 1\r\n            },\r\n            title: {\r\n                text: this.linkParameters.chartTitle,\r\n                align: 'left'\r\n            },\r\n            markers: {\r\n                size: 0\r\n            },\r\n            xaxis: {\r\n                type: 'datetime',\r\n            },\r\n            yaxis: {\r\n                max: this.value.maxValue,\r\n                min: this.value.minValue\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            grid: {\r\n                show: this.linkParameters.chartGrid,\r\n                xaxis: {\r\n                    lines: {\r\n                        show: true,\r\n                        animate: true\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true,\r\n                        animate: true\r\n                    }\r\n                }\r\n            },\r\n            colors: [this.color(\"color\", \".kervi-chart\")],\r\n            // ['#9fd037'],\r\n            series: this.series\r\n        };\r\n        if (this.chartObj) {\r\n            this.chartObj.destroy();\r\n        }\r\n        if (!this.linkParameters.chartTitle)\r\n            delete (this.options[\"title\"]);\r\n        console.log(\"create chart\", this.value.id);\r\n        this.chartObj = new ApexCharts(this.chartElement.nativeElement, this.options);\r\n        this.chartObj.render();\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    KerviChartComponent.prototype.color = /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    function (style, selector) {\r\n        return this.templateService.getColor(style, selector);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviChartComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var self = this;\r\n        asapScheduler.schedule((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.createElement();\r\n        }));\r\n        this.value.value$.subscribe((/**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            if (self.chartObj) {\r\n                self.series[0].data.push([self.value.valueTS.getTime(), v]);\r\n                self.chartObj.updateSeries(self.series);\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviChartComponent.prototype.loadPeriod = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        //console.log(\"lp\", this.periodStart, this.periodEnd);\r\n        //this.kerviService.spine.sendQuery(\"getSensorData\", this.value.id, this.periodStart.toISOString(), this.periodEnd.toISOString(), function (results) {\r\n        //console.log(\"gsd\", results);\r\n        //var sensorData = results;\r\n        //self.chartData.length = 0;\r\n        //for (var i = 0; (i < sensorData.length); i++) {\r\n        //var dataItem = sensorData[i]\r\n        //self.chartData.push({ x: new Date(dataItem.ts + \" utc\"), y: dataItem.value });\r\n        //}\r\n        //self.chart.render();\r\n        //self.chart.update();\r\n        //});\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviChartComponent.prototype.cleanData = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // if(this.updateChart){\r\n        //   var doClean = true;\r\n        //   var limitTS = this.getPeriodLimit();\r\n        //   var ds = this.chart.data.datasets[0].data\r\n        //   while ( ds.length>0 && doClean){\r\n        //     if (ds[0].x < limitTS)\r\n        //       ds.shift();\r\n        //     else\r\n        //       doClean = false\r\n        //   }\r\n        // }\r\n    };\r\n    KerviChartComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-chart',\r\n                    template: \"<div #chart></div>\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviChartComponent.ctorParameters = function () { return [\r\n        { type: NGXKerviService },\r\n        { type: KerviTemplateService }\r\n    ]; };\r\n    KerviChartComponent.propDecorators = {\r\n        value: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        type: [{ type: Input }],\r\n        size: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        chartElement: [{ type: ViewChild, args: ['chart',] }]\r\n    };\r\n    return KerviChartComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar SwitchButtonComponent = /** @class */ (function () {\r\n    function SwitchButtonComponent() {\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.buttonState = new EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SwitchButtonComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        console.log(\"sb\", this.value);\r\n        if (this.linkParameters) {\r\n            if (!this.linkParameters.buttonWidth)\r\n                this.width = this.dashboardSizes.switchWidth;\r\n            else\r\n                this.width = this.linkParameters.buttonWidth;\r\n            if (!this.linkParameters.buttonHeight)\r\n                this.height = this.dashboardSizes.switchHeight;\r\n            else\r\n                this.height = this.linkParameters.buttonHeight;\r\n        }\r\n        else {\r\n            this.width = this.dashboardSizes.switchWidth;\r\n            this.height = this.dashboardSizes.switchHeight;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} state\r\n     * @return {?}\r\n     */\r\n    SwitchButtonComponent.prototype.modelChange = /**\r\n     * @param {?} state\r\n     * @return {?}\r\n     */\r\n    function (state) {\r\n        this.buttonState.emit(state);\r\n    };\r\n    SwitchButtonComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-switchbutton',\r\n                    template: \"<nz-switch \\n    [(ngModel)]=\\\"value\\\"\\n    [nzCheckedChildren]=\\\"checkedTemplate\\\" [nzUnCheckedChildren]=\\\"unCheckedTemplate\\\"\\n    (ngModelChange)=\\\"modelChange($event)\\\"\\n>\\n\\n</nz-switch>\\n<ng-template #checkedTemplate>\\n    <i *ngIf=\\\"linkParameters.onIcon\\\"  nz-icon [type]=\\\"linkParameters.onIcon\\\"></i>\\n    <span >{{ linkParameters.onText }}</span>\\n</ng-template>\\n<ng-template #unCheckedTemplate>\\n    <i *ngIf=\\\"linkParameters.offIcon\\\"  nz-icon [type]=\\\"linkParameters.offIcon\\\"></i>\\n    <span >{{ linkParameters.offText }}</span>\\n</ng-template>\\n\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    SwitchButtonComponent.ctorParameters = function () { return []; };\r\n    SwitchButtonComponent.propDecorators = {\r\n        value: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        buttonState: [{ type: Output }]\r\n    };\r\n    return SwitchButtonComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ButtonComponent = /** @class */ (function () {\r\n    function ButtonComponent() {\r\n        this.linkParameters = null;\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.buttonState = new EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ButtonComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (self.linkParameters) {\r\n            if (!self.linkParameters.buttonWidth)\r\n                this.width = this.dashboardSizes.buttonWidth;\r\n            else\r\n                this.width = self.linkParameters.buttonWidth;\r\n            if (!self.linkParameters.buttonHeight)\r\n                this.height = this.dashboardSizes.buttonHeight;\r\n            else\r\n                this.height = self.linkParameters.buttonHeight;\r\n        }\r\n        else {\r\n            this.width = this.dashboardSizes.buttonWidth;\r\n            this.height = this.dashboardSizes.buttonHeight;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ButtonComponent.prototype.confirm = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        console.log(\"c\", this.value);\r\n        this.buttonState.emit(true);\r\n        this.buttonState.emit(false);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ButtonComponent.prototype.press = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        console.log(\"p\", this.value);\r\n        this.buttonState.emit(true);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ButtonComponent.prototype.release = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.buttonState.emit(false);\r\n    };\r\n    ButtonComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-button',\r\n                    template: \"<ng-template #buttonContentTemplate>\\n    <i *ngIf=\\\"linkParameters.buttonIcon\\\" nz-icon [type]=\\\"linkParameters.buttonIcon\\\"></i>\\n    {{ linkParameters.buttonText }}\\n</ng-template>\\n<button\\n    *ngIf = \\\"linkParameters.confirm\\\"\\n    nz-button nzType=\\\"primary\\\"\\n    (nzOnConfirm)=\\\"confirm()\\\"\\n    nz-popconfirm [nzTitle]=\\\"linkParameters.confirmMessage\\\"\\n>\\n<ng-container *ngTemplateOutlet=\\\"buttonContentTemplate\\\"></ng-container>\\n</button>\\n<button\\n    *ngIf = \\\"!linkParameters.confirm\\\"\\n    nz-button nzType=\\\"primary\\\"\\n    (mousedown)=\\\"press()\\\" \\n    (mouseup)=\\\"release()\\\"\\n>\\n<ng-container *ngTemplateOutlet=\\\"buttonContentTemplate\\\"></ng-container>\\n</button>\\n\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ButtonComponent.ctorParameters = function () { return []; };\r\n    ButtonComponent.propDecorators = {\r\n        value: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        type: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        title: [{ type: Input }],\r\n        buttonState: [{ type: Output }]\r\n    };\r\n    return ButtonComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar MPEGViewerComponent = /** @class */ (function () {\r\n    function MPEGViewerComponent() {\r\n        this.width = null;\r\n        this.height = null;\r\n        this.imageLoaded = new EventEmitter();\r\n        this.firstLoad = true;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MPEGViewerComponent.prototype.imageReady = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.firstLoad) {\r\n            this.firstLoad = false;\r\n            this.imageLoaded.emit(true);\r\n        }\r\n    };\r\n    MPEGViewerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-mpeg-viewer',\r\n                    template: \"<img (load)=\\\"imageReady()\\\" class=\\\"camImage\\\" src=\\\"{{cameraSource}}\\\" [style.height.%]=\\\"height\\\" [style.width.%]=\\\"width\\\">\\n\",\r\n                    styles: [\"#video-viewer{margin-top:-20px}.cam-pad-area{z-index:1200;vertical-align:middle;width:200px;display:inline-block;position:absolute;left:389px;top:132px;color:#fff}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MPEGViewerComponent.ctorParameters = function () { return []; };\r\n    MPEGViewerComponent.propDecorators = {\r\n        cameraSource: [{ type: Input }],\r\n        width: [{ type: Input }],\r\n        height: [{ type: Input }],\r\n        imageLoaded: [{ type: Output }]\r\n    };\r\n    return MPEGViewerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar DateTimeComponent$1 = /** @class */ (function () {\r\n    function DateTimeComponent(elementRef) {\r\n        this.elementRef = elementRef;\r\n        this.dateTimeChanged = new EventEmitter;\r\n        this.isReady = false;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DateTimeComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    DateTimeComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-datetime',\r\n                    template: \"<nz-date-picker \\n*ngIf=\\\"type=='datetime'\\\"\\nnzShowTime\\n[(ngModel)]=\\\"dateTime.value\\\"\\n[nzFormat] = \\\"format\\\"\\n></nz-date-picker>\\n\\n<nz-date-picker \\n*ngIf=\\\"type=='date'\\\"\\n[(ngModel)]=\\\"dateTime.value\\\"\\n[nzFormat] = \\\"format\\\"\\n></nz-date-picker>\\n\\n\\n<nz-time-picker \\n*ngIf=\\\"type=='time'\\\"\\n[(ngModel)]=\\\"dateTime.value\\\"\\n[nzFormat] = \\\"format\\\"\\n></nz-time-picker>\\n\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DateTimeComponent.ctorParameters = function () { return [\r\n        { type: ElementRef }\r\n    ]; };\r\n    DateTimeComponent.propDecorators = {\r\n        dateTime: [{ type: Input }],\r\n        type: [{ type: Input }],\r\n        format: [{ type: Input }],\r\n        dateTimeChanged: [{ type: Output }]\r\n    };\r\n    return DateTimeComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar IconsComponent = /** @class */ (function () {\r\n    function IconsComponent() {\r\n        this.icon = null;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    IconsComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    IconsComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-icon',\r\n                    template: \"<i class=\\\"pi pi-{{icon}}\\\"></i>\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    IconsComponent.ctorParameters = function () { return []; };\r\n    IconsComponent.propDecorators = {\r\n        icon: [{ type: Input }]\r\n    };\r\n    return IconsComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ColorComponent$1 = /** @class */ (function () {\r\n    function ColorComponent(elementRef) {\r\n        this.elementRef = elementRef;\r\n        this.colorChange = new EventEmitter();\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.picker = null;\r\n    }\r\n    Object.defineProperty(ColorComponent.prototype, \"color\", {\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            console.log(\"cc\", v, this.picker);\r\n            this.colorValue = v;\r\n            if (v) {\r\n                //    jQuery('.color', this.elementRef.nativeElement).css(\"background-color\", v)\r\n                //else\r\n                jQuery('.color', this.elementRef.nativeElement).attr(\"style\", \"background-color:\" + v);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ColorComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (!self.linkParameters.buttonWidth)\r\n            this.width = this.dashboardSizes.switchWidth;\r\n        else\r\n            this.width = self.linkParameters.buttonWidth;\r\n        if (this.linkParameters.isInput) {\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                self.picker = jQuery('.color', self.elementRef.nativeElement).colorPicker({\r\n                    //color: 'rgba(255,12,14,1)',\r\n                    cssAddon: '.cp-color-picker {z-index:2000}',\r\n                    buildCallback: (/**\r\n                     * @param {?} b\r\n                     * @return {?}\r\n                     */\r\n                    function (b) {\r\n                    }),\r\n                    positionCallback: (/**\r\n                     * @param {?} p\r\n                     * @return {?}\r\n                     */\r\n                    function (p) {\r\n                    }),\r\n                    renderCallback: (/**\r\n                     * @param {?} v\r\n                     * @return {?}\r\n                     */\r\n                    function (v) {\r\n                        /** @type {?} */\r\n                        var value = v.text;\r\n                        if (value.indexOf(\"rgb\") == 0) {\r\n                            /** @type {?} */\r\n                            var rgb = v.text.split(',');\r\n                            /** @type {?} */\r\n                            var r = parseInt(rgb[0].substring(4));\r\n                            /** @type {?} */\r\n                            var g = parseInt(rgb[1]);\r\n                            /** @type {?} */\r\n                            var b = parseInt(rgb[2]);\r\n                            value = \"#\" + r.toString(16) + g.toString(16) + b.toString(16);\r\n                        }\r\n                        console.log(\"cc\", value);\r\n                        self.colorChange.emit(value);\r\n                    }),\r\n                    actionCallback: (/**\r\n                     * @param {?} v\r\n                     * @param {?} x\r\n                     * @return {?}\r\n                     */\r\n                    function (v, x) {\r\n                        console.log(\"c\", v, x);\r\n                    })\r\n                });\r\n            }), 0);\r\n        }\r\n    };\r\n    ColorComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-color',\r\n                    template: \"<div style=\\\"max-width:90px\\\" class=\\\"input-group\\\">\\n    <div  [attr.background.value]=\\\"colorValue\\\" class=\\\"form-control color\\\"></div>\\n</div>\\n\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ColorComponent.ctorParameters = function () { return [\r\n        { type: ElementRef }\r\n    ]; };\r\n    ColorComponent.propDecorators = {\r\n        color: [{ type: Input }],\r\n        colorChange: [{ type: Output }],\r\n        linkParameters: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }]\r\n    };\r\n    return ColorComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar UIComponentsModule = /** @class */ (function () {\r\n    function UIComponentsModule() {\r\n    }\r\n    UIComponentsModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    declarations: [\r\n                        SparklineComponent,\r\n                        SliderComponent,\r\n                        IconsComponent,\r\n                        GaugeComponent,\r\n                        KerviChartComponent,\r\n                        SwitchButtonComponent,\r\n                        ButtonComponent,\r\n                        //CamViewerComponent,\r\n                        MPEGViewerComponent,\r\n                        //ImageViewerComponent,\r\n                        //ActionComponent,\r\n                        DateTimeComponent$1,\r\n                        ColorComponent$1\r\n                    ],\r\n                    exports: [\r\n                        SparklineComponent,\r\n                        SliderComponent,\r\n                        IconsComponent,\r\n                        MPEGViewerComponent,\r\n                        GaugeComponent,\r\n                        KerviChartComponent,\r\n                        SwitchButtonComponent,\r\n                        ButtonComponent,\r\n                        //CamViewerComponent,\r\n                        //ActionComponent,\r\n                        DateTimeComponent$1,\r\n                        ColorComponent$1\r\n                    ],\r\n                    imports: [\r\n                        BrowserModule,\r\n                        NGXKerviPipesModule,\r\n                        CommonModule,\r\n                        NgxGaugeModule,\r\n                        FormsModule,\r\n                        NgZorroAntdModule,\r\n                        NgApexchartsModule\r\n                        //KerviPipesModule\r\n                    ],\r\n                    providers: [],\r\n                    bootstrap: []\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    UIComponentsModule.ctorParameters = function () { return []; };\r\n    return UIComponentsModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviValueComponent = /** @class */ (function () {\r\n    function KerviValueComponent() {\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n    }\r\n    KerviValueComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value',\r\n                    template: \"    <kervi-value-number *ngIf=\\\"value.typeName=='Number'\\\" [value]=\\\"value\\\" [dashboardSizes]=\\\"dashboardSizes\\\" [linkParameters]=\\\"linkParameters\\\" [inline]=\\\"inline\\\" ></kervi-value-number>\\n    <kervi-value-boolean *ngIf=\\\"value.typeName=='Boolean'\\\" [dashboardSizes]=\\\"dashboardSizes\\\" [linkParameters]=\\\"linkParameters\\\" [inline]=\\\"inline\\\" [value]=\\\"value\\\"></kervi-value-boolean>\\n    <kervi-value-string *ngIf=\\\"value.typeName=='String'\\\" [dashboardSizes]=\\\"dashboardSizes\\\" [linkParameters]=\\\"linkParameters\\\" [inline]=\\\"inline\\\" [value]=\\\"value\\\"></kervi-value-string>\\n    <kervi-value-color *ngIf=\\\"value.typeName=='Color'\\\" [dashboardSizes]=\\\"dashboardSizes\\\" [linkParameters]=\\\"linkParameters\\\" [inline]=\\\"inline\\\" [value]=\\\"value\\\"></kervi-value-color>\\n    <kervi-value-datetime *ngIf=\\\"value.typeName=='DateTime'\\\" [dashboardSizes]=\\\"dashboardSizes\\\" [linkParameters]=\\\"linkParameters\\\" [inline]=\\\"inline\\\" [value]=\\\"value\\\"></kervi-value-datetime>\\n\",\r\n                    styles: [\"\"]\r\n                    //directives: [ CommonModule  ],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviValueComponent.ctorParameters = function () { return []; };\r\n    KerviValueComponent.propDecorators = {\r\n        value: [{ type: Input }],\r\n        dashboardPanel: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }]\r\n    };\r\n    return KerviValueComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ValuesModule = /** @class */ (function () {\r\n    function ValuesModule() {\r\n    }\r\n    ValuesModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    declarations: [\r\n                        NumberComponent,\r\n                        BooleanComponent,\r\n                        KerviValueComponent,\r\n                        StringComponent,\r\n                        //EnumComponent,\r\n                        DateTimeComponent,\r\n                        ColorComponent\r\n                    ],\r\n                    exports: [\r\n                        NumberComponent,\r\n                        BooleanComponent,\r\n                        KerviValueComponent,\r\n                        StringComponent,\r\n                        //EnumComponent,\r\n                        DateTimeComponent,\r\n                        ColorComponent\r\n                    ],\r\n                    imports: [\r\n                        CommonModule,\r\n                        NGXKerviPipesModule,\r\n                        UIComponentsModule,\r\n                        FormsModule,\r\n                        NgZorroAntdModule\r\n                    ],\r\n                    providers: [],\r\n                    bootstrap: []\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ValuesModule.ctorParameters = function () { return []; };\r\n    return ValuesModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ControllerPadComponent = /** @class */ (function () {\r\n    function ControllerPadComponent(elementRef) {\r\n        this.elementRef = elementRef;\r\n        this.padSize = 180;\r\n        this.moveDelayTimer = null;\r\n        this.inDrag = false;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ControllerPadComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (this.XValue) {\r\n            jQuery(\"input[name='pad-x']\", self.elementRef.nativeElement).val(this.XValue.value$.value).change();\r\n            this.XValue.value$.subscribe((/**\r\n             * @param {?} v\r\n             * @return {?}\r\n             */\r\n            function (v) {\r\n                console.log(\"pad-x\", self.YValue.name, v);\r\n                jQuery(\"input[name='pad-x']\", self.elementRef.nativeElement).val(v).change();\r\n            }));\r\n        }\r\n        if (this.YValue) {\r\n            jQuery(\"input[name='pad-y']\", self.elementRef.nativeElement).val(this.YValue.value$.value).change();\r\n            this.YValue.value$.subscribe((/**\r\n             * @param {?} v\r\n             * @return {?}\r\n             */\r\n            function (v) {\r\n                console.log(\"pad-y\", self.YValue.name, v);\r\n                jQuery(\"input[name='pad-y']\", self.elementRef.nativeElement).val(v).change();\r\n            }));\r\n        }\r\n        /** @type {?} */\r\n        var color = \"rgba(255,255,255,.5)\";\r\n        /** @type {?} */\r\n        var p = jQuery('fieldset', self.elementRef.nativeElement).xy({\r\n            displayPrevious: false,\r\n            min: -100,\r\n            max: 100,\r\n            width: self.padSize,\r\n            height: self.padSize,\r\n            fgColor: color,\r\n            bgColor: color,\r\n            change: (/**\r\n             * @param {?} value\r\n             * @return {?}\r\n             */\r\n            function (value) {\r\n                if (self.moveDelayTimer) {\r\n                    clearTimeout(self.moveDelayTimer);\r\n                }\r\n                self.moveDelayTimer = setTimeout((/**\r\n                 * @return {?}\r\n                 */\r\n                function () {\r\n                    if (self.XValue)\r\n                        self.XValue.set(value[0]);\r\n                    if (self.YValue)\r\n                        self.YValue.set(value[1]);\r\n                }), 0);\r\n            })\r\n        })\r\n            .css({ 'border': '2px solid ' + color });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ControllerPadComponent.prototype.padPress = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.inDrag = true;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ControllerPadComponent.prototype.padRelease = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        console.log(\"pr\", this.inDrag, this.autoCenter);\r\n        this.inDrag = false;\r\n        if (this.autoCenter && this.XValue) {\r\n            console.log(\"x-auto center\");\r\n            jQuery(\"input[name='pad-x']\", this.elementRef.nativeElement).val(0).change();\r\n            this.XValue.set(0);\r\n        }\r\n        if (this.autoCenter && this.YValue) {\r\n            console.log(\"y-auto center\");\r\n            jQuery(\"input[name='pad-y']\", this.elementRef.nativeElement).val(0).change();\r\n            this.YValue.set(0);\r\n        }\r\n    };\r\n    ControllerPadComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-controller-pad',\r\n                    template: \"<div (mousedown)=\\\"padPress()\\\" (mouseup)=\\\"padRelease()\\\">\\n  <fieldset id=\\\"leftPad\\\" style=\\\"position:absolute\\\" class=\\\"pad\\\" [attr.data-width]=\\\"padSize\\\" [attr.data-height]=\\\"padSize\\\" >\\n    <legend></legend>\\n    <input type=\\\"hidden\\\" name=\\\"pad-x\\\" value=\\\"0\\\"><input type=\\\"hidden\\\"  name=\\\"pad-y\\\" value=\\\"0\\\">\\n  </fieldset>\\n</div>\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ControllerPadComponent.ctorParameters = function () { return [\r\n        { type: ElementRef }\r\n    ]; };\r\n    ControllerPadComponent.propDecorators = {\r\n        XValue: [{ type: Input }],\r\n        YValue: [{ type: Input }],\r\n        autoCenter: [{ type: Input }]\r\n    };\r\n    return ControllerPadComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar CamViewerComponent = /** @class */ (function (_super) {\r\n    __extends(CamViewerComponent, _super);\r\n    function CamViewerComponent(elementRef) {\r\n        var _this = _super.call(this) || this;\r\n        _this.elementRef = elementRef;\r\n        _this.showCamPad = false;\r\n        _this.padSize = 180;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CamViewerComponent.prototype.imageLoaded = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var h = this.videoViewer.nativeElement.offsetHeight;\r\n        /** @type {?} */\r\n        var w = this.elementRef.nativeElement.offsetWidth;\r\n        //this.camPadTop = h / 2 - this.padSize/2;\r\n        //this.camPadLeft = w / 2 - this.padSize/2;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CamViewerComponent.prototype.ngAfterViewInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        /** @type {?} */\r\n        var element = self.videoViewer.nativeElement;\r\n        /** @type {?} */\r\n        var viewPortHeight = window.innerHeight;\r\n        /** @type {?} */\r\n        var viewPortWidth = window.innerWidth;\r\n        this.camHeight = viewPortHeight - 65;\r\n        this.camWidth = viewPortWidth;\r\n        console.log(\"avic\", this.camHeight, this.camWidth);\r\n        setTimeout((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            /** @type {?} */\r\n            var h = element.offsetHeight;\r\n            /** @type {?} */\r\n            var w = element.offsetWidth;\r\n            if (w < self.padSize) {\r\n                self.padSize = w - 10;\r\n                //jQuery(\".camPad\", self.elementRef.nativeElement).css({ width: self.padSize, height:  self.padSize });\r\n            }\r\n            console.log(\"cami\", h, w, self.padSize, element);\r\n            self.camPadTop = h / 2 - (self.padSize / 2);\r\n            self.camPadLeft = w / 2 - (self.padSize / 2);\r\n            self.showCamPad = true;\r\n        }), 0);\r\n        // jQuery(window).bind('resize', function () {\r\n        //     var h = element.offsetHeight;\r\n        //     var w = element.offsetWidth;\r\n        //     self.camPadTop = h / 2 - (self.padSize/2)\r\n        //     self.camPadLeft =  w / 2 - (self.padSize / 2);\r\n        // })\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CamViewerComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitCamera();\r\n    };\r\n    CamViewerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-cam-viewer',\r\n                    template: \"<ng-container *ngIf=\\\"isBackground\\\">\\n\\t<div #videoViewer id=\\\"video-viewer\\\" class=\\\"video video-background\\\" style=\\\"text-align:center;position:fixed;top:60px;left:0px;height:100%;\\\" [style.height.px]=\\\"camHeight\\\" [style.width.px]=\\\"camWidth\\\">\\n\\t\\t<span class=\\\"camImage\\\" style=\\\"top:0px;left:0px;\\\">\\n\\t\\t\\t<kervi-mpeg-viewer (imageLoaded)=\\\"imageLoaded()\\\" [height]=100   [cameraSource]=\\\"cameraSource\\\" > </kervi-mpeg-viewer>\\n\\t\\t</span>\\n\\t\\t<canvas id=\\\"camCanvas\\\" style=\\\"position:absolute;top:0px;left:0px;\\\" [style.height.px]=\\\"camHeight\\\" [style.width.px]=\\\"camWidth\\\"></canvas>\\n\\t\\t<canvas id=\\\"poiCanvas\\\" style=\\\"position:absolute;top:0px;left:0px;width:100%;height:100%\\\"></canvas>\\n\\t\\t<div class=\\\"cam-pad-area\\\" *ngIf=\\\"showCamPad\\\" [style.left.px]=\\\"camPadLeft\\\" [style.top.px]=\\\"camPadTop\\\" style=\\\"position:absolute;z-index: 2000\\\">\\n      <kervi-controller-pad [XValue]=\\\"pan\\\" [YValue]=\\\"tilt\\\"> </kervi-controller-pad>\\n\\t\\t</div>\\n\\t\\t<div style=\\\"position:absolute;top:30px;left:0px;width:100%;height:50px\\\">\\n\\t\\t\\t<ng-container  *ngFor=\\\"let action of camera.actions\\\">\\n\\t\\t\\t\\t<kervi-action title=\\\"{{( action.name | translate)}}\\\" *ngIf=\\\"action.visible\\\" [action]=\\\"action\\\" ></kervi-action>\\n\\t\\t\\t</ng-container>\\n\\t\\t\\t<!-- <button class=\\\"btn btn-primary \\\"   (mousedown)=\\\"imageViewer.show()\\\" title=\\\"{{( 'media_folder' | translate)}}\\\">\\n\\t\\t\\t\\t<i  class='fa fa-folder'></i>\\n\\t\\t\\t</button> -->\\n\\t\\t</div>\\n\\t</div>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"!isBackground\\\">\\n\\t<div #videoViewer id=\\\"video-viewer\\\" class=\\\"video\\\" style=\\\"overflow:hidden;position:relative;width:100%\\\">\\n\\t\\t<span class=\\\"camImage\\\" style=\\\"top:0px;left:0px;height:100%;width:100%\\\">\\n\\t\\t\\t<kervi-mpeg-viewer (imageLoaded)=\\\"imageLoaded()\\\" [width]=100  [cameraSource]=\\\"cameraSource\\\" > </kervi-mpeg-viewer>\\n\\t\\t</span>\\n\\t\\t<canvas id=\\\"camCanvas\\\" style=\\\"position:absolute;top:0px;left:0px;width:100%;height:100%\\\"></canvas>\\n\\t\\t<canvas id=\\\"poiCanvas\\\" style=\\\"position:absolute;top:0px;left:0px;width:100%;height:100%\\\"></canvas>\\n\\t\\t<div class=\\\"cam-pad-area\\\" *ngIf=\\\"showCamPad\\\" [style.left.px]=\\\"camPadLeft\\\" [style.top.px]=\\\"camPadTop\\\" style=\\\"position:absolute\\\">\\n      <kervi-controller-pad [XValue]=\\\"pan\\\" [YValue]=\\\"tilt\\\"> </kervi-controller-pad>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div>\\n\\t\\t<ng-container  *ngFor=\\\"let action of camera.actions\\\">\\n\\t\\t\\t<kervi-action *ngIf=\\\"action.visible\\\" title=\\\"{{( action.name | translate)}}\\\" [action]=\\\"action\\\" ></kervi-action>\\n\\t\\t</ng-container>\\n\\t\\t<!-- <button class=\\\"btn btn-primary\\\" (mousedown)=\\\"imageViewer.show()\\\" title=\\\"{{( 'media_folder' | translate)}}\\\">\\n\\t\\t\\t<i  class='fa fa-folder'></i>\\n\\t\\t</button> -->\\n\\t</div>\\n</ng-container>\\n<!-- <kervi-image-viewer #imageViewer [camComponent]=\\\"this\\\" [cameraSource]=\\\"cameraSource\\\"></kervi-image-viewer> -->\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    CamViewerComponent.ctorParameters = function () { return [\r\n        { type: ElementRef }\r\n    ]; };\r\n    CamViewerComponent.propDecorators = {\r\n        videoViewer: [{ type: ViewChild, args: [\"videoViewer\",] }]\r\n    };\r\n    return CamViewerComponent;\r\n}(KerviCameraComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n//import { TemplateService } from '../../template.service';\r\nvar ActionComponent = /** @class */ (function (_super) {\r\n    __extends(ActionComponent, _super);\r\n    function ActionComponent() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ActionComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitAction();\r\n    };\r\n    ActionComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-action',\r\n                    template: \"<kervi-switchbutton \\n    [dashboardSizes]=\\\"dashboardSizes\\\" \\n    [inline]=\\\"inline\\\" \\n    [value]=\\\"(state | async)\\\" \\n    [linkParameters]=\\\"linkParameters\\\"\\n    (buttonState)=\\\"setActionState($event)\\\"\\n    *ngIf=\\\"displayType!='button'\\\"\\n></kervi-switchbutton>\\n<kervi-button \\n    [title]=\\\"action.name\\\" \\n    [dashboardSizes]=\\\"dashboardSizes\\\" \\n    [value]=\\\"(state | async)\\\" \\n    [inline]=\\\"inline\\\" \\n    [linkParameters]=\\\"linkParameters\\\"\\n    (buttonState)=\\\"setActionState($event)\\\" \\n    *ngIf=\\\"displayType=='button'\\\"\\n></kervi-button>\\n\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ActionComponent.ctorParameters = function () { return []; };\r\n    return ActionComponent;\r\n}(KerviActionComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n//import { TemplateService } from '../../template.service';\r\nvar UserLogComponent = /** @class */ (function (_super) {\r\n    __extends(UserLogComponent, _super);\r\n    function UserLogComponent() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserLogComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitUserLog();\r\n    };\r\n    UserLogComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-user-log',\r\n                    template: \"<nz-timeline >\\n    <nz-timeline-item [nzDot]=\\\"message.level==1 ? dotTemplate1 :  message.level==2 ? dotTemplate2 : dotTemplate3\\\" *ngFor=\\\"let message of messages$ | async\\\">\\n            <strong>{{message.sourceName}}</strong><br>\\n            <span style=\\\"font-size:80%\\\">{{message.timestamp | date: 'HH:mm:ss'}}</span><br>    \\n            {{message.topic}}\\n            <nz-divider></nz-divider>\\n    </nz-timeline-item>\\n</nz-timeline>\\n<ng-template #dotTemplate1>\\n    <i nz-icon type=\\\"close-circle\\\" style=\\\"font-size: 16px;\\\" [nzTheme]=\\\"'twotone'\\\" [nzTwotoneColor]=\\\"'#f5222d'\\\"></i>\\n</ng-template>\\n<ng-template #dotTemplate2>\\n    <i nz-icon type=\\\"warning\\\" style=\\\"font-size: 16px;\\\" [nzTheme]=\\\"'twotone'\\\" [nzTwotoneColor]=\\\"'#faad14'\\\"></i>\\n</ng-template>\\n<ng-template #dotTemplate3>\\n    <i nz-icon nz-icon type=\\\"check-circle\\\" [nzTheme]=\\\"'twotone'\\\" [nzTwotoneColor]=\\\"'#52c41a'\\\" style=\\\"font-size: 16px;\\\"></i>\\n</ng-template>\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    UserLogComponent.ctorParameters = function () { return []; };\r\n    return UserLogComponent;\r\n}(KerviUserLogComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar UserMessagesComponent = /** @class */ (function (_super) {\r\n    __extends(UserMessagesComponent, _super);\r\n    function UserMessagesComponent(notification) {\r\n        var _this = _super.call(this) || this;\r\n        _this.notification = notification;\r\n        /** @type {?} */\r\n        var self = _this;\r\n        _this.lastMessage$.subscribe((/**\r\n         * @param {?} message\r\n         * @return {?}\r\n         */\r\n        function (message) {\r\n            if (message) {\r\n                self.notification.template(self.messageTemplate, { nzData: message });\r\n            }\r\n        }));\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserMessagesComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitUserLog();\r\n    };\r\n    UserMessagesComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-user-messages',\r\n                    template: \"<ng-template let-message=\\\"data\\\">\\n    <div class=\\\"ant-notification-notice-content\\\">\\n        <div class=\\\"ant-notification-notice-with-icon\\\">\\n            <span class=\\\"ant-notification-notice-icon\\\">\\n                <i *ngIf=\\\"message.level==3\\\" nz-icon type=\\\"check-circle\\\" [nzTheme]=\\\"'twotone'\\\" [nzTwotoneColor]=\\\"'#52c41a'\\\"></i>\\n                <i *ngIf=\\\"message.level==2\\\" nz-icon type=\\\"warning\\\" [nzTheme]=\\\"'twotone'\\\" [nzTwotoneColor]=\\\"'#faad14'\\\"></i>\\n                <i *ngIf=\\\"message.level==1\\\" nz-icon type=\\\"close-circle\\\" [nzTheme]=\\\"'twotone'\\\" [nzTwotoneColor]=\\\"'#f5222d'\\\"></i>\\n            </span>\\n            <div class=\\\"ant-notification-notice-message\\\">{{message.sourceName}}</div>\\n            <div class=\\\"ant-notification-notice-description\\\">\\n                {{ message.topic }}                \\n            </div>\\n        </div>\\n    </div>\\n    \\n</ng-template>\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    UserMessagesComponent.ctorParameters = function () { return [\r\n        { type: NzNotificationService }\r\n    ]; };\r\n    UserMessagesComponent.propDecorators = {\r\n        messageTemplate: [{ type: ViewChild, args: [TemplateRef,] }]\r\n    };\r\n    return UserMessagesComponent;\r\n}(KerviUserLogComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar UserMessageButtonComponent = /** @class */ (function (_super) {\r\n    __extends(UserMessageButtonComponent, _super);\r\n    function UserMessageButtonComponent() {\r\n        var _this = _super.call(this) || this;\r\n        _this.visible = false;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserMessageButtonComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitUserLog();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserMessageButtonComponent.prototype.open = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.visible = true;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserMessageButtonComponent.prototype.close = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.visible = false;\r\n    };\r\n    UserMessageButtonComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-message-button',\r\n                    template: \"<nz-badge [nzCount]=\\\"messageCount$ | async\\\" [nzOverflowCount]=\\\"99\\\">\\n    <button *ngIf=\\\"(messageCount$ | async)>0\\\" nz-button nzGhost  nzType=\\\"default\\\" nzShape=\\\"circle\\\" (click)=\\\"open()\\\">\\n        <i nz-icon nzType=\\\"notification\\\" nzTheme=\\\"twotone\\\" [nzTwotoneColor]=\\\"'#9fd037'\\\"></i>\\n    </button>\\n</nz-badge>\\n\\n<nz-drawer\\n      [nzClosable]=\\\"false\\\"\\n      [nzVisible]=\\\"visible\\\"\\n      nzPlacement=\\\"right\\\"\\n      nzTitle=\\\"Log\\\"\\n      (nzOnClose)=\\\"close()\\\"\\n    >\\n    <kervi-user-log [inline]=\\\"false\\\"></kervi-user-log>\\n</nz-drawer>\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    UserMessageButtonComponent.ctorParameters = function () { return []; };\r\n    return UserMessageButtonComponent;\r\n}(KerviUserLogComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviZorroModule = /** @class */ (function () {\r\n    function KerviZorroModule() {\r\n    }\r\n    KerviZorroModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        BrowserModule,\r\n                        NGXKerviPipesModule,\r\n                        NgxKerviModule,\r\n                        ValuesModule,\r\n                        NgZorroAntdModule,\r\n                        FlexLayoutModule,\r\n                        UIComponentsModule\r\n                    ],\r\n                    declarations: [\r\n                        DashboardPanelComponent,\r\n                        WidgetComponent,\r\n                        ControllerPadComponent,\r\n                        CamViewerComponent,\r\n                        ActionComponent,\r\n                        UserLogComponent,\r\n                        UserMessageButtonComponent,\r\n                        UserMessagesComponent\r\n                    ],\r\n                    exports: [\r\n                        DashboardPanelComponent,\r\n                        ControllerPadComponent,\r\n                        CamViewerComponent,\r\n                        UserLogComponent,\r\n                        UserMessageButtonComponent,\r\n                        UserMessagesComponent\r\n                    ]\r\n                },] },\r\n    ];\r\n    return KerviZorroModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { KerviZorroService, KerviZorroModule, ActionComponent as ɵw, CamViewerComponent as ɵv, ControllerPadComponent as ɵu, DashboardPanelComponent as ɵs, UserMessageButtonComponent as ɵy, UserMessagesComponent as ɵz, UserLogComponent as ɵx, ButtonComponent as ɵo, KerviChartComponent as ɵm, ColorComponent$1 as ɵr, DateTimeComponent$1 as ɵq, GaugeComponent as ɵl, IconsComponent as ɵk, MPEGViewerComponent as ɵp, SliderComponent as ɵj, SparklineComponent as ɵi, SwitchButtonComponent as ɵn, UIComponentsModule as ɵh, BooleanComponent as ɵc, ColorComponent as ɵg, DateTimeComponent as ɵf, KerviValueComponent as ɵd, NumberComponent as ɵb, StringComponent as ɵe, ValuesModule as ɵa, WidgetComponent as ɵt };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2Vydmktem9ycm8uanMubWFwIiwic291cmNlcyI6WyJuZzovL2tlcnZpLXpvcnJvL2xpYi9rZXJ2aS16b3Jyby5zZXJ2aWNlLnRzIiwibmc6Ly9rZXJ2aS16b3Jyby9saWIvZGFzaGJvYXJkLXBhbmVsL2Rhc2hib2FyZC1wYW5lbC5jb21wb25lbnQudHMiLCJuZzovL2tlcnZpLXpvcnJvL2xpYi93aWRnZXQvd2lkZ2V0LmNvbXBvbmVudC50cyIsIm5nOi8va2Vydmktem9ycm8vbGliL3ZhbHVlcy9udW1iZXItdmFsdWUvbnVtYmVyLXZhbHVlLmNvbXBvbmVudC50cyIsIm5nOi8va2Vydmktem9ycm8vbGliL3ZhbHVlcy9ib29sZWFuLXZhbHVlL2Jvb2xlYW4tdmFsdWUuY29tcG9uZW50LnRzIiwibmc6Ly9rZXJ2aS16b3Jyby9saWIvdmFsdWVzL3N0cmluZy12YWx1ZS9zdHJpbmctdmFsdWUuY29tcG9uZW50LnRzIiwibmc6Ly9rZXJ2aS16b3Jyby9saWIvdmFsdWVzL2RhdGV0aW1lLXZhbHVlL2RhdGV0aW1lLXZhbHVlLmNvbXBvbmVudC50cyIsIm5nOi8va2Vydmktem9ycm8vbGliL3ZhbHVlcy9jb2xvci12YWx1ZS9jb2xvci12YWx1ZS5jb21wb25lbnQudHMiLCJuZzovL2tlcnZpLXpvcnJvL2xpYi91aS1jb21wb25lbnRzL3NwYXJrbGluZS9zcGFya2xpbmUuY29tcG9uZW50LnRzIiwibmc6Ly9rZXJ2aS16b3Jyby9saWIvdWktY29tcG9uZW50cy9zbGlkZXIvc2xpZGVyLmNvbXBvbmVudC50cyIsIm5nOi8va2Vydmktem9ycm8vbGliL3VpLWNvbXBvbmVudHMvZ2F1Z2UvZ2F1Z2UuY29tcG9uZW50LnRzIiwibmc6Ly9rZXJ2aS16b3Jyby9saWIvdWktY29tcG9uZW50cy9jaGFydC9jaGFydC5jb21wb25lbnQudHMiLCJuZzovL2tlcnZpLXpvcnJvL2xpYi91aS1jb21wb25lbnRzL3N3aXRjaC1idXR0b24vc3dpdGNoLWJ1dHRvbi5jb21wb25lbnQudHMiLCJuZzovL2tlcnZpLXpvcnJvL2xpYi91aS1jb21wb25lbnRzL2J1dHRvbi9idXR0b24uY29tcG9uZW50LnRzIiwibmc6Ly9rZXJ2aS16b3Jyby9saWIvdWktY29tcG9uZW50cy9tcGVnLXZpZXdlci9tcGVnLXZpZXdlci5jb21wb25lbnQudHMiLCJuZzovL2tlcnZpLXpvcnJvL2xpYi91aS1jb21wb25lbnRzL2RhdGV0aW1lcGlja2VyL2RhdGV0aW1lcGlja2VyLmNvbXBvbmVudC50cyIsIm5nOi8va2Vydmktem9ycm8vbGliL3VpLWNvbXBvbmVudHMvaWNvbnMvaWNvbnMuY29tcG9uZW50LnRzIiwibmc6Ly9rZXJ2aS16b3Jyby9saWIvdWktY29tcG9uZW50cy9jb2xvci9jb2xvci5jb21wb25lbnQudHMiLCJuZzovL2tlcnZpLXpvcnJvL2xpYi91aS1jb21wb25lbnRzL3VpLWNvbXBvbmVudHMubW9kdWxlLnRzIiwibmc6Ly9rZXJ2aS16b3Jyby9saWIvdmFsdWVzL2tlcnZpLXZhbHVlL2tlcnZpLXZhbHVlLmNvbXBvbmVudC50cyIsIm5nOi8va2Vydmktem9ycm8vbGliL3ZhbHVlcy92YWx1ZXMubW9kdWxlLnRzIiwibmc6Ly9rZXJ2aS16b3Jyby9saWIvY29udHJvbGxlci1wYWQvY29udHJvbGxlci1wYWQuY29tcG9uZW50LnRzIiwibmc6Ly9rZXJ2aS16b3Jyby9saWIvY2FtLXZpZXdlci9jYW0tdmlld2VyLmNvbXBvbmVudC50cyIsIm5nOi8va2Vydmktem9ycm8vbGliL2FjdGlvbi9hY3Rpb24uY29tcG9uZW50LnRzIiwibmc6Ly9rZXJ2aS16b3Jyby9saWIvbG9nL3VzZXItbG9nL3VzZXItbG9nLmNvbXBvbmVudC50cyIsIm5nOi8va2Vydmktem9ycm8vbGliL2xvZy9tZXNzYWdlcy9tZXNzYWdlcy5jb21wb25lbnQudHMiLCJuZzovL2tlcnZpLXpvcnJvL2xpYi9sb2cvbWVzc2FnZS1idXR0b24vbWVzc2FnZS1idXR0b24uY29tcG9uZW50LnRzIiwibmc6Ly9rZXJ2aS16b3Jyby9saWIva2Vydmktem9ycm8ubW9kdWxlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBJbmplY3RhYmxlKHtcclxuICBwcm92aWRlZEluOiAncm9vdCdcclxufSlcclxuZXhwb3J0IGNsYXNzIEtlcnZpWm9ycm9TZXJ2aWNlIHtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7IH1cclxufVxyXG4iLCJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBLZXJ2aURhc2hib2FyZFBhbmVsQ29tcG9uZW50IH0gZnJvbSAnbmd4LWtlcnZpJ1xyXG5pbXBvcnQgeyBncm91cCB9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2tlcnZpLWRhc2hib2FyZC1wYW5lbCcsXHJcbiAgdGVtcGxhdGU6IGA8IS0tIDxwPnt7cGFuZWwubmFtZX19IC0ge3twYW5lbC50eXBlfX0gLSB7e2dyb3VwTGF5b3V0fX0gLSB7e2JvZHlPbmx5fX0gLSB7e2lubGluZX19IC0ge3twYW5lbC5zdWJQYW5lbHMubGVuZ3RofX0gLSB7e3BhbmVsLmNvbXBvbmVudHMubGVuZ3RofX0gLSB7e2hlYWRlckNvbXBvbmVudHMubGVuZ3RofX0gLSB7e2JvZHlDb21wb25lbnRzLmxlbmd0aH19PC9wPiAtLT5cclxuPCEtLSA8cD53PXt7d2lkdGh9fSAtIHt7aW5Hcm91cH19PC9wPiAtLT5cclxuPG5nLWNvbnRhaW5lciAqbmdJZj1cInBhbmVsLnR5cGU9PSdncm91cCdcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJrZXJ2aS1wYW5lbC1kZWNrXCIgW2Z4TGF5b3V0XT1cInBhbmVsLnBhcmFtZXRlcnMubGF5b3V0XCIgZnhMYXlvdXQueHM9XCJjb2x1bW5cIiAgZnhMYXlvdXRHYXA9XCIwLjUlXCI+XHJcbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdGb3I9XCJsZXQgc3ViUGFuZWwgb2YgcGFuZWwuc3ViUGFuZWxzXCI+XHJcbiAgICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJzdWJQYW5lbC50eXBlIT0nZ3JvdXAnXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxrZXJ2aS1kYXNoYm9hcmQtcGFuZWwgZnhGbGV4LnhzPVwiMTAwXCIgW2Z4RmxleF09XCJzdWJQYW5lbC5wYXJhbWV0ZXJzLndpZHRoXCIgW2JvZHlPbmx5XT1cInRydWVcIiBbaW5Hcm91cF09XCJ0cnVlXCIgW2Rhc2hib2FyZFNpemVzXT1cImRhc2hib2FyZFNpemVzXCIgIFtwYW5lbF09XCJzdWJQYW5lbFwiPjwva2VydmktZGFzaGJvYXJkLXBhbmVsPlxyXG4gICAgICAgICAgICA8L25nLWNvbnRhaW5lcj5cclxuICAgICAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cInN1YlBhbmVsLnR5cGU9PSdncm91cCdcIj5cclxuICAgICAgICAgICAgICAgICAgICA8a2VydmktZGFzaGJvYXJkLXBhbmVsIGZ4RmxleC54cz1cIjEwMFwiIFtmeEZsZXhdPVwic3ViUGFuZWwucGFyYW1ldGVycy53aWR0aFwiIFtpbkdyb3VwXT1cInRydWVcIiBbZGFzaGJvYXJkU2l6ZXNdPVwiZGFzaGJvYXJkU2l6ZXNcIiAgW3BhbmVsXT1cInN1YlBhbmVsXCI+PC9rZXJ2aS1kYXNoYm9hcmQtcGFuZWw+XHJcbiAgICAgICAgICAgIDwvbmctY29udGFpbmVyPlxyXG4gICAgICAgIDwvbmctY29udGFpbmVyPlxyXG4gICAgPC9kaXY+XHJcbjwvbmctY29udGFpbmVyPlxyXG5cclxuPG5nLWNvbnRhaW5lciAqbmdJZj1cInBhbmVsLnR5cGUhPSdncm91cCcgJiYgIWlubGluZVwiPlxyXG4gICAgXHJcbiAgICA8bnotY2FyZCAgW256VGl0bGVdPVwic2hvd0hlYWRlciA/IHRpdGxlIDogbnVsbFwiIFtuekV4dHJhXT1cImhlYWRlckNvbXBvbmVudHMubGVuZ3RoPjAgPyBleHRyYVRlbXBsYXRlIDogbnVsbFwiPlxyXG4gICAgICAgIFxyXG4gICAgICAgIDxuZy10ZW1wbGF0ZSAjZXh0cmFUZW1wbGF0ZT5cclxuICAgICAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdGb3I9XCJsZXQgcGFuZWxDb21wb25lbnQgb2YgaGVhZGVyQ29tcG9uZW50c1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8a2Vydmktd2lkZ2V0IFtjb21wb25lbnRdPVwicGFuZWxDb21wb25lbnQuY29tcG9uZW50XCIgW2Rhc2hib2FyZFBhbmVsXT1cInBhbmVsXCIgW2lubGluZV09XCJpbmxpbmVcIiAgW2xpbmtQYXJhbWV0ZXJzXT1cInBhbmVsQ29tcG9uZW50LnBhcmFtZXRlcnNcIj48L2tlcnZpLXdpZGdldD5cclxuICAgICAgICAgICAgPC9uZy1jb250YWluZXI+XHJcbiAgICAgICAgPC9uZy10ZW1wbGF0ZT5cclxuICAgICAgICA8bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCBwYW5lbENvbXBvbmVudCBvZiBib2R5Q29tcG9uZW50c1wiPlxyXG4gICAgICAgICAgICA8a2Vydmktd2lkZ2V0IFtjb21wb25lbnRdPVwicGFuZWxDb21wb25lbnQuY29tcG9uZW50XCIgW2Rhc2hib2FyZFBhbmVsXT1cInBhbmVsXCIgIFtpbmxpbmVdPVwiaW5saW5lXCIgIFtsaW5rUGFyYW1ldGVyc109XCJwYW5lbENvbXBvbmVudC5wYXJhbWV0ZXJzXCI+PC9rZXJ2aS13aWRnZXQ+XHJcbiAgICAgICAgPC9uZy1jb250YWluZXI+XHJcbiAgICBcclxuICAgICAgICA8ZGl2ICpuZ0lmPVwicGFuZWwucGFyYW1ldGVycy51c2VyTG9nXCIgID5cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIDxrZXJ2aS11c2VyLWxvZz48L2tlcnZpLXVzZXItbG9nPlxyXG4gICAgICAgIDwvZGl2PiBcclxuICAgIDwvbnotY2FyZD5cclxuPC9uZy1jb250YWluZXI+XHJcblxyXG48bmctdGVtcGxhdGUgW25nSWZdPVwiaW5saW5lICYmIHBhbmVsLmNvbXBvbmVudHMubGVuZ3RoPjBcIiA+XHJcbiAgICA8bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCBwYW5lbENvbXBvbmVudCBvZiBwYW5lbC5jb21wb25lbnRzXCIgPlxyXG4gICAgICAgIDxrZXJ2aS13aWRnZXQgW2NvbXBvbmVudF09XCJwYW5lbENvbXBvbmVudC5jb21wb25lbnRcIiAgW2lubGluZV09XCJpbmxpbmVcIiBbZGFzaGJvYXJkUGFuZWxdPVwicGFuZWxcIiAgW2xpbmtQYXJhbWV0ZXJzXT1cInBhbmVsQ29tcG9uZW50LnBhcmFtZXRlcnNcIj48L2tlcnZpLXdpZGdldD5cclxuICAgIDwvbmctY29udGFpbmVyPlxyXG48L25nLXRlbXBsYXRlPmAsXHJcbiAgc3R5bGVzOiBbYGBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEYXNoYm9hcmRQYW5lbENvbXBvbmVudCBleHRlbmRzIEtlcnZpRGFzaGJvYXJkUGFuZWxDb21wb25lbnQge1xyXG4gIHB1YmxpYyBncm91cExheW91dD1cInJvd1wiO1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgc3VwZXIoKTtcclxuICAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMubmdPbkluaXRQYW5lbCgpO1xyXG4gICAgaWYgKHRoaXMucGFuZWwuaGFzT25seUdyb3VwUGFuZWxzKVxyXG4gICAgICB0aGlzLmdyb3VwTGF5b3V0ID0gXCJyb3dcIjtcclxuICB9XHJcblxyXG59XHJcbiIsImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEtlcnZpV2lkZ2V0Q29tcG9uZW50IH0gZnJvbSAnbmd4LWtlcnZpJ1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdrZXJ2aS13aWRnZXQnLFxyXG4gIHRlbXBsYXRlOiBgPG5nLWNvbnRhaW5lciAqbmdJZj1cIndpZGdldFR5cGU9PSd2YWx1ZSdcIj5cclxuICAgIDxkaXYgZnhMYXlvdXQ9XCJyb3dcIiAqbmdJZj1cIiFpbmxpbmVcIiBjbGFzcz1cImtlcnZpLWJsb2NrLXdpZGdldFwiPiBcclxuICAgICAgICA8ZGl2IGZ4RmxleD1cIjYwXCIgY2xhc3M9XCJrZXJ2aS12YWx1ZS1sYWJlbFwiPlxyXG4gICAgICAgICAgICA8c3BhbiAgICpuZ0lmPVwibGlua1BhcmFtZXRlcnMubGFiZWxJY29uXCIgY2xhc3M9XCJwaSBwaS17e2xpbmtQYXJhbWV0ZXJzLmxhYmVsSWNvbn19XCI+PC9zcGFuPlxyXG4gICAgICAgICAgICA8c3BhbiAgICpuZ0lmPVwibGlua1BhcmFtZXRlcnMubGFiZWxcIj57e2xpbmtQYXJhbWV0ZXJzLmxhYmVsfX08L3NwYW4+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgXHJcbiAgICAgICAgPGRpdiBmeEZsZXggY2xhc3M9XCJrZXJ2aS12YWx1ZS1zZWN0aW9uXCI+XHJcbiAgICAgICAgICAgIDxrZXJ2aS12YWx1ZSAqbmdJZj1cImNvbXBvbmVudC5jb21wb25lbnRUeXBlPT0nS2VydmlWYWx1ZSdcIiBbdmFsdWVdPVwiY29tcG9uZW50XCIgW2lubGluZV09XCJmYWxzZVwiIFtkYXNoYm9hcmRTaXplc109XCJkYXNoYm9hcmRTaXplc1wiICBbbGlua1BhcmFtZXRlcnNdPVwibGlua1BhcmFtZXRlcnNcIj48L2tlcnZpLXZhbHVlPlxyXG4gICAgICAgICAgICA8a2VydmktYWN0aW9uICAqbmdJZj1cImNvbXBvbmVudC5jb21wb25lbnRUeXBlPT0nYWN0aW9uJ1wiIFthY3Rpb25dPVwiY29tcG9uZW50XCIgW2lubGluZV09XCJmYWxzZVwiIFtkYXNoYm9hcmRTaXplc109XCJkYXNoYm9hcmRTaXplc1wiICBbbGlua1BhcmFtZXRlcnNdPVwibGlua1BhcmFtZXRlcnNcIj48L2tlcnZpLWFjdGlvbj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgXHJcbiAgICA8L2Rpdj5cclxuXHJcbiAgICA8ZGl2ICpuZ0lmPVwiaW5saW5lXCIgY2xhc3M9XCJrZXJ2aS1pbmxpbmUtd2lkZ2V0XCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImtlcnZpLXZhbHVlLWxhYmVsXCI+IFxyXG4gICAgICAgICAgICA8c3BhbiBzdHlsZT1cImRpc3BsYXk6aW5saW5lXCIgICpuZ0lmPVwibGlua1BhcmFtZXRlcnMubGFiZWxJY29uXCIgY2xhc3M9XCJmYSBmYS17e2xpbmtQYXJhbWV0ZXJzLmxhYmVsSWNvbn19XCI+PC9zcGFuPlxyXG4gICAgICAgICAgICA8c3BhbiBzdHlsZT1cImRpc3BsYXk6aW5saW5lXCIgICpuZ0lmPVwibGlua1BhcmFtZXRlcnMubGFiZWxcIiAgPnt7bGlua1BhcmFtZXRlcnMubGFiZWx9fTwvc3Bhbj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwia2VydmktdmFsdWUtc2VjdGlvblwiPlxyXG4gICAgICAgICAgICA8a2VydmktdmFsdWUgKm5nSWY9XCJjb21wb25lbnQuY29tcG9uZW50VHlwZT09J0tlcnZpVmFsdWUnXCIgW3ZhbHVlXT1cImNvbXBvbmVudFwiIFtpbmxpbmVdPVwiZmFsc2VcIiBbZGFzaGJvYXJkU2l6ZXNdPVwiZGFzaGJvYXJkU2l6ZXNcIiAgW2xpbmtQYXJhbWV0ZXJzXT1cImxpbmtQYXJhbWV0ZXJzXCI+PC9rZXJ2aS12YWx1ZT5cclxuICAgICAgICAgICAgPGtlcnZpLWFjdGlvbiAgKm5nSWY9XCJjb21wb25lbnQuY29tcG9uZW50VHlwZT09J2FjdGlvbidcIiBbYWN0aW9uXT1cImNvbXBvbmVudFwiIFtpbmxpbmVdPVwiZmFsc2VcIiBbZGFzaGJvYXJkU2l6ZXNdPVwiZGFzaGJvYXJkU2l6ZXNcIiAgW2xpbmtQYXJhbWV0ZXJzXT1cImxpbmtQYXJhbWV0ZXJzXCI+PC9rZXJ2aS1hY3Rpb24+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuPC9uZy1jb250YWluZXI+ICAgIFxyXG48bmctY29udGFpbmVyICpuZ0lmPVwid2lkZ2V0VHlwZT09J2NhbWVyYSdcIiBjbGFzcz1cImJsb2NrLWNvbXBvbmVudFwiID5cclxuICAgIDxrZXJ2aS1jYW0tdmlld2VyIFtpc0JhY2tncm91bmRdPVwiZmFsc2VcIiBbY2FtZXJhXT1cImNvbXBvbmVudFwiIFtsaW5rUGFyYW1ldGVyc109XCJsaW5rUGFyYW1ldGVyc1wiPjwva2VydmktY2FtLXZpZXdlcj5cclxuPC9uZy1jb250YWluZXI+XHJcbiAgICBcclxuICAgIFxyXG48bmctY29udGFpbmVyICpuZ0lmPVwid2lkZ2V0VHlwZT09J2dhdWdlJ1wiIGNsYXNzPVwiYmxvY2stY29tcG9uZW50XCIgPlxyXG4gICAgPGtlcnZpLWdhdWdlIFtkYXNoYm9hcmRTaXplc109XCJkYXNoYm9hcmRTaXplc1wiIFt2YWx1ZV09XCJjb21wb25lbnRcIiBbbGlua1BhcmFtZXRlcnNdPVwibGlua1BhcmFtZXRlcnNcIj48L2tlcnZpLWdhdWdlPlxyXG48L25nLWNvbnRhaW5lcj5cclxuXHJcbjxuZy1jb250YWluZXIgKm5nSWY9XCJ3aWRnZXRUeXBlPT0nY2hhcnQnXCIgY2xhc3M9XCJcIiA+XHJcbiAgICA8a2VydmktY2hhcnQgW2Rhc2hib2FyZFNpemVzXT1cImRhc2hib2FyZFNpemVzXCIgW3ZhbHVlXT1cImNvbXBvbmVudFwiIFtsaW5rUGFyYW1ldGVyc109XCJsaW5rUGFyYW1ldGVyc1wiID48L2tlcnZpLWNoYXJ0PlxyXG48L25nLWNvbnRhaW5lcj5gLFxyXG4gIHN0eWxlczogW11cclxufSlcclxuZXhwb3J0IGNsYXNzIFdpZGdldENvbXBvbmVudCBleHRlbmRzIEtlcnZpV2lkZ2V0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHN1cGVyKCk7XHJcbiAgIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLm5nT25Jbml0V2lkZ2V0KCk7XHJcbiAgfVxyXG5cclxufVxyXG4iLCIvLyBDb3B5cmlnaHQgKGMpIDIwMTYsIFRpbSBXZW50emxhdVxyXG4vLyBMaWNlbnNlZCB1bmRlciBNSVRcclxuXHJcbmltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEtlcnZpTnVtYmVyQ29tcG9uZW50IH0gZnJvbSAnbmd4LWtlcnZpJ1xyXG5AQ29tcG9uZW50KHtcclxuXHRzZWxlY3RvcjogJ2tlcnZpLXZhbHVlLW51bWJlcicsXHJcblx0dGVtcGxhdGU6IGA8bmctY29udGFpbmVyICpuZ0lmPVwibGlua1BhcmFtZXRlcnMuaXNJbnB1dFwiPlxyXG4gICAgPG56LWZvcm0tY29udHJvbCA+XHJcbiAgICAgICAgPG56LWlucHV0LW51bWJlciBpZD1cInt7dmFsdWUuaWR9fVwiIFtuek1pbl09XCJ2YWx1ZS5taW5WYWx1ZVwiIFtuek1heF09XCJ2YWx1ZS5tYXhWYWx1ZVwiIFtuelN0ZXBdPVwiMVwiIFsobmdNb2RlbCldPVwidmFsdWUudmFsdWVcIiAgPjwvbnotaW5wdXQtbnVtYmVyPlxyXG4gICAgICAgIFxyXG4gICAgPC9uei1mb3JtLWNvbnRyb2w+XHJcbiAgICA8IS0tIDx1aS1zbGlkZXIgW3ZhbHVlXT1cIih2YWx1ZS52YWx1ZSQgfCBhc3luYylcIiAoc2xpZGVyQ2hhbmdlZCk9XCJzZXRLZXJ2aVZhbHVlKCRldmVudClcIiBbbWluVmFsdWVdPVwidmFsdWUubWluVmFsdWVcIiBbbWF4VmFsdWVdPVwidmFsdWUubWF4VmFsdWVcIiBbbGlua1BhcmFtZXRlcnNdPVwibGlua1BhcmFtZXRlcnNcIj48L3VpLXNsaWRlcj4gLS0+XHJcbjwvbmctY29udGFpbmVyPlxyXG48bmctY29udGFpbmVyICpuZ0lmPVwiIWxpbmtQYXJhbWV0ZXJzLmlzSW5wdXRcIj5cclxuXHJcbiAgICA8c3BhbiBjbGFzcz1cInZhbHVlLXZhbHVlXCIgW3N0eWxlLm1pbi13aWR0aC5yZW1dPVwibGlua1BhcmFtZXRlcnMudmFsdWVTaXplXCI+XHJcbiAgICAgICAgPGkgKm5nSWY9XCJjdXJyZW50SWNvblwiIGNsYXNzPVwiZmEgZmEte3tjdXJyZW50SWNvbn19XCI+PC9pPlxyXG4gICAgICAgIDx2YWx1ZS1zcGFya2xpbmUgKm5nSWY9XCJsaW5rUGFyYW1ldGVycy5zaG93U3BhcmtsaW5lICYmICFsaW5rUGFyYW1ldGVycy5pc0lucHV0XCIgW3ZhbHVlXT1cInZhbHVlXCI+PC92YWx1ZS1zcGFya2xpbmU+XHJcbiAgICAgICAge3sodmFsdWUudmFsdWUkIHwgYXN5bmMgfCBudW1iZXI6bnVtYmVyRm9ybWF0KX19XHJcbiAgICAgICAgPHNwYW4gKm5nSWY9XCJsaW5rUGFyYW1ldGVycy5kaXNwbGF5VW5pdFwiPnt7dmFsdWUudW5pdH19PC9zcGFuPlxyXG4gICAgPC9zcGFuPlxyXG48L25nLWNvbnRhaW5lcj5cclxuYCxcclxuXHRzdHlsZXM6IFtgYF1cclxufSlcclxuZXhwb3J0IGNsYXNzIE51bWJlckNvbXBvbmVudCBleHRlbmRzIEtlcnZpTnVtYmVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHRjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnRSZWY6RWxlbWVudFJlZikgeyBcclxuXHRcdHN1cGVyKCk7XHJcblx0fVxyXG5cdFxyXG5cdG5nT25Jbml0KCkge1xyXG5cdFx0dGhpcy5uZ09uSW5pdE51bWJlcigpO1xyXG5cdH1cclxufVxyXG4iLCIvLyBDb3B5cmlnaHQgKGMpIDIwMTYsIFRpbSBXZW50emxhdVxyXG4vLyBMaWNlbnNlZCB1bmRlciBNSVRcclxuXHJcbmltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEtlcnZpQm9vbGVhbkNvbXBvbmVudCB9IGZyb20gJ25neC1rZXJ2aSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuXHRzZWxlY3RvcjogJ2tlcnZpLXZhbHVlLWJvb2xlYW4nLFxyXG5cdHRlbXBsYXRlOiBgPGtlcnZpLXN3aXRjaGJ1dHRvbiBcclxuICAgICpuZ0lmPVwiZGlzcGxheVR5cGUhPSdidXR0b24nXCJcclxuICAgIFtkYXNoYm9hcmRTaXplc109XCJkYXNoYm9hcmRTaXplc1wiIFxyXG4gICAgW2lubGluZV09XCJpbmxpbmVcIiBcclxuICAgIFt2YWx1ZV09XCJ2YWx1ZS52YWx1ZVwiIFxyXG4gICAgW2xpbmtQYXJhbWV0ZXJzXT1cImxpbmtQYXJhbWV0ZXJzXCJcclxuICAgIChidXR0b25TdGF0ZSk9XCJjaGFuZ2VTdGF0ZSgkZXZlbnQpXCJcclxuPjwva2Vydmktc3dpdGNoYnV0dG9uPlxyXG48a2VydmktYnV0dG9uIFxyXG4gICAgKm5nSWY9XCJkaXNwbGF5VHlwZT09J2J1dHRvbidcIiAgICBcclxuICAgIFtkYXNoYm9hcmRTaXplc109XCJkYXNoYm9hcmRTaXplc1wiIFxyXG4gICAgW3ZhbHVlXT1cInZhbHVlXCIgXHJcbiAgICBbaW5saW5lXT1cImlubGluZVwiIFxyXG4gICAgW2xpbmtQYXJhbWV0ZXJzXT1cImxpbmtQYXJhbWV0ZXJzXCIgXHJcbiAgICAoYnV0dG9uU3RhdGUpPVwiY2hhbmdlU3RhdGUoJGV2ZW50KVwiIFxyXG4+PC9rZXJ2aS1idXR0b24+XHJcblxyXG5cclxuXHJcbmAsXHJcblx0c3R5bGVzOiBbYGBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBCb29sZWFuQ29tcG9uZW50IGV4dGVuZHMgS2VydmlCb29sZWFuQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHRjb25zdHJ1Y3RvcigpIHsgXHJcblx0XHRzdXBlcigpO1xyXG5cdH1cclxuXHJcblx0Y2hhbmdlU3RhdGUoZXZlbnQpe1xyXG5cdFx0dGhpcy52YWx1ZS5zZXQoZXZlbnQpO1xyXG5cdH1cclxuXHJcblx0bmdPbkluaXQoKSB7XHJcblx0XHR0aGlzLm5nT25Jbml0Qm9vbGVhbigpO1xyXG5cdH1cclxufVxyXG4iLCIvLyBDb3B5cmlnaHQgKGMpIDIwMTYsIFRpbSBXZW50emxhdVxyXG4vLyBMaWNlbnNlZCB1bmRlciBNSVRcclxuXHJcbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCwgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBLZXJ2aVN0cmluZ0NvbXBvbmVudCB9IGZyb20gJ25neC1rZXJ2aSdcclxuXHJcbmRlY2xhcmUgdmFyIGpRdWVyeTphbnk7XHJcbkBDb21wb25lbnQoe1xyXG5cdHNlbGVjdG9yOiAna2VydmktdmFsdWUtc3RyaW5nJyxcclxuXHR0ZW1wbGF0ZTogYDxpbnB1dCBuei1pbnB1dCAqbmdJZj1cImxpbmtQYXJhbWV0ZXJzLmlzSW5wdXRcIiAgWyhuZ01vZGVsKV09XCJ2YWx1ZS52YWx1ZVwiLz5cclxuPHNwYW4gKm5nSWY9XCIhbGlua1BhcmFtZXRlcnMuaXNJbnB1dFwiIGNsYXNzPVwiZm9ybS1jb250cm9sIHB1bGwtcmlnaHRcIiAgID57eyh2YWx1ZS52YWx1ZSQgfCBhc3luYyl9fTwvc3Bhbj5cclxuYCxcclxuXHRzdHlsZXM6IFtgYF1cclxufSlcclxuZXhwb3J0IGNsYXNzIFN0cmluZ0NvbXBvbmVudCBleHRlbmRzIEtlcnZpU3RyaW5nQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHRjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIFxyXG5cdHtcclxuXHRcdHN1cGVyKCk7XHJcblx0IH1cclxuXHJcblx0bmdPbkluaXQoKXtcclxuXHRcdHZhciBzZWxmID0gdGhpcztcclxuXHRcdHRoaXMubmdPbkluaXRTdHJpbmcoKTtcclxuXHRcdHRoaXMudmFsdWUudmFsdWUkLnN1YnNjcmliZShmdW5jdGlvbih2KXtcclxuXHRcdCBcdGpRdWVyeShcImlucHV0XCIsIHNlbGYuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50KS52YWwodikuY2hhbmdlKCk7XHJcblx0XHR9KVxyXG5cdH1cclxuXHJcblx0b25DaGFuZ2UoZXZlbnQpe1xyXG5cdFx0dmFyIHYgPSBqUXVlcnkoXCJpbnB1dFwiLCB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCkudmFsKCk7XHJcblx0XHRjb25zb2xlLmxvZyhcImV2dlwiLCB2LCBldmVudCk7XHJcblx0XHR0aGlzLnZhbHVlLnNldCh2KTtcclxuXHR9XHJcbn1cclxuIiwiLy8gQ29weXJpZ2h0IChjKSAyMDE2LCBUaW0gV2VudHpsYXVcclxuLy8gTGljZW5zZWQgdW5kZXIgTUlUXHJcblxyXG5pbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBLZXJ2aURhdGVUaW1lQ29tcG9uZW50IH0gZnJvbSAnbmd4LWtlcnZpJztcclxuZGVjbGFyZSB2YXIgbW9tZW50OmFueTtcclxuXHJcbkBDb21wb25lbnQoe1xyXG5cdHNlbGVjdG9yOiAna2VydmktdmFsdWUtZGF0ZXRpbWUnLFxyXG5cdHRlbXBsYXRlOiBgPGtlcnZpLWRhdGV0aW1lIFt0eXBlXT1cImRpc3BsYXlUeXBlXCIgW2Zvcm1hdF09XCJkYXRlVGltZUZvcm1hdFwiIFtkYXRlVGltZV09XCJ2YWx1ZVwiPjwva2VydmktZGF0ZXRpbWU+XHJcbiAgICBgLFxyXG5cdHN0eWxlczogW2BgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgRGF0ZVRpbWVDb21wb25lbnQgZXh0ZW5kcyBLZXJ2aURhdGVUaW1lQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHRjb25zdHJ1Y3RvcigpIHsgXHJcblx0XHRzdXBlcigpO1xyXG5cdH1cclxuXHJcblx0bmdPbkluaXQoKSB7XHJcblx0XHR0aGlzLm5nT25Jbml0RGF0ZVRpbWUoKTtcclxuXHR9XHJcbn1cclxuIiwiLy8gQ29weXJpZ2h0IChjKSAyMDE2LCBUaW0gV2VudHpsYXVcclxuLy8gTGljZW5zZWQgdW5kZXIgTUlUXHJcblxyXG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgS2VydmlDb2xvckNvbXBvbmVudCB9IGZyb20gJ25neC1rZXJ2aSdcclxuXHJcbkBDb21wb25lbnQoe1xyXG5cdHNlbGVjdG9yOiAna2VydmktdmFsdWUtY29sb3InLFxyXG5cdHRlbXBsYXRlOiBgPGtlcnZpLWNvbG9yIFtjb2xvcl09XCIodmFsdWUudmFsdWUkIHwgYXN5bmMpXCIgKGNvbG9yQ2hhbmdlKT1cInNldEtlcnZpVmFsdWUoJGV2ZW50KVwiIFtsaW5rUGFyYW1ldGVyc109XCJsaW5rUGFyYW1ldGVyc1wiID48L2tlcnZpLWNvbG9yPlxyXG5gLFxyXG5cdHN0eWxlczogW2BgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ29sb3JDb21wb25lbnQgZXh0ZW5kcyBLZXJ2aUNvbG9yQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHRcclxuXHRjb25zdHJ1Y3RvcigpIHsgXHJcblx0XHRzdXBlcigpO1xyXG5cdFx0Ly9jb25zb2xlLmxvZyhcImNuaW9cIix0aGlzKTtcclxuXHR9XHJcblxyXG5cclxuXHRzZXRWYWx1ZSh2KXtcclxuXHRcdGNvbnNvbGUubG9nKHYpO1xyXG5cdH1cclxuXHRuZ09uSW5pdCgpIHtcclxuXHRcdHRoaXMubmdPbkluaXRDb2xvcigpO1xyXG5cdH1cclxufVxyXG4iLCIvLyBDb3B5cmlnaHQgKGMpIDIwMTYsIFRpbSBXZW50emxhdVxyXG4vLyBMaWNlbnNlZCB1bmRlciBNSVRcclxuXHJcbmltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgVmlld0NoaWxkLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE51bWJlclZhbHVlLCBEYXNoYm9hcmRTaXplcyAgIH0gZnJvbSAna2VydmktanMnO1xyXG5pbXBvcnQgeyBOR1hLZXJ2aVNlcnZpY2UsIEtlcnZpVGVtcGxhdGVTZXJ2aWNlIH0gZnJvbSAnbmd4LWtlcnZpJztcclxuaW1wb3J0IHsgYXNhcFNjaGVkdWxlciB9IGZyb20gJ3J4anMnO1xyXG5cclxuZGVjbGFyZSB2YXIgQXBleENoYXJ0czogYW55O1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICd2YWx1ZS1zcGFya2xpbmUnLFxyXG4gIHRlbXBsYXRlOiBgPGRpdiAjY2hhcnQ+PC9kaXY+YCxcclxuICBzdHlsZXM6IFtgYF0sXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgU3BhcmtsaW5lQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBASW5wdXQoKSB2YWx1ZTogTnVtYmVyVmFsdWUgPSBudWxsO1xyXG4gIEBJbnB1dCgpIGxpbmtQYXJhbWV0ZXJzOiBhbnkgPSBudWxsO1xyXG4gIEBJbnB1dCgpIHR5cGU6IHN0cmluZztcclxuICBASW5wdXQoKSBzaXplOm51bWJlcjtcclxuICBASW5wdXQoKSBkYXNoYm9hcmRTaXplczpEYXNoYm9hcmRTaXplcyA9IG5ldyBEYXNoYm9hcmRTaXplcygpO1xyXG4gIEBWaWV3Q2hpbGQoJ2NoYXJ0JykgcHJpdmF0ZSBjaGFydEVsZW1lbnQ6IEVsZW1lbnRSZWY7XHJcbiAgcHJpdmF0ZSBzZXJpZXM9W107XHJcbiAgcHJpdmF0ZSBjaGFydE9iajogYW55O1xyXG4gIHByaXZhdGUgb3B0aW9uczphbnk7XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBrZXJ2aVNlcnZpY2U6TkdYS2VydmlTZXJ2aWNlLCBwcml2YXRlIHRlbXBsYXRlU2VydmljZTpLZXJ2aVRlbXBsYXRlU2VydmljZSApIHtcclxuXHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGNyZWF0ZUVsZW1lbnQoKXtcclxuICAgIHRoaXMuc2VyaWVzID0gW3RoaXMudmFsdWUudmFsdWVdXHJcblxyXG4gICAgdGhpcy5vcHRpb25zID17XHJcbiAgICAgIGNoYXJ0OiB7XHJcbiAgICAgICAgICBoZWlnaHQ6IDE0LFxyXG4gICAgICAgICAgd2lkdGg6NjAsXHJcbiAgICAgICAgICB0eXBlOiAnYXJlYScsXHJcbiAgICAgICAgICBzcGFya2xpbmU6IHtcclxuICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZVxyXG4gICAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgICBzdHJva2U6IHtcclxuICAgICAgICBjdXJ2ZTogJ3N0cmFpZ2h0JyxcclxuICAgICAgICB3aWR0aDoxXHJcbiAgICAgIH0sXHJcbiAgICAgIGZpbGw6IHtcclxuICAgICAgICBvcGFjaXR5OiAwLjMsXHJcbiAgICAgIH0sXHJcbiAgICAgIHNlcmllczogW3tcclxuICAgICAgICBkYXRhOiB0aGlzLnZhbHVlLnNwYXJrbGluZSQudmFsdWVcclxuICAgICAgfV0sXHJcbiAgICAgIHlheGlzOiB7XHJcbiAgICAgICAgbWluOiAwXHJcbiAgICAgIH0sXHJcbiAgICAgIGNvbG9yczogW3RoaXMuY29sb3IoXCJjb2xvclwiLFwiLmtlcnZpLXNwYXJrbGluZVwiKV0sXHJcbiAgICB9XHJcbiAgXHJcbiAgICBpZiAodGhpcy5jaGFydE9iaikge1xyXG4gICAgICB0aGlzLmNoYXJ0T2JqLmRlc3Ryb3koKTtcclxuICAgIH1cclxuICAgIGNvbnNvbGUubG9nKFwiY3JlYXRlIHNwYXJrbGluZVwiLCB0aGlzLnZhbHVlLmlkKTtcclxuICAgIHRoaXMuY2hhcnRPYmogPSBuZXcgQXBleENoYXJ0cyhcclxuICAgICAgdGhpcy5jaGFydEVsZW1lbnQubmF0aXZlRWxlbWVudCxcclxuICAgICAgdGhpcy5vcHRpb25zXHJcbiAgICApO1xyXG4gICAgdGhpcy5jaGFydE9iai5yZW5kZXIoKTtcclxuICB9XHJcblxyXG4gIFxyXG5cclxuICBwcml2YXRlIGNvbG9yKHN0eWxlLHNlbGVjdG9yKXtcclxuICAgIHJldHVybiB0aGlzLnRlbXBsYXRlU2VydmljZS5nZXRDb2xvcihzdHlsZSxzZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIGFzYXBTY2hlZHVsZXIuc2NoZWR1bGUoKCkgPT4ge1xyXG4gICAgICB0aGlzLmNyZWF0ZUVsZW1lbnQoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMudmFsdWUuc3BhcmtsaW5lJC5zdWJzY3JpYmUoZnVuY3Rpb24odil7XHJcbiAgICAgIGlmIChzZWxmLmNoYXJ0T2JqICYmIHYpe1xyXG4gICAgICAgIHNlbGYuY2hhcnRPYmoudXBkYXRlU2VyaWVzKFt7XHJcbiAgICAgICAgICBkYXRhOiB2XHJcbiAgICAgICAgfV0pO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcbn0iLCIvLyBDb3B5cmlnaHQgKGMpIDIwMTYsIFRpbSBXZW50emxhdVxyXG4vLyBMaWNlbnNlZCB1bmRlciBNSVRcclxuXHJcbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBPbkluaXQsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRGFzaGJvYXJkU2l6ZXMsIE51bWJlclZhbHVlIH0gZnJvbSAna2VydmktanMnXHJcbmltcG9ydCB7IEtlcnZpVGVtcGxhdGVTZXJ2aWNlIH0gZnJvbSAnbmd4LWtlcnZpJ1xyXG5kZWNsYXJlIHZhciBqUXVlcnk6IGFueTtcclxuXHJcbkBDb21wb25lbnQoe1xyXG5cdHNlbGVjdG9yOiAndWktc2xpZGVyJyxcclxuXHR0ZW1wbGF0ZTogYGAsXHJcblx0c3R5bGVzOiBbYGBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTbGlkZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cdHByaXZhdGUgc2xpZGVyVmFsdWU6bnVtYmVyID0gMDtcclxuXHRwcml2YXRlIGlzUmVhZHkgPSBmYWxzZTtcclxuXHRwcml2YXRlIGlnbm9yZUNoYW5nZSA9IGZhbHNlO1xyXG5cdEBJbnB1dCgpIHNldCB2YWx1ZSh2YWx1ZTogbnVtYmVyKXtcclxuXHRcdGlmICh2YWx1ZSAhPSB0aGlzLnNsaWRlclZhbHVlKXtcclxuXHRcdFx0dGhpcy5zbGlkZXJWYWx1ZSA9IHZhbHVlO1xyXG5cdFx0XHRpZiAodGhpcy5pc1JlYWR5KXtcclxuXHRcdFx0XHR0aGlzLmlnbm9yZUNoYW5nZSA9IHRydWU7XHJcblx0XHRcdFx0alF1ZXJ5KFwiaW5wdXRcIiwgdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQpLmJvb3RzdHJhcFNsaWRlcignc2V0VmFsdWUnLHZhbHVlKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdCAgfTtcclxuXHRASW5wdXQoKSB0eXBlOiBzdHJpbmcgPSBcImhvcml6b250YWxfc2xpZGVyXCI7XHJcbiAgICBASW5wdXQoKSB0aWNrOm51bWJlcjtcclxuXHRASW5wdXQoKSBsaW5rUGFyYW1ldGVyczphbnk7XHJcblx0QElucHV0KCkgZGVmYXVsdFNpemVzOkRhc2hib2FyZFNpemVzID0gbmV3IERhc2hib2FyZFNpemVzKCk7XHJcblx0QElucHV0KCkgbWF4VmFsdWU6bnVtYmVyO1xyXG5cdEBJbnB1dCgpIG1pblZhbHVlOm51bWJlcjtcclxuXHRAT3V0cHV0KCkgc2xpZGVyQ2hhbmdlZCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHRwcml2YXRlIG1vdmVEZWxheVRpbWVyID0gbnVsbDtcclxuXHRwcml2YXRlIGluU2xpZGU6Ym9vbGVhbj1mYWxzZTtcclxuXHJcblx0Y29uc3RydWN0b3IocHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmLCBwcml2YXRlIHRlbXBsYXRlU2VydmljZTpLZXJ2aVRlbXBsYXRlU2VydmljZSkgeyBcclxuXHRcdC8vY29uc29sZS5sb2coXCJjbmlvXCIsdGhpcyk7XHJcblx0fVxyXG5cclxuXHQgcHJpdmF0ZSBjb2xvcihzdHlsZSxzZWxlY3Rvcil7XHJcbiAgICBcdHJldHVybiB0aGlzLnRlbXBsYXRlU2VydmljZS5nZXRDb2xvcihzdHlsZSxzZWxlY3Rvcik7XHJcbiAgXHR9XHJcblxyXG5cdG5nT25Jbml0KCkge1xyXG5cdFx0dmFyIHNlbGYgPSB0aGlzO1xyXG5cdFx0XHJcblx0XHRcclxuXHRcdHZhclx0Y29sb3IgPSB0aGlzLmNvbG9yKFwiY29sb3JcIixcIi5udW1iZXItZ2F1Z2UtdGVtcGxhdGVcIik7XHJcblx0XHRzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcclxuXHRcdFx0alF1ZXJ5KCdpbnB1dCcsIHNlbGYuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50KS5ib290c3RyYXBTbGlkZXIoe1xyXG5cdFx0XHRcdHRvb2x0aXA6IFwiaGlkZVwiLFxyXG5cdFx0XHRcdG1pbjpzZWxmLm1pblZhbHVlLFxyXG5cdFx0XHRcdG1heDpzZWxmLm1heFZhbHVlLFxyXG5cdFx0XHRcdHN0ZXA6c2VsZi50aWNrLFxyXG5cdFx0XHRcdG9yaWVudGF0aW9uOiBzZWxmLnR5cGUgPT0gXCJob3Jpem9udGFsX3NsaWRlclwiID8gXCJob3Jpem9udGFsXCIgOiBcInZlcnRpY2FsXCJcclxuXHRcdFx0fSk7XHJcblxyXG5cdFx0XHRqUXVlcnkoJy5zbGlkZXInLCBzZWxmLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCkub24oXCJjaGFuZ2VcIixmdW5jdGlvbihlLHgpe1xyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdGNvbnNvbGUubG9nKFwic2xzdlwiLCBlLCB4KTtcclxuXHRcdFx0XHRpZiAoZS52YWx1ZS5uZXdWYWx1ZSAmJiAhc2VsZi5pZ25vcmVDaGFuZ2UpXHJcblx0XHRcdFx0XHRzZWxmLnNsaWRlckNoYW5nZWQuZW1pdChlLnZhbHVlLm5ld1ZhbHVlKTtcclxuXHRcdFx0XHRzZWxmLmlnbm9yZUNoYW5nZSA9IGZhbHNlO1xyXG5cdFx0XHR9KTtcclxuXHJcblx0XHRcdGpRdWVyeSgnLnNsaWRlcicsIHNlbGYuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50KS5vbihcInNsaWRlU3RhcnRcIixmdW5jdGlvbihlKXtcclxuXHRcdFx0XHRzZWxmLmluU2xpZGU9dHJ1ZTtcclxuXHRcdFx0fSk7XHJcblxyXG5cdFx0XHRqUXVlcnkoJy5zbGlkZXInLCBzZWxmLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCkub24oXCJzbGlkZVN0b3BcIixmdW5jdGlvbihlKXtcclxuXHRcdFx0XHRzZWxmLmluU2xpZGU9ZmFsc2U7XHJcblx0XHRcdH0pO1xyXG5cdFx0XHRzZWxmLmlzUmVhZHkgPSB0cnVlO1xyXG5cdFx0XHRcclxuXHRcdH0sMCk7XHJcblx0fVxyXG5cclxuXHRzdGVwKHYpe1xyXG5cdFx0dGhpcy5zbGlkZXJDaGFuZ2VkLmVtaXQodGhpcy5zbGlkZXJWYWx1ZSArdik7XHJcblx0fVxyXG59XHJcbiIsIi8vIENvcHlyaWdodCAoYykgMjAxNiwgVGltIFdlbnR6bGF1XHJcbi8vIExpY2Vuc2VkIHVuZGVyIE1JVFxyXG5cclxuaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBWaWV3Q2hpbGQsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTnVtYmVyVmFsdWUsIERhc2hib2FyZFNpemVzICAgfSBmcm9tICdrZXJ2aS1qcyc7XHJcbmltcG9ydCB7IE5HWEtlcnZpU2VydmljZSwgS2VydmlUZW1wbGF0ZVNlcnZpY2UgfSBmcm9tICduZ3gta2VydmknO1xyXG5pbXBvcnQgeyBhc2FwU2NoZWR1bGVyIH0gZnJvbSAncnhqcyc7XHJcblxyXG5kZWNsYXJlIHZhciBBcGV4Q2hhcnRzOiBhbnk7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2tlcnZpLWdhdWdlJyxcclxuICB0ZW1wbGF0ZTogYDxkaXYgI2NoYXJ0PjwvZGl2PmAsXHJcbiAgc3R5bGVzOiBbYGBdLFxyXG59KVxyXG5cclxuZXhwb3J0IGNsYXNzIEdhdWdlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBASW5wdXQoKSB2YWx1ZTogTnVtYmVyVmFsdWUgPSBudWxsO1xyXG4gIEBJbnB1dCgpIGxpbmtQYXJhbWV0ZXJzOiBhbnkgPSBudWxsO1xyXG4gIEBJbnB1dCgpIHR5cGU6IHN0cmluZztcclxuICBASW5wdXQoKSBzaXplOm51bWJlcjtcclxuICBASW5wdXQoKSBkYXNoYm9hcmRTaXplczpEYXNoYm9hcmRTaXplcyA9IG5ldyBEYXNoYm9hcmRTaXplcygpO1xyXG4gIEBWaWV3Q2hpbGQoJ2NoYXJ0JykgcHJpdmF0ZSBjaGFydEVsZW1lbnQ6IEVsZW1lbnRSZWY7XHJcbiAgcHJpdmF0ZSBzZXJpZXM9W107XHJcbiAgcHJpdmF0ZSBjaGFydE9iajogYW55O1xyXG4gIHByaXZhdGUgb3B0aW9uczphbnk7XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBrZXJ2aVNlcnZpY2U6TkdYS2VydmlTZXJ2aWNlLCBwcml2YXRlIHRlbXBsYXRlU2VydmljZTpLZXJ2aVRlbXBsYXRlU2VydmljZSApIHtcclxuXHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGNyZWF0ZUVsZW1lbnQoKXtcclxuICAgIHRoaXMuc2VyaWVzID0gW3RoaXMudmFsdWUudmFsdWVdXHJcblxyXG4gICAgdGhpcy5vcHRpb25zID17XHJcbiAgICAgIGNoYXJ0OiB7XHJcbiAgICAgICAgdHlwZTogJ3JhZGlhbEJhcicsXHJcbiAgICAgICAgaGVpZ2h0OiB0aGlzLmxpbmtQYXJhbWV0ZXJzLmdhdWdlU2l6ZVxyXG4gICAgICB9LFxyXG4gICAgICBwbG90T3B0aW9uczoge1xyXG4gICAgICAgIHJhZGlhbEJhcjoge1xyXG4gICAgICAgICAgc3RhcnRBbmdsZTogLTEzNSxcclxuICAgICAgICAgIGVuZEFuZ2xlOjEzNSwgIFxyXG4gICAgICAgICAgaG9sbG93OiB7XHJcbiAgICAgICAgICAgIHNpemU6ICc3MCUnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIFxyXG4gICAgICAgICAgdHJhY2s6e1xyXG4gICAgICAgICAgICBzdGFydEFuZ2xlOiAtMTM1LFxyXG4gICAgICAgICAgICBlbmRBbmdsZTogMTM1LFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIGRhdGFMYWJlbHM6IHtcclxuICAgICAgICAgICAgbmFtZToge1xyXG4gICAgICAgICAgICAgIHNob3c6IHRydWUsXHJcbiAgICAgICAgICAgICAgY29sb3I6IFwiIzJkMzUzY1wiLFxyXG4gICAgICAgICAgICAgIGZvbnRTaXplOlwiMTRweFwiXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHZhbHVlOiB7XHJcbiAgICAgICAgICAgICAgZm9udFNpemU6IFwiMjRweFwiLFxyXG4gICAgICAgICAgICAgIHNob3c6IHRydWVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gXHJcbiAgICAgIH0sXHJcbiAgICAgIGNvbG9yczogW3RoaXMuY29sb3IoXCJjb2xvclwiLFwiLmtlcnZpLWNoYXJ0XCIpXSwvLyBbJyM5ZmQwMzcnXSxcclxuICAgICAgc2VyaWVzOiB0aGlzLnNlcmllcyxcclxuICAgICAgbGFiZWxzOiBbdGhpcy52YWx1ZS5uYW1lXSxcclxuXHJcbiAgICB9XHJcbiAgXHJcbiAgICBpZiAodGhpcy5jaGFydE9iaikge1xyXG4gICAgICB0aGlzLmNoYXJ0T2JqLmRlc3Ryb3koKTtcclxuICAgIH1cclxuICAgIGNvbnNvbGUubG9nKFwiY3JlYXRlIGdhdWdlXCIsIHRoaXMudmFsdWUuaWQpO1xyXG4gICAgdGhpcy5jaGFydE9iaiA9IG5ldyBBcGV4Q2hhcnRzKFxyXG4gICAgICB0aGlzLmNoYXJ0RWxlbWVudC5uYXRpdmVFbGVtZW50LFxyXG4gICAgICB0aGlzLm9wdGlvbnNcclxuICAgICk7XHJcbiAgICB0aGlzLmNoYXJ0T2JqLnJlbmRlcigpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHJlbmRlcigpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgIHJldHVybiB0aGlzLmNoYXJ0T2JqLnJlbmRlcigpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBjb2xvcihzdHlsZSxzZWxlY3Rvcil7XHJcbiAgICByZXR1cm4gdGhpcy50ZW1wbGF0ZVNlcnZpY2UuZ2V0Q29sb3Ioc3R5bGUsc2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICBhc2FwU2NoZWR1bGVyLnNjaGVkdWxlKCgpID0+IHtcclxuICAgICAgdGhpcy5jcmVhdGVFbGVtZW50KCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLnZhbHVlLnZhbHVlJC5zdWJzY3JpYmUoZnVuY3Rpb24odil7XHJcbiAgICAgIGlmIChzZWxmLmNoYXJ0T2JqICYmIHYpe1xyXG4gICAgICAgIC8vc2VsZi5zZXJpZXM9W3ZdO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiZ3ZcIiwgdik7XHJcbiAgICAgICAgc2VsZi5jaGFydE9iai51cGRhdGVTZXJpZXMoIFt2XSk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGxvYWRQZXJpb2QoKXtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIC8vY29uc29sZS5sb2coXCJscFwiLCB0aGlzLnBlcmlvZFN0YXJ0LCB0aGlzLnBlcmlvZEVuZCk7XHJcbiAgICAvL3RoaXMua2VydmlTZXJ2aWNlLnNwaW5lLnNlbmRRdWVyeShcImdldFNlbnNvckRhdGFcIiwgdGhpcy52YWx1ZS5pZCwgdGhpcy5wZXJpb2RTdGFydC50b0lTT1N0cmluZygpLCB0aGlzLnBlcmlvZEVuZC50b0lTT1N0cmluZygpLCBmdW5jdGlvbiAocmVzdWx0cykge1xyXG4gICAgICAgIC8vY29uc29sZS5sb2coXCJnc2RcIiwgcmVzdWx0cyk7XHJcbiAgICAgICAgLy92YXIgc2Vuc29yRGF0YSA9IHJlc3VsdHM7XHJcbiAgICAgICAgLy9zZWxmLmNoYXJ0RGF0YS5sZW5ndGggPSAwO1xyXG4gICAgICAgIC8vZm9yICh2YXIgaSA9IDA7IChpIDwgc2Vuc29yRGF0YS5sZW5ndGgpOyBpKyspIHtcclxuICAgICAgICAgIC8vdmFyIGRhdGFJdGVtID0gc2Vuc29yRGF0YVtpXVxyXG4gICAgICAgICAgLy9zZWxmLmNoYXJ0RGF0YS5wdXNoKHsgeDogbmV3IERhdGUoZGF0YUl0ZW0udHMgKyBcIiB1dGNcIiksIHk6IGRhdGFJdGVtLnZhbHVlIH0pO1xyXG4gICAgICAgIC8vfVxyXG4gICAgICAgIC8vc2VsZi5jaGFydC5yZW5kZXIoKTtcclxuICAgICAgICAvL3NlbGYuY2hhcnQudXBkYXRlKCk7XHJcbiAgICAvL30pO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBjbGVhbkRhdGEoKXtcclxuICAgIC8vIGlmKHRoaXMudXBkYXRlQ2hhcnQpe1xyXG4gICAgLy8gICB2YXIgZG9DbGVhbiA9IHRydWU7XHJcbiAgICAvLyAgIHZhciBsaW1pdFRTID0gdGhpcy5nZXRQZXJpb2RMaW1pdCgpO1xyXG4gICAgLy8gICB2YXIgZHMgPSB0aGlzLmNoYXJ0LmRhdGEuZGF0YXNldHNbMF0uZGF0YVxyXG4gICAgLy8gICB3aGlsZSAoIGRzLmxlbmd0aD4wICYmIGRvQ2xlYW4pe1xyXG4gICAgLy8gICAgIGlmIChkc1swXS54IDwgbGltaXRUUylcclxuICAgIC8vICAgICAgIGRzLnNoaWZ0KCk7XHJcbiAgICAvLyAgICAgZWxzZVxyXG4gICAgLy8gICAgICAgZG9DbGVhbiA9IGZhbHNlXHJcbiAgICAvLyAgIH1cclxuICAgIC8vIH1cclxuICB9XHJcbn0iLCIvLyBDb3B5cmlnaHQgKGMpIDIwMTYsIFRpbSBXZW50emxhdVxyXG4vLyBMaWNlbnNlZCB1bmRlciBNSVRcclxuXHJcbmltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgVmlld0NoaWxkLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE51bWJlclZhbHVlLCBEYXNoYm9hcmRTaXplcyAgIH0gZnJvbSAna2VydmktanMnO1xyXG5pbXBvcnQgeyBOR1hLZXJ2aVNlcnZpY2UsIEtlcnZpVGVtcGxhdGVTZXJ2aWNlIH0gZnJvbSAnbmd4LWtlcnZpJztcclxuaW1wb3J0IHsgYXNhcFNjaGVkdWxlciB9IGZyb20gJ3J4anMnO1xyXG5cclxuZGVjbGFyZSB2YXIgQXBleENoYXJ0czogYW55O1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdrZXJ2aS1jaGFydCcsXHJcbiAgdGVtcGxhdGU6IGA8ZGl2ICNjaGFydD48L2Rpdj5gLFxyXG4gIHN0eWxlczogW2BgXSxcclxufSlcclxuXHJcbmV4cG9ydCBjbGFzcyBLZXJ2aUNoYXJ0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBASW5wdXQoKSB2YWx1ZTogTnVtYmVyVmFsdWUgPSBudWxsO1xyXG4gIEBJbnB1dCgpIGxpbmtQYXJhbWV0ZXJzOiBhbnkgPSBudWxsO1xyXG4gIEBJbnB1dCgpIHR5cGU6IHN0cmluZztcclxuICBASW5wdXQoKSBzaXplOm51bWJlcjtcclxuICBASW5wdXQoKSBkYXNoYm9hcmRTaXplczpEYXNoYm9hcmRTaXplcyA9IG5ldyBEYXNoYm9hcmRTaXplcygpO1xyXG4gIEBWaWV3Q2hpbGQoJ2NoYXJ0JykgcHJpdmF0ZSBjaGFydEVsZW1lbnQ6IEVsZW1lbnRSZWY7XHJcbiAgcHJpdmF0ZSBzZXJpZXM9W107XHJcbiAgcHJpdmF0ZSBjaGFydE9iajogYW55O1xyXG4gIHByaXZhdGUgb3B0aW9uczphbnk7XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBrZXJ2aVNlcnZpY2U6TkdYS2VydmlTZXJ2aWNlLCBwcml2YXRlIHRlbXBsYXRlU2VydmljZTpLZXJ2aVRlbXBsYXRlU2VydmljZSApIHtcclxuXHJcbiAgfVxyXG4gIFxyXG4gIHByaXZhdGUgY3JlYXRlRWxlbWVudCgpe1xyXG4gICAgdGhpcy5zZXJpZXM9IFtcclxuICAgIHtcclxuICAgICAgICBuYW1lOiB0aGlzLnZhbHVlLm5hbWUsXHJcbiAgICAgICAgZGF0YTogWyBdXHJcbiAgICB9XVxyXG5cclxuICAgIFxyXG4gICAgdGhpcy5vcHRpb25zID17XHJcbiAgICAgIGNoYXJ0OiB7XHJcbiAgICAgICAgICBpZDogXCJjaGFydF9cIiArIHRoaXMudmFsdWUuaWQsXHJcbiAgICAgICAgICB3aWR0aDpcIjEwMCVcIixcclxuICAgICAgICAgIGhlaWdodDozMDAsXHJcbiAgICAgICAgICB0eXBlOiB0aGlzLmxpbmtQYXJhbWV0ZXJzLmNoYXJ0VHlwZSxcclxuICAgICAgICAgIGFuaW1hdGlvbnM6IHtcclxuICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZSxcclxuICAgICAgICAgICAgZWFzaW5nOiAnbGluZWFyJyxcclxuICAgICAgICAgICAgZHluYW1pY0FuaW1hdGlvbjoge1xyXG4gICAgICAgICAgICAgIHNwZWVkOiAxMDBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIHRvb2xiYXI6IHtcclxuICAgICAgICAgICAgc2hvdzogZmFsc2UsXHJcbiAgICAgICAgICAgIHRvb2xzOiB7XHJcbiAgICAgICAgICAgICAgZG93bmxvYWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgc2VsZWN0aW9uOiB0cnVlLFxyXG4gICAgICAgICAgICAgIHpvb206IHRydWUsXHJcbiAgICAgICAgICAgICAgem9vbWluOiB0cnVlLFxyXG4gICAgICAgICAgICAgIHpvb21vdXQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgcGFuOiB0cnVlLFxyXG4gICAgICAgICAgICAgIHJlc2V0OiB0cnVlICxcclxuICAgICAgICAgICAgICBjdXN0b21JY29uczogW11cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgYXV0b1NlbGVjdGVkOiAnem9vbScgXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgem9vbToge1xyXG4gICAgICAgICAgICBlbmFibGVkOiB0cnVlXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgZGF0YUxhYmVsczoge1xyXG4gICAgICAgICAgZW5hYmxlZDogZmFsc2VcclxuICAgICAgICB9LFxyXG4gICAgICBzdHJva2U6IHtcclxuICAgICAgICAgIGN1cnZlOiAnc21vb3RoJyxcclxuICAgICAgICAgIHdpZHRoOjFcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgdGl0bGU6IHtcclxuICAgICAgICAgIHRleHQ6IHRoaXMubGlua1BhcmFtZXRlcnMuY2hhcnRUaXRsZSxcclxuICAgICAgICAgIGFsaWduOiAnbGVmdCdcclxuICAgICAgICB9LFxyXG4gICAgICBtYXJrZXJzOiB7XHJcbiAgICAgICAgICBzaXplOiAwXHJcbiAgICAgICAgfSxcclxuICAgICAgeGF4aXM6IHtcclxuICAgICAgICAgIHR5cGU6ICdkYXRldGltZScsXHJcbiAgICAgICAgICAvL3JhbmdlOiAxNTUyOTgzMjMwIC0gMzAwLFxyXG4gICAgICB9LFxyXG4gICAgICB5YXhpczoge1xyXG4gICAgICAgICAgbWF4OiB0aGlzLnZhbHVlLm1heFZhbHVlLFxyXG4gICAgICAgICAgbWluOnRoaXMudmFsdWUubWluVmFsdWVcclxuICAgICAgICB9LFxyXG4gICAgICBsZWdlbmQ6IHtcclxuICAgICAgICAgIHNob3c6IGZhbHNlXHJcbiAgICAgIH0sXHJcbiAgICAgIGdyaWQ6IHtcclxuICAgICAgICBzaG93OiB0aGlzLmxpbmtQYXJhbWV0ZXJzLmNoYXJ0R3JpZCxcclxuICAgICAgICB4YXhpczoge1xyXG4gICAgICAgICAgbGluZXM6IHtcclxuICAgICAgICAgICAgc2hvdzogdHJ1ZSxcclxuICAgICAgICAgICAgYW5pbWF0ZTogdHJ1ZVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgeWF4aXM6IHtcclxuICAgICAgICAgIGxpbmVzOiB7XHJcbiAgICAgICAgICAgIHNob3c6IHRydWUsXHJcbiAgICAgICAgICAgIGFuaW1hdGU6IHRydWVcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICAgIGNvbG9yczogW3RoaXMuY29sb3IoXCJjb2xvclwiLFwiLmtlcnZpLWNoYXJ0XCIpXSwvLyBbJyM5ZmQwMzcnXSxcclxuICAgICAgc2VyaWVzOiB0aGlzLnNlcmllc1xyXG4gICAgfVxyXG4gIFxyXG4gICAgaWYgKHRoaXMuY2hhcnRPYmopIHtcclxuICAgICAgdGhpcy5jaGFydE9iai5kZXN0cm95KCk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKCF0aGlzLmxpbmtQYXJhbWV0ZXJzLmNoYXJ0VGl0bGUpXHJcbiAgICAgIGRlbGV0ZSh0aGlzLm9wdGlvbnNbXCJ0aXRsZVwiXSk7XHJcblxyXG4gICAgY29uc29sZS5sb2coXCJjcmVhdGUgY2hhcnRcIiwgdGhpcy52YWx1ZS5pZCk7XHJcbiAgICB0aGlzLmNoYXJ0T2JqID0gbmV3IEFwZXhDaGFydHMoXHJcbiAgICAgIHRoaXMuY2hhcnRFbGVtZW50Lm5hdGl2ZUVsZW1lbnQsXHJcbiAgICAgIHRoaXMub3B0aW9uc1xyXG4gICAgKTtcclxuICAgIHRoaXMuY2hhcnRPYmoucmVuZGVyKCk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGNvbG9yKHN0eWxlLHNlbGVjdG9yKXtcclxuICAgIHJldHVybiB0aGlzLnRlbXBsYXRlU2VydmljZS5nZXRDb2xvcihzdHlsZSxzZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIGFzYXBTY2hlZHVsZXIuc2NoZWR1bGUoKCkgPT4ge1xyXG4gICAgICB0aGlzLmNyZWF0ZUVsZW1lbnQoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMudmFsdWUudmFsdWUkLnN1YnNjcmliZShmdW5jdGlvbih2KXtcclxuICAgICAgaWYgKHNlbGYuY2hhcnRPYmope1xyXG4gICAgICAgIHNlbGYuc2VyaWVzWzBdLmRhdGEucHVzaChbIHNlbGYudmFsdWUudmFsdWVUUy5nZXRUaW1lKCksIHYgXSk7XHJcbiAgICAgICAgc2VsZi5jaGFydE9iai51cGRhdGVTZXJpZXMoIHNlbGYuc2VyaWVzKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuXHJcblxyXG4gIHB1YmxpYyBsb2FkUGVyaW9kKCl7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICAvL2NvbnNvbGUubG9nKFwibHBcIiwgdGhpcy5wZXJpb2RTdGFydCwgdGhpcy5wZXJpb2RFbmQpO1xyXG4gICAgLy90aGlzLmtlcnZpU2VydmljZS5zcGluZS5zZW5kUXVlcnkoXCJnZXRTZW5zb3JEYXRhXCIsIHRoaXMudmFsdWUuaWQsIHRoaXMucGVyaW9kU3RhcnQudG9JU09TdHJpbmcoKSwgdGhpcy5wZXJpb2RFbmQudG9JU09TdHJpbmcoKSwgZnVuY3Rpb24gKHJlc3VsdHMpIHtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKFwiZ3NkXCIsIHJlc3VsdHMpO1xyXG4gICAgICAgIC8vdmFyIHNlbnNvckRhdGEgPSByZXN1bHRzO1xyXG4gICAgICAgIC8vc2VsZi5jaGFydERhdGEubGVuZ3RoID0gMDtcclxuICAgICAgICAvL2ZvciAodmFyIGkgPSAwOyAoaSA8IHNlbnNvckRhdGEubGVuZ3RoKTsgaSsrKSB7XHJcbiAgICAgICAgICAvL3ZhciBkYXRhSXRlbSA9IHNlbnNvckRhdGFbaV1cclxuICAgICAgICAgIC8vc2VsZi5jaGFydERhdGEucHVzaCh7IHg6IG5ldyBEYXRlKGRhdGFJdGVtLnRzICsgXCIgdXRjXCIpLCB5OiBkYXRhSXRlbS52YWx1ZSB9KTtcclxuICAgICAgICAvL31cclxuICAgICAgICAvL3NlbGYuY2hhcnQucmVuZGVyKCk7XHJcbiAgICAgICAgLy9zZWxmLmNoYXJ0LnVwZGF0ZSgpO1xyXG4gICAgLy99KTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgY2xlYW5EYXRhKCl7XHJcbiAgICAvLyBpZih0aGlzLnVwZGF0ZUNoYXJ0KXtcclxuICAgIC8vICAgdmFyIGRvQ2xlYW4gPSB0cnVlO1xyXG4gICAgLy8gICB2YXIgbGltaXRUUyA9IHRoaXMuZ2V0UGVyaW9kTGltaXQoKTtcclxuICAgIC8vICAgdmFyIGRzID0gdGhpcy5jaGFydC5kYXRhLmRhdGFzZXRzWzBdLmRhdGFcclxuICAgIC8vICAgd2hpbGUgKCBkcy5sZW5ndGg+MCAmJiBkb0NsZWFuKXtcclxuICAgIC8vICAgICBpZiAoZHNbMF0ueCA8IGxpbWl0VFMpXHJcbiAgICAvLyAgICAgICBkcy5zaGlmdCgpO1xyXG4gICAgLy8gICAgIGVsc2VcclxuICAgIC8vICAgICAgIGRvQ2xlYW4gPSBmYWxzZVxyXG4gICAgLy8gICB9XHJcbiAgICAvLyB9XHJcbiAgfVxyXG59IiwiLy8gQ29weXJpZ2h0IChjKSAyMDE2LCBUaW0gV2VudHpsYXVcclxuLy8gTGljZW5zZWQgdW5kZXIgTUlUXHJcblxyXG5pbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIE91dHB1dCwgRWxlbWVudFJlZiwgVmlld0VuY2Fwc3VsYXRpb24sIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEYXNoYm9hcmRTaXplcyB9IGZyb20gJ2tlcnZpLWpzJ1xyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2tlcnZpLXN3aXRjaGJ1dHRvbicsXHJcbiAgdGVtcGxhdGU6IGA8bnotc3dpdGNoIFxyXG4gICAgWyhuZ01vZGVsKV09XCJ2YWx1ZVwiXHJcbiAgICBbbnpDaGVja2VkQ2hpbGRyZW5dPVwiY2hlY2tlZFRlbXBsYXRlXCIgW256VW5DaGVja2VkQ2hpbGRyZW5dPVwidW5DaGVja2VkVGVtcGxhdGVcIlxyXG4gICAgKG5nTW9kZWxDaGFuZ2UpPVwibW9kZWxDaGFuZ2UoJGV2ZW50KVwiXHJcbj5cclxuXHJcbjwvbnotc3dpdGNoPlxyXG48bmctdGVtcGxhdGUgI2NoZWNrZWRUZW1wbGF0ZT5cclxuICAgIDxpICpuZ0lmPVwibGlua1BhcmFtZXRlcnMub25JY29uXCIgIG56LWljb24gW3R5cGVdPVwibGlua1BhcmFtZXRlcnMub25JY29uXCI+PC9pPlxyXG4gICAgPHNwYW4gPnt7IGxpbmtQYXJhbWV0ZXJzLm9uVGV4dCB9fTwvc3Bhbj5cclxuPC9uZy10ZW1wbGF0ZT5cclxuPG5nLXRlbXBsYXRlICN1bkNoZWNrZWRUZW1wbGF0ZT5cclxuICAgIDxpICpuZ0lmPVwibGlua1BhcmFtZXRlcnMub2ZmSWNvblwiICBuei1pY29uIFt0eXBlXT1cImxpbmtQYXJhbWV0ZXJzLm9mZkljb25cIj48L2k+XHJcbiAgICA8c3BhbiA+e3sgbGlua1BhcmFtZXRlcnMub2ZmVGV4dCB9fTwvc3Bhbj5cclxuPC9uZy10ZW1wbGF0ZT5cclxuYCxcclxuICBzdHlsZXM6IFtgYF0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTd2l0Y2hCdXR0b25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIEBJbnB1dCgpIHZhbHVlOiBCb29sZWFuO1xyXG4gIEBJbnB1dCgpIGxpbmtQYXJhbWV0ZXJzOmFueTtcclxuICBASW5wdXQoKSBpbmxpbmU6Ym9vbGVhbiA9IGZhbHNlO1xyXG4gIEBJbnB1dCgpIGRhc2hib2FyZFNpemVzOkRhc2hib2FyZFNpemVzID0gbmV3IERhc2hib2FyZFNpemVzKCk7XHJcbiAgQE91dHB1dCgpIGJ1dHRvblN0YXRlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gIHB1YmxpYyB3aWR0aDpzdHJpbmc7XHJcbiAgcHVibGljIGhlaWdodDpzdHJpbmc7XHJcbiAgY29uc3RydWN0b3IoKSB7IH1cclxuICBcclxuICBuZ09uSW5pdCgpIHtcclxuICAgIGNvbnNvbGUubG9nKFwic2JcIiwgdGhpcy52YWx1ZSk7XHJcbiAgICBpZiAodGhpcy5saW5rUGFyYW1ldGVycyl7XHJcbiAgICAgIFxyXG4gICAgICBpZiAoIXRoaXMubGlua1BhcmFtZXRlcnMuYnV0dG9uV2lkdGgpXHJcbiAgICAgICAgdGhpcy53aWR0aCA9IHRoaXMuZGFzaGJvYXJkU2l6ZXMuc3dpdGNoV2lkdGg7XHJcbiAgICAgIGVsc2VcclxuICAgICAgICB0aGlzLndpZHRoID0gdGhpcy5saW5rUGFyYW1ldGVycy5idXR0b25XaWR0aDtcclxuXHJcbiAgICAgIGlmICghdGhpcy5saW5rUGFyYW1ldGVycy5idXR0b25IZWlnaHQpXHJcbiAgICAgICAgdGhpcy5oZWlnaHQgPSB0aGlzLmRhc2hib2FyZFNpemVzLnN3aXRjaEhlaWdodDtcclxuICAgICAgZWxzZVxyXG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gdGhpcy5saW5rUGFyYW1ldGVycy5idXR0b25IZWlnaHQ7XHJcblxyXG4gICAgfSBlbHNle1xyXG4gICAgICB0aGlzLndpZHRoID0gdGhpcy5kYXNoYm9hcmRTaXplcy5zd2l0Y2hXaWR0aDtcclxuICAgICAgdGhpcy5oZWlnaHQgPSB0aGlzLmRhc2hib2FyZFNpemVzLnN3aXRjaEhlaWdodDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIG1vZGVsQ2hhbmdlKHN0YXRlKXtcclxuICAgIHRoaXMuYnV0dG9uU3RhdGUuZW1pdChzdGF0ZSk7XHJcbiAgfVxyXG59XHJcbiIsIi8vIENvcHlyaWdodCAoYykgMjAxNiwgVGltIFdlbnR6bGF1XHJcbi8vIExpY2Vuc2VkIHVuZGVyIE1JVFxyXG5cclxuaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEYXNoYm9hcmRTaXplcywgQm9vbGVhblZhbHVlIH0gZnJvbSAna2VydmktanMnO1xyXG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tICdyeGpzJztcclxuXHJcbmRlY2xhcmUgdmFyIGpRdWVyeTphbnk7XHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAna2VydmktYnV0dG9uJyxcclxuICB0ZW1wbGF0ZTogYDxuZy10ZW1wbGF0ZSAjYnV0dG9uQ29udGVudFRlbXBsYXRlPlxyXG4gICAgPGkgKm5nSWY9XCJsaW5rUGFyYW1ldGVycy5idXR0b25JY29uXCIgbnotaWNvbiBbdHlwZV09XCJsaW5rUGFyYW1ldGVycy5idXR0b25JY29uXCI+PC9pPlxyXG4gICAge3sgbGlua1BhcmFtZXRlcnMuYnV0dG9uVGV4dCB9fVxyXG48L25nLXRlbXBsYXRlPlxyXG48YnV0dG9uXHJcbiAgICAqbmdJZiA9IFwibGlua1BhcmFtZXRlcnMuY29uZmlybVwiXHJcbiAgICBuei1idXR0b24gbnpUeXBlPVwicHJpbWFyeVwiXHJcbiAgICAobnpPbkNvbmZpcm0pPVwiY29uZmlybSgpXCJcclxuICAgIG56LXBvcGNvbmZpcm0gW256VGl0bGVdPVwibGlua1BhcmFtZXRlcnMuY29uZmlybU1lc3NhZ2VcIlxyXG4+XHJcbjxuZy1jb250YWluZXIgKm5nVGVtcGxhdGVPdXRsZXQ9XCJidXR0b25Db250ZW50VGVtcGxhdGVcIj48L25nLWNvbnRhaW5lcj5cclxuPC9idXR0b24+XHJcbjxidXR0b25cclxuICAgICpuZ0lmID0gXCIhbGlua1BhcmFtZXRlcnMuY29uZmlybVwiXHJcbiAgICBuei1idXR0b24gbnpUeXBlPVwicHJpbWFyeVwiXHJcbiAgICAobW91c2Vkb3duKT1cInByZXNzKClcIiBcclxuICAgIChtb3VzZXVwKT1cInJlbGVhc2UoKVwiXHJcbj5cclxuPG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cImJ1dHRvbkNvbnRlbnRUZW1wbGF0ZVwiPjwvbmctY29udGFpbmVyPlxyXG48L2J1dHRvbj5cclxuYCxcclxuICBzdHlsZXM6IFtgYF0sXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgQnV0dG9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBASW5wdXQoKSB2YWx1ZTogQm9vbGVhblZhbHVlO1xyXG4gIEBJbnB1dCgpIGxpbmtQYXJhbWV0ZXJzOiBhbnkgPSBudWxsO1xyXG4gIEBJbnB1dCgpIHR5cGU6IHN0cmluZztcclxuICBASW5wdXQoKSBpbmxpbmU6Ym9vbGVhbiA9IGZhbHNlO1xyXG4gIEBJbnB1dCgpIGRhc2hib2FyZFNpemVzOkRhc2hib2FyZFNpemVzID0gbmV3IERhc2hib2FyZFNpemVzKCk7XHJcbiAgQElucHV0KCkgdGl0bGU6c3RyaW5nO1xyXG4gIEBPdXRwdXQoKSBidXR0b25TdGF0ZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICBwdWJsaWMgd2lkdGg6c3RyaW5nO1xyXG4gIHB1YmxpYyBoZWlnaHQ6c3RyaW5nO1xyXG4gIFxyXG4gIGNvbnN0cnVjdG9yKCkgeyAgXHJcbiAgfVxyXG4gXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7IFxyXG4gICAgaWYgKHNlbGYubGlua1BhcmFtZXRlcnMpe1xyXG4gICAgICBcclxuICAgICAgaWYgKCFzZWxmLmxpbmtQYXJhbWV0ZXJzLmJ1dHRvbldpZHRoKVxyXG4gICAgICAgIHRoaXMud2lkdGggPSB0aGlzLmRhc2hib2FyZFNpemVzLmJ1dHRvbldpZHRoO1xyXG4gICAgICBlbHNlXHJcbiAgICAgICAgdGhpcy53aWR0aCA9IHNlbGYubGlua1BhcmFtZXRlcnMuYnV0dG9uV2lkdGg7XHJcblxyXG4gICAgICBpZiAoIXNlbGYubGlua1BhcmFtZXRlcnMuYnV0dG9uSGVpZ2h0KVxyXG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gdGhpcy5kYXNoYm9hcmRTaXplcy5idXR0b25IZWlnaHQ7XHJcbiAgICAgIGVsc2VcclxuICAgICAgICB0aGlzLmhlaWdodCA9IHNlbGYubGlua1BhcmFtZXRlcnMuYnV0dG9uSGVpZ2h0O1xyXG5cclxuICAgIH0gZWxzZXtcclxuICAgICAgdGhpcy53aWR0aCA9IHRoaXMuZGFzaGJvYXJkU2l6ZXMuYnV0dG9uV2lkdGg7XHJcbiAgICAgIHRoaXMuaGVpZ2h0ID0gdGhpcy5kYXNoYm9hcmRTaXplcy5idXR0b25IZWlnaHQ7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgY29uZmlybSgpIHtcclxuICAgIGNvbnNvbGUubG9nKFwiY1wiLCB0aGlzLnZhbHVlKTtcclxuICAgIHRoaXMuYnV0dG9uU3RhdGUuZW1pdCh0cnVlKTtcclxuICAgIHRoaXMuYnV0dG9uU3RhdGUuZW1pdChmYWxzZSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgcHJlc3MoKSB7XHJcblxyXG4gICAgY29uc29sZS5sb2coXCJwXCIsIHRoaXMudmFsdWUpO1xyXG4gICAgdGhpcy5idXR0b25TdGF0ZS5lbWl0KHRydWUpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHJlbGVhc2UoKSB7XHJcbiAgICB0aGlzLmJ1dHRvblN0YXRlLmVtaXQoZmFsc2UpO1xyXG4gIH1cclxufSIsIi8vIENvcHlyaWdodCAoYykgMjAxNiwgVGltIFdlbnR6bGF1XHJcbi8vIExpY2Vuc2VkIHVuZGVyIE1JVFxyXG5cclxuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXJ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdrZXJ2aS1tcGVnLXZpZXdlcicsXHJcbiAgdGVtcGxhdGU6IGA8aW1nIChsb2FkKT1cImltYWdlUmVhZHkoKVwiIGNsYXNzPVwiY2FtSW1hZ2VcIiBzcmM9XCJ7e2NhbWVyYVNvdXJjZX19XCIgW3N0eWxlLmhlaWdodC4lXT1cImhlaWdodFwiIFtzdHlsZS53aWR0aC4lXT1cIndpZHRoXCI+XHJcbmAsXHJcbiAgc3R5bGVzOiBbYCN2aWRlby12aWV3ZXJ7bWFyZ2luLXRvcDotMjBweH0uY2FtLXBhZC1hcmVhe3otaW5kZXg6MTIwMDt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7d2lkdGg6MjAwcHg7ZGlzcGxheTppbmxpbmUtYmxvY2s7cG9zaXRpb246YWJzb2x1dGU7bGVmdDozODlweDt0b3A6MTMycHg7Y29sb3I6I2ZmZn1gXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTVBFR1ZpZXdlckNvbXBvbmVudHtcclxuICBASW5wdXQoKSBjYW1lcmFTb3VyY2U6IHN0cmluZztcclxuICBASW5wdXQoKSB3aWR0aDpudW1iZXIgPSBudWxsO1xyXG4gIEBJbnB1dCgpIGhlaWdodDpudW1iZXIgPSBudWxsO1xyXG4gIEBPdXRwdXQoKSBpbWFnZUxvYWRlZCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICBwcml2YXRlIGZpcnN0TG9hZD10cnVlO1xyXG4gIGNvbnN0cnVjdG9yKCkgeyBcclxuICB9XHJcblxyXG4gIGltYWdlUmVhZHkoKXtcclxuICAgIGlmICh0aGlzLmZpcnN0TG9hZCl7XHJcbiAgICAgICAgdGhpcy5maXJzdExvYWQ9ZmFsc2U7XHJcbiAgICAgICAgdGhpcy5pbWFnZUxvYWRlZC5lbWl0KHRydWUpO1xyXG4gICAgfVxyXG4gIH1cclxufSIsIi8vIENvcHlyaWdodCAoYykgMjAxNiwgVGltIFdlbnR6bGF1XHJcbi8vIExpY2Vuc2VkIHVuZGVyIE1JVFxyXG5cclxuaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEYXRlVGltZVZhbHVlIH0gZnJvbSAna2VydmktanMnXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAna2VydmktZGF0ZXRpbWUnLFxyXG4gIHRlbXBsYXRlOiBgPG56LWRhdGUtcGlja2VyIFxyXG4qbmdJZj1cInR5cGU9PSdkYXRldGltZSdcIlxyXG5uelNob3dUaW1lXHJcblsobmdNb2RlbCldPVwiZGF0ZVRpbWUudmFsdWVcIlxyXG5bbnpGb3JtYXRdID0gXCJmb3JtYXRcIlxyXG4+PC9uei1kYXRlLXBpY2tlcj5cclxuXHJcbjxuei1kYXRlLXBpY2tlciBcclxuKm5nSWY9XCJ0eXBlPT0nZGF0ZSdcIlxyXG5bKG5nTW9kZWwpXT1cImRhdGVUaW1lLnZhbHVlXCJcclxuW256Rm9ybWF0XSA9IFwiZm9ybWF0XCJcclxuPjwvbnotZGF0ZS1waWNrZXI+XHJcblxyXG5cclxuPG56LXRpbWUtcGlja2VyIFxyXG4qbmdJZj1cInR5cGU9PSd0aW1lJ1wiXHJcblsobmdNb2RlbCldPVwiZGF0ZVRpbWUudmFsdWVcIlxyXG5bbnpGb3JtYXRdID0gXCJmb3JtYXRcIlxyXG4+PC9uei10aW1lLXBpY2tlcj5cclxuYCxcclxuICBzdHlsZXM6IFtgYF1cclxufSlcclxuXHJcbmV4cG9ydCBjbGFzcyBEYXRlVGltZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgQElucHV0KCkgZGF0ZVRpbWU6RGF0ZVRpbWVWYWx1ZTtcclxuICBASW5wdXQoKSB0eXBlOnN0cmluZztcclxuICBASW5wdXQoKSBmb3JtYXQ6IHN0cmluZztcclxuICBAT3V0cHV0KCkgZGF0ZVRpbWVDaGFuZ2VkID0gbmV3IEV2ZW50RW1pdHRlclxyXG4gIHByaXZhdGUgaXNSZWFkeT1mYWxzZTtcclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnRSZWY6RWxlbWVudFJlZikgeyAgXHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuXHJcbiAgXHJcbiAgICBcclxuICB9XHJcbn0iLCIvLyBDb3B5cmlnaHQgKGMpIDIwMTYsIFRpbSBXZW50emxhdVxyXG4vLyBMaWNlbnNlZCB1bmRlciBNSVRcclxuXHJcbmltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgRWxlbWVudFJlZiwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdrZXJ2aS1pY29uJyxcclxuICB0ZW1wbGF0ZTogYDxpIGNsYXNzPVwicGkgcGkte3tpY29ufX1cIj48L2k+YCxcclxuICBzdHlsZXM6IFtgYF0sXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgSWNvbnNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIEBJbnB1dCgpIGljb246IHN0cmluZyA9IG51bGw7XHJcbiBcclxuICBjb25zdHJ1Y3RvcigpIHsgIFxyXG4gIH1cclxuXHJcbiAgXHJcbiAgXHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgXHJcbiAgfVxyXG4gIFxyXG59IiwiLy8gQ29weXJpZ2h0IChjKSAyMDE2LCBUaW0gV2VudHpsYXVcclxuLy8gTGljZW5zZWQgdW5kZXIgTUlUXHJcblxyXG5pbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIE91dHB1dCwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRGFzaGJvYXJkU2l6ZXMgfSBmcm9tICdrZXJ2aS1qcydcclxuaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0IH0gZnJvbSAncnhqcyc7XHJcbmRlY2xhcmUgdmFyIGpRdWVyeTogYW55O1xyXG5kZWNsYXJlIHZhciBDb2xvcnM6IGFueTtcclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdrZXJ2aS1jb2xvcicsXHJcbiAgdGVtcGxhdGU6IGA8ZGl2IHN0eWxlPVwibWF4LXdpZHRoOjkwcHhcIiBjbGFzcz1cImlucHV0LWdyb3VwXCI+XHJcbiAgICA8ZGl2ICBbYXR0ci5iYWNrZ3JvdW5kLnZhbHVlXT1cImNvbG9yVmFsdWVcIiBjbGFzcz1cImZvcm0tY29udHJvbCBjb2xvclwiPjwvZGl2PlxyXG48L2Rpdj5cclxuYCxcclxuICBzdHlsZXM6IFtgYF0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDb2xvckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgICBwdWJsaWMgY29sb3JWYWx1ZTpzdHJpbmc7XHJcbiAgICBASW5wdXQoKSBzZXQgY29sb3IodjpzdHJpbmcpe1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiY2NcIiwgdiwgdGhpcy5waWNrZXIpO1xyXG4gICAgICAgIHRoaXMuY29sb3JWYWx1ZSA9IHY7XHJcbiAgICAgICAgaWYgKHYpe1xyXG4gICAgICAgIC8vICAgIGpRdWVyeSgnLmNvbG9yJywgdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQpLmNzcyhcImJhY2tncm91bmQtY29sb3JcIiwgdilcclxuICAgICAgICAvL2Vsc2VcclxuICAgICAgICAgICAgalF1ZXJ5KCcuY29sb3InLCB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCkuYXR0cihcInN0eWxlXCIsXCJiYWNrZ3JvdW5kLWNvbG9yOlwiICsgdilcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICAgICAgXHJcbiAgfTtcclxuICBAT3V0cHV0KCkgY29sb3JDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKClcclxuICBASW5wdXQoKSBsaW5rUGFyYW1ldGVyczphbnk7XHJcbiAgQElucHV0KCkgaW5saW5lOmJvb2xlYW4gPSBmYWxzZTtcclxuICBASW5wdXQoKSBkYXNoYm9hcmRTaXplczpEYXNoYm9hcmRTaXplcyA9IG5ldyBEYXNoYm9hcmRTaXplcygpO1xyXG4gIHByaXZhdGUgd2lkdGg6c3RyaW5nO1xyXG4gIHByaXZhdGUgaGVpZ2h0OnN0cmluZztcclxuICBwcml2YXRlIHN0YXRlOmFueTtcclxuICBwcml2YXRlIHJnYlN0cmluZzpzdHJpbmc7XHJcbiAgcHJpdmF0ZSBwaWNrZXI6YW55ID0gbnVsbDtcclxuICBcclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHsgfVxyXG4gICAgXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICBpZiAoIXNlbGYubGlua1BhcmFtZXRlcnMuYnV0dG9uV2lkdGgpXHJcbiAgICAgICAgdGhpcy53aWR0aCA9IHRoaXMuZGFzaGJvYXJkU2l6ZXMuc3dpdGNoV2lkdGg7XHJcbiAgICBlbHNlXHJcbiAgICAgICAgdGhpcy53aWR0aCA9IHNlbGYubGlua1BhcmFtZXRlcnMuYnV0dG9uV2lkdGg7XHJcblxyXG4gICAgXHJcbiAgICBpZiAodGhpcy5saW5rUGFyYW1ldGVycy5pc0lucHV0KXtcclxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgc2VsZi5waWNrZXIgPSBqUXVlcnkoJy5jb2xvcicsIHNlbGYuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50KS5jb2xvclBpY2tlcih7XHJcbiAgICAgICAgICAgICAgICAvL2NvbG9yOiAncmdiYSgyNTUsMTIsMTQsMSknLFxyXG4gICAgICAgICAgICAgICAgY3NzQWRkb246ICcuY3AtY29sb3ItcGlja2VyIHt6LWluZGV4OjIwMDB9JyxcclxuICAgICAgICAgICAgICAgIGJ1aWxkQ2FsbGJhY2s6ZnVuY3Rpb24oYil7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgcG9zaXRpb25DYWxsYmFjazpmdW5jdGlvbihwKXtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICByZW5kZXJDYWxsYmFjazogZnVuY3Rpb24odil7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHZhbHVlID0gdi50ZXh0O1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZS5pbmRleE9mKFwicmdiXCIpPT0wKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJnYiA9IHYudGV4dC5zcGxpdCggJywnICkgO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcj1wYXJzZUludCggcmdiWzBdLnN1YnN0cmluZyg0KSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBnPXBhcnNlSW50KCByZ2JbMV0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYj1wYXJzZUludCggcmdiWzJdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBcIiNcIiArci50b1N0cmluZygxNikrZy50b1N0cmluZygxNikrYi50b1N0cmluZygxNik7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiY2NcIiwgdmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY29sb3JDaGFuZ2UuZW1pdCh2YWx1ZSk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgYWN0aW9uQ2FsbGJhY2s6IGZ1bmN0aW9uKHYseCl7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJjXCIsIHYsIHgpXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgIH0pOyAgICBcclxuICAgICAgICB9LCAwKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJ1xyXG5pbXBvcnQgeyBCcm93c2VyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XHJcbmltcG9ydCB7IE5HWEtlcnZpUGlwZXNNb2R1bGUgIH0gZnJvbSAnbmd4LWtlcnZpJ1xyXG5pbXBvcnQgeyBTcGFya2xpbmVDb21wb25lbnQgfSBmcm9tICcuL3NwYXJrbGluZS9zcGFya2xpbmUuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU2xpZGVyQ29tcG9uZW50IH0gZnJvbSAnLi9zbGlkZXIvc2xpZGVyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEdhdWdlQ29tcG9uZW50IH0gZnJvbSAnLi9nYXVnZS9nYXVnZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBLZXJ2aUNoYXJ0Q29tcG9uZW50IH0gZnJvbSAnLi9jaGFydC9jaGFydC5jb21wb25lbnQnXHJcbi8vaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgU3dpdGNoQnV0dG9uQ29tcG9uZW50fSBmcm9tICcuL3N3aXRjaC1idXR0b24vc3dpdGNoLWJ1dHRvbi5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBCdXR0b25Db21wb25lbnR9IGZyb20gJy4vYnV0dG9uL2J1dHRvbi5jb21wb25lbnQnO1xyXG4vL2ltcG9ydCB7IENhbVZpZXdlckNvbXBvbmVudCB9IGZyb20gJy4vY2FtLXZpZXdlci9jYW0tdmlld2VyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE1QRUdWaWV3ZXJDb21wb25lbnQgfSBmcm9tICcuL21wZWctdmlld2VyL21wZWctdmlld2VyLmNvbXBvbmVudCc7XHJcbi8vaW1wb3J0IHsgSW1hZ2VWaWV3ZXJDb21wb25lbnQgfSBmcm9tICcuL2ltYWdlLXZpZXdlci9pbWFnZS12aWV3ZXIuY29tcG9uZW50JzsgXHJcbi8vaW1wb3J0IHsgQWN0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi9hY3Rpb24vYWN0aW9uLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IERhdGVUaW1lQ29tcG9uZW50IH0gZnJvbSAnLi9kYXRldGltZXBpY2tlci9kYXRldGltZXBpY2tlci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBJY29uc0NvbXBvbmVudCB9IGZyb20gJy4vaWNvbnMvaWNvbnMuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTmd4R2F1Z2VNb2R1bGUgfSBmcm9tICduZ3gtZ2F1Z2UnO1xyXG5pbXBvcnQgeyBDb2xvckNvbXBvbmVudCB9IGZyb20gJy4vY29sb3IvY29sb3IuY29tcG9uZW50JztcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSAgICBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IE5nWm9ycm9BbnRkTW9kdWxlIH0gZnJvbSAnbmctem9ycm8tYW50ZCc7XHJcbmltcG9ydCB7IE5nQXBleGNoYXJ0c01vZHVsZSB9IGZyb20gJ25nLWFwZXhjaGFydHMnXHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgU3BhcmtsaW5lQ29tcG9uZW50LFxyXG4gICAgU2xpZGVyQ29tcG9uZW50LFxyXG4gICAgSWNvbnNDb21wb25lbnQsXHJcbiAgICBHYXVnZUNvbXBvbmVudCxcclxuICAgIEtlcnZpQ2hhcnRDb21wb25lbnQsXHJcbiAgICBTd2l0Y2hCdXR0b25Db21wb25lbnQsXHJcbiAgICBCdXR0b25Db21wb25lbnQsXHJcbiAgICAvL0NhbVZpZXdlckNvbXBvbmVudCxcclxuICAgIE1QRUdWaWV3ZXJDb21wb25lbnQsXHJcbiAgICAvL0ltYWdlVmlld2VyQ29tcG9uZW50LFxyXG4gICAgLy9BY3Rpb25Db21wb25lbnQsXHJcbiAgICBEYXRlVGltZUNvbXBvbmVudCxcclxuICAgIENvbG9yQ29tcG9uZW50XHJcbiAgXSxcclxuICBleHBvcnRzOltcclxuICAgICAgU3BhcmtsaW5lQ29tcG9uZW50LFxyXG4gICAgICBTbGlkZXJDb21wb25lbnQsXHJcbiAgICAgIEljb25zQ29tcG9uZW50LFxyXG4gICAgICBNUEVHVmlld2VyQ29tcG9uZW50LFxyXG4gICAgICBHYXVnZUNvbXBvbmVudCxcclxuICAgICAgS2VydmlDaGFydENvbXBvbmVudCxcclxuICAgICAgU3dpdGNoQnV0dG9uQ29tcG9uZW50LFxyXG4gICAgICBCdXR0b25Db21wb25lbnQsXHJcbiAgICAgIC8vQ2FtVmlld2VyQ29tcG9uZW50LFxyXG4gICAgICAvL0FjdGlvbkNvbXBvbmVudCxcclxuICAgICAgRGF0ZVRpbWVDb21wb25lbnQsXHJcbiAgICAgIENvbG9yQ29tcG9uZW50XHJcbiAgXSxcclxuICBpbXBvcnRzOiBbXHJcbiAgICBCcm93c2VyTW9kdWxlLFxyXG4gICAgTkdYS2VydmlQaXBlc01vZHVsZSxcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIE5neEdhdWdlTW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGUsXHJcbiAgICBOZ1pvcnJvQW50ZE1vZHVsZSxcclxuICAgIE5nQXBleGNoYXJ0c01vZHVsZVxyXG4gICAgLy9LZXJ2aVBpcGVzTW9kdWxlXHJcbiAgXSxcclxuICBwcm92aWRlcnM6IFtdLFxyXG4gIGJvb3RzdHJhcDogW11cclxufSlcclxuZXhwb3J0IGNsYXNzIFVJQ29tcG9uZW50c01vZHVsZSB7XHJcbiAgY29uc3RydWN0b3IgKCl7fVxyXG59XHJcbiIsIi8vIENvcHlyaWdodCAoYykgMjAxNiwgVGltIFdlbnR6bGF1XHJcbi8vIExpY2Vuc2VkIHVuZGVyIE1JVFxyXG5cclxuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBLZXJ2aVZhbHVlLCBEYXNoYm9hcmRQYW5lbCwgRGFzaGJvYXJkU2l6ZXMgfSBmcm9tICdrZXJ2aS1qcydcclxuXHJcbkBDb21wb25lbnQoe1xyXG5cdHNlbGVjdG9yOiAna2VydmktdmFsdWUnLFxyXG5cdHRlbXBsYXRlOiBgICAgIDxrZXJ2aS12YWx1ZS1udW1iZXIgKm5nSWY9XCJ2YWx1ZS50eXBlTmFtZT09J051bWJlcidcIiBbdmFsdWVdPVwidmFsdWVcIiBbZGFzaGJvYXJkU2l6ZXNdPVwiZGFzaGJvYXJkU2l6ZXNcIiBbbGlua1BhcmFtZXRlcnNdPVwibGlua1BhcmFtZXRlcnNcIiBbaW5saW5lXT1cImlubGluZVwiID48L2tlcnZpLXZhbHVlLW51bWJlcj5cclxuICAgIDxrZXJ2aS12YWx1ZS1ib29sZWFuICpuZ0lmPVwidmFsdWUudHlwZU5hbWU9PSdCb29sZWFuJ1wiIFtkYXNoYm9hcmRTaXplc109XCJkYXNoYm9hcmRTaXplc1wiIFtsaW5rUGFyYW1ldGVyc109XCJsaW5rUGFyYW1ldGVyc1wiIFtpbmxpbmVdPVwiaW5saW5lXCIgW3ZhbHVlXT1cInZhbHVlXCI+PC9rZXJ2aS12YWx1ZS1ib29sZWFuPlxyXG4gICAgPGtlcnZpLXZhbHVlLXN0cmluZyAqbmdJZj1cInZhbHVlLnR5cGVOYW1lPT0nU3RyaW5nJ1wiIFtkYXNoYm9hcmRTaXplc109XCJkYXNoYm9hcmRTaXplc1wiIFtsaW5rUGFyYW1ldGVyc109XCJsaW5rUGFyYW1ldGVyc1wiIFtpbmxpbmVdPVwiaW5saW5lXCIgW3ZhbHVlXT1cInZhbHVlXCI+PC9rZXJ2aS12YWx1ZS1zdHJpbmc+XHJcbiAgICA8a2VydmktdmFsdWUtY29sb3IgKm5nSWY9XCJ2YWx1ZS50eXBlTmFtZT09J0NvbG9yJ1wiIFtkYXNoYm9hcmRTaXplc109XCJkYXNoYm9hcmRTaXplc1wiIFtsaW5rUGFyYW1ldGVyc109XCJsaW5rUGFyYW1ldGVyc1wiIFtpbmxpbmVdPVwiaW5saW5lXCIgW3ZhbHVlXT1cInZhbHVlXCI+PC9rZXJ2aS12YWx1ZS1jb2xvcj5cclxuICAgIDxrZXJ2aS12YWx1ZS1kYXRldGltZSAqbmdJZj1cInZhbHVlLnR5cGVOYW1lPT0nRGF0ZVRpbWUnXCIgW2Rhc2hib2FyZFNpemVzXT1cImRhc2hib2FyZFNpemVzXCIgW2xpbmtQYXJhbWV0ZXJzXT1cImxpbmtQYXJhbWV0ZXJzXCIgW2lubGluZV09XCJpbmxpbmVcIiBbdmFsdWVdPVwidmFsdWVcIj48L2tlcnZpLXZhbHVlLWRhdGV0aW1lPlxyXG5gLFxyXG5cdHN0eWxlczogW2BgXVxyXG5cdC8vZGlyZWN0aXZlczogWyBDb21tb25Nb2R1bGUgIF0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBLZXJ2aVZhbHVlQ29tcG9uZW50IHtcclxuXHRASW5wdXQoKSB2YWx1ZTogS2VydmlWYWx1ZTtcclxuXHRASW5wdXQoKSBkYXNoYm9hcmRQYW5lbDogRGFzaGJvYXJkUGFuZWw7XHJcblx0QElucHV0KCkgbGlua1BhcmFtZXRlcnM6YW55O1xyXG5cdEBJbnB1dCgpIGlubGluZTpib29sZWFuID0gZmFsc2U7XHJcblx0QElucHV0KCkgZGFzaGJvYXJkU2l6ZXM6RGFzaGJvYXJkU2l6ZXMgPSBuZXcgRGFzaGJvYXJkU2l6ZXMoKTtcclxuXHJcblx0Y29uc3RydWN0b3IoKSB7IFxyXG5cdH1cclxuXHQgXHJcblx0XHJcbn1cclxuIiwiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJ1xyXG5pbXBvcnQgeyBOdW1iZXJDb21wb25lbnR9IGZyb20gJy4vbnVtYmVyLXZhbHVlL251bWJlci12YWx1ZS5jb21wb25lbnQnXHJcbmltcG9ydCB7IE5HWEtlcnZpUGlwZXNNb2R1bGUgIH0gZnJvbSAnbmd4LWtlcnZpJ1xyXG5pbXBvcnQgeyBCb29sZWFuQ29tcG9uZW50fSBmcm9tICcuL2Jvb2xlYW4tdmFsdWUvYm9vbGVhbi12YWx1ZS5jb21wb25lbnQnXHJcbmltcG9ydCB7IFN0cmluZ0NvbXBvbmVudH0gZnJvbSAnLi9zdHJpbmctdmFsdWUvc3RyaW5nLXZhbHVlLmNvbXBvbmVudCdcclxuaW1wb3J0IHsgRGF0ZVRpbWVDb21wb25lbnR9IGZyb20gJy4vZGF0ZXRpbWUtdmFsdWUvZGF0ZXRpbWUtdmFsdWUuY29tcG9uZW50J1xyXG5pbXBvcnQgeyBDb2xvckNvbXBvbmVudH0gZnJvbSAnLi9jb2xvci12YWx1ZS9jb2xvci12YWx1ZS5jb21wb25lbnQnXHJcbi8vIGltcG9ydCB7IEVudW1Db21wb25lbnR9IGZyb20gJy4vZW51bS12YWx1ZS9lbnVtLXZhbHVlLmNvbXBvbmVudCdcclxuaW1wb3J0IHsgVUlDb21wb25lbnRzTW9kdWxlfSBmcm9tICcuLi91aS1jb21wb25lbnRzL3VpLWNvbXBvbmVudHMubW9kdWxlJ1xyXG5pbXBvcnQgeyBLZXJ2aVZhbHVlQ29tcG9uZW50IH0gZnJvbSAnLi9rZXJ2aS12YWx1ZS9rZXJ2aS12YWx1ZS5jb21wb25lbnQnXHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gICAgZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBOZ1pvcnJvQW50ZE1vZHVsZSB9IGZyb20gJ25nLXpvcnJvLWFudGQnO1xyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgTnVtYmVyQ29tcG9uZW50LFxyXG4gICAgQm9vbGVhbkNvbXBvbmVudCxcclxuICAgIEtlcnZpVmFsdWVDb21wb25lbnQsXHJcbiAgICBTdHJpbmdDb21wb25lbnQsXHJcbiAgICAvL0VudW1Db21wb25lbnQsXHJcbiAgICBEYXRlVGltZUNvbXBvbmVudCxcclxuICAgIENvbG9yQ29tcG9uZW50XHJcbiAgXSxcclxuICBleHBvcnRzOltcclxuICAgICAgTnVtYmVyQ29tcG9uZW50LFxyXG4gICAgICBCb29sZWFuQ29tcG9uZW50LFxyXG4gICAgICBLZXJ2aVZhbHVlQ29tcG9uZW50LFxyXG4gICAgICBTdHJpbmdDb21wb25lbnQsXHJcbiAgICAgIC8vRW51bUNvbXBvbmVudCxcclxuICAgICAgRGF0ZVRpbWVDb21wb25lbnQsXHJcbiAgICAgIENvbG9yQ29tcG9uZW50XHJcbiAgXSxcclxuICBpbXBvcnRzOiBbXHJcbiAgICBDb21tb25Nb2R1bGUsXHJcbiAgICBOR1hLZXJ2aVBpcGVzTW9kdWxlLFxyXG4gICAgVUlDb21wb25lbnRzTW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGUsXHJcbiAgICBOZ1pvcnJvQW50ZE1vZHVsZVxyXG4gIF0sXHJcbiAgcHJvdmlkZXJzOiBbXSxcclxuICBib290c3RyYXA6IFtdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBWYWx1ZXNNb2R1bGUge1xyXG4gIGNvbnN0cnVjdG9yICgpe31cclxufVxyXG4iLCJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQsRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOdW1iZXJWYWx1ZSB9IGZyb20gXCJrZXJ2aS1qc1wiXHJcbmRlY2xhcmUgdmFyIGpRdWVyeTogYW55O1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdrZXJ2aS1jb250cm9sbGVyLXBhZCcsXHJcbiAgdGVtcGxhdGU6IGA8ZGl2IChtb3VzZWRvd24pPVwicGFkUHJlc3MoKVwiIChtb3VzZXVwKT1cInBhZFJlbGVhc2UoKVwiPlxyXG4gIDxmaWVsZHNldCBpZD1cImxlZnRQYWRcIiBzdHlsZT1cInBvc2l0aW9uOmFic29sdXRlXCIgY2xhc3M9XCJwYWRcIiBbYXR0ci5kYXRhLXdpZHRoXT1cInBhZFNpemVcIiBbYXR0ci5kYXRhLWhlaWdodF09XCJwYWRTaXplXCIgPlxyXG4gICAgPGxlZ2VuZD48L2xlZ2VuZD5cclxuICAgIDxpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cInBhZC14XCIgdmFsdWU9XCIwXCI+PGlucHV0IHR5cGU9XCJoaWRkZW5cIiAgbmFtZT1cInBhZC15XCIgdmFsdWU9XCIwXCI+XHJcbiAgPC9maWVsZHNldD5cclxuPC9kaXY+YCxcclxuICBzdHlsZXM6IFtgYF1cclxufSlcclxuZXhwb3J0IGNsYXNzIENvbnRyb2xsZXJQYWRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIEBJbnB1dCgpIFhWYWx1ZTpOdW1iZXJWYWx1ZTtcclxuICBASW5wdXQoKSBZVmFsdWU6TnVtYmVyVmFsdWU7XHJcbiAgQElucHV0KCkgYXV0b0NlbnRlcjpib29sZWFuO1xyXG4gIHBhZFNpemU6bnVtYmVyPTE4MDtcclxuICBwcml2YXRlIG1vdmVEZWxheVRpbWVyID0gbnVsbDtcclxuICBwcml2YXRlIGluRHJhZzpib29sZWFuID0gZmFsc2U7XHJcbiAgXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlbGVtZW50UmVmOkVsZW1lbnRSZWYpIHsgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIGlmICh0aGlzLlhWYWx1ZSl7XHJcbiAgICAgIGpRdWVyeShcImlucHV0W25hbWU9J3BhZC14J11cIiwgc2VsZi5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQpLnZhbCh0aGlzLlhWYWx1ZS52YWx1ZSQudmFsdWUpLmNoYW5nZSgpO1xyXG4gICAgICB0aGlzLlhWYWx1ZS52YWx1ZSQuc3Vic2NyaWJlKGZ1bmN0aW9uICh2KSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJwYWQteFwiLCBzZWxmLllWYWx1ZS5uYW1lLCB2KTtcclxuICAgICAgICBqUXVlcnkoXCJpbnB1dFtuYW1lPSdwYWQteCddXCIsIHNlbGYuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50KS52YWwodikuY2hhbmdlKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICh0aGlzLllWYWx1ZSl7XHJcbiAgICAgIGpRdWVyeShcImlucHV0W25hbWU9J3BhZC15J11cIiwgc2VsZi5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQpLnZhbCh0aGlzLllWYWx1ZS52YWx1ZSQudmFsdWUpLmNoYW5nZSgpOyAgICAgICAgXHJcbiAgICAgIHRoaXMuWVZhbHVlLnZhbHVlJC5zdWJzY3JpYmUoZnVuY3Rpb24gKHYpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcInBhZC15XCIsIHNlbGYuWVZhbHVlLm5hbWUsIHYpO1xyXG4gICAgICAgIGpRdWVyeShcImlucHV0W25hbWU9J3BhZC15J11cIiwgc2VsZi5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQpLnZhbCh2KS5jaGFuZ2UoKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIGNvbG9yID0gXCJyZ2JhKDI1NSwyNTUsMjU1LC41KVwiO1xyXG4gICAgdmFyIHAgPSBqUXVlcnkoJ2ZpZWxkc2V0Jywgc2VsZi5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQpLnh5KHtcclxuICAgICAgZGlzcGxheVByZXZpb3VzOiBmYWxzZVxyXG4gICAgICAsIG1pbjogLTEwMFxyXG4gICAgICAsIG1heDogMTAwXHJcbiAgICAgICwgd2lkdGg6IHNlbGYucGFkU2l6ZVxyXG4gICAgICAsIGhlaWdodDogc2VsZi5wYWRTaXplXHJcbiAgICAgICwgZmdDb2xvcjogY29sb3JcclxuICAgICAgLCBiZ0NvbG9yOiBjb2xvclxyXG4gICAgICAsIGNoYW5nZTogZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgaWYgKHNlbGYubW92ZURlbGF5VGltZXIpIHtcclxuICAgICAgICAgIGNsZWFyVGltZW91dChzZWxmLm1vdmVEZWxheVRpbWVyKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgc2VsZi5tb3ZlRGVsYXlUaW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgaWYgKHNlbGYuWFZhbHVlKVxyXG4gICAgICAgICAgICBzZWxmLlhWYWx1ZS5zZXQodmFsdWVbMF0pO1xyXG4gICAgICAgICAgaWYgKHNlbGYuWVZhbHVlKVxyXG4gICAgICAgICAgICBzZWxmLllWYWx1ZS5zZXQodmFsdWVbMV0pO1xyXG4gICAgICAgIH0sIDApO1xyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gICAgLmNzcyh7ICdib3JkZXInOiAnMnB4IHNvbGlkICcgKyBjb2xvciB9KTsgIFxyXG4gIH1cclxuXHJcbiAgcGFkUHJlc3MoKXtcclxuICAgIHRoaXMuaW5EcmFnPXRydWU7XHJcbiAgfVxyXG5cclxuICBwYWRSZWxlYXNlKCl7XHJcbiAgICBjb25zb2xlLmxvZyhcInByXCIsIHRoaXMuaW5EcmFnLCB0aGlzLmF1dG9DZW50ZXIpOyAgIFxyXG4gICAgdGhpcy5pbkRyYWc9ZmFsc2U7XHJcbiAgICAgICBpZiAodGhpcy5hdXRvQ2VudGVyICYmIHRoaXMuWFZhbHVlKXtcclxuICAgICAgICAgY29uc29sZS5sb2coXCJ4LWF1dG8gY2VudGVyXCIpO1xyXG4gICAgICAgICBqUXVlcnkoXCJpbnB1dFtuYW1lPSdwYWQteCddXCIsIHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50KS52YWwoMCkuY2hhbmdlKCk7XHJcbiAgICAgICAgIHRoaXMuWFZhbHVlLnNldCgwKTtcclxuICAgICAgIH1cclxuICAgICAgIGlmICh0aGlzLmF1dG9DZW50ZXIgJiYgdGhpcy5ZVmFsdWUpe1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwieS1hdXRvIGNlbnRlclwiKTsgXHJcbiAgICAgICAgalF1ZXJ5KFwiaW5wdXRbbmFtZT0ncGFkLXknXVwiLCB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCkudmFsKDApLmNoYW5nZSgpO1xyXG4gICAgICAgICB0aGlzLllWYWx1ZS5zZXQoMCk7XHJcbiAgICAgICB9XHJcbiAgfVxyXG5cclxuXHJcbn1cclxuIiwiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLEFmdGVyVmlld0luaXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBLZXJ2aUNhbWVyYUNvbXBvbmVudCB9IGZyb20gJ25neC1rZXJ2aSdcclxuZGVjbGFyZSB2YXIgd2luZG93OmFueTtcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAna2VydmktY2FtLXZpZXdlcicsXHJcbiAgdGVtcGxhdGU6IGA8bmctY29udGFpbmVyICpuZ0lmPVwiaXNCYWNrZ3JvdW5kXCI+XHJcblx0PGRpdiAjdmlkZW9WaWV3ZXIgaWQ9XCJ2aWRlby12aWV3ZXJcIiBjbGFzcz1cInZpZGVvIHZpZGVvLWJhY2tncm91bmRcIiBzdHlsZT1cInRleHQtYWxpZ246Y2VudGVyO3Bvc2l0aW9uOmZpeGVkO3RvcDo2MHB4O2xlZnQ6MHB4O2hlaWdodDoxMDAlO1wiIFtzdHlsZS5oZWlnaHQucHhdPVwiY2FtSGVpZ2h0XCIgW3N0eWxlLndpZHRoLnB4XT1cImNhbVdpZHRoXCI+XHJcblx0XHQ8c3BhbiBjbGFzcz1cImNhbUltYWdlXCIgc3R5bGU9XCJ0b3A6MHB4O2xlZnQ6MHB4O1wiPlxyXG5cdFx0XHQ8a2VydmktbXBlZy12aWV3ZXIgKGltYWdlTG9hZGVkKT1cImltYWdlTG9hZGVkKClcIiBbaGVpZ2h0XT0xMDAgICBbY2FtZXJhU291cmNlXT1cImNhbWVyYVNvdXJjZVwiID4gPC9rZXJ2aS1tcGVnLXZpZXdlcj5cclxuXHRcdDwvc3Bhbj5cclxuXHRcdDxjYW52YXMgaWQ9XCJjYW1DYW52YXNcIiBzdHlsZT1cInBvc2l0aW9uOmFic29sdXRlO3RvcDowcHg7bGVmdDowcHg7XCIgW3N0eWxlLmhlaWdodC5weF09XCJjYW1IZWlnaHRcIiBbc3R5bGUud2lkdGgucHhdPVwiY2FtV2lkdGhcIj48L2NhbnZhcz5cclxuXHRcdDxjYW52YXMgaWQ9XCJwb2lDYW52YXNcIiBzdHlsZT1cInBvc2l0aW9uOmFic29sdXRlO3RvcDowcHg7bGVmdDowcHg7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJVwiPjwvY2FudmFzPlxyXG5cdFx0PGRpdiBjbGFzcz1cImNhbS1wYWQtYXJlYVwiICpuZ0lmPVwic2hvd0NhbVBhZFwiIFtzdHlsZS5sZWZ0LnB4XT1cImNhbVBhZExlZnRcIiBbc3R5bGUudG9wLnB4XT1cImNhbVBhZFRvcFwiIHN0eWxlPVwicG9zaXRpb246YWJzb2x1dGU7ei1pbmRleDogMjAwMFwiPlxyXG4gICAgICA8a2VydmktY29udHJvbGxlci1wYWQgW1hWYWx1ZV09XCJwYW5cIiBbWVZhbHVlXT1cInRpbHRcIj4gPC9rZXJ2aS1jb250cm9sbGVyLXBhZD5cclxuXHRcdDwvZGl2PlxyXG5cdFx0PGRpdiBzdHlsZT1cInBvc2l0aW9uOmFic29sdXRlO3RvcDozMHB4O2xlZnQ6MHB4O3dpZHRoOjEwMCU7aGVpZ2h0OjUwcHhcIj5cclxuXHRcdFx0PG5nLWNvbnRhaW5lciAgKm5nRm9yPVwibGV0IGFjdGlvbiBvZiBjYW1lcmEuYWN0aW9uc1wiPlxyXG5cdFx0XHRcdDxrZXJ2aS1hY3Rpb24gdGl0bGU9XCJ7eyggYWN0aW9uLm5hbWUgfCB0cmFuc2xhdGUpfX1cIiAqbmdJZj1cImFjdGlvbi52aXNpYmxlXCIgW2FjdGlvbl09XCJhY3Rpb25cIiA+PC9rZXJ2aS1hY3Rpb24+XHJcblx0XHRcdDwvbmctY29udGFpbmVyPlxyXG5cdFx0XHQ8IS0tIDxidXR0b24gY2xhc3M9XCJidG4gYnRuLXByaW1hcnkgXCIgICAobW91c2Vkb3duKT1cImltYWdlVmlld2VyLnNob3coKVwiIHRpdGxlPVwie3soICdtZWRpYV9mb2xkZXInIHwgdHJhbnNsYXRlKX19XCI+XHJcblx0XHRcdFx0PGkgIGNsYXNzPSdmYSBmYS1mb2xkZXInPjwvaT5cclxuXHRcdFx0PC9idXR0b24+IC0tPlxyXG5cdFx0PC9kaXY+XHJcblx0PC9kaXY+XHJcbjwvbmctY29udGFpbmVyPlxyXG5cclxuPG5nLWNvbnRhaW5lciAqbmdJZj1cIiFpc0JhY2tncm91bmRcIj5cclxuXHQ8ZGl2ICN2aWRlb1ZpZXdlciBpZD1cInZpZGVvLXZpZXdlclwiIGNsYXNzPVwidmlkZW9cIiBzdHlsZT1cIm92ZXJmbG93OmhpZGRlbjtwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlXCI+XHJcblx0XHQ8c3BhbiBjbGFzcz1cImNhbUltYWdlXCIgc3R5bGU9XCJ0b3A6MHB4O2xlZnQ6MHB4O2hlaWdodDoxMDAlO3dpZHRoOjEwMCVcIj5cclxuXHRcdFx0PGtlcnZpLW1wZWctdmlld2VyIChpbWFnZUxvYWRlZCk9XCJpbWFnZUxvYWRlZCgpXCIgW3dpZHRoXT0xMDAgIFtjYW1lcmFTb3VyY2VdPVwiY2FtZXJhU291cmNlXCIgPiA8L2tlcnZpLW1wZWctdmlld2VyPlxyXG5cdFx0PC9zcGFuPlxyXG5cdFx0PGNhbnZhcyBpZD1cImNhbUNhbnZhc1wiIHN0eWxlPVwicG9zaXRpb246YWJzb2x1dGU7dG9wOjBweDtsZWZ0OjBweDt3aWR0aDoxMDAlO2hlaWdodDoxMDAlXCI+PC9jYW52YXM+XHJcblx0XHQ8Y2FudmFzIGlkPVwicG9pQ2FudmFzXCIgc3R5bGU9XCJwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MHB4O2xlZnQ6MHB4O3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCVcIj48L2NhbnZhcz5cclxuXHRcdDxkaXYgY2xhc3M9XCJjYW0tcGFkLWFyZWFcIiAqbmdJZj1cInNob3dDYW1QYWRcIiBbc3R5bGUubGVmdC5weF09XCJjYW1QYWRMZWZ0XCIgW3N0eWxlLnRvcC5weF09XCJjYW1QYWRUb3BcIiBzdHlsZT1cInBvc2l0aW9uOmFic29sdXRlXCI+XHJcbiAgICAgIDxrZXJ2aS1jb250cm9sbGVyLXBhZCBbWFZhbHVlXT1cInBhblwiIFtZVmFsdWVdPVwidGlsdFwiPiA8L2tlcnZpLWNvbnRyb2xsZXItcGFkPlxyXG5cdFx0PC9kaXY+XHJcblx0PC9kaXY+XHJcblx0PGRpdj5cclxuXHRcdDxuZy1jb250YWluZXIgICpuZ0Zvcj1cImxldCBhY3Rpb24gb2YgY2FtZXJhLmFjdGlvbnNcIj5cclxuXHRcdFx0PGtlcnZpLWFjdGlvbiAqbmdJZj1cImFjdGlvbi52aXNpYmxlXCIgdGl0bGU9XCJ7eyggYWN0aW9uLm5hbWUgfCB0cmFuc2xhdGUpfX1cIiBbYWN0aW9uXT1cImFjdGlvblwiID48L2tlcnZpLWFjdGlvbj5cclxuXHRcdDwvbmctY29udGFpbmVyPlxyXG5cdFx0PCEtLSA8YnV0dG9uIGNsYXNzPVwiYnRuIGJ0bi1wcmltYXJ5XCIgKG1vdXNlZG93bik9XCJpbWFnZVZpZXdlci5zaG93KClcIiB0aXRsZT1cInt7KCAnbWVkaWFfZm9sZGVyJyB8IHRyYW5zbGF0ZSl9fVwiPlxyXG5cdFx0XHQ8aSAgY2xhc3M9J2ZhIGZhLWZvbGRlcic+PC9pPlxyXG5cdFx0PC9idXR0b24+IC0tPlxyXG5cdDwvZGl2PlxyXG48L25nLWNvbnRhaW5lcj5cclxuPCEtLSA8a2VydmktaW1hZ2Utdmlld2VyICNpbWFnZVZpZXdlciBbY2FtQ29tcG9uZW50XT1cInRoaXNcIiBbY2FtZXJhU291cmNlXT1cImNhbWVyYVNvdXJjZVwiPjwva2VydmktaW1hZ2Utdmlld2VyPiAtLT5gLFxyXG4gIHN0eWxlczogW2BgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ2FtVmlld2VyQ29tcG9uZW50IGV4dGVuZHMgS2VydmlDYW1lcmFDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcclxuICBwdWJsaWMgY2FtSGVpZ2h0Om51bWJlcjtcclxuICBwdWJsaWMgY2FtV2lkdGg6bnVtYmVyO1xyXG4gIHB1YmxpYyBjYW1QYWRMZWZ0Om51bWJlcjtcclxuICBwdWJsaWMgY2FtUGFkVG9wOm51bWJlcjtcclxuICBwdWJsaWMgc2hvd0NhbVBhZDpib29sZWFuID0gZmFsc2U7XHJcbiAgQFZpZXdDaGlsZChcInZpZGVvVmlld2VyXCIpIHZpZGVvVmlld2VyOkVsZW1lbnRSZWY7XHJcbiAgcGFkU2l6ZTpudW1iZXI9MTgwO1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZikgeyBcclxuICAgIHN1cGVyKCk7XHJcbiAgfVxyXG5cclxuICBpbWFnZUxvYWRlZCgpe1xyXG4gICAgICB2YXIgaCA9IHRoaXMudmlkZW9WaWV3ZXIubmF0aXZlRWxlbWVudC5vZmZzZXRIZWlnaHQ7XHJcbiAgICAgIHZhciB3ID0gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQub2Zmc2V0V2lkdGg7XHJcbiAgICAgICAvL3RoaXMuY2FtUGFkVG9wID0gaCAvIDIgLSB0aGlzLnBhZFNpemUvMjtcclxuICAgICAgIC8vdGhpcy5jYW1QYWRMZWZ0ID0gdyAvIDIgLSB0aGlzLnBhZFNpemUvMjtcclxuICB9XHJcblxyXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpe1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzOyBcclxuICAgIHZhciBlbGVtZW50ID0gc2VsZi52aWRlb1ZpZXdlci5uYXRpdmVFbGVtZW50O1xyXG4gICAgdmFyIHZpZXdQb3J0SGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0O1xyXG4gICAgdmFyIHZpZXdQb3J0V2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDtcclxuXHJcbiAgICB0aGlzLmNhbUhlaWdodCA9IHZpZXdQb3J0SGVpZ2h0IC0gNjU7XHJcbiAgICB0aGlzLmNhbVdpZHRoID0gdmlld1BvcnRXaWR0aDtcclxuICAgIGNvbnNvbGUubG9nKFwiYXZpY1wiLCB0aGlzLmNhbUhlaWdodCx0aGlzLmNhbVdpZHRoKTtcclxuICAgIFxyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgIFxyXG4gICAgICB2YXIgaCA9IGVsZW1lbnQub2Zmc2V0SGVpZ2h0O1xyXG4gICAgICB2YXIgdyA9IGVsZW1lbnQub2Zmc2V0V2lkdGg7XHJcbiAgICAgIGlmICh3IDwgc2VsZi5wYWRTaXplKXtcclxuICAgICAgICBzZWxmLnBhZFNpemU9dy0xMDtcclxuICAgICAgICAgIC8valF1ZXJ5KFwiLmNhbVBhZFwiLCBzZWxmLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCkuY3NzKHsgd2lkdGg6IHNlbGYucGFkU2l6ZSwgaGVpZ2h0OiAgc2VsZi5wYWRTaXplIH0pO1xyXG4gICAgICB9XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiY2FtaVwiLCBoLHcsIHNlbGYucGFkU2l6ZSwgZWxlbWVudCk7XHJcbiAgICAgIHNlbGYuY2FtUGFkVG9wID0gaCAvIDIgLSAoc2VsZi5wYWRTaXplLzIpXHJcbiAgICAgIHNlbGYuY2FtUGFkTGVmdCA9ICB3IC8gMiAtIChzZWxmLnBhZFNpemUgLyAyKTtcclxuICAgICAgc2VsZi5zaG93Q2FtUGFkID0gdHJ1ZTtcclxuICAgIH0sIDApO1xyXG5cclxuICAgIC8vIGpRdWVyeSh3aW5kb3cpLmJpbmQoJ3Jlc2l6ZScsIGZ1bmN0aW9uICgpIHtcclxuICAgIC8vICAgICB2YXIgaCA9IGVsZW1lbnQub2Zmc2V0SGVpZ2h0O1xyXG4gICAgLy8gICAgIHZhciB3ID0gZWxlbWVudC5vZmZzZXRXaWR0aDtcclxuICAgIC8vICAgICBzZWxmLmNhbVBhZFRvcCA9IGggLyAyIC0gKHNlbGYucGFkU2l6ZS8yKVxyXG4gICAgLy8gICAgIHNlbGYuY2FtUGFkTGVmdCA9ICB3IC8gMiAtIChzZWxmLnBhZFNpemUgLyAyKTtcclxuICAgIC8vIH0pXHJcbiAgfTtcclxuICBcclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLm5nT25Jbml0Q2FtZXJhKCk7XHJcbiAgfVxyXG59XHJcbiIsIi8vIENvcHlyaWdodCAoYykgMjAxNiwgVGltIFdlbnR6bGF1XHJcbi8vIExpY2Vuc2VkIHVuZGVyIE1JVFxyXG5cclxuaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBLZXJ2aUFjdGlvbkNvbXBvbmVudCB9IGZyb20gJ25neC1rZXJ2aSc7XHJcbi8vaW1wb3J0IHsgVGVtcGxhdGVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vdGVtcGxhdGUuc2VydmljZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2tlcnZpLWFjdGlvbicsXHJcbiAgdGVtcGxhdGU6IGA8a2Vydmktc3dpdGNoYnV0dG9uIFxyXG4gICAgW2Rhc2hib2FyZFNpemVzXT1cImRhc2hib2FyZFNpemVzXCIgXHJcbiAgICBbaW5saW5lXT1cImlubGluZVwiIFxyXG4gICAgW3ZhbHVlXT1cIihzdGF0ZSB8IGFzeW5jKVwiIFxyXG4gICAgW2xpbmtQYXJhbWV0ZXJzXT1cImxpbmtQYXJhbWV0ZXJzXCJcclxuICAgIChidXR0b25TdGF0ZSk9XCJzZXRBY3Rpb25TdGF0ZSgkZXZlbnQpXCJcclxuICAgICpuZ0lmPVwiZGlzcGxheVR5cGUhPSdidXR0b24nXCJcclxuPjwva2Vydmktc3dpdGNoYnV0dG9uPlxyXG48a2VydmktYnV0dG9uIFxyXG4gICAgW3RpdGxlXT1cImFjdGlvbi5uYW1lXCIgXHJcbiAgICBbZGFzaGJvYXJkU2l6ZXNdPVwiZGFzaGJvYXJkU2l6ZXNcIiBcclxuICAgIFt2YWx1ZV09XCIoc3RhdGUgfCBhc3luYylcIiBcclxuICAgIFtpbmxpbmVdPVwiaW5saW5lXCIgXHJcbiAgICBbbGlua1BhcmFtZXRlcnNdPVwibGlua1BhcmFtZXRlcnNcIlxyXG4gICAgKGJ1dHRvblN0YXRlKT1cInNldEFjdGlvblN0YXRlKCRldmVudClcIiBcclxuICAgICpuZ0lmPVwiZGlzcGxheVR5cGU9PSdidXR0b24nXCJcclxuPjwva2VydmktYnV0dG9uPlxyXG5gLFxyXG4gIHN0eWxlczogW2BgXSxcclxufSlcclxuXHJcbmV4cG9ydCBjbGFzcyBBY3Rpb25Db21wb25lbnQgZXh0ZW5kcyBLZXJ2aUFjdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpOyBcclxuICAgIFxyXG4gICAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgdGhpcy5uZ09uSW5pdEFjdGlvbigpOyBcclxuICB9XHJcblxyXG4gIFxyXG4gIFxyXG59IiwiLy8gQ29weXJpZ2h0IChjKSAyMDE2LCBUaW0gV2VudHpsYXVcclxuLy8gTGljZW5zZWQgdW5kZXIgTUlUXHJcblxyXG5pbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEtlcnZpVXNlckxvZ0NvbXBvbmVudCB9IGZyb20gJ25neC1rZXJ2aSc7XHJcbi8vaW1wb3J0IHsgVGVtcGxhdGVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vdGVtcGxhdGUuc2VydmljZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2tlcnZpLXVzZXItbG9nJyxcclxuICB0ZW1wbGF0ZTogYDxuei10aW1lbGluZSA+XHJcbiAgICA8bnotdGltZWxpbmUtaXRlbSBbbnpEb3RdPVwibWVzc2FnZS5sZXZlbD09MSA/IGRvdFRlbXBsYXRlMSA6ICBtZXNzYWdlLmxldmVsPT0yID8gZG90VGVtcGxhdGUyIDogZG90VGVtcGxhdGUzXCIgKm5nRm9yPVwibGV0IG1lc3NhZ2Ugb2YgbWVzc2FnZXMkIHwgYXN5bmNcIj5cclxuICAgICAgICAgICAgPHN0cm9uZz57e21lc3NhZ2Uuc291cmNlTmFtZX19PC9zdHJvbmc+PGJyPlxyXG4gICAgICAgICAgICA8c3BhbiBzdHlsZT1cImZvbnQtc2l6ZTo4MCVcIj57e21lc3NhZ2UudGltZXN0YW1wIHwgZGF0ZTogJ0hIOm1tOnNzJ319PC9zcGFuPjxicj4gICAgXHJcbiAgICAgICAgICAgIHt7bWVzc2FnZS50b3BpY319XHJcbiAgICAgICAgICAgIDxuei1kaXZpZGVyPjwvbnotZGl2aWRlcj5cclxuICAgIDwvbnotdGltZWxpbmUtaXRlbT5cclxuPC9uei10aW1lbGluZT5cclxuPG5nLXRlbXBsYXRlICNkb3RUZW1wbGF0ZTE+XHJcbiAgICA8aSBuei1pY29uIHR5cGU9XCJjbG9zZS1jaXJjbGVcIiBzdHlsZT1cImZvbnQtc2l6ZTogMTZweDtcIiBbbnpUaGVtZV09XCIndHdvdG9uZSdcIiBbbnpUd290b25lQ29sb3JdPVwiJyNmNTIyMmQnXCI+PC9pPlxyXG48L25nLXRlbXBsYXRlPlxyXG48bmctdGVtcGxhdGUgI2RvdFRlbXBsYXRlMj5cclxuICAgIDxpIG56LWljb24gdHlwZT1cIndhcm5pbmdcIiBzdHlsZT1cImZvbnQtc2l6ZTogMTZweDtcIiBbbnpUaGVtZV09XCIndHdvdG9uZSdcIiBbbnpUd290b25lQ29sb3JdPVwiJyNmYWFkMTQnXCI+PC9pPlxyXG48L25nLXRlbXBsYXRlPlxyXG48bmctdGVtcGxhdGUgI2RvdFRlbXBsYXRlMz5cclxuICAgIDxpIG56LWljb24gbnotaWNvbiB0eXBlPVwiY2hlY2stY2lyY2xlXCIgW256VGhlbWVdPVwiJ3R3b3RvbmUnXCIgW256VHdvdG9uZUNvbG9yXT1cIicjNTJjNDFhJ1wiIHN0eWxlPVwiZm9udC1zaXplOiAxNnB4O1wiPjwvaT5cclxuPC9uZy10ZW1wbGF0ZT5gLFxyXG4gIHN0eWxlczogW2BgXSxcclxufSlcclxuXHJcbmV4cG9ydCBjbGFzcyBVc2VyTG9nQ29tcG9uZW50IGV4dGVuZHMgS2VydmlVc2VyTG9nQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKCk7IFxyXG4gICAgXHJcbiAgICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5uZ09uSW5pdFVzZXJMb2coKTsgXHJcbiAgfVxyXG5cclxuICBcclxuICBcclxufSIsIi8vIENvcHlyaWdodCAoYykgMjAxNiwgVGltIFdlbnR6bGF1XHJcbi8vIExpY2Vuc2VkIHVuZGVyIE1JVFxyXG5cclxuaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIFZpZXdDaGlsZCwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgS2VydmlVc2VyTG9nQ29tcG9uZW50IH0gZnJvbSAnbmd4LWtlcnZpJztcclxuaW1wb3J0IHsgTnpOb3RpZmljYXRpb25TZXJ2aWNlIH0gZnJvbSAnbmctem9ycm8tYW50ZCc7XHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAna2VydmktdXNlci1tZXNzYWdlcycsXHJcbiAgdGVtcGxhdGU6IGA8bmctdGVtcGxhdGUgbGV0LW1lc3NhZ2U9XCJkYXRhXCI+XHJcbiAgICA8ZGl2IGNsYXNzPVwiYW50LW5vdGlmaWNhdGlvbi1ub3RpY2UtY29udGVudFwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJhbnQtbm90aWZpY2F0aW9uLW5vdGljZS13aXRoLWljb25cIj5cclxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJhbnQtbm90aWZpY2F0aW9uLW5vdGljZS1pY29uXCI+XHJcbiAgICAgICAgICAgICAgICA8aSAqbmdJZj1cIm1lc3NhZ2UubGV2ZWw9PTNcIiBuei1pY29uIHR5cGU9XCJjaGVjay1jaXJjbGVcIiBbbnpUaGVtZV09XCIndHdvdG9uZSdcIiBbbnpUd290b25lQ29sb3JdPVwiJyM1MmM0MWEnXCI+PC9pPlxyXG4gICAgICAgICAgICAgICAgPGkgKm5nSWY9XCJtZXNzYWdlLmxldmVsPT0yXCIgbnotaWNvbiB0eXBlPVwid2FybmluZ1wiIFtuelRoZW1lXT1cIid0d290b25lJ1wiIFtuelR3b3RvbmVDb2xvcl09XCInI2ZhYWQxNCdcIj48L2k+XHJcbiAgICAgICAgICAgICAgICA8aSAqbmdJZj1cIm1lc3NhZ2UubGV2ZWw9PTFcIiBuei1pY29uIHR5cGU9XCJjbG9zZS1jaXJjbGVcIiBbbnpUaGVtZV09XCIndHdvdG9uZSdcIiBbbnpUd290b25lQ29sb3JdPVwiJyNmNTIyMmQnXCI+PC9pPlxyXG4gICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhbnQtbm90aWZpY2F0aW9uLW5vdGljZS1tZXNzYWdlXCI+e3ttZXNzYWdlLnNvdXJjZU5hbWV9fTwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYW50LW5vdGlmaWNhdGlvbi1ub3RpY2UtZGVzY3JpcHRpb25cIj5cclxuICAgICAgICAgICAgICAgIHt7IG1lc3NhZ2UudG9waWMgfX0gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgICBcclxuPC9uZy10ZW1wbGF0ZT5gLFxyXG4gIHN0eWxlczogW2BgXSxcclxufSlcclxuXHJcbmV4cG9ydCBjbGFzcyBVc2VyTWVzc2FnZXNDb21wb25lbnQgZXh0ZW5kcyBLZXJ2aVVzZXJMb2dDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIEBWaWV3Q2hpbGQoVGVtcGxhdGVSZWYpIG1lc3NhZ2VUZW1wbGF0ZTogVGVtcGxhdGVSZWY8e30+OyAgXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBub3RpZmljYXRpb246IE56Tm90aWZpY2F0aW9uU2VydmljZSkge1xyXG4gICAgICAgIHN1cGVyKCk7IFxyXG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgICAgICB0aGlzLmxhc3RNZXNzYWdlJC5zdWJzY3JpYmUoZnVuY3Rpb24obWVzc2FnZSl7XHJcbiAgICAgICAgICBpZiAobWVzc2FnZSl7XHJcbiAgICAgICAgICAgIHNlbGYubm90aWZpY2F0aW9uLnRlbXBsYXRlKHNlbGYubWVzc2FnZVRlbXBsYXRlLCB7IG56RGF0YTogbWVzc2FnZSB9KTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIHRoaXMubmdPbkluaXRVc2VyTG9nKCk7IFxyXG4gICAgXHJcbiAgfVxyXG59IiwiLy8gQ29weXJpZ2h0IChjKSAyMDE2LCBUaW0gV2VudHpsYXVcclxuLy8gTGljZW5zZWQgdW5kZXIgTUlUXHJcblxyXG5pbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgVmlld0NoaWxkLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBLZXJ2aVVzZXJMb2dDb21wb25lbnQgfSBmcm9tICduZ3gta2VydmknO1xyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2tlcnZpLW1lc3NhZ2UtYnV0dG9uJyxcclxuICB0ZW1wbGF0ZTogYDxuei1iYWRnZSBbbnpDb3VudF09XCJtZXNzYWdlQ291bnQkIHwgYXN5bmNcIiBbbnpPdmVyZmxvd0NvdW50XT1cIjk5XCI+XHJcbiAgICA8YnV0dG9uICpuZ0lmPVwiKG1lc3NhZ2VDb3VudCQgfCBhc3luYyk+MFwiIG56LWJ1dHRvbiBuekdob3N0ICBuelR5cGU9XCJkZWZhdWx0XCIgbnpTaGFwZT1cImNpcmNsZVwiIChjbGljayk9XCJvcGVuKClcIj5cclxuICAgICAgICA8aSBuei1pY29uIG56VHlwZT1cIm5vdGlmaWNhdGlvblwiIG56VGhlbWU9XCJ0d290b25lXCIgW256VHdvdG9uZUNvbG9yXT1cIicjOWZkMDM3J1wiPjwvaT5cclxuICAgIDwvYnV0dG9uPlxyXG48L256LWJhZGdlPlxyXG5cclxuPG56LWRyYXdlclxyXG4gICAgICBbbnpDbG9zYWJsZV09XCJmYWxzZVwiXHJcbiAgICAgIFtuelZpc2libGVdPVwidmlzaWJsZVwiXHJcbiAgICAgIG56UGxhY2VtZW50PVwicmlnaHRcIlxyXG4gICAgICBuelRpdGxlPVwiTG9nXCJcclxuICAgICAgKG56T25DbG9zZSk9XCJjbG9zZSgpXCJcclxuICAgID5cclxuICAgIDxrZXJ2aS11c2VyLWxvZyBbaW5saW5lXT1cImZhbHNlXCI+PC9rZXJ2aS11c2VyLWxvZz5cclxuPC9uei1kcmF3ZXI+YCxcclxuICBzdHlsZXM6IFtgYF0sXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgVXNlck1lc3NhZ2VCdXR0b25Db21wb25lbnQgZXh0ZW5kcyBLZXJ2aVVzZXJMb2dDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIHZpc2libGUgPSBmYWxzZTtcclxuICBcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpOyBcclxuICAgIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICB0aGlzLm5nT25Jbml0VXNlckxvZygpOyBcclxuICB9XHJcblxyXG4gIG9wZW4oKTogdm9pZCB7XHJcbiAgICB0aGlzLnZpc2libGUgPSB0cnVlO1xyXG4gIH1cclxuXHJcbiAgY2xvc2UoKTogdm9pZCB7XHJcbiAgICB0aGlzLnZpc2libGUgPSBmYWxzZTtcclxuICB9XHJcbn0iLCJpbXBvcnQgeyBCcm93c2VyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XHJcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5neEtlcnZpTW9kdWxlLCBOR1hLZXJ2aVBpcGVzTW9kdWxlICB9IGZyb20gJ25neC1rZXJ2aSdcclxuaW1wb3J0IHsgRGFzaGJvYXJkUGFuZWxDb21wb25lbnQgfSBmcm9tICcuL2Rhc2hib2FyZC1wYW5lbC9kYXNoYm9hcmQtcGFuZWwuY29tcG9uZW50JztcclxuaW1wb3J0IHsgV2lkZ2V0Q29tcG9uZW50IH0gZnJvbSAnLi93aWRnZXQvd2lkZ2V0LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7ICBWYWx1ZXNNb2R1bGUgfSBmcm9tICcuL3ZhbHVlcy92YWx1ZXMubW9kdWxlJztcclxuXHJcbmltcG9ydCB7IENvbnRyb2xsZXJQYWRDb21wb25lbnQgfSBmcm9tICcuL2NvbnRyb2xsZXItcGFkL2NvbnRyb2xsZXItcGFkLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IENhbVZpZXdlckNvbXBvbmVudCB9IGZyb20gJy4vY2FtLXZpZXdlci9jYW0tdmlld2VyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEFjdGlvbkNvbXBvbmVudCB9IGZyb20gJy4vYWN0aW9uL2FjdGlvbi5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBVSUNvbXBvbmVudHNNb2R1bGV9IGZyb20gJy4vdWktY29tcG9uZW50cy91aS1jb21wb25lbnRzLm1vZHVsZSdcclxuaW1wb3J0IHsgVXNlckxvZ0NvbXBvbmVudH0gZnJvbSAnLi9sb2cvdXNlci1sb2cvdXNlci1sb2cuY29tcG9uZW50J1xyXG5pbXBvcnQgeyBVc2VyTWVzc2FnZXNDb21wb25lbnQgfSBmcm9tICcuL2xvZy9tZXNzYWdlcy9tZXNzYWdlcy5jb21wb25lbnQnXHJcbmltcG9ydCB7IFVzZXJNZXNzYWdlQnV0dG9uQ29tcG9uZW50IH0gZnJvbSAnLi9sb2cvbWVzc2FnZS1idXR0b24vbWVzc2FnZS1idXR0b24uY29tcG9uZW50J1xyXG5pbXBvcnQgeyBOZ1pvcnJvQW50ZE1vZHVsZSB9IGZyb20gJ25nLXpvcnJvLWFudGQnO1xyXG5pbXBvcnQgeyBGbGV4TGF5b3V0TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZmxleC1sYXlvdXQnO1xyXG5ATmdNb2R1bGUoe1xyXG4gIGltcG9ydHM6IFtcclxuICAgIEJyb3dzZXJNb2R1bGUsXHJcbiAgICBOR1hLZXJ2aVBpcGVzTW9kdWxlLFxyXG4gICAgTmd4S2VydmlNb2R1bGUsXHJcbiAgICBWYWx1ZXNNb2R1bGUsXHJcbiAgICBOZ1pvcnJvQW50ZE1vZHVsZSxcclxuICAgIEZsZXhMYXlvdXRNb2R1bGUsXHJcbiAgICBVSUNvbXBvbmVudHNNb2R1bGVcclxuICAgIFxyXG4gIF0sXHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBEYXNoYm9hcmRQYW5lbENvbXBvbmVudCxcclxuICAgIFdpZGdldENvbXBvbmVudCxcclxuICAgIENvbnRyb2xsZXJQYWRDb21wb25lbnQsXHJcbiAgICBDYW1WaWV3ZXJDb21wb25lbnQsXHJcbiAgICBBY3Rpb25Db21wb25lbnQsXHJcbiAgICBVc2VyTG9nQ29tcG9uZW50LFxyXG4gICAgVXNlck1lc3NhZ2VCdXR0b25Db21wb25lbnQsXHJcbiAgICBVc2VyTWVzc2FnZXNDb21wb25lbnRcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtcclxuICAgIERhc2hib2FyZFBhbmVsQ29tcG9uZW50LFxyXG4gICAgQ29udHJvbGxlclBhZENvbXBvbmVudCxcclxuICAgIENhbVZpZXdlckNvbXBvbmVudCxcclxuICAgIFVzZXJMb2dDb21wb25lbnQsXHJcbiAgICBVc2VyTWVzc2FnZUJ1dHRvbkNvbXBvbmVudCxcclxuICAgIFVzZXJNZXNzYWdlc0NvbXBvbmVudFxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEtlcnZpWm9ycm9Nb2R1bGUgeyB9XHJcbiJdLCJuYW1lcyI6WyJ0c2xpYl8xLl9fZXh0ZW5kcyIsIkRhdGVUaW1lQ29tcG9uZW50IiwiQ29sb3JDb21wb25lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7SUFPRTtLQUFpQjs7Z0JBTGxCLFVBQVUsU0FBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkI7Ozs7OzRCQUpEO0NBUUM7Ozs7Ozs7SUN1QzRDQSwyQ0FBNEI7SUFFdkU7UUFBQSxZQUNFLGlCQUFPLFNBQ1A7UUFISyxpQkFBVyxHQUFDLEtBQUssQ0FBQzs7S0FHdkI7Ozs7SUFFRiwwQ0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDckIsSUFB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","import { __extends, __values } from 'tslib';\nimport { Injectable, Component, Input, NgModule, Injector, Pipe } from '@angular/core';\nimport { KerviBaseService, DashboardSizes, UserLogStateType } from 'kervi-js';\nexport { ConnectionState, DashboardSizes } from 'kervi-js';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NGXKerviService = /** @class */ (function (_super) {\r\n    __extends(NGXKerviService, _super);\r\n    function NGXKerviService() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    NGXKerviService.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    return NGXKerviService;\r\n}(KerviBaseService));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviTemplateService = /** @class */ (function () {\r\n    function KerviTemplateService() {\r\n        this.remUnit = 20;\r\n        console.log(\"kervi service constructor\");\r\n        //console.log(\"ctemplate\");\r\n        this.remUnit = parseFloat(getComputedStyle(document.documentElement).fontSize);\r\n    }\r\n    /**\r\n     * @param {?} rem\r\n     * @return {?}\r\n     */\r\n    KerviTemplateService.prototype.convertRemToPixels = /**\r\n     * @param {?} rem\r\n     * @return {?}\r\n     */\r\n    function (rem) {\r\n        return rem * this.remUnit;\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    KerviTemplateService.prototype.getSizeValue = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        if (value == null)\r\n            return \"100%\";\r\n        else if (value === \"\")\r\n            return \"100%\";\r\n        else if (isNaN(value)) {\r\n            return value;\r\n        }\r\n        else if (value > 0)\r\n            return value + \"%\";\r\n        else\r\n            return \"100%\";\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @param {?} containerSize\r\n     * @return {?}\r\n     */\r\n    KerviTemplateService.prototype.getPixels = /**\r\n     * @param {?} value\r\n     * @param {?} containerSize\r\n     * @return {?}\r\n     */\r\n    function (value, containerSize) {\r\n        //console.log(\"gps\", value, isNaN(value));\r\n        if (isNaN(value)) {\r\n            if (value.lastIndexOf(\"px\") > -1) {\r\n                /** @type {?} */\r\n                var px = parseFloat(value);\r\n                return px;\r\n            }\r\n            else if (value.lastIndexOf(\"rem\") > -1) {\r\n                /** @type {?} */\r\n                var rem = parseFloat(value);\r\n                /** @type {?} */\r\n                var px = this.convertRemToPixels(rem);\r\n                console.log(\"remx\", rem, px);\r\n                return px;\r\n            }\r\n            else if (value.lastIndexOf(\"%\") > -1) {\r\n                /** @type {?} */\r\n                var percentage = parseFloat(value) / 100.0;\r\n                return containerSize * percentage;\r\n            }\r\n        }\r\n        else\r\n            return value;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @param {?} sheet\r\n     * @return {?}\r\n     */\r\n    KerviTemplateService.prototype.getStyleRuleValue = /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @param {?} sheet\r\n     * @return {?}\r\n     */\r\n    function (style, selector, sheet) {\r\n        /** @type {?} */\r\n        var sheets = sheet != null ? [sheet] : document.styleSheets;\r\n        for (var i = 0, l = sheets.length; i < l; i++) {\r\n            /** @type {?} */\r\n            var sheet = sheets[i];\r\n            if (!sheet.cssRules) {\r\n                continue;\r\n            }\r\n            for (var j = 0, k = sheet.cssRules.length; j < k; j++) {\r\n                /** @type {?} */\r\n                var rule = sheet.cssRules[j];\r\n                if (rule.selectorText && rule.selectorText.split(',').indexOf(selector) !== -1) {\r\n                    return rule.style[style];\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviTemplateService.prototype.makeId = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var text = \"\";\r\n        /** @type {?} */\r\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        for (var i = 0; i < 5; i++)\r\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n        return text;\r\n    };\r\n    /**\r\n     * @param {?} colorName\r\n     * @param {?} cssClass\r\n     * @return {?}\r\n     */\r\n    KerviTemplateService.prototype.getColor = /**\r\n     * @param {?} colorName\r\n     * @param {?} cssClass\r\n     * @return {?}\r\n     */\r\n    function (colorName, cssClass) {\r\n        /** @type {?} */\r\n        var styleValue = this.getStyleRuleValue(colorName, cssClass, null);\r\n        //console.log(\"sv\", cssClass,styleValue);\r\n        return styleValue;\r\n    };\r\n    KerviTemplateService.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviTemplateService.ctorParameters = function () { return []; };\r\n    return KerviTemplateService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar AppInjector;\r\n/**\r\n * @param {?} injector\r\n * @return {?}\r\n */\r\nfunction setAppInjector(injector) {\r\n    if (AppInjector) {\r\n        // Should not happen\r\n        console.error('Programming error: AppInjector was already set');\r\n    }\r\n    else {\r\n        AppInjector = injector;\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviDashboardComponent = /** @class */ (function () {\r\n    function KerviDashboardComponent() {\r\n        this.dashboardId = null;\r\n        this.dashboard = null;\r\n        this.dashboards = null;\r\n        this.dashboardSizes = null;\r\n        this.isAppEmpty = true;\r\n        this.showMenu = false;\r\n        this.dashboardPanelsHidden = false;\r\n        this.showPanelController = false;\r\n        this.cameraId = null;\r\n        this.cameraParameters = null;\r\n        this.authenticated = false;\r\n        this.anonymous = true;\r\n        this.showLeftPad = false;\r\n        this.leftPadXValue = null;\r\n        this.leftPadYValue = null;\r\n        this.autoCenterLeftPad = false;\r\n        this.showRightPad = false;\r\n        this.rightPadXValue = null;\r\n        this.rightPadYValue = null;\r\n        this.autoCenterRightPad = false;\r\n        this.inFullScreen = false;\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n        /** @type {?} */\r\n        var self = this;\r\n        this.kerviService.componentsChanged$.subscribe((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            //var dashboard = self.kerviService.getComponent(self.dashboardId, \"dashboard\") as Dashboard\r\n            //if (dashboard)\r\n            self.loadDashboard(self.dashboardId);\r\n        }));\r\n    }\r\n    /**\r\n     * @protected\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    KerviDashboardComponent.prototype.logoff = /**\r\n     * @protected\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        this.kerviService.logoff();\r\n        event.stopPropagation();\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} dashboardId\r\n     * @return {?}\r\n     */\r\n    KerviDashboardComponent.prototype.loadDashboard = /**\r\n     * @protected\r\n     * @param {?} dashboardId\r\n     * @return {?}\r\n     */\r\n    function (dashboardId) {\r\n        this.dashboardId = dashboardId;\r\n        this.dashboard = (/** @type {?} */ (this.kerviService.getComponent(dashboardId, \"dashboard\")));\r\n        this.anonymous = this.kerviService.isAnonymous();\r\n        this.isAppEmpty = this.kerviService.isAppEmpty();\r\n        this.authenticated = this.kerviService.doAuthenticate;\r\n        if (this.dashboard) {\r\n            this.dashboards = this.kerviService.getComponentsByType(\"dashboard\");\r\n            this.showMenu = (this.dashboards.length > 1 || this.kerviService.doAuthenticate);\r\n            this.showPanelController = false;\r\n            this.cameraId = null;\r\n            this.cameraParameters = null;\r\n            this.showLeftPad = false;\r\n            this.showRightPad = false;\r\n            this.dashboardPanelsHidden = false;\r\n            if (this.dashboard.backgroundPanel) {\r\n                if (this.dashboard.backgroundPanel.components.length > 0) {\r\n                    this.dashboardPanelsHidden = true;\r\n                    this.showPanelController = true;\r\n                    this.cameraId = this.dashboard.backgroundPanel.components[0].component.id;\r\n                    this.cameraParameters = this.dashboard.backgroundPanel.components[0].parameters;\r\n                    console.log(\"cam\", this.cameraId, this.cameraParameters);\r\n                }\r\n            }\r\n            if (this.dashboard.LeftPadXPanel && this.dashboard.LeftPadXPanel.components.length || this.dashboard.LeftPadYPanel && this.dashboard.LeftPadYPanel.components.length) {\r\n                this.showLeftPad = true;\r\n                if (this.dashboard.LeftPadXPanel.components.length) {\r\n                    this.leftPadXValue = (/** @type {?} */ (this.dashboard.LeftPadXPanel.components[0].component));\r\n                    if (this.dashboard.LeftPadXPanel.components[0].parameters.padAutoCenter)\r\n                        this.autoCenterLeftPad = true;\r\n                }\r\n                if (this.dashboard.LeftPadYPanel.components.length) {\r\n                    this.leftPadYValue = (/** @type {?} */ (this.dashboard.LeftPadYPanel.components[0].component));\r\n                    if (this.dashboard.LeftPadXPanel.components[0].parameters.padAutoCenter)\r\n                        this.autoCenterLeftPad = true;\r\n                }\r\n            }\r\n            if (this.dashboard.RightPadXPanel && this.dashboard.RightPadXPanel.components.length || this.dashboard.RightPadYPanel && this.dashboard.RightPadYPanel.components.length) {\r\n                this.showRightPad = true;\r\n                if (this.dashboard.RightPadXPanel.components.length) {\r\n                    this.rightPadXValue = (/** @type {?} */ (this.dashboard.RightPadXPanel.components[0].component));\r\n                    if (this.dashboard.LeftPadXPanel.components[0].parameters.padAutoCenter)\r\n                        this.autoCenterRightPad = true;\r\n                }\r\n                if (this.dashboard.RightPadYPanel.components.length) {\r\n                    this.rightPadYValue = (/** @type {?} */ (this.dashboard.RightPadYPanel.components[0].component));\r\n                    if (this.dashboard.RightPadXPanel.components[0].parameters.padAutoCenter)\r\n                        this.autoCenterRightPad = true;\r\n                }\r\n            }\r\n            console.log(\"load db\", dashboardId, this.dashboard, this);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviDashboardComponent.prototype.toggleFullScreen = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        console.log(\"fs\", this.inFullScreen);\r\n        /** @type {?} */\r\n        var doc;\r\n        doc = document;\r\n        if ((doc.fullScreenElement && doc.fullScreenElement !== null)) \r\n        /*(!doc.mozFullScreen && !document.webkitIsFullScreen))*/ {\r\n            this.inFullScreen = true;\r\n            if (doc.documentElement.requestFullScreen) {\r\n                doc.documentElement.requestFullScreen();\r\n            }\r\n            else if (doc.documentElement.mozRequestFullScreen) {\r\n                doc.documentElement.mozRequestFullScreen();\r\n            } // } else if (document.documentElement.webkitRequestFullScreen) {  \r\n            //   doc.documentElement.webkitRequestFullScreen();  \r\n            // }  \r\n        }\r\n        else {\r\n            this.inFullScreen = false;\r\n            if (doc.cancelFullScreen) {\r\n                doc.cancelFullScreen();\r\n            }\r\n            else if (doc.mozCancelFullScreen) {\r\n                doc.mozCancelFullScreen();\r\n            } // } else if (document.webkitCancelFullScreen) {  \r\n            //   doc.webkitCancelFullScreen();  \r\n            // }  \r\n        }\r\n    };\r\n    KerviDashboardComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-dashboard',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviDashboardComponent.ctorParameters = function () { return []; };\r\n    return KerviDashboardComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviDashboardPanelComponent = /** @class */ (function () {\r\n    function KerviDashboardPanelComponent() {\r\n        this.panel = null;\r\n        this.inline = false;\r\n        this.inGroup = false;\r\n        this.bodyOnly = false;\r\n        this.width = \"\";\r\n        this.showHeader = false;\r\n        this.expanded = false;\r\n        this.title = null;\r\n        this.bodyComponents = [];\r\n        this.headerComponents = [];\r\n        this.footerComponents = [];\r\n        //messages: DashboardMessageModel[] = [];\r\n        //panelComponents:IComponent[] = []\r\n        this.templateService = null;\r\n        this.kerviService = null;\r\n        this.templateService = AppInjector.get(KerviTemplateService);\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    /**\r\n     * @param {?} panel\r\n     * @param {?} inGroup\r\n     * @return {?}\r\n     */\r\n    KerviDashboardPanelComponent.prototype.calcWidth = /**\r\n     * @param {?} panel\r\n     * @param {?} inGroup\r\n     * @return {?}\r\n     */\r\n    function (panel, inGroup) {\r\n        if (panel.type == \"group\") {\r\n            if (panel.parameters.width == null || panel.parameters.width == \"0\")\r\n                return \"100%\";\r\n            else\r\n                return this.templateService.getSizeValue(panel.parameters.width);\r\n        }\r\n        else\r\n            return inGroup ? \"\" : this.templateService.getSizeValue(panel.parameters.width);\r\n    };\r\n    /**\r\n     * @param {?} panel\r\n     * @return {?}\r\n     */\r\n    KerviDashboardPanelComponent.prototype.showPanelHeader = /**\r\n     * @param {?} panel\r\n     * @return {?}\r\n     */\r\n    function (panel) {\r\n        var e_1, _a;\r\n        /** @type {?} */\r\n        var hasHeaderComponents = false;\r\n        try {\r\n            for (var _b = __values(this.panel.components), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var component = _c.value;\r\n                if (component.parameters.linkToHeader)\r\n                    hasHeaderComponents = true;\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return (panel.parameters.title != null && panel.parameters.title.length > 0) || hasHeaderComponents;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviDashboardPanelComponent.prototype.ngOnInitPanel = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var e_2, _a;\r\n        this.title = this.panel.parameters.title;\r\n        try {\r\n            for (var _b = __values(this.panel.components), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var component = _c.value;\r\n                if (component.parameters.linkToHeader)\r\n                    this.headerComponents.push(component);\r\n                else\r\n                    this.bodyComponents.push(component);\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n        this.showHeader = (this.panel.parameters.title != null && this.panel.parameters.title.length > 0) || (this.headerComponents.length > 0);\r\n        if (this.panel.type == \"group\") {\r\n            if (this.panel.parameters.width == null || this.panel.parameters.width == \"0\" || this.panel.parameters.width == \"\")\r\n                this.width = \"100%\";\r\n            else\r\n                this.width = this.templateService.getSizeValue(this.panel.parameters.width);\r\n        }\r\n        else\r\n            //this.width = this.inGroup ? \"100%\" : this.templateService.getSizeValue(this.panel.parameters.width);\r\n            this.width = this.templateService.getSizeValue(this.panel.parameters.width);\r\n    };\r\n    KerviDashboardPanelComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-dashboard-panel-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviDashboardPanelComponent.ctorParameters = function () { return []; };\r\n    KerviDashboardPanelComponent.propDecorators = {\r\n        dashboardSizes: [{ type: Input }],\r\n        panel: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        inGroup: [{ type: Input }],\r\n        bodyOnly: [{ type: Input }]\r\n    };\r\n    return KerviDashboardPanelComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviControllerPadComponent = /** @class */ (function () {\r\n    function KerviControllerPadComponent() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviControllerPadComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    KerviControllerPadComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-controller-pad-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviControllerPadComponent.ctorParameters = function () { return []; };\r\n    KerviControllerPadComponent.propDecorators = {\r\n        dashboardSizes: [{ type: Input }]\r\n    };\r\n    return KerviControllerPadComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviWidgetComponent = /** @class */ (function () {\r\n    function KerviWidgetComponent() {\r\n        this.component = null;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.widgetType = \"value\";\r\n        //console.log(\"cnio\",this);\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    Object.defineProperty(KerviWidgetComponent.prototype, \"componentId\", {\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this.component = this.kerviService.getComponent(this.componentId);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviWidgetComponent.prototype.ngOnInitWidget = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.linkParameters)\r\n            this.linkParameters = this.component.ui;\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        //console.log(\"widget\", this.component, this.linkParameters);\r\n        if (this.component.componentType == \"controller\") {\r\n            /** @type {?} */\r\n            var controller = (/** @type {?} */ (this.component));\r\n            console.log(\"widget ctrl\", controller);\r\n            if (controller.type == \"camera\")\r\n                this.widgetType = \"camera\";\r\n        }\r\n        else if (this.linkParameters.type) {\r\n            if (this.linkParameters.type.indexOf(\"gauge\") > -1) {\r\n                this.widgetType = \"gauge\";\r\n            }\r\n            else if (this.linkParameters.type == \"chart\") {\r\n                this.widgetType = \"chart\";\r\n            }\r\n        }\r\n    };\r\n    KerviWidgetComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-widget-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviWidgetComponent.ctorParameters = function () { return []; };\r\n    KerviWidgetComponent.propDecorators = {\r\n        componentId: [{ type: Input }],\r\n        component: [{ type: Input }],\r\n        dashboardPanel: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        inline: [{ type: Input }]\r\n    };\r\n    return KerviWidgetComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @template T\r\n */\r\nvar KerviValueComponent = /** @class */ (function () {\r\n    function KerviValueComponent() {\r\n        this.value = null;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    Object.defineProperty(KerviValueComponent.prototype, \"valueId\", {\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this.value = (/** @type {?} */ (this.kerviService.getComponent(this.valueId)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviValueComponent.prototype.ngOnInitValue = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.linkParameters)\r\n            this.linkParameters = this.value.ui;\r\n    };\r\n    KerviValueComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviValueComponent.ctorParameters = function () { return []; };\r\n    KerviValueComponent.propDecorators = {\r\n        valueId: [{ type: Input }],\r\n        value: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        inline: [{ type: Input }]\r\n    };\r\n    return KerviValueComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviNumberComponent = /** @class */ (function (_super) {\r\n    __extends(KerviNumberComponent, _super);\r\n    function KerviNumberComponent() {\r\n        var _this = _super.call(this) || this;\r\n        _this.numberFormat = \"1.2-2\";\r\n        _this.displayValue = 0;\r\n        _this.displayUnit = \"\";\r\n        _this.displayType = \"\";\r\n        _this.currentIcon = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    KerviNumberComponent.prototype.setKerviValue = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        this.value.set(value);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviNumberComponent.prototype.ngOnInitNumber = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitValue();\r\n        /** @type {?} */\r\n        var self = this;\r\n        this.numberFormat = this.linkParameters.minIntegerDigits + \".\" + this.linkParameters.minFractionDigits + \"-\" + this.linkParameters.maxFractionDigits;\r\n        if (!this.linkParameters.valueIcon)\r\n            this.currentIcon = null;\r\n        else if (typeof (this.linkParameters.valueIcon) == \"string\")\r\n            this.currentIcon = this.linkParameters.valueIcon;\r\n        else {\r\n            this.value.value$.subscribe((/**\r\n             * @param {?} v\r\n             * @return {?}\r\n             */\r\n            function (v) {\r\n                var e_1, _a;\r\n                try {\r\n                    for (var _b = __values(self.linkParameters.valueIcon), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                        var iconSection = _c.value;\r\n                        if (v >= iconSection.range[0] && v <= iconSection.range[1]) {\r\n                            self.currentIcon = iconSection.icon;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                    }\r\n                    finally { if (e_1) throw e_1.error; }\r\n                }\r\n            }));\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        else if (!this.inline && this.linkParameters.size > 0) {\r\n            this.inline = true;\r\n        }\r\n    };\r\n    KerviNumberComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-number-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviNumberComponent.ctorParameters = function () { return []; };\r\n    return KerviNumberComponent;\r\n}(KerviValueComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviBooleanComponent = /** @class */ (function (_super) {\r\n    __extends(KerviBooleanComponent, _super);\r\n    function KerviBooleanComponent() {\r\n        var _this = _super.call(this) || this;\r\n        _this.displayType = \"switch\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    KerviBooleanComponent.prototype.setKerviValue = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        this.value.set(value);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBooleanComponent.prototype.ngOnInitBoolean = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitValue();\r\n        if (this.linkParameters.type) {\r\n            this.displayType = this.linkParameters.type;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        else if (!this.inline && this.linkParameters.size > 0) {\r\n            this.inline = true;\r\n        }\r\n    };\r\n    KerviBooleanComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-boolean-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviBooleanComponent.ctorParameters = function () { return []; };\r\n    return KerviBooleanComponent;\r\n}(KerviValueComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviActionComponent = /** @class */ (function () {\r\n    function KerviActionComponent() {\r\n        this.action = null;\r\n        this.linkParameters = null;\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.state = new BehaviorSubject(false);\r\n        this.displayType = \"switch\";\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviActionComponent.prototype.ngOnInitAction = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (!this.linkParameters)\r\n            this.linkParameters = this.action.ui;\r\n        if (this.linkParameters.type) {\r\n            this.displayType = this.linkParameters.type;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        self.state.next(this.action.running$.value);\r\n        this.action.running$.subscribe((/**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            console.log(\"ar\", self.action.id, v);\r\n            self.state.next(v);\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    KerviActionComponent.prototype.setActionState = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        if (value)\r\n            this.action.run(this.linkParameters.actionParameters);\r\n        else\r\n            this.action.interrupt(this.linkParameters.interruptParameters);\r\n    };\r\n    KerviActionComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-action-base',\r\n                    template: '',\r\n                    styles: [],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviActionComponent.ctorParameters = function () { return []; };\r\n    KerviActionComponent.propDecorators = {\r\n        action: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }]\r\n    };\r\n    return KerviActionComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviCameraComponent = /** @class */ (function () {\r\n    function KerviCameraComponent() {\r\n        this.linkParameters = null;\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.isBackground = false;\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    Object.defineProperty(KerviCameraComponent.prototype, \"cameraId\", {\r\n        set: /**\r\n         * @param {?} id\r\n         * @return {?}\r\n         */\r\n        function (id) {\r\n            console.log(\"setcamid\", id);\r\n            this.camera = (/** @type {?} */ (this.kerviService.getComponent(id)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(KerviCameraComponent.prototype, \"camera\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () { return this.cam; },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            var e_1, _a;\r\n            console.log(\"setcam\", v);\r\n            this.cam = v;\r\n            try {\r\n                for (var _b = __values(v.outputs), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var i = _c.value;\r\n                    if (i.id.endsWith(\".pan\"))\r\n                        this.pan = (/** @type {?} */ (i));\r\n                    else if (i.id.endsWith(\".tilt\"))\r\n                        this.tilt = (/** @type {?} */ (i));\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n            this.cameraType = v.ui.type;\r\n            if (this.cameraType == \"frame\") {\r\n                if (v.ui.source)\r\n                    this.cameraSource = v.ui.source.server + v.ui.source.path;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {?} v\r\n     * @return {?}\r\n     */\r\n    KerviCameraComponent.prototype.setPan = /**\r\n     * @param {?} v\r\n     * @return {?}\r\n     */\r\n    function (v) {\r\n        this.pan.set(v);\r\n    };\r\n    /**\r\n     * @param {?} v\r\n     * @return {?}\r\n     */\r\n    KerviCameraComponent.prototype.setTilt = /**\r\n     * @param {?} v\r\n     * @return {?}\r\n     */\r\n    function (v) {\r\n        this.tilt.set(v);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviCameraComponent.prototype.ngOnInitCamera = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        console.log(\"ngi cam\");\r\n        if (!this.linkParameters)\r\n            this.linkParameters = this.camera.ui;\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n    };\r\n    KerviCameraComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-camera-base',\r\n                    template: '',\r\n                    styles: [],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviCameraComponent.ctorParameters = function () { return []; };\r\n    KerviCameraComponent.propDecorators = {\r\n        cameraId: [{ type: Input }],\r\n        camera: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        isBackground: [{ type: Input }]\r\n    };\r\n    return KerviCameraComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviColorComponent = /** @class */ (function (_super) {\r\n    __extends(KerviColorComponent, _super);\r\n    function KerviColorComponent() {\r\n        var _this = _super.call(this) || this;\r\n        _this.displayType = \"button\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    KerviColorComponent.prototype.setKerviValue = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        this.value.set(value);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviColorComponent.prototype.ngOnInitColor = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitValue();\r\n        if (this.linkParameters.type) {\r\n            this.displayType = this.linkParameters.type;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        else if (!this.inline && this.linkParameters.size > 0) {\r\n            this.inline = true;\r\n        }\r\n    };\r\n    KerviColorComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-color-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviColorComponent.ctorParameters = function () { return []; };\r\n    return KerviColorComponent;\r\n}(KerviValueComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviDateTimeComponent = /** @class */ (function (_super) {\r\n    __extends(KerviDateTimeComponent, _super);\r\n    function KerviDateTimeComponent() {\r\n        var _this = _super.call(this) || this;\r\n        _this.displayType = \"datetime\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    KerviDateTimeComponent.prototype.setKerviValue = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        this.value.set(value);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviDateTimeComponent.prototype.ngOnInitDateTime = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitValue();\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (this.linkParameters.type) {\r\n            this.displayType = this.linkParameters.type;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        if (self.linkParameters.type == \"time\")\r\n            this.dateTimeFormat = this.kerviService.application$.value.display.unit_system.datetime.time;\r\n        else if (self.linkParameters.type == \"date\")\r\n            this.dateTimeFormat = self.kerviService.application$.value.display.unit_system.datetime.date;\r\n        else\r\n            this.dateTimeFormat = this.kerviService.application$.value.display.unit_system.datetime.datetime;\r\n    };\r\n    KerviDateTimeComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-datetime-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviDateTimeComponent.ctorParameters = function () { return []; };\r\n    return KerviDateTimeComponent;\r\n}(KerviValueComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviStringComponent = /** @class */ (function (_super) {\r\n    __extends(KerviStringComponent, _super);\r\n    function KerviStringComponent() {\r\n        var _this = _super.call(this) || this;\r\n        _this.displayType = \"\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    KerviStringComponent.prototype.setKerviValue = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        this.value.set(value);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviStringComponent.prototype.ngOnInitString = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitValue();\r\n        if (this.linkParameters.type) {\r\n            this.displayType = this.linkParameters.type;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n    };\r\n    KerviStringComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-string-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviStringComponent.ctorParameters = function () { return []; };\r\n    return KerviStringComponent;\r\n}(KerviValueComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviUserLogComponent = /** @class */ (function () {\r\n    function KerviUserLogComponent() {\r\n        this.logLength = 10;\r\n        this.linkParameters = null;\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.lastMessage$ = null;\r\n        this.messages$ = null;\r\n        this.messageCount$ = null;\r\n        this.logState$ = null;\r\n        this.messageCount = 0;\r\n        this.UserLogState = UserLogStateType.normal;\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n        this.messages$ = this.kerviService.getLogMessages$();\r\n        this.lastMessage$ = this.kerviService.getLastLogMessage$();\r\n        this.messageCount$ = this.kerviService.getLogMessageCount$();\r\n        this.logState$ = this.kerviService.getLogState$();\r\n        this.messageCount$.subscribe((/**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this.messageCount = v;\r\n            console.log(\"lc\", this.messageCount);\r\n        }));\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    KerviUserLogComponent.prototype.ngOnInitUserLog = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    KerviUserLogComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-user-log-base',\r\n                    template: '',\r\n                    styles: [],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviUserLogComponent.ctorParameters = function () { return []; };\r\n    KerviUserLogComponent.propDecorators = {\r\n        logLength: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }]\r\n    };\r\n    return KerviUserLogComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NgxKerviComponent = /** @class */ (function () {\r\n    function NgxKerviComponent() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxKerviComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    NgxKerviComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'lib-ngx-kervi',\r\n                    template: \"\\n    <p>\\n      ngx-kervi works!\\n    </p>\\n  \",\r\n                    styles: []\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    NgxKerviComponent.ctorParameters = function () { return []; };\r\n    return NgxKerviComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NgxKerviModule = /** @class */ (function () {\r\n    function NgxKerviModule(injector) {\r\n        this.injector = injector;\r\n        setAppInjector(injector);\r\n    }\r\n    NgxKerviModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [],\r\n                    declarations: [\r\n                        NgxKerviComponent,\r\n                        KerviDashboardComponent,\r\n                        KerviDashboardPanelComponent,\r\n                        KerviControllerPadComponent,\r\n                        KerviNumberComponent,\r\n                        KerviStringComponent,\r\n                        KerviBooleanComponent,\r\n                        KerviColorComponent,\r\n                        KerviDateTimeComponent,\r\n                        KerviActionComponent,\r\n                        KerviValueComponent,\r\n                        KerviWidgetComponent,\r\n                        KerviCameraComponent,\r\n                        KerviUserLogComponent\r\n                    ],\r\n                    providers: [NGXKerviService, KerviTemplateService],\r\n                    exports: [\r\n                        NgxKerviComponent,\r\n                        KerviDashboardComponent,\r\n                        KerviDashboardPanelComponent,\r\n                        KerviControllerPadComponent,\r\n                        KerviNumberComponent,\r\n                        KerviWidgetComponent,\r\n                        KerviStringComponent,\r\n                        KerviBooleanComponent,\r\n                        KerviColorComponent,\r\n                        KerviDateTimeComponent,\r\n                        KerviActionComponent,\r\n                        KerviCameraComponent,\r\n                        KerviUserLogComponent\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    NgxKerviModule.ctorParameters = function () { return [\r\n        { type: Injector }\r\n    ]; };\r\n    return NgxKerviModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar TranslatePipe = /** @class */ (function () {\r\n    function TranslatePipe(kerviService) {\r\n        this.kerviService = kerviService;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @param {?=} args\r\n     * @return {?}\r\n     */\r\n    TranslatePipe.prototype.transform = /**\r\n     * @param {?} value\r\n     * @param {?=} args\r\n     * @return {?}\r\n     */\r\n    function (value, args) {\r\n        return this.kerviService.text(value, value);\r\n    };\r\n    TranslatePipe.decorators = [\r\n        { type: Pipe, args: [{\r\n                    name: 'translate'\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    TranslatePipe.ctorParameters = function () { return [\r\n        { type: NGXKerviService }\r\n    ]; };\r\n    return TranslatePipe;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NGXKerviPipesModule = /** @class */ (function () {\r\n    function NGXKerviPipesModule() {\r\n    }\r\n    NGXKerviPipesModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [],\r\n                    exports: [\r\n                        TranslatePipe\r\n                    ],\r\n                    providers: [],\r\n                    declarations: [\r\n                        TranslatePipe\r\n                    ]\r\n                },] },\r\n    ];\r\n    return NGXKerviPipesModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { KerviTemplateService, KerviDashboardComponent, KerviDashboardPanelComponent, KerviControllerPadComponent, KerviWidgetComponent, KerviNumberComponent, KerviBooleanComponent, KerviActionComponent, KerviCameraComponent, KerviColorComponent, KerviDateTimeComponent, KerviStringComponent, KerviUserLogComponent, AppInjector, NGXKerviService, NgxKerviComponent, NgxKerviModule, NGXKerviPipesModule, TranslatePipe as ɵb, KerviValueComponent as ɵa };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy93ZWJBcHAvc3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<router-outlet>\\r\\n              \\r\\n</router-outlet>\\r\\n<kervi-user-messages></kervi-user-messages>\"","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { NGXKerviService } from \"ngx-kervi\";\r\nimport { ConnectionState } from \"ngx-kervi\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  private currentPage=null;\r\n  \r\n  constructor (private kerviService:NGXKerviService, private router:Router, private route:ActivatedRoute){\r\n    var self = this;\r\n    \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n\r\n    this.kerviService.connectionState$.subscribe(function(connectedState){\r\n      console.log(\"connected service state\",connectedState, self);\r\n      if (connectedState == ConnectionState.disconnected){\r\n        self.router.navigate(['/connect']);\r\n      }\r\n      if (connectedState == ConnectionState.loading){\r\n      }\r\n      if (connectedState == ConnectionState.authenticate){\r\n        self.router.navigate(['/authenticate']);\r\n      }\r\n      if (connectedState == ConnectionState.connected){\r\n        if (self.currentPage)\r\n          self.router.navigate([self.currentPage]);\r\n        else {\r\n          var defaultDashboard = self.kerviService.getDefaultDashboard();\r\n          self.router.navigate(['/'+defaultDashboard.componentType+'/'+defaultDashboard.id])\r\n        }\r\n      }\r\n    });\r\n\r\n    setTimeout(function(){\r\n      self.kerviService.connect();\r\n    },0)\r\n    \r\n  }\r\n}\r\n","\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\n\r\nimport { NgZorroAntdModule, NZ_I18N, NZ_ICONS, en_US } from 'ng-zorro-antd';\r\nimport { IconDefinition } from '@ant-design/icons-angular';\r\nimport * as AllIcons from '@ant-design/icons-angular/icons'\r\nimport { registerLocaleData } from '@angular/common';\r\nimport en from '@angular/common/locales/en';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ConnectComponent } from './connect/connect.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { NgxKerviModule } from 'ngx-kervi';\r\nimport { NGXKerviPipesModule } from 'ngx-kervi'\r\nimport { KerviZorroModule  } from 'kervi-zorro'\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n\r\n\r\nregisterLocaleData(en);\r\n\r\nconst antDesignIcons = AllIcons as {\r\n  [key: string]: IconDefinition;\r\n};\r\nconst icons: IconDefinition[] = Object.keys(antDesignIcons).map(key => antDesignIcons[key])\r\n\r\n\r\nconst ROUTES: Routes = [\r\n  \r\n  { path: 'connect', component: ConnectComponent },\r\n  { path: 'authenticate', component: LoginComponent },\r\n  { path: 'dashboard/:name', component: DashboardComponent },\r\n  {\r\n    path: '',\r\n    redirectTo: '',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    ConnectComponent,\r\n    DashboardComponent\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    NgxKerviModule,\r\n    NGXKerviPipesModule,\r\n    KerviZorroModule,\r\n    FlexLayoutModule,\r\n    NgZorroAntdModule,\r\n    //NgxKerviComponentsModule,\r\n    RouterModule.forRoot(ROUTES)\r\n  ],\r\n  providers:[\r\n    { provide: NZ_I18N, useValue: en_US },\r\n    { provide: NZ_ICONS, useValue: icons }\r\n  ],\r\n  \r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy93ZWJBcHAvc3JjL2FwcC9jb25uZWN0L2Nvbm5lY3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nz-layout>\\r\\n    <nz-content class=\\\"kervi-app-initializing\\\">\\r\\n      <div nz-row>\\r\\n        <div nz-col nzSpan=\\\"12\\\" nzOffset=\\\"9\\\">\\r\\n          <nz-steps [nzCurrent]=\\\"current\\\" nzDirection=\\\"vertical\\\">\\r\\n            <nz-step nzTitle=\\\"Initializing\\\" nzDescription=\\\"&nbsp;\\\" nzIcon=\\\"setting\\\" ></nz-step>\\r\\n            <nz-step nzTitle=\\\"Connecting\\\" nzDescription=\\\"&nbsp;\\\" nzIcon=\\\"wifi\\\"></nz-step>\\r\\n            <nz-step nzTitle=\\\"Loading dashboards\\\" nzDescription=\\\"&nbsp;\\\" nzIcon=\\\"download\\\"></nz-step>\\r\\n          </nz-steps>\\r\\n        </div>\\r\\n      </div>\\r\\n    </nz-content>\\r\\n</nz-layout>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ConnectionState } from \"ngx-kervi\";\r\nimport { NGXKerviService } from \"ngx-kervi\";\r\n@Component({\r\n  selector: 'app-connect',\r\n  templateUrl: './connect.component.html',\r\n  styleUrls: ['./connect.component.css']\r\n})\r\nexport class ConnectComponent implements OnInit {\r\n\r\n  current = 1;\r\n\r\n  constructor(private kerviService:NGXKerviService,) { \r\n    \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    this.kerviService.connectionState$.subscribe(function(connectedState){\r\n      console.log(\"connected service state\",connectedState, self);\r\n      if (connectedState == ConnectionState.disconnected){\r\n        self.current=1\r\n      }\r\n      if (connectedState == ConnectionState.loading){\r\n        self.current=2\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".dashboard-panels-hidden{\\r\\n    display: none;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL3dlYkFwcC9zcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7QUFDakIiLCJmaWxlIjoicHJvamVjdHMvd2ViQXBwL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRhc2hib2FyZC1wYW5lbHMtaGlkZGVue1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufSJdfQ== */\"","module.exports = \"<nz-layout *ngIf=\\\"dashboard\\\">\\r\\n\\t<nz-header *ngIf='!isAppEmpty'>\\r\\n\\t\\t<div nz-row>\\r\\n\\t\\t\\t<div nz-col nzSpan=\\\"6\\\">\\t\\t\\r\\n\\t\\t\\t\\t<ul nz-menu  nzMode=\\\"horizontal\\\" class=\\\"kervi-main-menu\\\">\\r\\n\\t\\t\\t\\t\\t<li nz-submenu  *ngIf=\\\"showMenu\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<span title><i nz-icon nzTheme=\\\"twotone\\\" type=\\\"dashboard\\\" [nzTwotoneColor]=\\\"'#9fd037'\\\"></i> {{dashboard.name}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-container *ngIf=\\\"dashboards.length > 1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li nz-menu-item *ngFor=\\\"let dashboard of dashboards\\\" [routerLink]=\\\"['/dashboard', dashboard.id]\\\">{{dashboard.name}}</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li *ngIf=\\\"authenticated && dashboards.length > 1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<nz-divider></nz-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li nz-menu-item *ngIf=\\\"authenticated && anonymous\\\" href=\\\"javascript: return false;\\\" (click)=\\\"logoff($event)\\\" ><i nz-icon type=\\\"login\\\"></i> {{('login' | translate)}}</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li nz-menu-item *ngIf=\\\"authenticated && !anonymous\\\" href=\\\"javascript: return false;\\\" (click)=\\\"logoff($event)\\\"><i nz-icon type=\\\"logout\\\"></i>{{('logout' | translate)}}</li>\\r\\n\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t<li nz-menu-item *ngIf=\\\"showPanelController\\\">\\r\\n\\t\\t\\t\\t\\t\\t<a  (click)=\\\"dashboardPanelsHidden = !dashboardPanelsHidden;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<i nz-icon type=\\\"sliders\\\" nzTheme=\\\"twotone\\\" [nzTwotoneColor]=\\\"'#9fd037'\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"kervi-sys-panel\\\" *ngIf=\\\"dashboard && dashboard.sysPanel\\\" nz-col nzSpan=\\\"18\\\">\\r\\n\\t\\t\\t\\t<kervi-dashboard-panel [dashboardSizes]=\\\"dashboardSizes\\\" [inline]=\\\"true\\\" [panel]=\\\"dashboard.sysPanel\\\" ></kervi-dashboard-panel>\\r\\n\\t\\t\\t\\t<kervi-message-button></kervi-message-button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t</div>\\r\\n\\t</nz-header>\\r\\n\\t\\t\\r\\n\\t<nz-content>\\r\\n\\r\\n\\t\\t<ng-container *ngIf=\\\"isAppEmpty\\\">\\r\\n\\t\\t\\t<div nz-row>\\r\\n\\t\\t\\t\\t<div nz-col nzSpan=\\\"12\\\" nzOffset=\\\"6\\\">\\r\\n\\t\\t\\t\\t\\t<nz-alert\\r\\n\\t\\t\\t\\t\\t\\tnzType=\\\"error\\\"\\r\\n\\t\\t\\t\\t\\t\\t[nzMessage] =\\\"'hello_world' | translate\\\"\\r\\n\\t\\t\\t\\t\\t\\t[nzDescription]=\\\" 'empty_app' | translate\\\"\\r\\n\\t\\t\\t\\t\\t\\tnzShowIcon\\t\\r\\n\\t\\t\\t\\t\\t  >\\r\\n\\t\\t\\t\\t\\t  </nz-alert>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</ng-container>\\r\\n\\t\\t<kervi-cam-viewer *ngIf=\\\"cameraId\\\" [isBackground]=\\\"true\\\" [cameraId]=\\\"cameraId\\\" [linkParameters]=\\\"cameraParameters\\\"></kervi-cam-viewer>\\r\\n\\t\\t<div #leftPad class=\\\"kervi-controller-pad\\\" *ngIf=\\\"showLeftPad\\\" [style.left.px]=\\\"leftPadLeft\\\" [style.top.px]=\\\"leftPadTop\\\" >\\r\\n\\t\\t\\t<kervi-controller-pad [autoCenter]=\\\"autoCenterLeftPad\\\" [XValue]=\\\"leftPadXValue\\\" [YValue]=\\\"leftPadYValue\\\"></kervi-controller-pad>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div #rightPad class=\\\"kervi-controller-pad\\\" *ngIf=\\\"showRightPad\\\" [style.left.px]=\\\"rightPadLeft\\\" [style.top.px]=\\\"rightPadTop\\\" >\\r\\n\\t\\t\\t<kervi-controller-pad [autoCenter]=\\\"autoCenterRightPad\\\" [XValue]=\\\"rightPadXValue\\\" [YValue]=\\\"rightPadYValue\\\"></kervi-controller-pad>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<div class=\\\"kervi-panels\\\" fxLayout=\\\" column\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"0.5%\\\" fxLayoutAlign=\\\"\\\"  *ngIf=\\\"!dashboardPanelsHidden\\\" style=\\\"\\\">\\r\\n\\t\\t\\t<ng-container *ngFor=\\\"let panel of dashboard.panels\\\">\\r\\n\\t\\t\\t\\t\\t<kervi-dashboard-panel [fxFlex]=\\\"panel.parameters.width\\\" fxFlex.xs=\\\"100%\\\" [dashboardSizes]=\\\"defaultSizes\\\" [panel]=\\\"panel\\\"></kervi-dashboard-panel>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t</div>\\r\\n\\t</nz-content>\\r\\n\\t<nz-footer *ngIf='!isAppEmpty'>\\r\\n\\t\\t<div nz-col nzSpan=\\\"8\\\" style=\\\"text-align: left\\\">\\r\\n\\t\\t\\t<kervi-dashboard-panel [inline]=\\\"true\\\" *ngIf=\\\"dashboard.footerLeftPanel\\\" [dashboardSizes]=\\\"defaultSizes\\\" [panel]=\\\"dashboard.footerLeftPanel\\\"></kervi-dashboard-panel>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div nz-col nzSpan=\\\"8\\\" style=\\\"text-align:center\\\">\\r\\n\\t\\t\\t<kervi-dashboard-panel [inline]=\\\"true\\\" *ngIf=\\\"dashboard.footerCenterPanel\\\" [dashboardSizes]=\\\"defaultSizes\\\" [panel]=\\\"dashboard.footerCenterPanel\\\"></kervi-dashboard-panel>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div nz-col nzSpan=\\\"8\\\"  style=\\\"text-align: right\\\">\\r\\n\\t\\t\\t<kervi-dashboard-panel [inline]=\\\"true\\\" *ngIf=\\\"dashboard.footerRightPanel\\\" [dashboardSizes]=\\\"defaultSizes\\\" [panel]=\\\"dashboard.footerRightPanel\\\"></kervi-dashboard-panel>\\r\\n\\t\\t\\t<button nz-button nzShape=\\\"round\\\" (mousedown)=\\\"toggleFullScreen()\\\"><i nz-icon [nzType]=\\\"inFullScreen ? 'fullscreen' : 'fullscreen-exit'\\\" title=\\\"{{( 'toggle_screen' | translate)}}\\\"></i></button>\\r\\n\\t\\t</div>\\r\\n\\t</nz-footer>\\r\\n</nz-layout>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router} from '@angular/router';\r\nimport { KerviDashboardComponent, NGXKerviService, ConnectionState} from 'ngx-kervi'\r\ndeclare var window:any;\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent extends KerviDashboardComponent implements OnInit {\r\n  @ViewChild(\"leftPad\") leftPad:ElementRef;\r\n  @ViewChild(\"rightPad\") rightPad:ElementRef;\r\n  private padSize=180;\r\n  private isConnected:false;\r\n  public leftPadTop:number;\r\n  public leftPadLeft:number;\r\n  \r\n  public rightPadTop:number;\r\n  public rightPadLeft:number;\r\n  \r\n  constructor(private router:Router, private activatedRoute:ActivatedRoute ) {\r\n    super();\r\n   }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n\r\n    this.activatedRoute.params.subscribe(params => {\r\n      var dashboardId = params['name'];\r\n      console.log(\"dbi\", dashboardId);\r\n      this.loadDashboard(dashboardId);\r\n      \r\n      console.log(\"rid\", dashboardId);\r\n      setTimeout(() => {\r\n        var h = window.innerHeight;\r\n        var w = window.innerWidth;\r\n\r\n        self.leftPadTop = h / 2 - self.padSize/2\r\n        self.leftPadLeft = w / 4 - self.padSize/2 \r\n        \r\n        self.rightPadTop = h / 2 - self.padSize/2\r\n        self.rightPadLeft = w - w / 4 - self.padSize/2 \r\n        \r\n\r\n      }, 0);\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy93ZWJBcHAvc3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nz-layout>\\r\\n  <nz-content class=\\\"kervi-app-initializing\\\">\\r\\n    <div nz-row>\\r\\n      <div nz-col nzSpan=\\\"12\\\" nzOffset=\\\"6\\\">\\r\\n        <form nz-form \\r\\n          [formGroup]=\\\"loginForm\\\" \\r\\n          (ngSubmit)=\\\"submitForm()\\\"\\r\\n        >\\r\\n            <nz-form-item>\\r\\n              <nz-form-control>\\r\\n                <nz-input-group [nzPrefix]=\\\"prefixUser\\\">\\r\\n                  <input formControlName=\\\"userName\\\" nz-input placeholder=\\\"Username\\\" />\\r\\n                </nz-input-group>\\r\\n                <nz-form-explain *ngIf=\\\"loginForm.get('userName')?.dirty && loginForm.get('userName')?.errors\\\"\\r\\n                  >Please input your username!</nz-form-explain\\r\\n                >\\r\\n              </nz-form-control>\\r\\n            </nz-form-item>\\r\\n            <nz-form-item>\\r\\n              <nz-form-control>\\r\\n                <nz-input-group [nzPrefix]=\\\"prefixLock\\\">\\r\\n                  <input formControlName=\\\"password\\\" nz-input type=\\\"password\\\" placeholder=\\\"Password\\\" />\\r\\n                </nz-input-group>\\r\\n                <nz-form-explain *ngIf=\\\"loginForm.get('password')?.dirty && loginForm.get('password')?.errors\\\"\\r\\n                  >Please input your Password!</nz-form-explain\\r\\n                >\\r\\n              </nz-form-control>\\r\\n            </nz-form-item>\\r\\n            <nz-form-item>\\r\\n              <nz-form-control>\\r\\n                <button nz-button nzType=\\\"primary\\\" [disabled]=\\\"!loginForm.valid\\\">Log in</button>\\r\\n                <nz-form-explain *ngIf=\\\"invalidCredentials\\\"\\r\\n                  >Invalid user name or password</nz-form-explain\\r\\n                >\\r\\n              </nz-form-control>\\r\\n            </nz-form-item>\\r\\n          </form>\\r\\n          <ng-template #prefixUser><i nz-icon type=\\\"user\\\"></i></ng-template>\\r\\n          <ng-template #prefixLock><i nz-icon type=\\\"lock\\\"></i></ng-template>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nz-content>\\r\\n</nz-layout>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { NGXKerviService } from 'ngx-kervi'\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  userName: AbstractControl;\r\n  password: AbstractControl;\r\n  invalidCredentials:boolean = false;\r\n  \r\n  \r\n  constructor(fb: FormBuilder, private kerviService:NGXKerviService) {\r\n    var self = this;\r\n    this.loginForm = fb.group({  \r\n    'userName':  ['', Validators.required],\r\n    'password':  ['', Validators.required]  \r\n    });\r\n    \r\n    this.userName = this.loginForm.controls['userName'];\r\n    this.password = this.loginForm.controls['password']; \r\n   }\r\n\r\n   submitForm(): void {\r\n     var self = this;\r\n     if (this.loginForm.valid){\r\n      console.log(\"fv\");\r\n      this.kerviService.authenticate(this.userName.value, this.password.value)\r\n      .then(function(){\r\n         console.log(\"login ok\");\r\n       }).catch(function(){\r\n         console.log(\"login error\");\r\n         self.invalidCredentials=true;\r\n       });\r\n     } else {\r\n       console.log(\"fve\");\r\n    //   // for (const i in this.loginForm.controls) {\r\n    //   //   this.loginForm.controls[i].markAsDirty();\r\n    //   //   this.loginForm.controls[i].updateValueAndValidity();\r\n    //   // }\r\n     }\r\n    \r\n  } \r\n  ngOnInit() {\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}