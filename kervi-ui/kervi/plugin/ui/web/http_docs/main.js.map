{"version":3,"sources":["webpack:///D:/tim privat/github/kervi/kervi-ui/kervi/ui/web/dist/kervi-js/fesm5/kervi-js.js","webpack:///D:/tim privat/github/kervi/kervi-ui/kervi/ui/web/dist/kervi-zorro/fesm5/kervi-zorro.js","webpack:///D:/tim privat/github/kervi/kervi-ui/kervi/ui/web/dist/ngx-kervi/fesm5/ngx-kervi.js","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/connect/connect.component.css","webpack:///./src/app/connect/connect.component.html","webpack:///./src/app/connect/connect.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/image-viewer/image-viewer.component.html","webpack:///./src/app/image-viewer/image-viewer.component.scss","webpack:///./src/app/image-viewer/image-viewer.component.ts","webpack:///./src/app/image-viewer/image-viewer.config.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/media/media.component.css","webpack:///./src/app/media/media.component.html","webpack:///./src/app/media/media.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACf;AACyB;;AAEhE;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,sDAAQ,yDAAyD,wBAAwB;AACnI;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,iCAAiC;AACxD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,kCAAkC;AACzD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,mCAAmC;AAC1D,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,yCAAyC,wDAAwD;AACjG;AACA,yCAAyC,6CAA6C;AACtF,uBAAuB,EAAE;AACzB,uBAAuB;AACvB;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,8CAA8C,sDAAQ,yDAAyD,wBAAwB;AACvI;AACA,kDAAkD,4DAA4D;AAC9G,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA,0CAA0C,4CAA4C;AACtF,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,8CAA8C,sDAAQ,yDAAyD,wBAAwB;AACvI;AACA,oDAAoD,wDAAwD;AAC5G,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA,4CAA4C,0CAA0C;AACtF,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,4BAA4B;AAC5B;AACA,mFAAmF;AACnF;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mCAAmC,uCAAuC;AAC1E,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iCAAiC,mCAAmC;AACpE,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,yCAAyC,wDAAwD;AACjG;AACA,yCAAyC,6CAA6C;AACtF,uBAAuB,EAAE;AACzB,uBAAuB;AACvB,gDAAgD,+DAA+D;AAC/G,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,gDAAgD,gGAAgG,KAAK;AACrJ;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,4BAA4B;AAC5B;AACA,mFAAmF;AACnF;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,iDAAiD;AACrF;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,8BAA8B,4DAA4D;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mCAAmC,uCAAuC;AAC1E,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA,4CAA4C,iEAAiE;AAC7G;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iCAAiC,mCAAmC;AACpE,mBAAmB,EAAE;AACrB,mBAAmB;AACnB,4CAA4C,+DAA+D;AAC3G;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qBAAqB;AAC9D;AACA;AACA,iBAAiB;AACjB,mBAAmB,EAAE;AACrB,mBAAmB,+CAA+C;AAClE;AACA;AACA;AACA,4CAA4C,6DAA6D;AACzG;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB;AACnB;AACA;AACA;AACA,4CAA4C,oIAAoI;AAChL;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,2BAA2B,oDAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ,yCAAyC,UAAU;AACrF;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,6BAA6B,oDAAe;AAC5C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0BAA0B;AAC1B;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,2BAA2B;AAC3B;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,kCAAkC,oDAAe;AACjD,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,0BAA0B,sDAAQ,kCAAkC,UAAU;AAC9E;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ,+BAA+B,UAAU;AAC3E;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA,yCAAyC,sDAAQ,kEAAkE,2BAA2B;AAC9I;AACA;AACA;AACA,kCAAkC,sDAAQ,+BAA+B,UAAU;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,+BAA+B,oDAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ,iCAAiC,UAAU;AAC7E;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0BAA0B,sDAAQ,oCAAoC,UAAU;AAChF;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC,eAAe;AAC/C,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ,iCAAiC,UAAU;AAC7E;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA,0BAA0B,sDAAQ,kCAAkC,UAAU;AAC9E;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA,0BAA0B,sDAAQ,kCAAkC,UAAU;AAC9E;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA,0BAA0B,sDAAQ,yCAAyC,UAAU;AACrF;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,8BAA8B,sDAAQ,uCAAuC,UAAU;AACvF;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA,8BAA8B,sDAAQ,wCAAwC,UAAU;AACxF;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA,8BAA8B,sDAAQ,yCAAyC,UAAU;AACzF;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,2BAA2B;AAC3B;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0BAA0B;AAC1B;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,8BAA8B,sDAAQ,sCAAsC,UAAU;AACtF;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ,mCAAmC,UAAU;AAC/E;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA,0BAA0B,sDAAQ,oCAAoC,UAAU;AAChF;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,kCAAkC,sDAAQ,kCAAkC,UAAU;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0BAA0B,sDAAQ,kCAAkC,UAAU;AAC9E;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,kCAAkC,sDAAQ,oCAAoC,UAAU;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,0CAA0C,sDAAQ,qEAAqE,4BAA4B;AACnJ;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sDAAQ,mCAAmC,UAAU;AACnF;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,iCAAiC;AACjC;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,iCAAiC,EAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gCAAgC,sDAAQ,uCAAuC,kBAAkB;AACjG;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oDAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ,yCAAyC,UAAU;AACrF;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,iEAAiE,sDAAQ;AACzE;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,iEAAiE,sDAAQ;AACzE;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,2BAA2B,sBAAsB;AACjD,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,sDAAQ,4DAA4D,yBAAyB;AAC5I;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oCAAoC,sDAAQ,mDAAmD,sBAAsB;AACrH;AACA,2BAA2B,EAAE;AAC7B,6CAA6C,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oCAAoC,sDAAQ,mDAAmD,sBAAsB;AACrH;AACA;AACA;AACA,sCAAsC,sDAAQ,uCAAuC,UAAU;AAC/F;AACA;AACA,wDAAwD,sDAAQ,mDAAmD,sBAAsB;AACzI;AACA;AACA;AACA;AACA,2CAA2C,QAAQ,gBAAgB;AACnE;AACA;AACA;AACA;AACA,yCAAyC,0BAA0B;AACnE;AACA;AACA;AACA,mCAAmC,QAAQ,gBAAgB;AAC3D;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,uDAAS;AACb;AACA;AACA,2BAA2B,oDAAe;AAC1C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,+BAA+B,sDAAQ,oCAAoC,iBAAiB;AAC5F;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,2BAA2B,oDAAe;AAC1C,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,oDAAe;AAC/C,iCAAiC,oDAAe;AAChD,wBAAwB,oDAAe;AACvC;AACA;AACA;AACA,+BAA+B,oDAAe;AAC9C,oCAAoC,oDAAe;AACnD;AACA,sCAAsC,oDAAe;AACrD;AACA,gCAAgC,oDAAe;AAC/C,mCAAmC,oDAAe;AAClD,oCAAoC,oDAAe;AACnD,oCAAoC,oDAAe;AACnD;AACA,6BAA6B,oDAAe;AAC5C;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,gCAAgC,oDAAe;AAC/C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,sCAAsC,sDAAQ,kCAAkC,UAAU;AAC1F;AACA;AACA,2CAA2C,EAAE;AAC7C,+DAA+D,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ,gBAAgB;AAC3D;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,sCAAsC,sDAAQ,kCAAkC,UAAU;AAC1F;AACA;AACA,2CAA2C,EAAE;AAC7C,yDAAyD,EAAE;AAC3D;AACA;AACA;AACA;AACA,mCAAmC,QAAQ,gBAAgB;AAC3D;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,sCAAsC,sDAAQ,kCAAkC,UAAU;AAC1F;AACA;AACA,2CAA2C,EAAE;AAC7C,yDAAyD,EAAE;AAC3D;AACA;AACA;AACA;AACA,mCAAmC,QAAQ,gBAAgB;AAC3D;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,8CAA8C,sDAAQ,6CAA6C,oBAAoB;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ,gBAAgB;AAC3D;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,uCAAuC,sBAAsB;AAC7D;AACA;AACA,0BAA0B,sDAAQ,kCAAkC,UAAU;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0BAA0B,sDAAQ,kCAAkC,UAAU;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,qCAAqC,EAAE;AACvC;AACA,oCAAoC,sDAAQ,mDAAmD,sBAAsB;AACrH;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEse;;AAEte,2CAA2C,cAAc,2ghM;;;;;;;;;;;;ACtnHzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmJ;AACjH;AACqU;AAC7T;AACL;AACmC;AACzB;AACJ;AACE;AAC4B;AACtB;AACK;;AAExD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD,WAAW;AAC/D,2DAA2D,sEAAgB,EAAE,gDAAgD,gCAAgC,EAAE,gDAAgD;AAC/M;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,yCAAyC,YAAY,KAAK,YAAY,KAAK,aAAa,KAAK,UAAU,KAAK,QAAQ,KAAK,wBAAwB,KAAK,yBAAyB,KAAK,yBAAyB,KAAK,uBAAuB,sBAAsB,OAAO,KAAK,SAAS,iBAAiB,0BAA0B;AAC/T;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,0DAA0D,WAAW;AACrE;AACA,CAAC,CAAC,sEAA4B;;AAE9B;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,yRAAyR,0BAA0B,iEAAiE,sBAAsB,8tBAA8tB,0BAA0B,2FAA2F,sBAAsB;AACnvC;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA,CAAC,CAAC,8DAAoB;;AAEtB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iRAAiR,UAAU,6WAA6W,aAAa,oJAAoJ,8CAA8C,uDAAuD,YAAY;AAC15B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,CAAC,CAAC,8DAAoB;;AAEtB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA,CAAC,CAAC,+DAAqB;;AAEvB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,+LAA+L,wBAAwB;AACvN;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,CAAC,CAAC,8DAAoB;;AAEtB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,CAAC,CAAC,gEAAsB;;AAExB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,CAAC,CAAC,6DAAmB;;AAErB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,QAAQ,kDAAa;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,qDAAqD;AACrD,SAAS,OAAO,yDAAe,EAAE;AACjC,SAAS,OAAO,8DAAoB;AACpC,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,wBAAwB,OAAO,uDAAS,oBAAoB;AAC5D;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uDAAc;AAC9C,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,8DAAoB;AACpC,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,yBAAyB,OAAO,oDAAM,EAAE;AACxC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,QAAQ,kDAAa;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yBAAyB;AAClD;AACA,+BAA+B,uDAAuD;AACtF;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD;AACjD,SAAS,OAAO,yDAAe,EAAE;AACjC,SAAS,OAAO,8DAAoB;AACpC,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,wBAAwB,OAAO,uDAAS,oBAAoB;AAC5D;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,QAAQ,kDAAa;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yBAAyB;AAClD;AACA,+BAA+B,uDAAuD;AACtF;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD;AACtD,SAAS,OAAO,yDAAe,EAAE;AACjC,SAAS,OAAO,8DAAoB;AACpC,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,wBAAwB,OAAO,uDAAS,oBAAoB;AAC5D;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD,+BAA+B,0DAAY;AAC3C;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,oWAAoW,yBAAyB,iKAAiK,0BAA0B;AACxjB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD,WAAW;AACnE;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,uBAAuB,OAAO,oDAAM,EAAE;AACtC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD,+BAA+B,0DAAY;AAC3C;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,yKAAyK,6BAA6B;AACtM;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,uBAAuB,OAAO,oDAAM,EAAE;AACtC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,mDAAmD,qBAAqB;AACxE;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,4CAA4C,iBAAiB,cAAc,aAAa,sBAAsB,YAAY,qBAAqB,kBAAkB,WAAW,UAAU,WAAW;AACjM,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD;AACtD,SAAS,OAAO,yDAAe,EAAE;AACjC,SAAS,OAAO,sEAAY;AAC5B,MAAM;AACN;AACA,wBAAwB,OAAO,mDAAK,EAAE;AACtC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,uBAAuB,OAAO,oDAAM,EAAE;AACtC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,eAAe,OAAO,mDAAK,EAAE;AAC7B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD;AACpD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,oBAAoB,OAAO,mDAAK,EAAE;AAClC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,2BAA2B,OAAO,oDAAM,EAAE;AAC1C;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,kDAAkD,MAAM;AACxD;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,iDAAiD,aAAa;AAC9D;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,qBAAqB;AACrB;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,qBAAqB;AACrB;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA,uCAAuC,EAAE;AACzC;AACA,uCAAuC,EAAE;AACzC;AACA,uCAAuC,EAAE;AACzC;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD;AACjD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,uBAAuB,OAAO,oDAAM,EAAE;AACtC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uEAAa;AACrC,wBAAwB,6DAAmB;AAC3C,wBAAwB,4DAAY;AACpC,wBAAwB,wDAAc;AACtC,wBAAwB,0DAAW;AACnC,wBAAwB,+DAAiB;AACzC,wBAAwB,iEAAkB;AAC1C;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,qDAAqD,WAAW;AAChE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD,WAAW;AACjE;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAY;AACpC,wBAAwB,6DAAmB;AAC3C;AACA,wBAAwB,0DAAW;AACnC,wBAAwB,+DAAiB;AACzC;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,kBAAkB,iCAAiC;AACnD;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,yDAAyD;AACzD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,sBAAsB,OAAO,mDAAK,EAAE;AACpC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,0LAA0L,eAAe,SAAS,SAAS,YAAY,mGAAmG,oOAAoO,gBAAgB,0EAA0E,SAAS,2MAA2M,QAAQ,SAAS,mIAAmI,QAAQ,SAAS,WAAW,oKAAoK,0JAA0J,SAAS,SAAS,WAAW,+GAA+G,4BAA4B,2QAA2Q,kBAAkB,4DAA4D,SAAS,YAAY,iNAAiN,QAAQ,SAAS,WAAW,gFAAgF,QAAQ,SAAS,WAAW,uZAAuZ,4BAA4B,sJAAsJ,+BAA+B;AACjyF;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,qDAAqD;AACrD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,uBAAuB,OAAO,uDAAS,0BAA0B;AACjE;AACA;AACA,CAAC,CAAC,8DAAoB;;AAEtB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,UAAU,kBAAkB;AAC5B;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA,CAAC,CAAC,8DAAoB;;AAEtB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,UAAU,kBAAkB;AAC5B;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,uOAAuO,oBAAoB,2DAA2D,sCAAsC,+BAA+B,eAAe,4KAA4K,qKAAqK,yOAAyO;AACp8B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA,CAAC,CAAC,+DAAqB;;AAEvB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,UAAU,kBAAkB;AAC5B;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,6VAA6V,aAAa,uGAAuG,KAAK,uWAAuW,aAAa,uGAAuG,UAAU,wWAAwW,aAAa,uGAAuG,WAAW;AACl6C;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,qDAAqD,WAAW;AAChE;AACA,CAAC,CAAC,iEAAuB;;AAEzB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,kEAAkE,kBAAkB;AACpF;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,stBAAstB,oBAAoB,2FAA2F,iBAAiB;AACt1B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD;AACxD,SAAS,OAAO,mEAAqB;AACrC,MAAM;AACN;AACA,2BAA2B,OAAO,uDAAS,SAAS,yDAAW,IAAI;AACnE;AACA;AACA,CAAC,CAAC,+DAAqB;;AAEvB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,6DAA6D,WAAW;AACxE;AACA,CAAC,CAAC,+DAAqB;;AAEvB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA,wBAAwB,uEAAa;AACrC,wBAAwB,6DAAmB;AAC3C,wBAAwB,wDAAc;AACtC;AACA,wBAAwB,+DAAiB;AACzC,wBAAwB,sEAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE8tB;;AAE9tB,2CAA2C,cAAc,u57G;;;;;;;;;;;;ACl4DzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AAC2C;AACT;AACnB;AACpB;;AAEvC;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,CAAC,CAAC,yDAAgB;;AAElB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,0CAA0C,OAAO;AACjD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,sDAAsD,OAAO;AAC7D,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,qCAAqC,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,EAAE;AACvD;AACA;AACA;AACA;AACA,qDAAqD,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,EAAE;AACxD;AACA;AACA;AACA;AACA,sDAAsD,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK,6D;AAClB,+D;AACA,gB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK,4C;AAClB,8C;AACA,gB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,0DAA0D,WAAW;AACrE;AACA,oBAAoB,OAAO,mDAAK,EAAE;AAClC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0BAA0B,sDAAQ,wCAAwC,UAAU;AACpF;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAQ,wCAAwC,UAAU;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+DAA+D,WAAW;AAC1E;AACA,0BAA0B,OAAO,mDAAK,EAAE;AACxC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,oBAAoB,OAAO,mDAAK,EAAE;AAClC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,8DAA8D,WAAW;AACzE;AACA,0BAA0B,OAAO,mDAAK,EAAE;AACxC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,uBAAuB,OAAO,mDAAK,EAAE;AACrC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,qCAAqC,EAAE;AACvC,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD,WAAW;AACjE;AACA,mBAAmB,OAAO,mDAAK,EAAE;AACjC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,kCAAkC,sDAAQ,gDAAgD,UAAU;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD,WAAW;AACnE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD,yBAAyB,oDAAe;AACxC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,sCAAsC,EAAE;AACxC,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,iBAAiB,EAAE;AACxC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sDAAQ,4BAA4B,UAAU;AAChF;AACA;AACA,mDAAmD,EAAE;AACrD;AACA;AACA,oDAAoD,EAAE;AACtD;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,qCAAqC,sDAAQ,sDAAsD,uBAAuB;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,2BAA2B,OAAO,mDAAK,EAAE;AACzC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,wBAAwB,OAAO,mDAAK,EAAE;AACtC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD,WAAW;AACjE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,yDAAyD,WAAW;AACpE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA;AACA,4BAA4B,yDAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD,WAAW;AACnE;AACA,qBAAqB,OAAO,mDAAK,EAAE;AACnC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,0DAA0D,WAAW;AACrE;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,0DAA0D,WAAW;AACrE;AACA,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,eAAe,OAAO,mDAAK,EAAE;AAC7B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,qBAAqB,OAAO,mDAAK,EAAE;AACnC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","file":"main.js","sourcesContent":["import { __extends, __values, __spread } from 'tslib';\nimport { BehaviorSubject } from 'rxjs';\nimport { Injectable, Component, NgModule } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\nvar KerviSpineBase = /** @class */ (function () {\r\n    function KerviSpineBase(constructorOptions) {\r\n        this.constructorOptions = constructorOptions;\r\n        this.isConnected = false;\r\n        this.doAuthenticate = false;\r\n        this.sessionId = null;\r\n        this.queryHandlers = [];\r\n        this.commandHandlers = [];\r\n        this.eventHandlers = [];\r\n        this.streamHandlers = [];\r\n        this.rpcQueue = {};\r\n        this.ready = false;\r\n        this.messageId = 0;\r\n        this.sensors = {};\r\n        this.controllers = {};\r\n        this.sensorTypes = [];\r\n        this.controllerTypes = [];\r\n        this.visionRegions = [];\r\n        this.application = null;\r\n        this.allowAnonymous = true;\r\n        this.firstOnOpen = true;\r\n        this.messageCount = 0;\r\n        this.mpsTime = new Date;\r\n        this.mps = 0;\r\n        this.websocket = null;\r\n        this.options = {\r\n            userName: 'anonymous',\r\n            password: null,\r\n            address: null,\r\n            onOpen: null,\r\n            onClose: null,\r\n            onAuthenticate: null,\r\n            onAuthenticateFailed: null,\r\n            onAuthenticateStart: null,\r\n            onLogOff: null,\r\n            onMPS: null,\r\n            autoConnect: true,\r\n            targetScope: null,\r\n            protocol: 'ws',\r\n            apiToken: null\r\n        };\r\n        this.addEventHandler = (/**\r\n         * @param {?} eventName\r\n         * @param {?} id\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        function (eventName, id, callback) {\r\n        });\r\n        this.addStreamHandler = (/**\r\n         * @param {?} streamId\r\n         * @param {?} streamEvent\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        function (streamId, streamEvent, callback) {\r\n        });\r\n        this.removeStreamHandler = (/**\r\n         * @param {?} streamId\r\n         * @param {?} streamEvent\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        function (streamId, streamEvent, callback) {\r\n        });\r\n        console.log('Kervi base spine init', this.options, constructorOptions);\r\n        this.options = this.extend(this.options, constructorOptions);\r\n        console.log('kbo', this.options);\r\n        this.connect();\r\n        /** @type {?} */\r\n        var self = this;\r\n        setInterval((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            var e_1, _a;\r\n            /** @type {?} */\r\n            var hangingNodes = [];\r\n            for (var id in self.rpcQueue) {\r\n                /** @type {?} */\r\n                var query = self.rpcQueue[id];\r\n                if (query['callbackTimeout']) {\r\n                    if (Date.now() - query['ts'] > query['timeout']) {\r\n                        /** @type {?} */\r\n                        var callback = query['callbackTimeout'];\r\n                        hangingNodes.push(id);\r\n                        callback.call(self.options.targetScope);\r\n                    }\r\n                }\r\n            }\r\n            try {\r\n                for (var hangingNodes_1 = __values(hangingNodes), hangingNodes_1_1 = hangingNodes_1.next(); !hangingNodes_1_1.done; hangingNodes_1_1 = hangingNodes_1.next()) {\r\n                    var id = hangingNodes_1_1.value;\r\n                    delete self.rpcQueue[id];\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (hangingNodes_1_1 && !hangingNodes_1_1.done && (_a = hangingNodes_1.return)) _a.call(hangingNodes_1);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }), 1);\r\n    }\r\n    /**\r\n     * @protected\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.extend = /**\r\n     * @protected\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var p = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            p[_i] = arguments[_i];\r\n        }\r\n        for (var i = 1; i < p.length; i++) {\r\n            for (var key in p[i]) {\r\n                if (p[i].hasOwnProperty(key)) {\r\n                    p[0][key] = p[i][key];\r\n                }\r\n            }\r\n        }\r\n        return p[0];\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} id\r\n     * @param {?} callback\r\n     * @param {?} callbackTimeout\r\n     * @param {?} timeout\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.addRPCCallback = /**\r\n     * @protected\r\n     * @param {?} id\r\n     * @param {?} callback\r\n     * @param {?} callbackTimeout\r\n     * @param {?} timeout\r\n     * @return {?}\r\n     */\r\n    function (id, callback, callbackTimeout, timeout) {\r\n        if (callback) {\r\n            this.rpcQueue[id] = {\r\n                'callback': callback,\r\n                'callbackTimeout': callbackTimeout,\r\n                'timeout': timeout,\r\n                'ts': Date.now(),\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.handleRPCResponse = /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    function (message) {\r\n        if (message.id in this.rpcQueue) {\r\n            /** @type {?} */\r\n            var callback = this.rpcQueue[message.id]['callback'];\r\n            if (callback) {\r\n                delete this.rpcQueue[message.id];\r\n                callback.call(this.options.targetScope, message.response, message.response);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.handleEvent = /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    function (message) {\r\n        // console.log('ev', message)\r\n        /** @type {?} */\r\n        var eventName = message.event;\r\n        /** @type {?} */\r\n        var id = message.id;\r\n        /** @type {?} */\r\n        var eventPath = eventName;\r\n        if (id) {\r\n            eventPath += '/' + id;\r\n        }\r\n        /** @type {?} */\r\n        var value = null;\r\n        if (message.args && message.args.length) {\r\n            value = message.args[0];\r\n        }\r\n        for (var n = 0; (n < this.eventHandlers.length); n++) {\r\n            /** @type {?} */\r\n            var h = this.eventHandlers[n];\r\n            if (h.eventName === eventPath)\r\n                h.callback.call(value, id, value);\r\n            else if (h.eventName === eventName)\r\n                h.callback.call(value, id, value);\r\n        }\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @param {?} streamBlob\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.handleStream = /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @param {?} streamBlob\r\n     * @return {?}\r\n     */\r\n    function (message, streamBlob) {\r\n        /** @type {?} */\r\n        var streamTag = message.streamId + '/' + message.streamEvent;\r\n        for (var n = 0; (n < this.streamHandlers.length); n++) {\r\n            /** @type {?} */\r\n            var h = this.streamHandlers[n];\r\n            if (h.streamTag === streamTag) {\r\n                h.callback.call(message.streamId, message.streamId, message.streamEvent, streamBlob);\r\n            }\r\n            else if (h.streamTag === message.streamId) {\r\n                h.callback.call(message.streamId, message.streamId, message.streamEvent, streamBlob);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.handleCommand = /**\r\n     * @protected\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    function (message) {\r\n        console.log('cmd', this, message);\r\n        /** @type {?} */\r\n        var command = message.command;\r\n        /** @type {?} */\r\n        var args = null;\r\n        if (message.args && message.args.length) {\r\n            args = message.args[0];\r\n        }\r\n        for (var n = 0; (n < this.commandHandlers.length); n++) {\r\n            /** @type {?} */\r\n            var c = this.commandHandlers[n];\r\n            if (c.command == command)\r\n                c.callback.call(this, args);\r\n        }\r\n    };\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.connect = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.onOpen = /**\r\n     * @protected\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    function (evt) {\r\n        console.log('Kervi open', this, evt);\r\n        this.isConnected = true;\r\n        this.eventHandlers = [];\r\n        this.streamHandlers = [];\r\n        this.commandHandlers = [];\r\n        this.queryHandlers = [];\r\n        console.log('Kervi spine ready');\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.onClose = /**\r\n     * @protected\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    function (evt) {\r\n        console.log('Kervi spine on close', evt);\r\n        this.isConnected = false;\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (this.options.onClose)\r\n            this.options.onClose.call(this.options.targetScope, evt);\r\n        this.firstOnOpen = true;\r\n        if (this.options.autoConnect) {\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                self.connect();\r\n            }), 1000);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} userName\r\n     * @param {?} password\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.authenticate = /**\r\n     * @param {?} userName\r\n     * @param {?} password\r\n     * @return {?}\r\n     */\r\n    function (userName, password) {\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.logoff = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.onMessage = /**\r\n     * @protected\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    function (evt) {\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.onError = /**\r\n     * @protected\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    function (evt) {\r\n        console.log('Kervi on error', evt);\r\n    };\r\n    /**\r\n     * @param {?} command\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.addCommandHandler = /**\r\n     * @param {?} command\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    function (command, callback) {\r\n    };\r\n    /**\r\n     * @param {?} query\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.addQueryHandler = /**\r\n     * @param {?} query\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    function (query, callback) {\r\n    };\r\n    /**\r\n     * @param {?} command\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.sendCommand = /**\r\n     * @param {?} command\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    function (command) {\r\n        var p = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            p[_i - 1] = arguments[_i];\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} query\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.sendQuery = /**\r\n     * @param {?} query\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    function (query) {\r\n        var p = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            p[_i - 1] = arguments[_i];\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} eventName\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.triggerEvent = /**\r\n     * @param {?} eventName\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    function (eventName, id) {\r\n    };\r\n    /**\r\n     * @param {?} stream_id\r\n     * @param {?} event\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    KerviSpineBase.prototype.streamData = /**\r\n     * @param {?} stream_id\r\n     * @param {?} event\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (stream_id, event, data) {\r\n    };\r\n    return KerviSpineBase;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviWSSpine = /** @class */ (function (_super) {\r\n    __extends(KerviWSSpine, _super);\r\n    function KerviWSSpine(constructorOptions) {\r\n        var _this = _super.call(this, constructorOptions) || this;\r\n        _this.constructorOptions = constructorOptions;\r\n        _this.addEventHandler = (/**\r\n         * @param {?} eventName\r\n         * @param {?} id\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        function (eventName, id, callback) {\r\n            if (id)\r\n                this.eventHandlers.push({ 'eventName': eventName + '/' + id, callback: callback });\r\n            else\r\n                this.eventHandlers.push({ 'eventName': eventName, callback: callback });\r\n            /** @type {?} */\r\n            var cmd = { id: this.messageId++, 'messageType': 'registerEventHandler', 'event': eventName, 'eventId': id };\r\n            //console.log('add event handler',cmd);\r\n            this.websocket.send(JSON.stringify(cmd));\r\n        });\r\n        _this.addStreamHandler = (/**\r\n         * @param {?} streamId\r\n         * @param {?} streamEvents\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        function (streamId, streamEvents, callback) {\r\n            var e_1, _a;\r\n            if (streamEvents && streamEvents.length > 0) {\r\n                try {\r\n                    for (var streamEvents_1 = __values(streamEvents), streamEvents_1_1 = streamEvents_1.next(); !streamEvents_1_1.done; streamEvents_1_1 = streamEvents_1.next()) {\r\n                        var event_1 = streamEvents_1_1.value;\r\n                        this.streamHandlers.push({ 'streamTag': streamId + '/' + event_1, callback: callback });\r\n                        /** @type {?} */\r\n                        var cmd = {\r\n                            id: this.messageId++,\r\n                            'messageType': 'registerStreamHandler',\r\n                            'streamId': streamId,\r\n                            'streamEvent': event_1\r\n                        };\r\n                        console.log('as', cmd);\r\n                        this.websocket.send(JSON.stringify(cmd));\r\n                    }\r\n                }\r\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (streamEvents_1_1 && !streamEvents_1_1.done && (_a = streamEvents_1.return)) _a.call(streamEvents_1);\r\n                    }\r\n                    finally { if (e_1) throw e_1.error; }\r\n                }\r\n            }\r\n            else {\r\n                this.streamHandlers.push({ 'streamTag': streamId, callback: callback });\r\n                /** @type {?} */\r\n                var cmd = {\r\n                    id: this.messageId++,\r\n                    'messageType': 'registerStreamHandler',\r\n                    'streamId': streamId,\r\n                    'streamEvent': event\r\n                };\r\n                console.log('as', cmd);\r\n                this.websocket.send(JSON.stringify(cmd));\r\n            }\r\n        });\r\n        _this.removeStreamHandler = (/**\r\n         * @param {?} streamId\r\n         * @param {?} streamEvents\r\n         * @return {?}\r\n         */\r\n        function (streamId, streamEvents) {\r\n            var e_2, _a;\r\n            if (streamEvents && streamEvents.length > 0) {\r\n                try {\r\n                    for (var streamEvents_2 = __values(streamEvents), streamEvents_2_1 = streamEvents_2.next(); !streamEvents_2_1.done; streamEvents_2_1 = streamEvents_2.next()) {\r\n                        var event_2 = streamEvents_2_1.value;\r\n                        //this.streamHandlers.push({'streamTag': streamId + '/' + event, callback: callback});\r\n                        /** @type {?} */\r\n                        var cmd = {\r\n                            id: this.messageId++,\r\n                            'messageType': 'removeStreamHandler',\r\n                            'streamId': streamId,\r\n                            'streamEvent': event_2\r\n                        };\r\n                        console.log('as', cmd);\r\n                        this.websocket.send(JSON.stringify(cmd));\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (streamEvents_2_1 && !streamEvents_2_1.done && (_a = streamEvents_2.return)) _a.call(streamEvents_2);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n            else {\r\n                //this.streamHandlers.push({'streamTag': streamId, callback: callback});\r\n                /** @type {?} */\r\n                var cmd = {\r\n                    id: this.messageId++,\r\n                    'messageType': 'removeStreamHandler',\r\n                    'streamId': streamId,\r\n                    'streamEvent': event\r\n                };\r\n                console.log('as', cmd);\r\n                this.websocket.send(JSON.stringify(cmd));\r\n            }\r\n        });\r\n        console.log('kervi spine constructor');\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.connect = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.isConnected) {\r\n            console.log('Kervi is connected');\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        var self = this;\r\n        this.websocket = new WebSocket(this.options.protocol + '://' + this.options.address);\r\n        this.websocket.binaryType = 'arraybuffer';\r\n        this.websocket.onopen = (/**\r\n         * @param {?} evt\r\n         * @return {?}\r\n         */\r\n        function (evt) {\r\n            console.log('kervi spine on open');\r\n            self.onOpen(evt);\r\n        });\r\n        this.websocket.onclose = (/**\r\n         * @param {?} evt\r\n         * @return {?}\r\n         */\r\n        function (evt) {\r\n            self.onClose(evt);\r\n        });\r\n        this.websocket.onmessage = (/**\r\n         * @param {?} evt\r\n         * @return {?}\r\n         */\r\n        function (evt) {\r\n            if (typeof evt.data === 'string') {\r\n                /** @type {?} */\r\n                var message = JSON.parse(evt.data);\r\n                self.onMessage(message);\r\n            }\r\n            else {\r\n                /** @type {?} */\r\n                var jsonLen = new Int32Array(evt.data.slice(0, 4))[0];\r\n                /** @type {?} */\r\n                var jsonBlob = evt.data.slice(4, jsonLen + 4);\r\n                /** @type {?} */\r\n                var streamBlob = evt.data.slice(4 + jsonLen);\r\n                /** @type {?} */\r\n                var utf8decoder = new TextDecoder();\r\n                /** @type {?} */\r\n                var j = utf8decoder.decode(jsonBlob);\r\n                self.onMessage(JSON.parse(j), streamBlob);\r\n            }\r\n        });\r\n        this.websocket.onerror = (/**\r\n         * @param {?} evt\r\n         * @return {?}\r\n         */\r\n        function (evt) {\r\n            self.onError(evt);\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} userName\r\n     * @param {?} password\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.authenticate = /**\r\n     * @param {?} userName\r\n     * @param {?} password\r\n     * @return {?}\r\n     */\r\n    function (userName, password) {\r\n        this.options.userName = userName;\r\n        this.options.password = password;\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, 'messageType': 'authenticate', 'userName': userName, 'password': password };\r\n        console.log('swa', cmd);\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.logoff = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, 'messageType': 'logoff', 'session': this.sessionId };\r\n        this.sessionId = null;\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} message\r\n     * @param {?=} streamBlob\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.onMessage = /**\r\n     * @param {?} message\r\n     * @param {?=} streamBlob\r\n     * @return {?}\r\n     */\r\n    function (message, streamBlob) {\r\n        if (streamBlob === void 0) { streamBlob = null; }\r\n        // if (message.messageType !== 'stream') {\r\n        //     console.log('on m', message);\r\n        // }\r\n        /** @type {?} */\r\n        var self = this;\r\n        /** @type {?} */\r\n        var now = new Date();\r\n        /** @type {?} */\r\n        var fpsDiff = now.getTime() - this.mpsTime.getTime();\r\n        /** @type {?} */\r\n        var seconds = fpsDiff / 1000;\r\n        this.messageCount++;\r\n        if (seconds > 1) {\r\n            this.mps = Math.round(this.messageCount / seconds);\r\n            this.messageCount = 0;\r\n            this.mpsTime = now;\r\n            if (this.options.onMPS) {\r\n                this.options.onMPS.call(this.options.targetScope, this.mps);\r\n            }\r\n        }\r\n        if (message.messageType === 'authenticate') {\r\n            console.log('authenticate');\r\n            this.doAuthenticate = true;\r\n            if (this.options.userName)\r\n                this.authenticate(this.options.userName, this.options.password);\r\n            else\r\n                this.options.onAuthenticate.call(this.options.targetScope, message);\r\n        }\r\n        else if (message.messageType === 'authentication_failed') {\r\n            console.log('authentication failed', this.options.userName);\r\n            if (this.options.userName == 'anonymous') {\r\n                this.allowAnonymous = false;\r\n                this.options.userName = null;\r\n                this.options.password = null;\r\n                this.sessionId = null;\r\n                if (self.options.onLogOff) {\r\n                    self.options.onLogOff.call(self.options.targetScope, message);\r\n                }\r\n            }\r\n            else\r\n                this.options.onAuthenticateFailed.call(this.options.targetScope, message);\r\n        }\r\n        else if (message.messageType === 'session_authenticated') {\r\n            /** @type {?} */\r\n            var date = new Date();\r\n            date.setTime(date.getTime() + (2 * 60 * 60 * 1000));\r\n            /** @type {?} */\r\n            var expires = '; expires=' + date.toUTCString();\r\n            this.sessionId = message.session;\r\n            document.cookie = 'kervisession' + '=' + message.session + expires + '; path=/';\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                console.log('to', self.options);\r\n                if (self.options.onOpen)\r\n                    self.options.onOpen.call(self.options.targetScope, self.firstOnOpen, message);\r\n                self.firstOnOpen = false;\r\n            }), 100);\r\n        }\r\n        else if (message.messageType == 'session_logoff') {\r\n            if (self.options.onLogOff)\r\n                self.options.onLogOff.call(self.options.targetScope, message);\r\n            if (this.allowAnonymous && this.options.userName != 'anonymous') {\r\n                this.authenticate('anonymous', null);\r\n            }\r\n            else {\r\n                self.options.userName = null;\r\n                self.options.password = null;\r\n                self.sessionId = null;\r\n            }\r\n        }\r\n        else if (message.messageType == 'response')\r\n            this.handleRPCResponse(message);\r\n        else if (message.messageType == 'event')\r\n            this.handleEvent(message);\r\n        else if (message.messageType == 'stream')\r\n            this.handleStream(message, streamBlob);\r\n        else if (message.messageType == 'command')\r\n            this.handleCommand(message);\r\n        else\r\n            console.log('Kervi spine message unknown', this.rpcQueue, message);\r\n    };\r\n    /**\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.onError = /**\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    function (evt) {\r\n        console.log('Kervi on error', evt);\r\n    };\r\n    /**\r\n     * @param {?} command\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.addCommandHandler = /**\r\n     * @param {?} command\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    function (command, callback) {\r\n        this.commandHandlers.push({ command: command, callback: callback });\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, 'messageType': 'registerCommandHandler', 'command': command };\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} query\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.addQueryHandler = /**\r\n     * @param {?} query\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    function (query, callback) {\r\n        this.queryHandlers.push({ query: query, callback: callback });\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, 'messageType': 'registerQueryHandler', 'query': query };\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} command\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.sendCommand = /**\r\n     * @param {?} command\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    function (command) {\r\n        var p = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            p[_i - 1] = arguments[_i];\r\n        }\r\n        console.log('sec', arguments);\r\n        /** @type {?} */\r\n        var args = [];\r\n        /** @type {?} */\r\n        var callback = null;\r\n        for (var i = 0; (i < p.length); i++) {\r\n            if (p[i] instanceof Function)\r\n                callback = p[i];\r\n            else\r\n                args.push(p[i]);\r\n        }\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, 'messageType': 'command', 'command': command, 'args': args };\r\n        if (callback && callback instanceof Function)\r\n            this.addRPCCallback(cmd.id.toString(), callback, null, 0);\r\n        console.log('sendCommand', this, cmd);\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} query\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.sendQuery = /**\r\n     * @param {?} query\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    function (query) {\r\n        var p = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            p[_i - 1] = arguments[_i];\r\n        }\r\n        /** @type {?} */\r\n        var args = [];\r\n        /** @type {?} */\r\n        var callback = null;\r\n        /** @type {?} */\r\n        var callbackTimeout = null;\r\n        /** @type {?} */\r\n        var timeout = 10000;\r\n        for (var i = 0; (i < p.length); i++) {\r\n            if (p[i] instanceof Function)\r\n                if (!callback)\r\n                    callback = p[i];\r\n                else\r\n                    callbackTimeout = p[i];\r\n            else {\r\n                if (callbackTimeout)\r\n                    timeout = p[i];\r\n                else\r\n                    args.push(p[i]);\r\n            }\r\n        }\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, 'messageType': 'query', 'query': query, 'args': args };\r\n        this.addRPCCallback(cmd.id.toString(), callback, callbackTimeout, timeout);\r\n        console.log('sendQuery', callback, cmd);\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} eventName\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    KerviWSSpine.prototype.triggerEvent = /**\r\n     * @param {?} eventName\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    function (eventName, id) {\r\n        /** @type {?} */\r\n        var e = { id: this.messageId++, 'messageType': 'event', 'event': eventName, 'args': arguments };\r\n        this.websocket.send(JSON.stringify(e));\r\n    };\r\n    return KerviWSSpine;\r\n}(KerviSpineBase));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviRMQSpine = /** @class */ (function (_super) {\r\n    __extends(KerviRMQSpine, _super);\r\n    function KerviRMQSpine(constructorOptions) {\r\n        var _this = _super.call(this, constructorOptions) || this;\r\n        _this.constructorOptions = constructorOptions;\r\n        _this.exchange = \"/exchange/\";\r\n        _this.addEventHandler = (/**\r\n         * @param {?} eventName\r\n         * @param {?} id\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        function (eventName, id, callback) {\r\n            if (id)\r\n                this.eventHandlers.push({ \"eventName\": eventName + \"/\" + id, callback: callback });\r\n            else\r\n                this.eventHandlers.push({ \"eventName\": eventName, callback: callback });\r\n            /** @type {?} */\r\n            var cmd = { id: this.messageId++, \"messageType\": \"registerEventHandler\", \"event\": eventName, \"eventId\": id };\r\n            this.websocket.send(this.exchange, { topic: \"registerEventHandler\", router_id: this.socketSession }, JSON.stringify(cmd));\r\n        });\r\n        console.log(\"Kervi io spine init y\", _this.options, constructorOptions);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} frame\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.onMQError = /**\r\n     * @private\r\n     * @param {?} frame\r\n     * @return {?}\r\n     */\r\n    function (frame) {\r\n        console.log(\"MQ error\", frame);\r\n    };\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.connect = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.isConnected) {\r\n            console.log(\"Kervi is connected\");\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        var self = this;\r\n        //var mqUrl= this.options.protocol + \"://\" + this.options.address\r\n        /** @type {?} */\r\n        var mqUrl = \"wss://mq.kervi.io:15673/ws\";\r\n        this.websocket = Stomp.client(mqUrl);\r\n        this.websocket.heartbeat.incoming = 0;\r\n        self.exchange = \"/exchange/\" + self.options.apiToken.app_id;\r\n        console.log(\"exchange\", self.exchange);\r\n        this.websocket.connect(self.options.apiToken.api_token, \"ui\", (/**\r\n         * @param {?} frame\r\n         * @return {?}\r\n         */\r\n        function (frame) {\r\n            console.log(\"MQ connect\", frame, self.websocket, this, self);\r\n            self.socketSession = frame.headers.session;\r\n            self.exchange = \"/exchange/\" + self.options.apiToken.app_id;\r\n            self.websocket.subscribe(self.exchange, (/**\r\n             * @param {?} message\r\n             * @return {?}\r\n             */\r\n            function (message) {\r\n                console.log(\"mq \", message);\r\n                if (message.headers[\"topic\"])\r\n                    message.headers[\"topic\"] = message.headers[\"topic\"].replace(new RegExp(\"\\\\c\", \"g\"), \":\");\r\n                if (message.command == \"CONNECTED\") ;\r\n                else if (message.headers[\"topic\"] == \"ping\")\r\n                    self.onPing(message);\r\n                else\r\n                    self.onMessage(message);\r\n            }), {});\r\n        }), self.onMQError, self.options.apiToken.api_channel);\r\n    };\r\n    /**\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.onPing = /**\r\n     * @param {?} message\r\n     * @return {?}\r\n     */\r\n    function (message) {\r\n        console.log(\"onping\", this.options.appId, message);\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (!this.isConnected && message.headers[\"connection_id\"] == self.options.apiToken.app_id) {\r\n            this.onOpen(message);\r\n            this.websocket.send(self.exchange, { topic: \"session:new\", router_id: message.headers[\"router_id\"], session_id: this.socketSession }, \"{}\");\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} userName\r\n     * @param {?} password\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.authenticate = /**\r\n     * @param {?} userName\r\n     * @param {?} password\r\n     * @return {?}\r\n     */\r\n    function (userName, password) {\r\n        this.options.userName = userName;\r\n        this.options.password = password;\r\n        if (this.options.onAuthenticateStart)\r\n            this.options.onAuthenticateStart.call(this.options.targetScope);\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"authenticate\", \"userName\": this.options.userName, \"password\": this.options.password };\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.logoff = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        //this.options.userName = this.allowAnonymous ? \"anonymous\" : null;\r\n        //this.options.password = null;\r\n        //this.options.userName = this.allowAnonymous ? \"anonymous\" : null;\r\n        //this.options.password = null;\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"logoff\", \"session\": this.sessionId };\r\n        this.sessionId = null;\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.onMessage = /**\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    function (evt) {\r\n        console.log(\"on m\", evt);\r\n        /** @type {?} */\r\n        var message = JSON.parse(evt.body);\r\n        /** @type {?} */\r\n        var self = this;\r\n        /** @type {?} */\r\n        var topic = evt.headers[\"topic\"];\r\n        if (topic == \"authenticate\") {\r\n            console.log(\"authenticate\");\r\n            this.doAuthenticate = true;\r\n            if (this.options.userName)\r\n                this.authenticate(this.options.userName, this.options.password);\r\n            else\r\n                this.options.onAuthenticate.call(this.options.targetScope, evt);\r\n        }\r\n        else if (topic == \"authentication_failed\") {\r\n            console.log(\"authentication failed\", this.options.userName);\r\n            if (this.options.userName == \"anonymous\") {\r\n                this.allowAnonymous = false;\r\n                this.options.userName = null;\r\n                this.options.password = null;\r\n                this.sessionId = null;\r\n                console.log(\"x\", self.options);\r\n                if (self.options.onLogOff) {\r\n                    console.log(\"x1\");\r\n                    self.options.onLogOff.call(self.options.targetScope, evt);\r\n                }\r\n            }\r\n            else\r\n                this.options.onAuthenticateFailed.call(this.options.targetScope, evt);\r\n        }\r\n        else if (topic == \"session_authenticated\") {\r\n            /** @type {?} */\r\n            var date = new Date();\r\n            date.setTime(date.getTime() + (2 * 60 * 60 * 1000));\r\n            /** @type {?} */\r\n            var expires = \"; expires=\" + date.toUTCString();\r\n            this.sessionId = message.session;\r\n            document.cookie = \"kervisession\" + \"=\" + message.session + expires + \"; path=/\";\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                if (self.options.onOpen)\r\n                    self.options.onOpen.call(self.options.targetScope, self.firstOnOpen, evt);\r\n                self.firstOnOpen = false;\r\n            }), 100);\r\n        }\r\n        else if (topic == \"session_logoff\") {\r\n            if (self.options.onLogOff)\r\n                self.options.onLogOff.call(self.options.targetScope, evt);\r\n            if (this.allowAnonymous && this.options.userName != \"anonymous\") {\r\n                this.authenticate(\"anonymous\", null);\r\n            }\r\n            else {\r\n                self.options.userName = null;\r\n                self.options.password = null;\r\n                self.sessionId = null;\r\n            }\r\n        }\r\n        else if (evt.headers[\"type\"] == \"query_response\") {\r\n            this.handleRPCResponse({ id: evt.headers[\"query_id\"], response: message });\r\n        }\r\n        else if (evt.headers[\"type\"] == \"event\") {\r\n            console.log(\"e\", evt);\r\n            /** @type {?} */\r\n            var topic_tag = evt.headers[\"topic\"].split(\":\");\r\n            this.handleEvent({ event: topic_tag[1], id: topic_tag[2], args: message.args });\r\n        }\r\n        else if (message.messageType == \"command\")\r\n            this.handleCommand(message);\r\n        else\r\n            console.log(\"Kervi spine message unknown\", this.rpcQueue, evt);\r\n    };\r\n    /**\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.onError = /**\r\n     * @param {?} evt\r\n     * @return {?}\r\n     */\r\n    function (evt) {\r\n        console.log(\"Kervi on error\", evt);\r\n    };\r\n    /**\r\n     * @param {?} command\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.addCommandHandler = /**\r\n     * @param {?} command\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    function (command, callback) {\r\n        this.commandHandlers.push({ command: command, callback: callback });\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"registerCommandHandler\", \"command\": command };\r\n        //this.websocket.send(JSON.stringify(cmd));\r\n        this.websocket.send(this.exchange, { topic: \"registerCommandHandler\", router_id: this.socketSession }, JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} query\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.addQueryHandler = /**\r\n     * @param {?} query\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    function (query, callback) {\r\n        this.queryHandlers.push({ query: query, callback: callback });\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"registerQueryHandler\", \"query\": query };\r\n        this.websocket.send(this.exchange, { topic: \"registerQueryHandler\", router_id: this.socketSession }, JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} command\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.sendCommand = /**\r\n     * @param {?} command\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    function (command) {\r\n        var p = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            p[_i - 1] = arguments[_i];\r\n        }\r\n        console.log(\"sec\", arguments);\r\n        /** @type {?} */\r\n        var args = [];\r\n        /** @type {?} */\r\n        var callback = null;\r\n        for (var i = 0; (i < p.length); i++) {\r\n            if (p[i] instanceof Function)\r\n                callback = p[i];\r\n            else\r\n                args.push(p[i]);\r\n        }\r\n        /*if (p.length>1){\r\n                    var argOffset=1;\r\n                    if ( callback && callback instanceof Function )\r\n                        argOffset+=1;\r\n                    for (var i=argOffset;(i<arguments.length);i++){\r\n                        args.push(arguments[i]);\r\n                    }\r\n                }*/\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"args\": args, kwargs: {} };\r\n        if (callback && callback instanceof Function)\r\n            this.addRPCCallback(cmd.id.toString(), callback, null, 0);\r\n        console.log(\"sendCommand\", this, cmd);\r\n        this.websocket.send(this.exchange, { topic: \"command:\" + command, router_id: this.socketSession }, JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} query\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.sendQuery = /**\r\n     * @param {?} query\r\n     * @param {...?} p\r\n     * @return {?}\r\n     */\r\n    function (query) {\r\n        var p = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            p[_i - 1] = arguments[_i];\r\n        }\r\n        /** @type {?} */\r\n        var args = [];\r\n        /** @type {?} */\r\n        var callback = null;\r\n        /** @type {?} */\r\n        var callbackTimeout = null;\r\n        /** @type {?} */\r\n        var timeout = 10000;\r\n        for (var i = 0; (i < p.length); i++) {\r\n            if (p[i] instanceof Function)\r\n                if (!callback)\r\n                    callback = p[i];\r\n                else\r\n                    callbackTimeout = p[i];\r\n            else {\r\n                if (callbackTimeout)\r\n                    timeout = p[i];\r\n                else\r\n                    args.push(p[i]);\r\n            }\r\n        }\r\n        /** @type {?} */\r\n        var cmd = { id: this.messageId++, \"messageType\": \"query\", \"query\": query, \"args\": args, kwargs: [], qts: 0 };\r\n        this.addRPCCallback(cmd.id.toString(), callback, callbackTimeout, timeout);\r\n        console.log(\"sendQuery\", callback, cmd);\r\n        //this.websocket.send(JSON.stringify(cmd));\r\n        this.websocket.send(this.exchange, { topic: \"query:\" + query, qts: 0, query_id: cmd.id.toString(), router_id: this.socketSession, response_address: this.socketSession }, JSON.stringify(cmd));\r\n    };\r\n    /**\r\n     * @param {?} eventName\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    KerviRMQSpine.prototype.triggerEvent = /**\r\n     * @param {?} eventName\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    function (eventName, id) {\r\n        /** @type {?} */\r\n        var e = { id: this.messageId++, \"messageType\": \"event\", \"event\": eventName, \"args\": arguments };\r\n        this.websocket.send(JSON.stringify(e));\r\n    };\r\n    return KerviRMQSpine;\r\n}(KerviSpineBase));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar DashboardLink = /** @class */ (function () {\r\n    /*constructor(dashboardId:string, sectionId:string, sectionName:string){\r\n        this.dashboardId = dashboardId;\r\n        this.sectionId = sectionId;\r\n        this.sectionName = sectionName;\r\n    }*/\r\n    function DashboardLink(component, message) {\r\n        this.dashboardId = message.dashboardId;\r\n        this.panelId = message.sectionId;\r\n        this.panelName = message.sectionName;\r\n        this.component = component;\r\n        this.parameters = message.parameters;\r\n    }\r\n    return DashboardLink;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviValue = /** @class */ (function () {\r\n    function KerviValue() {\r\n        this.componentType = \"KerviValue\";\r\n        this.typeName = null;\r\n        this.dashboards = [];\r\n        this.ui = {\r\n            type: \"\",\r\n            orientation: \"\",\r\n            visible: true\r\n        };\r\n    }\r\n    return KerviValue;\r\n}());\r\n/**\r\n * @abstract\r\n * @template valueType\r\n */\r\nvar  /**\r\n * @abstract\r\n * @template valueType\r\n */\r\nKerviValueType = /** @class */ (function (_super) {\r\n    __extends(KerviValueType, _super);\r\n    function KerviValueType(message, kerviService) {\r\n        var e_1, _a;\r\n        var _this = _super.call(this) || this;\r\n        _this.kerviService = null;\r\n        _this.kerviService = kerviService;\r\n        _this.value$ = new BehaviorSubject(message.value);\r\n        _this.name = message.name;\r\n        _this.isInput = message.isInput;\r\n        _this.ui = message.ui;\r\n        _this.command = message.command;\r\n        _this.id = message.id;\r\n        _this.ui[\"type\"] = message.componentType;\r\n        _this.ui[\"orientation\"] = message.orientation;\r\n        _this.ui[\"visible\"] = message.visible;\r\n        for (var prop in message.ui) {\r\n            if (_this.ui[prop] != undefined)\r\n                _this.ui[prop] = message.ui[prop];\r\n        }\r\n        try {\r\n            for (var _b = __values(message.dashboardLinks), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var dashboardLink = _c.value;\r\n                _this.dashboards.push(new DashboardLink(_this, dashboardLink));\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return _this;\r\n    }\r\n    Object.defineProperty(KerviValueType.prototype, \"value\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            //console.log(\"gv\", this.id, this.value$.value)\r\n            return this.value$.value;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            console.log(\"sv\", this.id);\r\n            this.value$.next(value);\r\n            this.kerviService.spine.sendCommand(this.command, value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {?} v\r\n     * @param {?=} notify\r\n     * @return {?}\r\n     */\r\n    KerviValueType.prototype.set = /**\r\n     * @param {?} v\r\n     * @param {?=} notify\r\n     * @return {?}\r\n     */\r\n    function (v, notify) {\r\n        if (notify === void 0) { notify = true; }\r\n        this.value$.next(v);\r\n        if (notify)\r\n            this.kerviService.spine.sendCommand(this.command, v);\r\n    };\r\n    return KerviValueType;\r\n}(KerviValue));\r\n/** @enum {number} */\r\nvar ValueRangeType = {\r\n    normal: 0, warning: 1, error: 2,\r\n};\r\nValueRangeType[ValueRangeType.normal] = 'normal';\r\nValueRangeType[ValueRangeType.warning] = 'warning';\r\nValueRangeType[ValueRangeType.error] = 'error';\r\nvar ValueRange = /** @class */ (function () {\r\n    function ValueRange(range) {\r\n        this.start = null;\r\n        this.end = null;\r\n        this.type = null;\r\n        this.start = range[\"start\"];\r\n        this.end = range[\"end\"];\r\n        if (range[\"type\"] == \"warning\")\r\n            this.type = ValueRangeType.warning;\r\n        else if (range[\"type\"] == \"error\")\r\n            this.type = ValueRangeType.error;\r\n        else\r\n            this.type = ValueRangeType.normal;\r\n    }\r\n    return ValueRange;\r\n}());\r\nvar KerviEnumOptionModel = /** @class */ (function () {\r\n    function KerviEnumOptionModel(messageOption) {\r\n        this.selected$ = new BehaviorSubject(false);\r\n        this.value = messageOption.value;\r\n        this.text = messageOption.text;\r\n        this.selected$.next(messageOption.selected);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviEnumOptionModel.prototype.updateReferences = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    /**\r\n     * @param {?} component\r\n     * @return {?}\r\n     */\r\n    KerviEnumOptionModel.prototype.reload = /**\r\n     * @param {?} component\r\n     * @return {?}\r\n     */\r\n    function (component) { };\r\n    /**\r\n     * @param {?} components\r\n     * @return {?}\r\n     */\r\n    KerviEnumOptionModel.prototype.removeReferences = /**\r\n     * @param {?} components\r\n     * @return {?}\r\n     */\r\n    function (components) { };\r\n    return KerviEnumOptionModel;\r\n}());\r\nvar SelectValue = /** @class */ (function (_super) {\r\n    __extends(SelectValue, _super);\r\n    function SelectValue(message, kerviService) {\r\n        var e_2, _a;\r\n        var _this = _super.call(this, message, kerviService) || this;\r\n        _this.options = [];\r\n        _this.lastSelected$ = new BehaviorSubject(null);\r\n        /** @type {?} */\r\n        var self = _this;\r\n        _this.options = [];\r\n        try {\r\n            for (var _b = __values(message.options), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var option = _c.value;\r\n                _this.options.push(new KerviEnumOptionModel(option));\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n        _this.selectOptions(_this.value$.value);\r\n        _this.value$.subscribe((/**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            self.selectOptions(v);\r\n        }));\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    SelectValue.prototype.getDefaultValue = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return [];\r\n    };\r\n    /**\r\n     * @param {?} selectedOptions\r\n     * @return {?}\r\n     */\r\n    SelectValue.prototype.selectOptions = /**\r\n     * @param {?} selectedOptions\r\n     * @return {?}\r\n     */\r\n    function (selectedOptions) {\r\n        var e_3, _a, e_4, _b, e_5, _c;\r\n        console.log(\"soc\");\r\n        if (!selectedOptions)\r\n            return;\r\n        try {\r\n            for (var _d = __values(this.options), _e = _d.next(); !_e.done; _e = _d.next()) {\r\n                var option = _e.value;\r\n                option.selected$.next(false);\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        try {\r\n            for (var selectedOptions_1 = __values(selectedOptions), selectedOptions_1_1 = selectedOptions_1.next(); !selectedOptions_1_1.done; selectedOptions_1_1 = selectedOptions_1.next()) {\r\n                var selectedOption = selectedOptions_1_1.value;\r\n                console.log(\"so\", selectedOption);\r\n                try {\r\n                    for (var _f = __values(this.options), _g = _f.next(); !_g.done; _g = _f.next()) {\r\n                        var option = _g.value;\r\n                        console.log(\"sox\", option);\r\n                        if (option.value == selectedOption) {\r\n                            option.selected$.next(true);\r\n                            this.lastSelected$.next(option);\r\n                            console.log(\"os\", option.text, option.selected$.value);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_g && !_g.done && (_c = _f.return)) _c.call(_f);\r\n                    }\r\n                    finally { if (e_5) throw e_5.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n        finally {\r\n            try {\r\n                if (selectedOptions_1_1 && !selectedOptions_1_1.done && (_b = selectedOptions_1.return)) _b.call(selectedOptions_1);\r\n            }\r\n            finally { if (e_4) throw e_4.error; }\r\n        }\r\n    };\r\n    return SelectValue;\r\n}(KerviValueType));\r\nvar NumberValue = /** @class */ (function (_super) {\r\n    __extends(NumberValue, _super);\r\n    function NumberValue(message, kerviService) {\r\n        var e_6, _a, e_7, _b;\r\n        var _this = _super.call(this, message, kerviService) || this;\r\n        _this.qtyUnitTo = null;\r\n        _this.sparkline$ = new BehaviorSubject([]);\r\n        _this.ranges = [];\r\n        _this.unit = message.unit;\r\n        _this.typeName = \"Number\";\r\n        _this.qtyUnitFrom = message.unit;\r\n        if (_this.unit == \"c\" && kerviService.application$.value[\"display\"][\"unit_system\"][\"temperature\"] == \"F\") {\r\n            _this.qtyUnitFrom = \"tempC\";\r\n            _this.qtyUnitTo = \"tempF\";\r\n            _this.unit = \"F\";\r\n        }\r\n        try {\r\n            for (var _c = __values(message.ranges), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var range = _d.value;\r\n                if (_this.qtyUnitTo) {\r\n                    /** @type {?} */\r\n                    var q = new Qty(range[\"start\"], _this.qtyUnitFrom);\r\n                    range[\"start\"] = q.to(_this.qtyUnitTo).scalar;\r\n                    /** @type {?} */\r\n                    var q = new Qty(range[\"end\"], _this.qtyUnitFrom);\r\n                    range[\"end\"] = q.to(_this.qtyUnitTo).scalar;\r\n                    _this.ranges.push(new ValueRange(range));\r\n                }\r\n                else\r\n                    _this.ranges.push(new ValueRange(range));\r\n            }\r\n        }\r\n        catch (e_6_1) { e_6 = { error: e_6_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_6) throw e_6.error; }\r\n        }\r\n        if (_this.qtyUnitTo && message.maxValue) {\r\n            /** @type {?} */\r\n            var q = new Qty(message.maxValue, _this.qtyUnitFrom);\r\n            _this.maxValue = q.to(_this.qtyUnitTo).scalar;\r\n        }\r\n        else\r\n            _this.maxValue = message.maxValue;\r\n        if (_this.qtyUnitTo && message.minValue) {\r\n            /** @type {?} */\r\n            var q = new Qty(message.minValue, _this.qtyUnitFrom);\r\n            _this.minValue = q.to(_this.qtyUnitTo).scalar;\r\n        }\r\n        else\r\n            _this.minValue = message.minValue;\r\n        /** @type {?} */\r\n        var spl = [];\r\n        try {\r\n            for (var _e = __values(message.sparkline), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                var spv = _f.value;\r\n                if (_this.qtyUnitTo) {\r\n                    console.log(\"spv\", spv);\r\n                    /** @type {?} */\r\n                    var q = new Qty(spv.value, _this.qtyUnitFrom);\r\n                    //spv.value = q.to(this.qtyUnitTo).scalar;\r\n                }\r\n                spl.push(spv);\r\n            }\r\n        }\r\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\r\n        finally {\r\n            try {\r\n                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n            }\r\n            finally { if (e_7) throw e_7.error; }\r\n        }\r\n        _this.sparkline$.next(spl);\r\n        _this.set(message.value, false);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    NumberValue.prototype.getDefaultValue = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @param {?} v\r\n     * @param {?=} notify\r\n     * @return {?}\r\n     */\r\n    NumberValue.prototype.set = /**\r\n     * @param {?} v\r\n     * @param {?=} notify\r\n     * @return {?}\r\n     */\r\n    function (v, notify) {\r\n        if (notify === void 0) { notify = true; }\r\n        /** @type {?} */\r\n        var newValue = v;\r\n        if (this.qtyUnitTo) {\r\n            /** @type {?} */\r\n            var q = new Qty(v, this.qtyUnitFrom);\r\n            newValue = q.to(this.qtyUnitTo).scalar;\r\n        }\r\n        this.value$.next(newValue);\r\n        if (notify)\r\n            this.kerviService.spine.sendCommand(this.command, v);\r\n        /** @type {?} */\r\n        var spl = this.sparkline$.value;\r\n        spl.push(newValue);\r\n        if (spl.length > 10)\r\n            spl.shift();\r\n        this.sparkline$.next(spl);\r\n    };\r\n    return NumberValue;\r\n}(KerviValueType));\r\nvar StringValue = /** @class */ (function (_super) {\r\n    __extends(StringValue, _super);\r\n    function StringValue(message, kerviService) {\r\n        var _this = _super.call(this, message, kerviService) || this;\r\n        _this.typeName = \"String\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    StringValue.prototype.getDefaultValue = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return \"\";\r\n    };\r\n    return StringValue;\r\n}(KerviValueType));\r\nvar BooleanValue = /** @class */ (function (_super) {\r\n    __extends(BooleanValue, _super);\r\n    function BooleanValue(message, kerviService) {\r\n        var _this = _super.call(this, message, kerviService) || this;\r\n        _this.typeName = \"Boolean\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    BooleanValue.prototype.getDefaultValue = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return false;\r\n    };\r\n    return BooleanValue;\r\n}(KerviValueType));\r\nvar DateTimeValue = /** @class */ (function (_super) {\r\n    __extends(DateTimeValue, _super);\r\n    function DateTimeValue(message, kerviService) {\r\n        var _this = _super.call(this, message, kerviService) || this;\r\n        _this.subType = message.inputType;\r\n        _this.typeName = \"DateTime\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    DateTimeValue.prototype.getDefaultValue = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new Date();\r\n    };\r\n    return DateTimeValue;\r\n}(KerviValueType));\r\nvar ColorValue = /** @class */ (function (_super) {\r\n    __extends(ColorValue, _super);\r\n    function ColorValue(message, kerviService) {\r\n        var _this = _super.call(this, message, kerviService) || this;\r\n        _this.typeName = \"Color\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    ColorValue.prototype.getDefaultValue = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return \"#ffffff\";\r\n    };\r\n    return ColorValue;\r\n}(KerviValueType));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ComponentRef = /** @class */ (function () {\r\n    function ComponentRef(message) {\r\n        this.id = message.id;\r\n    }\r\n    return ComponentRef;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar Controller = /** @class */ (function () {\r\n    function Controller(message, kerviService) {\r\n        var e_1, _a, e_2, _b, e_3, _c, e_4, _d;\r\n        this.componentType = \"controller\";\r\n        this.ui = {};\r\n        this.inputs = [];\r\n        this.outputs = [];\r\n        this.actions = [];\r\n        this.inputReferences = [];\r\n        this.outputReferences = [];\r\n        this.actionsReferences = [];\r\n        this.dashboards = [];\r\n        this.kerviService = kerviService;\r\n        this.id = message.id;\r\n        this.name = message.name;\r\n        this.type = message.type;\r\n        this.ui = message.ui;\r\n        this.visible = message.visible;\r\n        this.parameters = message.parameters;\r\n        this.template = message.template;\r\n        try {\r\n            for (var _e = __values(message.inputs), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                var ref = _f.value;\r\n                this.inputReferences.push(new ComponentRef(ref));\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        try {\r\n            for (var _g = __values(message.outputs), _h = _g.next(); !_h.done; _h = _g.next()) {\r\n                var ref = _h.value;\r\n                this.outputReferences.push(new ComponentRef(ref));\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n        try {\r\n            for (var _j = __values(message.actions), _k = _j.next(); !_k.done; _k = _j.next()) {\r\n                var ref = _k.value;\r\n                this.actionsReferences.push(new ComponentRef(ref));\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_k && !_k.done && (_c = _j.return)) _c.call(_j);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        try {\r\n            for (var _l = __values(message.dashboardLinks), _m = _l.next(); !_m.done; _m = _l.next()) {\r\n                var dashboardLink = _m.value;\r\n                this.dashboards.push(new DashboardLink(this, dashboardLink));\r\n            }\r\n        }\r\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n        finally {\r\n            try {\r\n                if (_m && !_m.done && (_d = _l.return)) _d.call(_l);\r\n            }\r\n            finally { if (e_4) throw e_4.error; }\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Controller.prototype.updateReferences = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var e_5, _a, e_6, _b, e_7, _c;\r\n        if (this.inputs.length == 0) {\r\n            try {\r\n                for (var _d = __values(this.inputReferences), _e = _d.next(); !_e.done; _e = _d.next()) {\r\n                    var ref = _e.value;\r\n                    /** @type {?} */\r\n                    var component = this.kerviService.getComponent(ref.id);\r\n                    if (component)\r\n                        this.inputs.push(component);\r\n                }\r\n            }\r\n            catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\r\n                }\r\n                finally { if (e_5) throw e_5.error; }\r\n            }\r\n        }\r\n        if (this.outputs.length == 0) {\r\n            try {\r\n                for (var _f = __values(this.outputReferences), _g = _f.next(); !_g.done; _g = _f.next()) {\r\n                    var ref = _g.value;\r\n                    /** @type {?} */\r\n                    var component = this.kerviService.getComponent(ref.id);\r\n                    if (component)\r\n                        this.outputs.push(component);\r\n                }\r\n            }\r\n            catch (e_6_1) { e_6 = { error: e_6_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\r\n                }\r\n                finally { if (e_6) throw e_6.error; }\r\n            }\r\n        }\r\n        if (this.actions.length == 0) {\r\n            try {\r\n                for (var _h = __values(this.actionsReferences), _j = _h.next(); !_j.done; _j = _h.next()) {\r\n                    var ref = _j.value;\r\n                    /** @type {?} */\r\n                    var component = this.kerviService.getComponent(ref.id);\r\n                    if (component)\r\n                        this.actions.push(component);\r\n                }\r\n            }\r\n            catch (e_7_1) { e_7 = { error: e_7_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_j && !_j.done && (_c = _h.return)) _c.call(_h);\r\n                }\r\n                finally { if (e_7) throw e_7.error; }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} components\r\n     * @return {?}\r\n     */\r\n    Controller.prototype.removeReferences = /**\r\n     * @param {?} components\r\n     * @return {?}\r\n     */\r\n    function (components) { };\r\n    /**\r\n     * @param {?} component\r\n     * @return {?}\r\n     */\r\n    Controller.prototype.reload = /**\r\n     * @param {?} component\r\n     * @return {?}\r\n     */\r\n    function (component) { };\r\n    return Controller;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\nvar DashboardSizes = /** @class */ (function () {\r\n    function DashboardSizes() {\r\n        this.valueWidth = '3rem';\r\n        this.buttonWidth = '25px';\r\n        this.buttonHeight = '';\r\n        this.switchWidth = '25px';\r\n        this.switchHeight = '25px';\r\n        this.gaugeWidth = '100px';\r\n        this.gaugeHeight = '200px';\r\n    }\r\n    return DashboardSizes;\r\n}());\r\nvar DashboardMessageModel = /** @class */ (function () {\r\n    function DashboardMessageModel(message) {\r\n        this.timestamp = new Date(message.timestamp * 1000);\r\n        this.topic = message.topic;\r\n        this.body = message.body;\r\n        this.type = message.type;\r\n        this.sourceId = message.source_id;\r\n        this.sourceName = message.source_name;\r\n        this.area = message.area;\r\n        this.level = message.level;\r\n    }\r\n    return DashboardMessageModel;\r\n}());\r\nvar DashboardPanelComponent = /** @class */ (function () {\r\n    function DashboardPanelComponent(message) {\r\n        this.message = message;\r\n        this.linkId = message.linkId;\r\n        this.componentId = message.componentId;\r\n        this.component = message.component;\r\n        this.parameters = message.parameters;\r\n    }\r\n    return DashboardPanelComponent;\r\n}());\r\nvar DashboardPanelParameters = /** @class */ (function () {\r\n    function DashboardPanelParameters(messageParameters) {\r\n        this.title = null;\r\n        this.width = null;\r\n        this.height = null;\r\n        this.type = null;\r\n        this.userLog = null;\r\n        this.appHealth = null;\r\n        this.logLength = 5;\r\n        this.layout = 'row';\r\n        this.title = messageParameters.label;\r\n        this.height = this.calcSize(messageParameters.height);\r\n        this.width = this.calcSize(messageParameters.width);\r\n        this.userLog = messageParameters.userLog;\r\n        this.logLength = messageParameters.logLength;\r\n        this.appHealth = messageParameters.app_health;\r\n        if (messageParameters.type) {\r\n            this.type = messageParameters.type;\r\n        }\r\n        if (messageParameters.layout) {\r\n            this.layout = messageParameters.layout;\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    DashboardPanelParameters.prototype.calcSize = /**\r\n     * @private\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        if (value == null)\r\n            return '';\r\n        else if (value === '')\r\n            return '';\r\n        else if (isNaN(value)) {\r\n            return value;\r\n        }\r\n        else if (value > 0)\r\n            return value + '%';\r\n        else\r\n            return '';\r\n    };\r\n    return DashboardPanelParameters;\r\n}());\r\nvar DashboardPanel = /** @class */ (function () {\r\n    function DashboardPanel(dashboard, messagePanel) {\r\n        var e_1, _a;\r\n        this.components = [];\r\n        this.subPanels = [];\r\n        this.hasOnlyGroupPanels = true;\r\n        this.dashboard = dashboard;\r\n        this.id = messagePanel.id;\r\n        this.name = messagePanel.name;\r\n        this.type = messagePanel.type;\r\n        this.parameters = new DashboardPanelParameters(messagePanel.uiParameters);\r\n        /*if (messagePanel.components)\r\n            for(var componentRef of messagePanel.components){\r\n                this.components.push(new DashboardPanelComponentModel(componentRef))\r\n            }*/\r\n        if (messagePanel.panels) {\r\n            try {\r\n                //console.log('spa',messagePanel.panels);\r\n                for (var _b = __values(messagePanel.panels), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var subMessagePanel = _c.value;\r\n                    /** @type {?} */\r\n                    var panel = new DashboardPanel(this, subMessagePanel);\r\n                    this.subPanels.push(panel);\r\n                    if (panel.type !== 'group')\r\n                        this.hasOnlyGroupPanels = false;\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} source\r\n     * @return {?}\r\n     */\r\n    DashboardPanel.prototype.reload = /**\r\n     * @param {?} source\r\n     * @return {?}\r\n     */\r\n    function (source) {\r\n        var e_2, _a, e_3, _b, e_4, _c, e_5, _d, e_6, _e, e_7, _f;\r\n        try {\r\n            //console.log('rl', this);\r\n            for (var _g = __values(source.subPanels), _h = _g.next(); !_h.done; _h = _g.next()) {\r\n                var subPanel = _h.value;\r\n                this.reload(subPanel);\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_h && !_h.done && (_a = _g.return)) _a.call(_g);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n        try {\r\n            for (var _j = __values(source.components), _k = _j.next(); !_k.done; _k = _j.next()) {\r\n                var sourceComponent = _k.value;\r\n                /** @type {?} */\r\n                var found = false;\r\n                try {\r\n                    for (var _l = __values(this.components), _m = _l.next(); !_m.done; _m = _l.next()) {\r\n                        var component = _m.value;\r\n                        if (component.componentId == sourceComponent.componentId) {\r\n                            found = true;\r\n                        }\r\n                    }\r\n                }\r\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_m && !_m.done && (_c = _l.return)) _c.call(_l);\r\n                    }\r\n                    finally { if (e_4) throw e_4.error; }\r\n                }\r\n                if (!found) {\r\n                    this.components.push(sourceComponent);\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_k && !_k.done && (_b = _j.return)) _b.call(_j);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        /** @type {?} */\r\n        var deleteComponents = [];\r\n        try {\r\n            for (var _o = __values(this.components), _p = _o.next(); !_p.done; _p = _o.next()) {\r\n                var component = _p.value;\r\n                /** @type {?} */\r\n                var found = false;\r\n                try {\r\n                    for (var _q = __values(source.components), _r = _q.next(); !_r.done; _r = _q.next()) {\r\n                        var sourceComponent = _r.value;\r\n                        if (sourceComponent.componentId == component.componentId) {\r\n                            found = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                catch (e_6_1) { e_6 = { error: e_6_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_r && !_r.done && (_e = _q.return)) _e.call(_q);\r\n                    }\r\n                    finally { if (e_6) throw e_6.error; }\r\n                }\r\n                if (!found)\r\n                    deleteComponents.push(component);\r\n            }\r\n        }\r\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n        finally {\r\n            try {\r\n                if (_p && !_p.done && (_d = _o.return)) _d.call(_o);\r\n            }\r\n            finally { if (e_5) throw e_5.error; }\r\n        }\r\n        try {\r\n            //console.log('dsc',deleteComponents);\r\n            for (var deleteComponents_1 = __values(deleteComponents), deleteComponents_1_1 = deleteComponents_1.next(); !deleteComponents_1_1.done; deleteComponents_1_1 = deleteComponents_1.next()) {\r\n                var component = deleteComponents_1_1.value;\r\n                this.components.splice(this.components.indexOf(component), 1);\r\n            }\r\n        }\r\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\r\n        finally {\r\n            try {\r\n                if (deleteComponents_1_1 && !deleteComponents_1_1.done && (_f = deleteComponents_1.return)) _f.call(deleteComponents_1);\r\n            }\r\n            finally { if (e_7) throw e_7.error; }\r\n        }\r\n    };\r\n    return DashboardPanel;\r\n}());\r\nvar DashboardBackgroundModel = /** @class */ (function () {\r\n    function DashboardBackgroundModel(message) {\r\n        this.type = message.type;\r\n        this.cameraId = message.cameraId;\r\n    }\r\n    return DashboardBackgroundModel;\r\n}());\r\nvar Dashboard = /** @class */ (function () {\r\n    function Dashboard(message) {\r\n        var e_8, _a;\r\n        this.headerPanel = null;\r\n        this.footerCenterPanel = null;\r\n        this.footerLeftPanel = null;\r\n        this.footerRightPanel = null;\r\n        this.sysPanel = null;\r\n        this.backgroundPanel = null;\r\n        this.controllerPanel = null;\r\n        this.LeftPadXPanel = null;\r\n        this.LeftPadYPanel = null;\r\n        this.RightPadXPanel = null;\r\n        this.RightPadYPanel = null;\r\n        this.dashboards = [];\r\n        this.currentPanel = null;\r\n        this.id = message.id;\r\n        this.name = message.name;\r\n        this.componentType = 'dashboard';\r\n        this.type = message.type;\r\n        this.isDefault = message.isDefault;\r\n        this.template = message.template;\r\n        this.unitSize = message.unitSize;\r\n        //this.background=new DashboardBackgroundModel(message.background);\r\n        this.panels = [];\r\n        this.sysPanels = [];\r\n        if (!this.template) {\r\n            try {\r\n                for (var _b = __values(message.sections), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var messagePanel = _c.value;\r\n                    if (!messagePanel) {\r\n                        console.log('dashboard with null panel', this.id);\r\n                        continue;\r\n                    }\r\n                    /** @type {?} */\r\n                    var panel = new DashboardPanel(this, messagePanel);\r\n                    /** @type {?} */\r\n                    var sysPanel = true;\r\n                    if (panel.id == 'header_center')\r\n                        this.headerPanel = panel;\r\n                    else if (panel.id == 'footer_left')\r\n                        this.footerLeftPanel = panel;\r\n                    else if (panel.id == 'footer_center')\r\n                        this.footerCenterPanel = panel;\r\n                    else if (panel.id == 'footer_right')\r\n                        this.footerRightPanel = panel;\r\n                    else if (panel.id == 'header_right')\r\n                        this.sysPanel = panel;\r\n                    else if (panel.id == 'controllers')\r\n                        this.controllerPanel = panel;\r\n                    else if (panel.id == 'background')\r\n                        this.backgroundPanel = panel;\r\n                    else if (panel.id == 'left_pad_x')\r\n                        this.LeftPadXPanel = panel;\r\n                    else if (panel.id == 'left_pad_y')\r\n                        this.LeftPadYPanel = panel;\r\n                    else if (panel.id == 'right_pad_x')\r\n                        this.RightPadXPanel = panel;\r\n                    else if (panel.id == 'right_pad_y')\r\n                        this.RightPadYPanel = panel;\r\n                    else {\r\n                        sysPanel = false;\r\n                        if (panel.type != 'group') {\r\n                            if (this.currentPanel == null) {\r\n                                this.currentPanel = new DashboardPanel(this, {\r\n                                    'id': null,\r\n                                    'name': '',\r\n                                    'type': 'group',\r\n                                    'components': [],\r\n                                    'panels': [],\r\n                                    'uiParameters': {\r\n                                        'title': '',\r\n                                        'width': 100,\r\n                                        'height': 0,\r\n                                        'userLog': false,\r\n                                        'logLength': 0\r\n                                    }\r\n                                });\r\n                                this.currentPanel.subPanels.push(panel);\r\n                                this.panels.push(this.currentPanel);\r\n                            }\r\n                            else {\r\n                                this.currentPanel.subPanels.push(panel);\r\n                            }\r\n                        }\r\n                        else {\r\n                            this.panels.push(panel);\r\n                            this.currentPanel = null;\r\n                        }\r\n                    }\r\n                    if (sysPanel)\r\n                        this.sysPanels.push(panel);\r\n                }\r\n            }\r\n            catch (e_8_1) { e_8 = { error: e_8_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_8) throw e_8.error; }\r\n            }\r\n            if (!this.currentPanel) {\r\n                this.currentPanel = new DashboardPanel(this, {\r\n                    'id': null,\r\n                    'name': '',\r\n                    'type': 'group',\r\n                    'components': [],\r\n                    'panels': [],\r\n                    'uiParameters': {\r\n                        'title': '',\r\n                        'width': 100,\r\n                        'height': 0,\r\n                        'userLog': false,\r\n                        'logLength': 0\r\n                    }\r\n                });\r\n                //this.currentPanel.subPanels.push(panel);\r\n                this.panels.push(this.currentPanel);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Dashboard.prototype.isEmpty = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.panels.length == 0;\r\n    };\r\n    /**\r\n     * @param {?} deleteComponents\r\n     * @return {?}\r\n     */\r\n    Dashboard.prototype.removeReferences = /**\r\n     * @param {?} deleteComponents\r\n     * @return {?}\r\n     */\r\n    function (deleteComponents) { };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Dashboard.prototype.updateReferences = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    /**\r\n     * @param {?} component\r\n     * @return {?}\r\n     */\r\n    Dashboard.prototype.reload = /**\r\n     * @param {?} component\r\n     * @return {?}\r\n     */\r\n    function (component) {\r\n        /** @type {?} */\r\n        var source = (/** @type {?} */ (component));\r\n        if (!this.backgroundPanel && source.backgroundPanel)\r\n            this.backgroundPanel = source.backgroundPanel;\r\n        else if (this.backgroundPanel && !source.backgroundPanel)\r\n            this.backgroundPanel = null;\r\n        else if (this.backgroundPanel)\r\n            this.backgroundPanel.reload(source.backgroundPanel);\r\n        if (!this.footerLeftPanel && source.footerLeftPanel)\r\n            this.footerLeftPanel = source.footerLeftPanel;\r\n        else if (this.footerLeftPanel && !source.footerLeftPanel)\r\n            this.footerLeftPanel = null;\r\n        else if (this.footerLeftPanel)\r\n            this.footerLeftPanel.reload(source.footerLeftPanel);\r\n        if (!this.footerRightPanel && source.footerRightPanel)\r\n            this.footerRightPanel = source.footerRightPanel;\r\n        else if (this.footerRightPanel && !source.footerRightPanel)\r\n            this.footerRightPanel = null;\r\n        else if (this.footerRightPanel)\r\n            this.footerRightPanel.reload(source.footerRightPanel);\r\n        if (!this.footerCenterPanel && source.footerCenterPanel)\r\n            this.footerCenterPanel = source.footerCenterPanel;\r\n        else if (this.footerCenterPanel && !source.footerCenterPanel)\r\n            this.footerCenterPanel = null;\r\n        else if (this.footerCenterPanel)\r\n            this.footerCenterPanel.reload(source.footerCenterPanel);\r\n        /*if (!this.headerPanel && source.headerPanel)\r\n            this.headerPanel=source.headerPanel;\r\n        else if (this.headerPanel && !source.headerPanel)\r\n            this.headerPanel = null\r\n        else if (this.headerPanel)\r\n            this.headerPanel.reload(source.headerPanel)*/\r\n        if (!this.sysPanel && source.sysPanel)\r\n            this.sysPanel = source.sysPanel;\r\n        else if (this.sysPanel && !source.sysPanel)\r\n            this.sysPanel = null;\r\n        else if (this.sysPanel)\r\n            this.sysPanel.reload(source.sysPanel);\r\n        if (!this.LeftPadXPanel && source.LeftPadXPanel)\r\n            this.LeftPadXPanel = source.LeftPadXPanel;\r\n        else if (this.LeftPadXPanel && !source.LeftPadXPanel)\r\n            this.LeftPadXPanel = null;\r\n        else if (this.LeftPadXPanel)\r\n            this.LeftPadXPanel.reload(source.LeftPadXPanel);\r\n        if (!this.LeftPadYPanel && source.LeftPadYPanel)\r\n            this.LeftPadYPanel = source.LeftPadYPanel;\r\n        else if (this.LeftPadYPanel && !source.LeftPadYPanel)\r\n            this.LeftPadYPanel = null;\r\n        else if (this.LeftPadYPanel)\r\n            this.LeftPadYPanel.reload(source.LeftPadYPanel);\r\n        if (!this.RightPadXPanel && source.RightPadXPanel)\r\n            this.RightPadXPanel = source.RightPadXPanel;\r\n        else if (this.RightPadXPanel && !source.RightPadXPanel)\r\n            this.RightPadXPanel = null;\r\n        else if (this.RightPadXPanel)\r\n            this.RightPadXPanel.reload(source.RightPadXPanel);\r\n        if (!this.RightPadYPanel && source.RightPadYPanel)\r\n            this.RightPadYPanel = source.RightPadYPanel;\r\n        else if (this.RightPadYPanel && !source.RightPadYPanel)\r\n            this.RightPadYPanel = null;\r\n        else if (this.RightPadYPanel)\r\n            this.RightPadYPanel.reload(source.RightPadYPanel);\r\n        if (!this.controllerPanel && source.controllerPanel)\r\n            this.controllerPanel = source.controllerPanel;\r\n        else if (this.controllerPanel && !source.controllerPanel)\r\n            this.controllerPanel = null;\r\n        else if (this.controllerPanel)\r\n            this.controllerPanel.reload(source.controllerPanel);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} id\r\n     * @param {?} panels\r\n     * @return {?}\r\n     */\r\n    Dashboard.prototype.getDashboardPanelById = /**\r\n     * @private\r\n     * @param {?} id\r\n     * @param {?} panels\r\n     * @return {?}\r\n     */\r\n    function (id, panels) {\r\n        var e_9, _a;\r\n        try {\r\n            for (var panels_1 = __values(panels), panels_1_1 = panels_1.next(); !panels_1_1.done; panels_1_1 = panels_1.next()) {\r\n                var panel = panels_1_1.value;\r\n                if (panel.id == id)\r\n                    return panel;\r\n                else {\r\n                    /** @type {?} */\r\n                    var res = this.getDashboardPanelById(id, panel.subPanels);\r\n                    if (res)\r\n                        return res;\r\n                }\r\n            }\r\n        }\r\n        catch (e_9_1) { e_9 = { error: e_9_1 }; }\r\n        finally {\r\n            try {\r\n                if (panels_1_1 && !panels_1_1.done && (_a = panels_1.return)) _a.call(panels_1);\r\n            }\r\n            finally { if (e_9) throw e_9.error; }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @param {?} link\r\n     * @return {?}\r\n     */\r\n    Dashboard.prototype.addDashboardLink = /**\r\n     * @param {?} link\r\n     * @return {?}\r\n     */\r\n    function (link) {\r\n        if (link.dashboardId == '*' || link.dashboardId == this.id || (link.dashboardId == '**default**' && this.isDefault)) {\r\n            /** @type {?} */\r\n            var panel = this.getDashboardPanelById(link.panelId, this.panels);\r\n            if (!panel)\r\n                panel = this.getDashboardPanelById(link.panelId, this.sysPanels);\r\n            if (panel) {\r\n                panel.components.push(new DashboardPanelComponent(link));\r\n            }\r\n            else {\r\n                // console.log('adh',link);\r\n                /** @type {?} */\r\n                var messagePanel = {\r\n                    id: link.panelId,\r\n                    name: link.panelName,\r\n                    type: 'panel',\r\n                    uiParameters: {\r\n                        'title': '',\r\n                        'width': 0,\r\n                        'height': 0,\r\n                        'userLog': false,\r\n                        'logLength': 0\r\n                    }\r\n                };\r\n                /** @type {?} */\r\n                var newPanel = new DashboardPanel(this, messagePanel);\r\n                this.currentPanel.subPanels.push(newPanel);\r\n                newPanel.components.push(new DashboardPanelComponent(link));\r\n            }\r\n        }\r\n    };\r\n    return Dashboard;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar Action = /** @class */ (function () {\r\n    function Action(message, kerviService) {\r\n        var e_1, _a;\r\n        this.kerviService = null;\r\n        this.id = null;\r\n        this.name = null;\r\n        this.componentType = 'action';\r\n        this.runCommand = '';\r\n        this.interruptCommand = '';\r\n        this.ui = {\r\n            type: '',\r\n            orientation: '',\r\n            visible: true\r\n        };\r\n        this.dashboards = [];\r\n        this.running$ = new BehaviorSubject(false);\r\n        this.kerviService = kerviService;\r\n        this.id = message.id;\r\n        this.name = message.name;\r\n        this.ui = message.ui;\r\n        this.ui.visible = message.visible;\r\n        this.ui.type = message.type;\r\n        this.runCommand = message.runCommand;\r\n        this.interruptCommand = message.interruptCommand;\r\n        this.running$.next(message.running);\r\n        try {\r\n            for (var _b = __values(message.dashboardLinks), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var dashboardLink = _c.value;\r\n                this.dashboards.push(new DashboardLink(this, dashboardLink));\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} parameters\r\n     * @return {?}\r\n     */\r\n    Action.prototype.run = /**\r\n     * @param {?} parameters\r\n     * @return {?}\r\n     */\r\n    function (parameters) {\r\n        var _a;\r\n        //if (!this.running$.value){\r\n        if (parameters && parameters.length > 0)\r\n            (_a = this.kerviService.spine).sendCommand.apply(_a, __spread([this.runCommand], parameters));\r\n        else\r\n            this.kerviService.spine.sendCommand(this.runCommand);\r\n        //}\r\n    };\r\n    /**\r\n     * @param {?} parameters\r\n     * @return {?}\r\n     */\r\n    Action.prototype.interrupt = /**\r\n     * @param {?} parameters\r\n     * @return {?}\r\n     */\r\n    function (parameters) {\r\n        var _a;\r\n        if (parameters && parameters.length > 0)\r\n            (_a = this.kerviService.spine).sendCommand.apply(_a, __spread([this.interruptCommand], parameters));\r\n        else\r\n            this.kerviService.spine.sendCommand(this.interruptCommand);\r\n    };\r\n    return Action;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ComponentFactory = /** @class */ (function () {\r\n    function ComponentFactory() {\r\n    }\r\n    /**\r\n     * @param {?} message\r\n     * @param {?} kerviService\r\n     * @return {?}\r\n     */\r\n    ComponentFactory.createComponents = /**\r\n     * @param {?} message\r\n     * @param {?} kerviService\r\n     * @return {?}\r\n     */\r\n    function (message, kerviService) {\r\n        /** @type {?} */\r\n        var foundComponents = this.createComponentsRec(message, kerviService);\r\n        this.linkToDashboards(foundComponents[0], foundComponents[1]);\r\n        return foundComponents[0];\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} message\r\n     * @param {?} kerviService\r\n     * @return {?}\r\n     */\r\n    ComponentFactory.createComponentsRec = /**\r\n     * @private\r\n     * @param {?} message\r\n     * @param {?} kerviService\r\n     * @return {?}\r\n     */\r\n    function (message, kerviService) {\r\n        var e_1, _a;\r\n        /** @type {?} */\r\n        var result = [];\r\n        /** @type {?} */\r\n        var dashboards = [];\r\n        if (Array.isArray(message)) {\r\n            for (var i = 0; (i < message.length); i++) {\r\n                /** @type {?} */\r\n                var subComponents = this.createComponentsRec(message[i], kerviService);\r\n                result = result.concat(subComponents[0]);\r\n                dashboards = dashboards.concat(subComponents[1]);\r\n            }\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var component = null;\r\n            /** @type {?} */\r\n            var subComponents = [];\r\n            if (message.componentType === 'KerviAction') {\r\n                component = new Action(message, kerviService);\r\n            }\r\n            else if (message.componentType === 'dashboard') {\r\n                component = new Dashboard(message);\r\n                dashboards.push(component);\r\n            }\r\n            else if (message.componentType === 'controller') {\r\n                component = new Controller(message, kerviService);\r\n            }\r\n            else if (message.componentType === 'boolean-value') {\r\n                component = new BooleanValue(message, kerviService);\r\n            }\r\n            else if (message.componentType === 'number-value') {\r\n                component = new NumberValue(message, kerviService);\r\n            }\r\n            else if (message.componentType === 'string-value') {\r\n                component = new StringValue(message, kerviService);\r\n            }\r\n            else if (message.componentType === 'enum-value') {\r\n                component = new SelectValue(message, kerviService);\r\n            }\r\n            else if (message.componentType === 'datetime-value') {\r\n                component = new DateTimeValue(message, kerviService);\r\n            }\r\n            else if (message.componentType === 'color-value') {\r\n                component = new ColorValue(message, kerviService);\r\n            }\r\n            if (component) {\r\n                result.push(component);\r\n            }\r\n            if (subComponents) {\r\n                try {\r\n                    for (var subComponents_1 = __values(subComponents), subComponents_1_1 = subComponents_1.next(); !subComponents_1_1.done; subComponents_1_1 = subComponents_1.next()) {\r\n                        var subComponent = subComponents_1_1.value;\r\n                        result.push(subComponent);\r\n                    }\r\n                }\r\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (subComponents_1_1 && !subComponents_1_1.done && (_a = subComponents_1.return)) _a.call(subComponents_1);\r\n                    }\r\n                    finally { if (e_1) throw e_1.error; }\r\n                }\r\n            }\r\n        }\r\n        return [result, dashboards];\r\n    };\r\n    /**\r\n     * @param {?} components\r\n     * @return {?}\r\n     */\r\n    ComponentFactory.FixControllerReferences = /**\r\n     * @param {?} components\r\n     * @return {?}\r\n     */\r\n    function (components) {\r\n        var e_2, _a;\r\n        try {\r\n            for (var components_1 = __values(components), components_1_1 = components_1.next(); !components_1_1.done; components_1_1 = components_1.next()) {\r\n                var component = components_1_1.value;\r\n                /** @type {?} */\r\n                var controller = (/** @type {?} */ (component));\r\n                if (controller && controller.componentType === 'controller') {\r\n                    controller.updateReferences();\r\n                }\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (components_1_1 && !components_1_1.done && (_a = components_1.return)) _a.call(components_1);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} components\r\n     * @param {?} dashboards\r\n     * @return {?}\r\n     */\r\n    ComponentFactory.linkToDashboards = /**\r\n     * @private\r\n     * @param {?} components\r\n     * @param {?} dashboards\r\n     * @return {?}\r\n     */\r\n    function (components, dashboards) {\r\n        var e_3, _a, e_4, _b, e_5, _c;\r\n        console.log('ltd', components, dashboards);\r\n        try {\r\n            for (var components_2 = __values(components), components_2_1 = components_2.next(); !components_2_1.done; components_2_1 = components_2.next()) {\r\n                var component = components_2_1.value;\r\n                if (!(component instanceof Dashboard)) {\r\n                    try {\r\n                        for (var _d = __values(component.dashboards), _e = _d.next(); !_e.done; _e = _d.next()) {\r\n                            var link = _e.value;\r\n                            try {\r\n                                for (var dashboards_1 = __values(dashboards), dashboards_1_1 = dashboards_1.next(); !dashboards_1_1.done; dashboards_1_1 = dashboards_1.next()) {\r\n                                    var dashboard = dashboards_1_1.value;\r\n                                    dashboard.addDashboardLink(link);\r\n                                }\r\n                            }\r\n                            catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n                            finally {\r\n                                try {\r\n                                    if (dashboards_1_1 && !dashboards_1_1.done && (_c = dashboards_1.return)) _c.call(dashboards_1);\r\n                                }\r\n                                finally { if (e_5) throw e_5.error; }\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (_e && !_e.done && (_b = _d.return)) _b.call(_d);\r\n                        }\r\n                        finally { if (e_4) throw e_4.error; }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (components_2_1 && !components_2_1.done && (_a = components_2.return)) _a.call(components_2);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n    };\r\n    return ComponentFactory;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar FileBase = /** @class */ (function () {\r\n    function FileBase() {\r\n        this.isFile = true;\r\n    }\r\n    return FileBase;\r\n}());\r\nvar File = /** @class */ (function (_super) {\r\n    __extends(File, _super);\r\n    function File() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return File;\r\n}(FileBase));\r\nvar Directory = /** @class */ (function (_super) {\r\n    __extends(Directory, _super);\r\n    function Directory(path) {\r\n        var _this = _super.call(this) || this;\r\n        _this.files$ = new BehaviorSubject([]);\r\n        _this.path = path;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} files\r\n     * @return {?}\r\n     */\r\n    Directory.prototype.updateFiles = /**\r\n     * @param {?} files\r\n     * @return {?}\r\n     */\r\n    function (files) {\r\n        var e_1, _a;\r\n        /** @type {?} */\r\n        var result = [];\r\n        try {\r\n            for (var files_1 = __values(files), files_1_1 = files_1.next(); !files_1_1.done; files_1_1 = files_1.next()) {\r\n                var file = files_1_1.value;\r\n                if (file.is_file) {\r\n                    /** @type {?} */\r\n                    var fileEntry = new File();\r\n                    fileEntry.name = file.name;\r\n                    /** @type {?} */\r\n                    var p = this.path !== '/' ? this.path : '';\r\n                    fileEntry.path = p + '/' + file.name;\r\n                    result.push(fileEntry);\r\n                }\r\n                else {\r\n                    /** @type {?} */\r\n                    var p = this.path !== '/' ? this.path : '';\r\n                    /** @type {?} */\r\n                    var directory = new Directory(p + '/' + file.name);\r\n                    directory.name = file.name;\r\n                    directory.isFile = false;\r\n                    result.push(directory);\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (files_1_1 && !files_1_1.done && (_a = files_1.return)) _a.call(files_1);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        this.files$.next(result);\r\n    };\r\n    return Directory;\r\n}(FileBase));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar StreamEvent = /** @class */ (function () {\r\n    function StreamEvent(streamId, streamEvent, data) {\r\n        this.streamId = streamId;\r\n        this.event = streamEvent;\r\n        this.data = data;\r\n    }\r\n    return StreamEvent;\r\n}());\r\nvar Stream = /** @class */ (function () {\r\n    function Stream(streamId, events, kerviService) {\r\n        this.streamId = streamId;\r\n        this.events = events;\r\n        this.kerviService = kerviService;\r\n        this.events$ = new BehaviorSubject(null);\r\n        /** @type {?} */\r\n        var self = this;\r\n        kerviService.spine.addStreamHandler(streamId, events, (/**\r\n         * @param {?} e_streamId\r\n         * @param {?} e_streamEvent\r\n         * @param {?} e_data\r\n         * @return {?}\r\n         */\r\n        function (e_streamId, e_streamEvent, e_data) {\r\n            /** @type {?} */\r\n            var event = new StreamEvent(e_streamId, e_streamEvent, e_data);\r\n            /** @type {?} */\r\n            var notify = false;\r\n            if (events === null || events.length === 0 || events.indexOf(e_streamEvent) >= 0) {\r\n                notify = true;\r\n            }\r\n            if (notify) {\r\n                self.events$.next(event);\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Stream.prototype.close = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.kerviService.spine.removeStreamHandler(this.streamId, this.events, null);\r\n    };\r\n    return Stream;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @enum {number} */\r\nvar ConnectionState = {\r\n    disconnected: 0, loading: 1, authenticate: 2, connected: 3,\r\n};\r\nConnectionState[ConnectionState.disconnected] = 'disconnected';\r\nConnectionState[ConnectionState.loading] = 'loading';\r\nConnectionState[ConnectionState.authenticate] = 'authenticate';\r\nConnectionState[ConnectionState.connected] = 'connected';\r\n/** @enum {number} */\r\nvar UserLogStateType = {\r\n    normal: 0, warning: 1, error: 2,\r\n};\r\nUserLogStateType[UserLogStateType.normal] = 'normal';\r\nUserLogStateType[UserLogStateType.warning] = 'warning';\r\nUserLogStateType[UserLogStateType.error] = 'error';\r\nvar KerviBaseService = /** @class */ (function () {\r\n    function KerviBaseService() {\r\n        this.spine = null;\r\n        this.lastAppPingTime = null;\r\n        this.lastPingDiff = 0;\r\n        this.appPingDiff$ = new BehaviorSubject(0);\r\n        this.appPingDelay$ = new BehaviorSubject(0);\r\n        this.mps$ = new BehaviorSubject(0);\r\n        this.appInfo = null;\r\n        this.texts = null;\r\n        this.components = [];\r\n        this.components$ = new BehaviorSubject([]);\r\n        this.connectionState$ = new BehaviorSubject(ConnectionState.disconnected);\r\n        this.doAuthenticate = false;\r\n        this.componentsChanged$ = new BehaviorSubject(false);\r\n        this.logMessages = [];\r\n        this.logMessages$ = new BehaviorSubject([]);\r\n        this.lastLogMessage$ = new BehaviorSubject(null);\r\n        this.LogMessageCount$ = new BehaviorSubject(0);\r\n        this.LogMessageState$ = new BehaviorSubject(UserLogStateType.normal);\r\n        this.streams = {};\r\n        this.IPCReady$ = new BehaviorSubject(false);\r\n        this.authPromise = null;\r\n        console.log('kervi service constructor');\r\n        /** @type {?} */\r\n        var self = this;\r\n        this.application$ = new BehaviorSubject(null);\r\n        this.IPCReady$.subscribe((/**\r\n         * @param {?} connected\r\n         * @return {?}\r\n         */\r\n        function (connected) {\r\n            if (connected) {\r\n                console.log('kervi service ipc ready (connected)');\r\n                self.spine.addEventHandler('valueChanged', '', (/**\r\n                 * @param {?} id\r\n                 * @param {?} value\r\n                 * @return {?}\r\n                 */\r\n                function (id, value) {\r\n                    var e_1, _a;\r\n                    try {\r\n                        for (var _b = __values(self.components), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                            var component = _c.value;\r\n                            if (component.id === value.id) {\r\n                                /** @type {?} */\r\n                                var dynamicValue = (/** @type {?} */ (component));\r\n                                dynamicValue.valueTS = new Date(this.timestamp);\r\n                                dynamicValue.set(value.value, false);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                        }\r\n                        finally { if (e_1) throw e_1.error; }\r\n                    }\r\n                }));\r\n                self.spine.addEventHandler('appPing', null, (/**\r\n                 * @param {?} id\r\n                 * @param {?} data\r\n                 * @return {?}\r\n                 */\r\n                function (id, data) {\r\n                    // console.log('appPing', self.lastAppPingTime, id, data);\r\n                    if (self.lastAppPingTime === null) {\r\n                        self.lastAppPingTime = new Date();\r\n                    }\r\n                    else {\r\n                        /** @type {?} */\r\n                        var now = new Date();\r\n                        /** @type {?} */\r\n                        var pingDiff = now.getTime() - self.lastAppPingTime.getTime() - 1000;\r\n                        /** @type {?} */\r\n                        var pingDelay = now.getTime() - data.ts * 1000;\r\n                        self.appPingDelay$.next(pingDelay);\r\n                        self.lastAppPingTime = now;\r\n                        if (pingDiff !== self.lastPingDiff) {\r\n                            self.lastPingDiff = pingDiff;\r\n                            self.appPingDiff$.next(self.lastPingDiff);\r\n                        }\r\n                    }\r\n                }));\r\n                self.spine.addEventHandler('actionStarted', '', (/**\r\n                 * @param {?} id\r\n                 * @return {?}\r\n                 */\r\n                function (id) {\r\n                    var e_2, _a;\r\n                    console.log('as', id);\r\n                    try {\r\n                        for (var _b = __values(self.components), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                            var component = _c.value;\r\n                            if (component.id === id) {\r\n                                /** @type {?} */\r\n                                var action = (/** @type {?} */ (component));\r\n                                action.running$.next(true);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                        }\r\n                        finally { if (e_2) throw e_2.error; }\r\n                    }\r\n                }));\r\n                self.spine.addEventHandler('actionDone', '', (/**\r\n                 * @param {?} id\r\n                 * @return {?}\r\n                 */\r\n                function (id) {\r\n                    var e_3, _a;\r\n                    console.log('ad', id);\r\n                    try {\r\n                        for (var _b = __values(self.components), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                            var component = _c.value;\r\n                            if (component.id === id) {\r\n                                /** @type {?} */\r\n                                var action = (/** @type {?} */ (component));\r\n                                action.running$.next(false);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                        }\r\n                        finally { if (e_3) throw e_3.error; }\r\n                    }\r\n                }));\r\n                self.spine.addEventHandler('userLogMessage', null, (/**\r\n                 * @param {?} v\r\n                 * @return {?}\r\n                 */\r\n                function (v) {\r\n                    var e_4, _a;\r\n                    /** @type {?} */\r\n                    var messages = self.logMessages$.value;\r\n                    /** @type {?} */\r\n                    var newMessage = new DashboardMessageModel(this);\r\n                    messages.unshift(newMessage);\r\n                    if (messages.length > 10) {\r\n                        messages.pop();\r\n                    }\r\n                    /** @type {?} */\r\n                    var hasErrors = 0;\r\n                    /** @type {?} */\r\n                    var hasWarnings = 0;\r\n                    try {\r\n                        for (var messages_1 = __values(messages), messages_1_1 = messages_1.next(); !messages_1_1.done; messages_1_1 = messages_1.next()) {\r\n                            var message = messages_1_1.value;\r\n                            if (message.level === 1) {\r\n                                hasErrors++;\r\n                            }\r\n                            if (message.level === 2) {\r\n                                hasWarnings++;\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (messages_1_1 && !messages_1_1.done && (_a = messages_1.return)) _a.call(messages_1);\r\n                        }\r\n                        finally { if (e_4) throw e_4.error; }\r\n                    }\r\n                    if (hasErrors) {\r\n                        self.LogMessageState$.next(UserLogStateType.error);\r\n                    }\r\n                    else if (hasWarnings) {\r\n                        self.LogMessageState$.next(UserLogStateType.warning);\r\n                    }\r\n                    else {\r\n                        self.LogMessageState$.next(UserLogStateType.normal);\r\n                    }\r\n                    self.LogMessageCount$.next(messages.length);\r\n                    self.lastLogMessage$.next(newMessage);\r\n                    self.logMessages$.next(messages);\r\n                }));\r\n            }\r\n        }));\r\n    }\r\n    /**\r\n     * @param {?} path\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.GetDirectory = /**\r\n     * @param {?} path\r\n     * @return {?}\r\n     */\r\n    function (path) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var promise = new Promise((/**\r\n         * @param {?} resolve\r\n         * @param {?} reject\r\n         * @return {?}\r\n         */\r\n        function (resolve, reject) {\r\n            /** @type {?} */\r\n            var directory = new Directory(path);\r\n            _this.spine.sendQuery('files_get_dir', path, (/**\r\n             * @param {?} directoryFiles\r\n             * @return {?}\r\n             */\r\n            function (directoryFiles) {\r\n                directory.updateFiles(directoryFiles);\r\n                resolve(directory);\r\n            }));\r\n        }));\r\n        return promise;\r\n    };\r\n    /**\r\n     * @param {?} path\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.GetThumbnail = /**\r\n     * @param {?} path\r\n     * @return {?}\r\n     */\r\n    function (path) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var promise = new Promise((/**\r\n         * @param {?} resolve\r\n         * @param {?} reject\r\n         * @return {?}\r\n         */\r\n        function (resolve, reject) {\r\n            _this.spine.sendQuery('files_get_thumbnail', path, (/**\r\n             * @param {?} thumbnail\r\n             * @return {?}\r\n             */\r\n            function (thumbnail) {\r\n                resolve(thumbnail);\r\n            }));\r\n        }));\r\n        return promise;\r\n    };\r\n    /**\r\n     * @param {?} path\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.GetFile = /**\r\n     * @param {?} path\r\n     * @return {?}\r\n     */\r\n    function (path) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var promise = new Promise((/**\r\n         * @param {?} resolve\r\n         * @param {?} reject\r\n         * @return {?}\r\n         */\r\n        function (resolve, reject) {\r\n            _this.spine.sendQuery('files_get_file', path, (/**\r\n             * @param {?} file\r\n             * @return {?}\r\n             */\r\n            function (file) {\r\n                resolve(file);\r\n            }));\r\n        }));\r\n        return promise;\r\n    };\r\n    /**\r\n     * @param {?} streamId\r\n     * @param {?=} events\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.GetStream = /**\r\n     * @param {?} streamId\r\n     * @param {?=} events\r\n     * @return {?}\r\n     */\r\n    function (streamId, events) {\r\n        if (events === void 0) { events = []; }\r\n        return new Stream(streamId, events, this);\r\n    };\r\n    /**\r\n     * @param {?} key\r\n     * @param {?=} defaultValue\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.text = /**\r\n     * @param {?} key\r\n     * @param {?=} defaultValue\r\n     * @return {?}\r\n     */\r\n    function (key, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = ''; }\r\n        if (this.texts && key in this.texts) {\r\n            return this.texts[key];\r\n        }\r\n        else {\r\n            return defaultValue;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.getLogMessages$ = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.logMessages$.asObservable();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.getLastLogMessage$ = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.lastLogMessage$.asObservable();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.getLogState$ = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.LogMessageState$.asObservable();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.getLogMessageCount$ = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.LogMessageCount$.asObservable();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.isAppEmpty = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var defaultDashboard = this.getDefaultDashboard();\r\n        if (defaultDashboard) {\r\n            return defaultDashboard.isEmpty();\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * @param {?} id\r\n     * @param {?=} componentType\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.getComponent = /**\r\n     * @param {?} id\r\n     * @param {?=} componentType\r\n     * @return {?}\r\n     */\r\n    function (id, componentType) {\r\n        if (componentType === void 0) { componentType = null; }\r\n        var e_5, _a;\r\n        try {\r\n            for (var _b = __values(this.components), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var component = _c.value;\r\n                if (component.id === id && (componentType == null || component.componentType === componentType)) {\r\n                    return component;\r\n                }\r\n            }\r\n        }\r\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_5) throw e_5.error; }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @param {?} type\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.getComponentsByType = /**\r\n     * @param {?} type\r\n     * @return {?}\r\n     */\r\n    function (type) {\r\n        var e_6, _a;\r\n        /** @type {?} */\r\n        var result = [];\r\n        try {\r\n            for (var _b = __values(this.components), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var component = _c.value;\r\n                if (component.componentType === type) {\r\n                    result.push(component);\r\n                }\r\n            }\r\n        }\r\n        catch (e_6_1) { e_6 = { error: e_6_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_6) throw e_6.error; }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.getDefaultDashboard = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var e_7, _a;\r\n        /** @type {?} */\r\n        var dashboards = (/** @type {?} */ (this.getComponentsByType('dashboard')));\r\n        try {\r\n            for (var dashboards_1 = __values(dashboards), dashboards_1_1 = dashboards_1.next(); !dashboards_1_1.done; dashboards_1_1 = dashboards_1.next()) {\r\n                var dashboard = dashboards_1_1.value;\r\n                if (dashboard.isDefault) {\r\n                    return dashboard;\r\n                }\r\n            }\r\n        }\r\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\r\n        finally {\r\n            try {\r\n                if (dashboards_1_1 && !dashboards_1_1.done && (_a = dashboards_1.return)) _a.call(dashboards_1);\r\n            }\r\n            finally { if (e_7) throw e_7.error; }\r\n        }\r\n        if (dashboards.length > 0) {\r\n            return dashboards[0];\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.connect = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var address = null;\r\n        /** @type {?} */\r\n        var protocol = 'ws';\r\n        try {\r\n            if (kerviSocketAddress) {\r\n                address = kerviSocketAddress;\r\n            }\r\n            if (socketProtocol) {\r\n                protocol = socketProtocol;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // for testing with ng serve\r\n            /** @type {?} */\r\n            var httpProtocol = location.protocol;\r\n            if (httpProtocol === 'https') {\r\n                protocol = 'wss';\r\n            }\r\n            /** @type {?} */\r\n            var httpHost = window.location.hostname;\r\n            address = httpHost + ':9000';\r\n        }\r\n        console.log('ks', address);\r\n        this.spine = new KerviWSSpine({\r\n            address: address,\r\n            protocol: protocol,\r\n            onOpen: this.onOpen,\r\n            onClose: this.onClose,\r\n            onAuthenticate: this.onAuthenticate,\r\n            onAuthenticateFailed: this.onAuthenticateFailed,\r\n            onLogOff: this.onLogoff,\r\n            onAuthenticateStart: this.onAuthenticateStart,\r\n            onMPS: this.onMPS,\r\n            targetScope: this\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.connectMQ = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        console.log('ks', sessionStorage.getItem('mqc'));\r\n        if (sessionStorage.getItem('mqc')) {\r\n            this.spine = new KerviRMQSpine({\r\n                onOpen: this.onOpen,\r\n                onClose: this.onClose,\r\n                onAuthenticate: this.onAuthenticate,\r\n                onAuthenticateFailed: this.onAuthenticateFailed,\r\n                onLogOff: this.onLogoff,\r\n                onAuthenticateStart: this.onAuthenticateStart,\r\n                targetScope: this,\r\n                apiToken: JSON.parse(sessionStorage.getItem('mqc'))\r\n            });\r\n        }\r\n        else {\r\n            console.log('qmc not found in storage');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.isAnonymous = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.spine.options.userName === 'anonymous';\r\n    };\r\n    /**\r\n     * @param {?} userName\r\n     * @param {?} password\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.authenticate = /**\r\n     * @param {?} userName\r\n     * @param {?} password\r\n     * @return {?}\r\n     */\r\n    function (userName, password) {\r\n        var _this = this;\r\n        console.log('sa', userName, password);\r\n        this.authPromise = new Promise((/**\r\n         * @param {?} resolve\r\n         * @param {?} reject\r\n         * @return {?}\r\n         */\r\n        function (resolve, reject) {\r\n            _this._resolveSelf = resolve;\r\n            _this._rejectSelf = reject;\r\n        }));\r\n        this.spine.authenticate(userName, password);\r\n        return this.authPromise;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.logoff = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.spine.logoff();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onAuthenticateStart = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onAuthenticate = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.doAuthenticate = true;\r\n        this.reset();\r\n        this._resolveSelf('ok');\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onAuthenticateFailed = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._rejectSelf('error');\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onLogoff = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.doAuthenticate = true;\r\n        if (this.spine.firstOnOpen) {\r\n            this.IPCReady$.next(true);\r\n        }\r\n        this.reset();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.reset = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.components = [];\r\n        this.components$.next(this.components);\r\n        /** @type {?} */\r\n        var messages = [];\r\n        this.LogMessageState$.next(UserLogStateType.normal);\r\n        this.LogMessageCount$.next(messages.length);\r\n        this.logMessages$.next(messages);\r\n        if (this.IPCReady$.value) {\r\n            this.connectionState$.next(ConnectionState.authenticate);\r\n        }\r\n        else {\r\n            this.connectionState$.next(ConnectionState.disconnected);\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} retryCount\r\n     * @param {?} module_load\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.getComponentInfo = /**\r\n     * @private\r\n     * @param {?} retryCount\r\n     * @param {?} module_load\r\n     * @return {?}\r\n     */\r\n    function (retryCount, module_load) {\r\n        /** @type {?} */\r\n        var self = this;\r\n        this.spine.sendQuery('GetApplicationInfo', (/**\r\n         * @param {?} appInfo\r\n         * @return {?}\r\n         */\r\n        function (appInfo) {\r\n            console.log('app info', appInfo);\r\n            this.spine.sendQuery('getComponentInfo', (/**\r\n             * @param {?} message\r\n             * @return {?}\r\n             */\r\n            function (message) {\r\n                console.log('component info', message);\r\n                self.application$.next(appInfo);\r\n                self.texts = appInfo.display.texts;\r\n                self.components = ComponentFactory.createComponents(message, self);\r\n                ComponentFactory.FixControllerReferences(self.getComponentsByType('controller'));\r\n                self.components$.next(self.components);\r\n                self.connectionState$.next(ConnectionState.connected);\r\n                if (module_load) {\r\n                    self.componentsChanged$.next(true);\r\n                }\r\n                console.log('components', self.components);\r\n            }), (/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                console.error('get component info timeout');\r\n                if (retryCount > 0) {\r\n                    self.getComponentInfo(retryCount - 1, module_load);\r\n                }\r\n            }));\r\n        }));\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} first\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onOpen = /**\r\n     * @private\r\n     * @param {?} first\r\n     * @return {?}\r\n     */\r\n    function (first) {\r\n        console.log('kervi service on open', this.spine.firstOnOpen, first, this);\r\n        /** @type {?} */\r\n        var self = this;\r\n        this.connectionState$.next(ConnectionState.loading);\r\n        this.doAuthenticate = this.spine.doAuthenticate;\r\n        this.getComponentInfo(2, false);\r\n        if (self.spine.firstOnOpen) {\r\n            this.IPCReady$.next(true);\r\n            this.spine.addEventHandler('moduleStarted', '', (/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                console.log('module loaded', self.components);\r\n                setTimeout((/**\r\n                 * @return {?}\r\n                 */\r\n                function () {\r\n                    self.getComponentInfo(2, true);\r\n                }), 2000);\r\n            }));\r\n            this.spine.addEventHandler('moduleStopped', '', (/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                console.log('module unloaded');\r\n                setTimeout((/**\r\n                 * @return {?}\r\n                 */\r\n                function () {\r\n                    console.log('module unloaded, refresh');\r\n                    self.getComponentInfo(2, true);\r\n                }), 5000);\r\n            }));\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onClose = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.reset();\r\n        console.log('ks on close');\r\n        this.IPCReady$.next(false);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} mps\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onMPS = /**\r\n     * @private\r\n     * @param {?} mps\r\n     * @return {?}\r\n     */\r\n    function (mps) {\r\n        this.mps$.next(mps);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onHeartbeat = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviBaseService.prototype.onConnect = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    KerviBaseService.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviBaseService.ctorParameters = function () { return []; };\r\n    return KerviBaseService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviJsComponent = /** @class */ (function () {\r\n    function KerviJsComponent() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviJsComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    KerviJsComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'lib-kervi-js',\r\n                    template: \"\\n    <p>\\n      kervi-js works!\\n    </p>\\n  \",\r\n                    styles: []\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviJsComponent.ctorParameters = function () { return []; };\r\n    return KerviJsComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviJsModule = /** @class */ (function () {\r\n    function KerviJsModule() {\r\n    }\r\n    KerviJsModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [],\r\n                    declarations: [KerviJsComponent],\r\n                    exports: [KerviJsComponent]\r\n                },] },\r\n    ];\r\n    return KerviJsModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { KerviBaseService, ConnectionState, KerviValue, ValueRange, ValueRangeType, KerviValueType, KerviEnumOptionModel, SelectValue, NumberValue, StringValue, BooleanValue, DateTimeValue, ColorValue, DashboardSizes, DashboardMessageModel, DashboardPanelComponent, DashboardPanelParameters, DashboardPanel, DashboardBackgroundModel, Dashboard, Action, DashboardLink, Controller, FileBase, File, Directory, StreamEvent, Stream, UserLogStateType, KerviJsModule, KerviJsComponent as ɵa };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2VydmktanMuanMubWFwIiwic291cmNlcyI6WyJuZzovL2tlcnZpLWpzL2xpYi9zcGluZS9rZXJ2aS1zcGluZWJhc2UudHMiLCJuZzovL2tlcnZpLWpzL2xpYi9zcGluZS9rZXJ2aS13cy50cyIsIm5nOi8va2VydmktanMvbGliL3NwaW5lL2tlcnZpLXJtcS50cyIsIm5nOi8va2VydmktanMvbGliL21vZGVscy9JQ29tcG9uZW50Lm1vZGVsLnRzIiwibmc6Ly9rZXJ2aS1qcy9saWIvbW9kZWxzL0tlcnZpVmFsdWVzLm1vZGVsLnRzIiwibmc6Ly9rZXJ2aS1qcy9saWIvbW9kZWxzL0NvbXBvbmVudFJlZi50cyIsIm5nOi8va2VydmktanMvbGliL21vZGVscy9jb250cm9sbGVyLm1vZGVsLnRzIiwibmc6Ly9rZXJ2aS1qcy9saWIvbW9kZWxzL2Rhc2hib2FyZC5tb2RlbC50cyIsIm5nOi8va2VydmktanMvbGliL21vZGVscy9hY3Rpb24ubW9kZWwudHMiLCJuZzovL2tlcnZpLWpzL2xpYi9tb2RlbHMvZmFjdG9yeS50cyIsIm5nOi8va2VydmktanMvbGliL21vZGVscy9maWxlLm1vZGVsLnRzIiwibmc6Ly9rZXJ2aS1qcy9saWIvbW9kZWxzL3N0cmVhbS5tb2RlbC50cyIsIm5nOi8va2VydmktanMvbGliL2tlcnZpLWpzLnNlcnZpY2UudHMiLCJuZzovL2tlcnZpLWpzL2xpYi9rZXJ2aS1qcy5jb21wb25lbnQudHMiLCJuZzovL2tlcnZpLWpzL2xpYi9rZXJ2aS1qcy5tb2R1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDE2LCBUaW0gV2VudHpsYXVcclxuLy8gTGljZW5zZWQgdW5kZXIgTUlUXHJcblxyXG5leHBvcnQgY2xhc3MgIEtlcnZpU3BpbmVCYXNlIHtcclxuXHJcbiAgICBwdWJsaWMgaXNDb25uZWN0ZWQgPSBmYWxzZTtcclxuICAgIHB1YmxpYyBkb0F1dGhlbnRpY2F0ZSA9IGZhbHNlO1xyXG5cclxuICAgIHNlc3Npb25JZCA9IG51bGw7XHJcbiAgICBxdWVyeUhhbmRsZXJzID0gW107XHJcbiAgICBjb21tYW5kSGFuZGxlcnMgPSBbXTtcclxuICAgIGV2ZW50SGFuZGxlcnMgPSBbXTtcclxuICAgIHN0cmVhbUhhbmRsZXJzID0gW107XHJcbiAgICBycGNRdWV1ZSA9IHt9O1xyXG4gICAgcmVhZHkgPSBmYWxzZTtcclxuICAgIG1lc3NhZ2VJZCA9IDA7XHJcbiAgICBzZW5zb3JzID0ge307XHJcbiAgICBjb250cm9sbGVycyA9IHt9O1xyXG4gICAgc2Vuc29yVHlwZXMgPSBbXTtcclxuICAgIGNvbnRyb2xsZXJUeXBlcyA9IFtdO1xyXG4gICAgdmlzaW9uUmVnaW9ucyA9IFtdO1xyXG4gICAgYXBwbGljYXRpb24gPSBudWxsO1xyXG4gICAgYWxsb3dBbm9ueW1vdXMgPSB0cnVlO1xyXG4gICAgZmlyc3RPbk9wZW4gPSB0cnVlO1xyXG4gICAgbWVzc2FnZUNvdW50ID0gMDtcclxuICAgIG1wc1RpbWUgPSBuZXcgRGF0ZTtcclxuICAgIG1wcyA9IDA7XHJcblxyXG4gICAgcHJvdGVjdGVkIHdlYnNvY2tldCA9IG51bGw7XHJcblxyXG4gICAgcHVibGljIG9wdGlvbnM6IGFueSA9IHtcclxuICAgICAgICAgICAgdXNlck5hbWU6ICdhbm9ueW1vdXMnLFxyXG4gICAgICAgICAgICBwYXNzd29yZDogbnVsbCxcclxuICAgICAgICAgICAgYWRkcmVzczogbnVsbCxcclxuICAgICAgICAgICAgb25PcGVuOiBudWxsLFxyXG4gICAgICAgICAgICBvbkNsb3NlOiBudWxsLFxyXG4gICAgICAgICAgICBvbkF1dGhlbnRpY2F0ZTogbnVsbCxcclxuICAgICAgICAgICAgb25BdXRoZW50aWNhdGVGYWlsZWQ6IG51bGwsXHJcbiAgICAgICAgICAgIG9uQXV0aGVudGljYXRlU3RhcnQ6IG51bGwsXHJcbiAgICAgICAgICAgIG9uTG9nT2ZmOiBudWxsLFxyXG4gICAgICAgICAgICBvbk1QUzogbnVsbCxcclxuICAgICAgICAgICAgYXV0b0Nvbm5lY3Q6IHRydWUsXHJcbiAgICAgICAgICAgIHRhcmdldFNjb3BlOiBudWxsLFxyXG4gICAgICAgICAgICBwcm90b2NvbDogJ3dzJyxcclxuICAgICAgICAgICAgYXBpVG9rZW46IG51bGxcclxuICAgIH1cclxuXHJcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgY29uc3RydWN0b3JPcHRpb25zKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ0tlcnZpIGJhc2Ugc3BpbmUgaW5pdCcsIHRoaXMub3B0aW9ucywgY29uc3RydWN0b3JPcHRpb25zKTtcclxuICAgICAgICB0aGlzLm9wdGlvbnMgPSB0aGlzLmV4dGVuZCh0aGlzLm9wdGlvbnMsIGNvbnN0cnVjdG9yT3B0aW9ucyk7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ2tibycsIHRoaXMub3B0aW9ucyk7XHJcbiAgICAgICAgdGhpcy5jb25uZWN0KCk7XHJcbiAgICAgICAgY29uc3Qgc2VsZiA9IHRoaXM7XHJcbiAgICAgICAgc2V0SW50ZXJ2YWwoXHJcbiAgICAgICAgICAgIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGhhbmdpbmdOb2RlcyA9IFtdXHJcbiAgICAgICAgICAgICAgICBmb3IobGV0IGlkIGluIHNlbGYucnBjUXVldWUpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcXVlcnkgPSBzZWxmLnJwY1F1ZXVlW2lkXTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAocXVlcnlbJ2NhbGxiYWNrVGltZW91dCddKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChEYXRlLm5vdygpIC0gcXVlcnlbJ3RzJ10gPiBxdWVyeVsndGltZW91dCddKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjYWxsYmFjayA9IHF1ZXJ5WydjYWxsYmFja1RpbWVvdXQnXTsgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYW5naW5nTm9kZXMucHVzaChpZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjay5jYWxsKHNlbGYub3B0aW9ucy50YXJnZXRTY29wZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBmb3IobGV0IGlkIG9mIGhhbmdpbmdOb2Rlcykge1xyXG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBzZWxmLnJwY1F1ZXVlW2lkXTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICwgMSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIGV4dGVuZCguLi5wOiBhbnlbXSlcclxuICAgIHtcclxuICAgICAgICBmb3IgKGxldCBpID0gMTsgaSA8IHAubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgZm9yKGxldCBrZXkgaW4gcFtpXSkge1xyXG4gICAgICAgICAgICAgICAgaWYocFtpXS5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcFswXVtrZXldID0gcFtpXVtrZXldO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBwWzBdO1xyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBhZGRSUENDYWxsYmFjayhpZDogc3RyaW5nLCBjYWxsYmFjaywgY2FsbGJhY2tUaW1lb3V0LCB0aW1lb3V0KSB7XHJcbiAgICAgICAgaWYgKGNhbGxiYWNrKSB7XHJcbiAgICAgICAgICAgIHRoaXMucnBjUXVldWVbaWRdID0ge1xyXG4gICAgICAgICAgICAgICAgJ2NhbGxiYWNrJzogY2FsbGJhY2ssXHJcbiAgICAgICAgICAgICAgICAnY2FsbGJhY2tUaW1lb3V0JzogY2FsbGJhY2tUaW1lb3V0LFxyXG4gICAgICAgICAgICAgICAgJ3RpbWVvdXQnOiB0aW1lb3V0LFxyXG4gICAgICAgICAgICAgICAgJ3RzJzogRGF0ZS5ub3coKSxcclxuICAgICAgICAgICAgIH07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBoYW5kbGVSUENSZXNwb25zZShtZXNzYWdlKXtcclxuICAgICAgICBpZiAobWVzc2FnZS5pZCBpbiB0aGlzLnJwY1F1ZXVlKXtcclxuICAgICAgICAgICAgdmFyIGNhbGxiYWNrID0gdGhpcy5ycGNRdWV1ZVttZXNzYWdlLmlkXVsnY2FsbGJhY2snXTtcclxuICAgICAgICAgICAgaWYgKGNhbGxiYWNrKXtcclxuICAgICAgICAgICAgICAgIGRlbGV0ZSB0aGlzLnJwY1F1ZXVlW21lc3NhZ2UuaWRdO1xyXG4gICAgICAgICAgICAgICAgY2FsbGJhY2suY2FsbCh0aGlzLm9wdGlvbnMudGFyZ2V0U2NvcGUsbWVzc2FnZS5yZXNwb25zZSxtZXNzYWdlLnJlc3BvbnNlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgaGFuZGxlRXZlbnQobWVzc2FnZSl7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ2V2JywgbWVzc2FnZSlcclxuICAgICAgICBjb25zdCBldmVudE5hbWUgPSBtZXNzYWdlLmV2ZW50O1xyXG4gICAgICAgIGNvbnN0IGlkID0gbWVzc2FnZS5pZDtcclxuXHJcbiAgICAgICAgbGV0IGV2ZW50UGF0aD1ldmVudE5hbWU7XHJcbiAgICAgICAgaWYgKGlkKSB7XHJcbiAgICAgICAgICAgIGV2ZW50UGF0aCArPSAnLycgKyBpZDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCB2YWx1ZSA9IG51bGw7XHJcbiAgICAgICAgaWYobWVzc2FnZS5hcmdzICYmIG1lc3NhZ2UuYXJncy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgdmFsdWUgPSBtZXNzYWdlLmFyZ3NbMF07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZvcih2YXIgbiA9IDA7IChuIDwgdGhpcy5ldmVudEhhbmRsZXJzLmxlbmd0aCk7IG4rKylcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGxldCBoID0gdGhpcy5ldmVudEhhbmRsZXJzW25dO1xyXG4gICAgICAgICAgICBpZiAoaC5ldmVudE5hbWUgPT09IGV2ZW50UGF0aClcclxuICAgICAgICAgICAgICAgIGguY2FsbGJhY2suY2FsbCh2YWx1ZSxpZCx2YWx1ZSk7XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKGguZXZlbnROYW1lID09PSBldmVudE5hbWUpXHJcbiAgICAgICAgICAgICAgICBoLmNhbGxiYWNrLmNhbGwodmFsdWUsaWQsdmFsdWUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgaGFuZGxlU3RyZWFtKG1lc3NhZ2UsIHN0cmVhbUJsb2IpIHtcclxuICAgICAgICBjb25zdCBzdHJlYW1UYWcgPSBtZXNzYWdlLnN0cmVhbUlkICsgJy8nICsgbWVzc2FnZS5zdHJlYW1FdmVudCA7XHJcbiAgICAgICAgZm9yIChsZXQgbiA9IDA7IChuIDwgdGhpcy5zdHJlYW1IYW5kbGVycy5sZW5ndGgpOyBuKyspIHtcclxuICAgICAgICAgICAgY29uc3QgaCA9IHRoaXMuc3RyZWFtSGFuZGxlcnNbbl07XHJcbiAgICAgICAgICAgIGlmIChoLnN0cmVhbVRhZyA9PT0gc3RyZWFtVGFnKSB7XHJcbiAgICAgICAgICAgICAgICBoLmNhbGxiYWNrLmNhbGwobWVzc2FnZS5zdHJlYW1JZCwgbWVzc2FnZS5zdHJlYW1JZCwgbWVzc2FnZS5zdHJlYW1FdmVudCwgc3RyZWFtQmxvYik7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoaC5zdHJlYW1UYWcgPT09IG1lc3NhZ2Uuc3RyZWFtSWQpIHtcclxuICAgICAgICAgICAgICAgIGguY2FsbGJhY2suY2FsbChtZXNzYWdlLnN0cmVhbUlkLCBtZXNzYWdlLnN0cmVhbUlkLCBtZXNzYWdlLnN0cmVhbUV2ZW50LCBzdHJlYW1CbG9iKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgaGFuZGxlQ29tbWFuZChtZXNzYWdlKXtcclxuICAgICAgICBjb25zb2xlLmxvZygnY21kJyx0aGlzLG1lc3NhZ2UpO1xyXG4gICAgICAgIHZhciBjb21tYW5kPW1lc3NhZ2UuY29tbWFuZFxyXG4gICAgICAgIFxyXG4gICAgICAgIHZhciBhcmdzPW51bGw7XHJcbiAgICAgICAgaWYobWVzc2FnZS5hcmdzICYmIG1lc3NhZ2UuYXJncy5sZW5ndGgpe1xyXG4gICAgICAgICAgICBhcmdzPW1lc3NhZ2UuYXJnc1swXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgZm9yKHZhciBuPTA7KG48dGhpcy5jb21tYW5kSGFuZGxlcnMubGVuZ3RoKTtuKyspXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB2YXIgYz10aGlzLmNvbW1hbmRIYW5kbGVyc1tuXTtcclxuICAgICAgICAgICAgaWYgKGMuY29tbWFuZD09Y29tbWFuZClcclxuICAgICAgICAgICAgICAgIGMuY2FsbGJhY2suY2FsbCh0aGlzLGFyZ3MpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgY29ubmVjdCgpIHtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIG9uT3BlbihldnQpIHtcclxuICAgICAgICBjb25zb2xlLmxvZygnS2Vydmkgb3BlbicsIHRoaXMsIGV2dCk7XHJcblxyXG4gICAgICAgIHRoaXMuaXNDb25uZWN0ZWQgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuZXZlbnRIYW5kbGVycyA9IFtdO1xyXG4gICAgICAgIHRoaXMuc3RyZWFtSGFuZGxlcnMgPSBbXTtcclxuICAgICAgICB0aGlzLmNvbW1hbmRIYW5kbGVycyA9IFtdO1xyXG4gICAgICAgIHRoaXMucXVlcnlIYW5kbGVycyA9IFtdO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdLZXJ2aSBzcGluZSByZWFkeScpO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgb25DbG9zZShldnQpIHtcclxuICAgICAgICBjb25zb2xlLmxvZygnS2Vydmkgc3BpbmUgb24gY2xvc2UnLCBldnQpO1xyXG4gICAgICAgIHRoaXMuaXNDb25uZWN0ZWQgPSBmYWxzZTtcclxuICAgICAgICBjb25zdCBzZWxmID0gdGhpcztcclxuICAgICAgICBpZiAodGhpcy5vcHRpb25zLm9uQ2xvc2UpXHJcbiAgICAgICAgICAgIHRoaXMub3B0aW9ucy5vbkNsb3NlLmNhbGwodGhpcy5vcHRpb25zLnRhcmdldFNjb3BlLGV2dCk7XHJcbiAgICAgICAgdGhpcy5maXJzdE9uT3BlbiA9IHRydWU7XHJcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5hdXRvQ29ubmVjdCkge1xyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgc2VsZi5jb25uZWN0KCk7XHJcbiAgICAgICAgICAgIH0sIDEwMDApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYXV0aGVudGljYXRlKHVzZXJOYW1lLCBwYXNzd29yZCkge1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgbG9nb2ZmKCkge1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgb25NZXNzYWdlKGV2dCkge1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgb25FcnJvcihldnQpIHtcclxuICAgICAgICBjb25zb2xlLmxvZygnS2Vydmkgb24gZXJyb3InLCBldnQpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhZGRDb21tYW5kSGFuZGxlciAoY29tbWFuZDogc3RyaW5nLCBjYWxsYmFjaykge1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYWRkUXVlcnlIYW5kbGVyKHF1ZXJ5OiBzdHJpbmcsIGNhbGxiYWNrKSB7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhZGRFdmVudEhhbmRsZXIgPSBmdW5jdGlvbihldmVudE5hbWU6IHN0cmluZywgaWQ6IHN0cmluZywgY2FsbGJhY2spIHtcclxuXHJcbiAgICB9O1xyXG5cclxuICAgIHB1YmxpYyBhZGRTdHJlYW1IYW5kbGVyID0gZnVuY3Rpb24oc3RyZWFtSWQ6IHN0cmluZywgc3RyZWFtRXZlbnQ6IHN0cmluZ1tdLCBjYWxsYmFjaykge1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgcmVtb3ZlU3RyZWFtSGFuZGxlciA9IGZ1bmN0aW9uKHN0cmVhbUlkOiBzdHJpbmcsIHN0cmVhbUV2ZW50OiBzdHJpbmdbXSwgY2FsbGJhY2spIHtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNlbmRDb21tYW5kKGNvbW1hbmQ6IHN0cmluZywgLi4ucDogYW55W10pIHtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNlbmRRdWVyeShxdWVyeSwgLi4ucDogYW55W10pIHtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHRyaWdnZXJFdmVudChldmVudE5hbWU6IHN0cmluZywgaWQ6IHN0cmluZykge1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RyZWFtRGF0YShzdHJlYW1faWQ6IHN0cmluZywgZXZlbnQ6IHN0cmluZyAsIGRhdGE6IGFueSkge1xyXG5cclxuICAgIH1cclxufVxyXG4iLCIvLyBDb3B5cmlnaHQgKGMpIDIwMTYsIFRpbSBXZW50emxhdVxyXG4vLyBMaWNlbnNlZCB1bmRlciBNSVRcclxuaW1wb3J0IHtLZXJ2aVNwaW5lQmFzZX0gZnJvbSAnLi9rZXJ2aS1zcGluZWJhc2UnXHJcbmV4cG9ydCBjbGFzcyAgS2VydmlXU1NwaW5lIGV4dGVuZHMgS2VydmlTcGluZUJhc2V7XHJcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgY29uc3RydWN0b3JPcHRpb25zKXtcclxuICAgICAgICBzdXBlcihjb25zdHJ1Y3Rvck9wdGlvbnMpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdrZXJ2aSBzcGluZSBjb25zdHJ1Y3RvcicpO1xyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBjb25uZWN0KCkge1xyXG4gICAgICAgIGlmICh0aGlzLmlzQ29ubmVjdGVkKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdLZXJ2aSBpcyBjb25uZWN0ZWQnKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBzZWxmID0gdGhpcztcclxuICAgICAgICB0aGlzLndlYnNvY2tldCA9IG5ldyBXZWJTb2NrZXQodGhpcy5vcHRpb25zLnByb3RvY29sICsgJzovLycgKyB0aGlzLm9wdGlvbnMuYWRkcmVzcyk7XHJcbiAgICAgICAgdGhpcy53ZWJzb2NrZXQuYmluYXJ5VHlwZSA9ICdhcnJheWJ1ZmZlcic7XHJcbiAgICAgICAgdGhpcy53ZWJzb2NrZXQub25vcGVuID0gZnVuY3Rpb24oZXZ0KSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdrZXJ2aSBzcGluZSBvbiBvcGVuJyk7XHJcbiAgICAgICAgICAgIHNlbGYub25PcGVuKGV2dCk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdGhpcy53ZWJzb2NrZXQub25jbG9zZSA9IGZ1bmN0aW9uKGV2dCkge1xyXG4gICAgICAgICAgICBzZWxmLm9uQ2xvc2UoZXZ0KSA7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdGhpcy53ZWJzb2NrZXQub25tZXNzYWdlID0gZnVuY3Rpb24oZXZ0KSB7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2YgZXZ0LmRhdGEgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBtZXNzYWdlID0gSlNPTi5wYXJzZShldnQuZGF0YSk7XHJcbiAgICAgICAgICAgICAgICBzZWxmLm9uTWVzc2FnZShtZXNzYWdlKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGpzb25MZW4gPSBuZXcgSW50MzJBcnJheShldnQuZGF0YS5zbGljZSgwLCA0KSlbMF07XHJcbiAgICAgICAgICAgICAgICBjb25zdCBqc29uQmxvYiA9IGV2dC5kYXRhLnNsaWNlKDQsIGpzb25MZW4gKyA0KTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHN0cmVhbUJsb2IgPSBldnQuZGF0YS5zbGljZSg0ICsganNvbkxlbik7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB1dGY4ZGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcigpO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgaiA9IHV0ZjhkZWNvZGVyLmRlY29kZShqc29uQmxvYik7XHJcbiAgICAgICAgICAgICAgICBzZWxmLm9uTWVzc2FnZShKU09OLnBhcnNlKGopLCBzdHJlYW1CbG9iKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHRoaXMud2Vic29ja2V0Lm9uZXJyb3IgPSBmdW5jdGlvbihldnQpIHtcclxuICAgICAgICAgICAgc2VsZi5vbkVycm9yKGV2dCk7XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYXV0aGVudGljYXRlKHVzZXJOYW1lLCBwYXNzd29yZCkge1xyXG4gICAgICAgIHRoaXMub3B0aW9ucy51c2VyTmFtZSA9IHVzZXJOYW1lO1xyXG4gICAgICAgIHRoaXMub3B0aW9ucy5wYXNzd29yZCA9IHBhc3N3b3JkO1xyXG4gICAgICAgIGNvbnN0IGNtZCA9IHtpZDogdGhpcy5tZXNzYWdlSWQrKywgJ21lc3NhZ2VUeXBlJzogJ2F1dGhlbnRpY2F0ZScsICd1c2VyTmFtZSc6IHVzZXJOYW1lLCAncGFzc3dvcmQnOiBwYXNzd29yZH07XHJcbiAgICAgICAgY29uc29sZS5sb2coJ3N3YScsIGNtZCk7XHJcbiAgICAgICAgdGhpcy53ZWJzb2NrZXQuc2VuZChKU09OLnN0cmluZ2lmeShjbWQpKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgbG9nb2ZmKCkge1xyXG4gICAgICAgIGNvbnN0IGNtZCA9IHtpZDogdGhpcy5tZXNzYWdlSWQrKywgJ21lc3NhZ2VUeXBlJzogJ2xvZ29mZicsICdzZXNzaW9uJzogdGhpcy5zZXNzaW9uSWR9O1xyXG4gICAgICAgIHRoaXMuc2Vzc2lvbklkID0gbnVsbDtcclxuICAgICAgICB0aGlzLndlYnNvY2tldC5zZW5kKEpTT04uc3RyaW5naWZ5KGNtZCkpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uTWVzc2FnZShtZXNzYWdlLCBzdHJlYW1CbG9iPSBudWxsKSB7XHJcbiAgICAgICAgLy8gaWYgKG1lc3NhZ2UubWVzc2FnZVR5cGUgIT09ICdzdHJlYW0nKSB7XHJcbiAgICAgICAgLy8gICAgIGNvbnNvbGUubG9nKCdvbiBtJywgbWVzc2FnZSk7XHJcbiAgICAgICAgLy8gfVxyXG4gICAgICAgIGNvbnN0IHNlbGYgPSB0aGlzO1xyXG4gICAgICAgIGNvbnN0IG5vdyAgID0gbmV3IERhdGUoKTtcclxuICAgICAgICBjb25zdCBmcHNEaWZmID0gbm93LmdldFRpbWUoKSAtIHRoaXMubXBzVGltZS5nZXRUaW1lKCk7XHJcbiAgICAgICAgY29uc3Qgc2Vjb25kcyA9IGZwc0RpZmYgLyAxMDAwO1xyXG4gICAgICAgIHRoaXMubWVzc2FnZUNvdW50ICsrO1xyXG4gICAgICAgIGlmIChzZWNvbmRzID4gMSkge1xyXG4gICAgICAgICAgdGhpcy5tcHMgPSBNYXRoLnJvdW5kKHRoaXMubWVzc2FnZUNvdW50IC8gc2Vjb25kcyk7XHJcbiAgICAgICAgICB0aGlzLm1lc3NhZ2VDb3VudCA9IDA7XHJcbiAgICAgICAgICB0aGlzLm1wc1RpbWUgPSBub3c7XHJcbiAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLm9uTVBTKSB7XHJcbiAgICAgICAgICAgICB0aGlzLm9wdGlvbnMub25NUFMuY2FsbCh0aGlzLm9wdGlvbnMudGFyZ2V0U2NvcGUsIHRoaXMubXBzKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChtZXNzYWdlLm1lc3NhZ2VUeXBlID09PSAnYXV0aGVudGljYXRlJykge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnYXV0aGVudGljYXRlJyk7XHJcbiAgICAgICAgICAgIHRoaXMuZG9BdXRoZW50aWNhdGUgPSB0cnVlO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLnVzZXJOYW1lKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5hdXRoZW50aWNhdGUodGhpcy5vcHRpb25zLnVzZXJOYW1lLCB0aGlzLm9wdGlvbnMucGFzc3dvcmQpXHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIHRoaXMub3B0aW9ucy5vbkF1dGhlbnRpY2F0ZS5jYWxsKHRoaXMub3B0aW9ucy50YXJnZXRTY29wZSxtZXNzYWdlKTtcclxuICAgICAgICB9IGVsc2UgaWYgKG1lc3NhZ2UubWVzc2FnZVR5cGUgPT09ICdhdXRoZW50aWNhdGlvbl9mYWlsZWQnKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdhdXRoZW50aWNhdGlvbiBmYWlsZWQnLCB0aGlzLm9wdGlvbnMudXNlck5hbWUpO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLnVzZXJOYW1lID09ICdhbm9ueW1vdXMnKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmFsbG93QW5vbnltb3VzID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9wdGlvbnMudXNlck5hbWUgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5vcHRpb25zLnBhc3N3b3JkID0gbnVsbDtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2Vzc2lvbklkID0gbnVsbDtcclxuICAgICAgICAgICAgICAgIGlmIChzZWxmLm9wdGlvbnMub25Mb2dPZmYpIHtcclxuICAgICAgICAgICAgICAgICAgICBzZWxmLm9wdGlvbnMub25Mb2dPZmYuY2FsbChzZWxmLm9wdGlvbnMudGFyZ2V0U2NvcGUsIG1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2VcclxuICAgICAgICAgICAgICAgIHRoaXMub3B0aW9ucy5vbkF1dGhlbnRpY2F0ZUZhaWxlZC5jYWxsKHRoaXMub3B0aW9ucy50YXJnZXRTY29wZSxtZXNzYWdlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAobWVzc2FnZS5tZXNzYWdlVHlwZSA9PT0gJ3Nlc3Npb25fYXV0aGVudGljYXRlZCcpe1xyXG4gICAgICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoKTtcclxuXHJcbiAgICAgICAgICAgIGRhdGUuc2V0VGltZShkYXRlLmdldFRpbWUoKSArICgyICogNjAgKiA2MCAqIDEwMDApKTtcclxuICAgICAgICAgICAgY29uc3QgZXhwaXJlcyA9ICc7IGV4cGlyZXM9JyArIGRhdGUudG9VVENTdHJpbmcoKTtcclxuICAgICAgICAgICAgdGhpcy5zZXNzaW9uSWQgPSBtZXNzYWdlLnNlc3Npb247XHJcbiAgICAgICAgICAgIGRvY3VtZW50LmNvb2tpZSA9ICdrZXJ2aXNlc3Npb24nICsgJz0nICsgbWVzc2FnZS5zZXNzaW9uICsgZXhwaXJlcyArICc7IHBhdGg9Lyc7XHJcblxyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3RvJywgc2VsZi5vcHRpb25zKTtcclxuICAgICAgICAgICAgICAgIGlmIChzZWxmLm9wdGlvbnMub25PcGVuKVxyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYub3B0aW9ucy5vbk9wZW4uY2FsbChzZWxmLm9wdGlvbnMudGFyZ2V0U2NvcGUsIHNlbGYuZmlyc3RPbk9wZW4sbWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5maXJzdE9uT3BlbiA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9LCAxMDBcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICB9IGVsc2UgaWYgKG1lc3NhZ2UubWVzc2FnZVR5cGUgPT0gJ3Nlc3Npb25fbG9nb2ZmJykgeyBcclxuICAgICAgICAgICAgaWYgKHNlbGYub3B0aW9ucy5vbkxvZ09mZilcclxuICAgICAgICAgICAgICAgIHNlbGYub3B0aW9ucy5vbkxvZ09mZi5jYWxsKHNlbGYub3B0aW9ucy50YXJnZXRTY29wZSxtZXNzYWdlKTtcclxuICAgICAgICAgICAgaWYgKHRoaXMuYWxsb3dBbm9ueW1vdXMgJiYgdGhpcy5vcHRpb25zLnVzZXJOYW1lICE9ICdhbm9ueW1vdXMnKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuYXV0aGVudGljYXRlKCdhbm9ueW1vdXMnLCBudWxsKVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgc2VsZi5vcHRpb25zLnVzZXJOYW1lID0gbnVsbDtcclxuICAgICAgICAgICAgICAgIHNlbGYub3B0aW9ucy5wYXNzd29yZCA9IG51bGw7XHJcbiAgICAgICAgICAgICAgICBzZWxmLnNlc3Npb25JZCA9IG51bGw7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2UgaWYgKG1lc3NhZ2UubWVzc2FnZVR5cGU9PSdyZXNwb25zZScpXHJcbiAgICAgICAgICAgIHRoaXMuaGFuZGxlUlBDUmVzcG9uc2UobWVzc2FnZSk7XHJcbiAgICAgICAgZWxzZSBpZiAobWVzc2FnZS5tZXNzYWdlVHlwZT09J2V2ZW50JylcclxuICAgICAgICAgICAgdGhpcy5oYW5kbGVFdmVudChtZXNzYWdlKTtcclxuICAgICAgICBlbHNlIGlmIChtZXNzYWdlLm1lc3NhZ2VUeXBlPT0nc3RyZWFtJylcclxuICAgICAgICAgICAgdGhpcy5oYW5kbGVTdHJlYW0obWVzc2FnZSwgc3RyZWFtQmxvYik7XHJcbiAgICAgICAgZWxzZSBpZiAobWVzc2FnZS5tZXNzYWdlVHlwZT09J2NvbW1hbmQnKVxyXG4gICAgICAgICAgICB0aGlzLmhhbmRsZUNvbW1hbmQobWVzc2FnZSk7XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnS2Vydmkgc3BpbmUgbWVzc2FnZSB1bmtub3duJyx0aGlzLnJwY1F1ZXVlLCBtZXNzYWdlKTtcclxuICAgIH1cclxuXHJcbiAgICBvbkVycm9yKGV2dCl7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ0tlcnZpIG9uIGVycm9yJyxldnQpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhZGRDb21tYW5kSGFuZGxlciAoY29tbWFuZDpzdHJpbmcsY2FsbGJhY2spe1xyXG4gICAgICAgIHRoaXMuY29tbWFuZEhhbmRsZXJzLnB1c2goe2NvbW1hbmQ6Y29tbWFuZCxjYWxsYmFjazpjYWxsYmFja30pO1xyXG4gICAgICAgIHZhciBjbWQ9e2lkOnRoaXMubWVzc2FnZUlkKyssJ21lc3NhZ2VUeXBlJzoncmVnaXN0ZXJDb21tYW5kSGFuZGxlcicsJ2NvbW1hbmQnOmNvbW1hbmR9O1xyXG4gICAgICAgIHRoaXMud2Vic29ja2V0LnNlbmQoSlNPTi5zdHJpbmdpZnkoY21kKSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHB1YmxpYyBhZGRRdWVyeUhhbmRsZXIocXVlcnk6c3RyaW5nLGNhbGxiYWNrKXtcclxuICAgICAgICB0aGlzLnF1ZXJ5SGFuZGxlcnMucHVzaCh7cXVlcnk6cXVlcnksY2FsbGJhY2s6Y2FsbGJhY2t9KTtcclxuICAgICAgICB2YXIgY21kPXtpZDp0aGlzLm1lc3NhZ2VJZCsrLCdtZXNzYWdlVHlwZSc6J3JlZ2lzdGVyUXVlcnlIYW5kbGVyJywncXVlcnknOnF1ZXJ5fTtcclxuICAgICAgICB0aGlzLndlYnNvY2tldC5zZW5kKEpTT04uc3RyaW5naWZ5KGNtZCkpO1xyXG4gICAgfTtcclxuXHJcbiAgICBwdWJsaWMgYWRkRXZlbnRIYW5kbGVyID0gZnVuY3Rpb24oZXZlbnROYW1lOiBzdHJpbmcsIGlkOiBzdHJpbmcsIGNhbGxiYWNrKXtcclxuICAgICAgICBpZiAoaWQpXHJcbiAgICAgICAgICAgIHRoaXMuZXZlbnRIYW5kbGVycy5wdXNoKHsnZXZlbnROYW1lJzpldmVudE5hbWUrJy8nK2lkLGNhbGxiYWNrOmNhbGxiYWNrfSk7XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICB0aGlzLmV2ZW50SGFuZGxlcnMucHVzaCh7J2V2ZW50TmFtZSc6ZXZlbnROYW1lLGNhbGxiYWNrOmNhbGxiYWNrfSk7XHJcbiAgICAgICAgdmFyIGNtZD17aWQ6dGhpcy5tZXNzYWdlSWQrKywnbWVzc2FnZVR5cGUnOidyZWdpc3RlckV2ZW50SGFuZGxlcicsJ2V2ZW50JzpldmVudE5hbWUsJ2V2ZW50SWQnOmlkfTtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKCdhZGQgZXZlbnQgaGFuZGxlcicsY21kKTtcclxuICAgICAgICB0aGlzLndlYnNvY2tldC5zZW5kKEpTT04uc3RyaW5naWZ5KGNtZCkpO1xyXG4gICAgfTtcclxuXHJcbiAgICBwdWJsaWMgYWRkU3RyZWFtSGFuZGxlciA9IGZ1bmN0aW9uKHN0cmVhbUlkOiBzdHJpbmcsIHN0cmVhbUV2ZW50czogc3RyaW5nW10sIGNhbGxiYWNrKSB7XHJcbiAgICAgICAgaWYgKHN0cmVhbUV2ZW50cyAmJiBzdHJlYW1FdmVudHMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICBmb3IgKGxldCBldmVudCBvZiBzdHJlYW1FdmVudHMpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc3RyZWFtSGFuZGxlcnMucHVzaCh7J3N0cmVhbVRhZyc6IHN0cmVhbUlkICsgJy8nICsgZXZlbnQsIGNhbGxiYWNrOiBjYWxsYmFja30pO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgY21kID0ge1xyXG4gICAgICAgICAgICAgICAgICAgIGlkOiB0aGlzLm1lc3NhZ2VJZCsrLFxyXG4gICAgICAgICAgICAgICAgICAgICdtZXNzYWdlVHlwZSc6ICdyZWdpc3RlclN0cmVhbUhhbmRsZXInLFxyXG4gICAgICAgICAgICAgICAgICAgICdzdHJlYW1JZCc6IHN0cmVhbUlkLFxyXG4gICAgICAgICAgICAgICAgICAgICdzdHJlYW1FdmVudCc6IGV2ZW50XHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2FzJywgY21kKTtcclxuICAgICAgICAgICAgICAgIHRoaXMud2Vic29ja2V0LnNlbmQoSlNPTi5zdHJpbmdpZnkoY21kKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnN0cmVhbUhhbmRsZXJzLnB1c2goeydzdHJlYW1UYWcnOiBzdHJlYW1JZCwgY2FsbGJhY2s6IGNhbGxiYWNrfSk7XHJcbiAgICAgICAgICAgIGNvbnN0IGNtZCA9IHtcclxuICAgICAgICAgICAgICAgIGlkOiB0aGlzLm1lc3NhZ2VJZCsrLFxyXG4gICAgICAgICAgICAgICAgJ21lc3NhZ2VUeXBlJzogJ3JlZ2lzdGVyU3RyZWFtSGFuZGxlcicsXHJcbiAgICAgICAgICAgICAgICAnc3RyZWFtSWQnOiBzdHJlYW1JZCxcclxuICAgICAgICAgICAgICAgICdzdHJlYW1FdmVudCc6IGV2ZW50XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdhcycsIGNtZCk7XHJcbiAgICAgICAgICAgIHRoaXMud2Vic29ja2V0LnNlbmQoSlNPTi5zdHJpbmdpZnkoY21kKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBwdWJsaWMgcmVtb3ZlU3RyZWFtSGFuZGxlciA9IGZ1bmN0aW9uKHN0cmVhbUlkOiBzdHJpbmcsIHN0cmVhbUV2ZW50czogc3RyaW5nW10pIHtcclxuICAgICAgICBpZiAoc3RyZWFtRXZlbnRzICYmIHN0cmVhbUV2ZW50cy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGV2ZW50IG9mIHN0cmVhbUV2ZW50cykge1xyXG4gICAgICAgICAgICAgICAgLy90aGlzLnN0cmVhbUhhbmRsZXJzLnB1c2goeydzdHJlYW1UYWcnOiBzdHJlYW1JZCArICcvJyArIGV2ZW50LCBjYWxsYmFjazogY2FsbGJhY2t9KTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGNtZCA9IHtcclxuICAgICAgICAgICAgICAgICAgICBpZDogdGhpcy5tZXNzYWdlSWQrKyxcclxuICAgICAgICAgICAgICAgICAgICAnbWVzc2FnZVR5cGUnOiAncmVtb3ZlU3RyZWFtSGFuZGxlcicsXHJcbiAgICAgICAgICAgICAgICAgICAgJ3N0cmVhbUlkJzogc3RyZWFtSWQsXHJcbiAgICAgICAgICAgICAgICAgICAgJ3N0cmVhbUV2ZW50JzogZXZlbnRcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnYXMnLCBjbWQpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy53ZWJzb2NrZXQuc2VuZChKU09OLnN0cmluZ2lmeShjbWQpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8vdGhpcy5zdHJlYW1IYW5kbGVycy5wdXNoKHsnc3RyZWFtVGFnJzogc3RyZWFtSWQsIGNhbGxiYWNrOiBjYWxsYmFja30pO1xyXG4gICAgICAgICAgICBjb25zdCBjbWQgPSB7XHJcbiAgICAgICAgICAgICAgICBpZDogdGhpcy5tZXNzYWdlSWQrKyxcclxuICAgICAgICAgICAgICAgICdtZXNzYWdlVHlwZSc6ICdyZW1vdmVTdHJlYW1IYW5kbGVyJyxcclxuICAgICAgICAgICAgICAgICdzdHJlYW1JZCc6IHN0cmVhbUlkLFxyXG4gICAgICAgICAgICAgICAgJ3N0cmVhbUV2ZW50JzogZXZlbnRcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ2FzJywgY21kKTtcclxuICAgICAgICAgICAgdGhpcy53ZWJzb2NrZXQuc2VuZChKU09OLnN0cmluZ2lmeShjbWQpKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIHB1YmxpYyBzZW5kQ29tbWFuZChjb21tYW5kOnN0cmluZywuLi5wOmFueVtdKXtcclxuICAgICAgICBjb25zb2xlLmxvZygnc2VjJyxhcmd1bWVudHMpO1xyXG4gICAgICAgIHZhciBhcmdzPVtdO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHZhciBjYWxsYmFjaz1udWxsO1xyXG5cclxuICAgICAgICBmb3IgKHZhciBpPTA7KGk8cC5sZW5ndGgpO2krKyl7XHJcbiAgICAgICAgICAgIGlmIChwW2ldIGluc3RhbmNlb2YgRnVuY3Rpb24pXHJcbiAgICAgICAgICAgICAgICBjYWxsYmFjaz1wW2ldO1xyXG4gICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICBhcmdzLnB1c2gocFtpXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIHZhciBjbWQ9e2lkOnRoaXMubWVzc2FnZUlkKyssJ21lc3NhZ2VUeXBlJzonY29tbWFuZCcsJ2NvbW1hbmQnOmNvbW1hbmQsJ2FyZ3MnOmFyZ3N9O1xyXG4gICAgICAgIGlmIChjYWxsYmFjayAmJiBjYWxsYmFjayBpbnN0YW5jZW9mIEZ1bmN0aW9uKVxyXG4gICAgICAgICAgICB0aGlzLmFkZFJQQ0NhbGxiYWNrKGNtZC5pZC50b1N0cmluZygpLCBjYWxsYmFjaywgbnVsbCwgMCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29uc29sZS5sb2coJ3NlbmRDb21tYW5kJyx0aGlzLGNtZCk7XHJcbiAgICAgICAgdGhpcy53ZWJzb2NrZXQuc2VuZChKU09OLnN0cmluZ2lmeShjbWQpKTtcclxuICAgIH07XHJcblxyXG4gICAgcHVibGljIHNlbmRRdWVyeShxdWVyeSwuLi5wOmFueVtdKXtcclxuICAgICAgICB2YXIgYXJncz1bXTtcclxuICAgICAgICB2YXIgY2FsbGJhY2s9bnVsbDtcclxuICAgICAgICB2YXIgY2FsbGJhY2tUaW1lb3V0ID0gbnVsbFxyXG4gICAgICAgIHZhciB0aW1lb3V0ID0gMTAwMDBcclxuICAgICAgICBmb3IgKHZhciBpPTA7KGk8cC5sZW5ndGgpO2krKyl7XHJcbiAgICAgICAgICAgIGlmIChwW2ldIGluc3RhbmNlb2YgRnVuY3Rpb24pXHJcbiAgICAgICAgICAgICAgICBpZiAoIWNhbGxiYWNrKSBcclxuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaz1wW2ldO1xyXG4gICAgICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrVGltZW91dCA9IHBbaV07XHJcbiAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICBpZiAoY2FsbGJhY2tUaW1lb3V0KVxyXG4gICAgICAgICAgICAgICAgICAgIHRpbWVvdXQgPSBwW2ldXHJcbiAgICAgICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgYXJncy5wdXNoKHBbaV0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgICBcclxuICAgICAgICB2YXIgY21kPXtpZDp0aGlzLm1lc3NhZ2VJZCsrLCdtZXNzYWdlVHlwZSc6J3F1ZXJ5JywncXVlcnknOnF1ZXJ5LCdhcmdzJzphcmdzfTtcclxuICAgICAgICB0aGlzLmFkZFJQQ0NhbGxiYWNrKGNtZC5pZC50b1N0cmluZygpLGNhbGxiYWNrLCBjYWxsYmFja1RpbWVvdXQsIHRpbWVvdXQpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdzZW5kUXVlcnknLCBjYWxsYmFjayxjbWQpO1xyXG4gICAgICAgIHRoaXMud2Vic29ja2V0LnNlbmQoSlNPTi5zdHJpbmdpZnkoY21kKSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHB1YmxpYyB0cmlnZ2VyRXZlbnQoZXZlbnROYW1lOnN0cmluZyxpZDpzdHJpbmcpe1xyXG4gICAgICAgIHZhciBlPXtpZDp0aGlzLm1lc3NhZ2VJZCsrLCdtZXNzYWdlVHlwZSc6J2V2ZW50JywnZXZlbnQnOmV2ZW50TmFtZSwnYXJncyc6YXJndW1lbnRzfTtcclxuICAgICAgICB0aGlzLndlYnNvY2tldC5zZW5kKEpTT04uc3RyaW5naWZ5KGUpKTtcclxuICAgIH07XHJcbn0iLCIvLyBDb3B5cmlnaHQgKGMpIDIwMTYsIFRpbSBXZW50emxhdVxyXG4vLyBMaWNlbnNlZCB1bmRlciBNSVRcclxuaW1wb3J0IHtLZXJ2aVNwaW5lQmFzZX0gZnJvbSBcIi4va2Vydmktc3BpbmViYXNlXCI7XHJcbmRlY2xhcmUgdmFyIFN0b21wOmFueTtcclxuZXhwb3J0IGNsYXNzICBLZXJ2aVJNUVNwaW5lIGV4dGVuZHMgS2VydmlTcGluZUJhc2Uge1xyXG5cdHByaXZhdGUgc29ja2V0U2Vzc2lvbjpudWxsO1xyXG5cdHByaXZhdGUgZXhjaGFuZ2UgPSBcIi9leGNoYW5nZS9cIjtcclxuXHRcclxuXHRjb25zdHJ1Y3RvcihwdWJsaWMgY29uc3RydWN0b3JPcHRpb25zKXtcclxuXHRcdHN1cGVyKGNvbnN0cnVjdG9yT3B0aW9ucyk7XHJcblx0XHRjb25zb2xlLmxvZyhcIktlcnZpIGlvIHNwaW5lIGluaXQgeVwiLCB0aGlzLm9wdGlvbnMsY29uc3RydWN0b3JPcHRpb25zKTtcclxuXHRcdFxyXG5cdH1cclxuXHJcblx0cHJpdmF0ZSBvbk1RRXJyb3IoZnJhbWUpe1xyXG5cdFx0Y29uc29sZS5sb2coXCJNUSBlcnJvclwiLCBmcmFtZSk7XHJcblx0fVxyXG5cclxuXHRcclxuXHRwcm90ZWN0ZWQgY29ubmVjdCgpe1xyXG5cdFx0aWYgKHRoaXMuaXNDb25uZWN0ZWQpe1xyXG5cdFx0XHRjb25zb2xlLmxvZyhcIktlcnZpIGlzIGNvbm5lY3RlZFwiKTtcclxuXHRcdFx0cmV0dXJuXHJcblx0XHR9XHJcblx0XHR2YXIgc2VsZj10aGlzO1xyXG5cdFx0Ly92YXIgbXFVcmw9IHRoaXMub3B0aW9ucy5wcm90b2NvbCArIFwiOi8vXCIgKyB0aGlzLm9wdGlvbnMuYWRkcmVzc1xyXG5cdFx0dmFyIG1xVXJsPSBcIndzczovL21xLmtlcnZpLmlvOjE1NjczL3dzXCJcclxuXHRcdHRoaXMud2Vic29ja2V0ID0gU3RvbXAuY2xpZW50KG1xVXJsKTtcclxuXHRcdHRoaXMud2Vic29ja2V0LmhlYXJ0YmVhdC5pbmNvbWluZyA9IDA7XHJcblx0XHRzZWxmLmV4Y2hhbmdlID0gXCIvZXhjaGFuZ2UvXCIgKyAgc2VsZi5vcHRpb25zLmFwaVRva2VuLmFwcF9pZDtcclxuXHRcdGNvbnNvbGUubG9nKFwiZXhjaGFuZ2VcIiwgc2VsZi5leGNoYW5nZSlcclxuXHRcdHRoaXMud2Vic29ja2V0LmNvbm5lY3QoXHJcblx0XHRcdHNlbGYub3B0aW9ucy5hcGlUb2tlbi5hcGlfdG9rZW4sIFxyXG5cdFx0XHRcInVpXCIsIFxyXG5cdFx0XHRmdW5jdGlvbiAoZnJhbWUpe1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKFwiTVEgY29ubmVjdFwiLCBmcmFtZSwgc2VsZi53ZWJzb2NrZXQsIHRoaXMsIHNlbGYpO1xyXG5cdFx0XHRcdHNlbGYuc29ja2V0U2Vzc2lvbiA9IGZyYW1lLmhlYWRlcnMuc2Vzc2lvbjtcclxuXHRcdFx0XHRzZWxmLmV4Y2hhbmdlID0gXCIvZXhjaGFuZ2UvXCIgKyAgc2VsZi5vcHRpb25zLmFwaVRva2VuLmFwcF9pZDtcclxuXHRcdFx0XHRzZWxmLndlYnNvY2tldC5zdWJzY3JpYmUoc2VsZi5leGNoYW5nZSwgZnVuY3Rpb24obWVzc2FnZSkge1xyXG5cdFx0XHRcdFx0Y29uc29sZS5sb2coXCJtcSBcIiwgbWVzc2FnZSk7XHJcblx0XHRcdFx0XHRpZiAobWVzc2FnZS5oZWFkZXJzW1widG9waWNcIl0pXHJcblx0XHRcdFx0XHRcdG1lc3NhZ2UuaGVhZGVyc1tcInRvcGljXCJdID0gbWVzc2FnZS5oZWFkZXJzW1widG9waWNcIl0ucmVwbGFjZShuZXcgUmVnRXhwKFwiXFxcXGNcIixcImdcIiksXCI6XCIpO1xyXG5cdFx0XHRcdFx0aWYgKG1lc3NhZ2UuY29tbWFuZD09XCJDT05ORUNURURcIil7XHJcblxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0ZWxzZSBpZiAobWVzc2FnZS5oZWFkZXJzW1widG9waWNcIl0gPT0gXCJwaW5nXCIpXHJcblx0XHRcdFx0XHRcdHNlbGYub25QaW5nKG1lc3NhZ2UpO1xyXG5cdFx0XHRcdFx0ZWxzZVxyXG5cdFx0XHRcdFx0XHRzZWxmLm9uTWVzc2FnZShtZXNzYWdlKTtcclxuXHRcdFx0XHR9LCB7IH0pO1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRzZWxmLm9uTVFFcnJvciwgc2VsZi5vcHRpb25zLmFwaVRva2VuLmFwaV9jaGFubmVsKTtcclxuXHR9XHJcblxyXG5cdFxyXG5cdG9uUGluZyhtZXNzYWdlKXtcclxuXHRcdGNvbnNvbGUubG9nKFwib25waW5nXCIsIHRoaXMub3B0aW9ucy5hcHBJZCwgbWVzc2FnZSwgKTtcclxuXHRcdHZhciBzZWxmID0gdGhpcztcclxuXHRcdGlmICghdGhpcy5pc0Nvbm5lY3RlZCAmJiBtZXNzYWdlLmhlYWRlcnNbXCJjb25uZWN0aW9uX2lkXCJdPT0gc2VsZi5vcHRpb25zLmFwaVRva2VuLmFwcF9pZCl7XHJcblx0XHRcdHRoaXMub25PcGVuKG1lc3NhZ2UpO1xyXG5cdFx0XHR0aGlzLndlYnNvY2tldC5zZW5kKHNlbGYuZXhjaGFuZ2UsIHsgdG9waWM6XCJzZXNzaW9uOm5ld1wiLCByb3V0ZXJfaWQ6bWVzc2FnZS5oZWFkZXJzW1wicm91dGVyX2lkXCJdLCBzZXNzaW9uX2lkOnRoaXMuc29ja2V0U2Vzc2lvbn0sIFwie31cIilcdFxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0YXV0aGVudGljYXRlKHVzZXJOYW1lLCBwYXNzd29yZCl7XHJcblx0XHR0aGlzLm9wdGlvbnMudXNlck5hbWUgPSB1c2VyTmFtZTtcclxuXHRcdHRoaXMub3B0aW9ucy5wYXNzd29yZCA9IHBhc3N3b3JkO1xyXG5cdFx0aWYgKHRoaXMub3B0aW9ucy5vbkF1dGhlbnRpY2F0ZVN0YXJ0KVxyXG5cdFx0XHR0aGlzLm9wdGlvbnMub25BdXRoZW50aWNhdGVTdGFydC5jYWxsKHRoaXMub3B0aW9ucy50YXJnZXRTY29wZSk7XHJcblx0XHR2YXIgY21kPXtpZDp0aGlzLm1lc3NhZ2VJZCsrLFwibWVzc2FnZVR5cGVcIjpcImF1dGhlbnRpY2F0ZVwiLFwidXNlck5hbWVcIjp0aGlzLm9wdGlvbnMudXNlck5hbWUsIFwicGFzc3dvcmRcIjogdGhpcy5vcHRpb25zLnBhc3N3b3JkfTtcclxuXHRcdHRoaXMud2Vic29ja2V0LnNlbmQoSlNPTi5zdHJpbmdpZnkoY21kKSk7XHJcblx0fVxyXG5cclxuXHRsb2dvZmYoKXtcclxuXHRcdC8vdGhpcy5vcHRpb25zLnVzZXJOYW1lID0gdGhpcy5hbGxvd0Fub255bW91cyA/IFwiYW5vbnltb3VzXCIgOiBudWxsO1xyXG5cdFx0Ly90aGlzLm9wdGlvbnMucGFzc3dvcmQgPSBudWxsO1xyXG5cclxuXHRcdHZhciBjbWQ9e2lkOnRoaXMubWVzc2FnZUlkKyssXCJtZXNzYWdlVHlwZVwiOlwibG9nb2ZmXCIsIFwic2Vzc2lvblwiOiB0aGlzLnNlc3Npb25JZH07XHJcblx0XHR0aGlzLnNlc3Npb25JZCA9IG51bGw7XHJcblx0XHR0aGlzLndlYnNvY2tldC5zZW5kKEpTT04uc3RyaW5naWZ5KGNtZCkpO1xyXG5cdH1cclxuXHJcblx0b25NZXNzYWdlKGV2dCl7XHJcblx0XHRjb25zb2xlLmxvZyhcIm9uIG1cIixldnQpO1xyXG5cdFx0dmFyIG1lc3NhZ2U9SlNPTi5wYXJzZShldnQuYm9keSk7XHJcblx0XHR2YXIgc2VsZiA9IHRoaXM7XHJcblx0XHR2YXIgdG9waWMgPSBldnQuaGVhZGVyc1tcInRvcGljXCJdO1xyXG5cclxuXHRcdGlmICh0b3BpYz09XCJhdXRoZW50aWNhdGVcIil7XHJcblx0XHRcdGNvbnNvbGUubG9nKFwiYXV0aGVudGljYXRlXCIpO1xyXG5cdFx0XHR0aGlzLmRvQXV0aGVudGljYXRlID0gdHJ1ZTtcclxuXHRcdFx0aWYgKHRoaXMub3B0aW9ucy51c2VyTmFtZSlcclxuXHRcdFx0XHR0aGlzLmF1dGhlbnRpY2F0ZSh0aGlzLm9wdGlvbnMudXNlck5hbWUsIHRoaXMub3B0aW9ucy5wYXNzd29yZClcclxuXHRcdFx0ZWxzZVxyXG5cdFx0XHRcdHRoaXMub3B0aW9ucy5vbkF1dGhlbnRpY2F0ZS5jYWxsKHRoaXMub3B0aW9ucy50YXJnZXRTY29wZSxldnQpO1xyXG5cdFx0fVxyXG5cdFx0ZWxzZSBpZiAodG9waWM9PVwiYXV0aGVudGljYXRpb25fZmFpbGVkXCIpe1xyXG5cdFx0XHRjb25zb2xlLmxvZyhcImF1dGhlbnRpY2F0aW9uIGZhaWxlZFwiLCB0aGlzLm9wdGlvbnMudXNlck5hbWUpO1xyXG5cdFx0XHRpZiAodGhpcy5vcHRpb25zLnVzZXJOYW1lID09IFwiYW5vbnltb3VzXCIpIHtcclxuXHRcdFx0XHR0aGlzLmFsbG93QW5vbnltb3VzID0gZmFsc2U7XHJcblx0XHRcdFx0dGhpcy5vcHRpb25zLnVzZXJOYW1lID0gbnVsbDtcclxuXHRcdFx0XHR0aGlzLm9wdGlvbnMucGFzc3dvcmQgPSBudWxsO1xyXG5cdFx0XHRcdHRoaXMuc2Vzc2lvbklkID0gbnVsbDtcclxuXHRcdFx0XHRjb25zb2xlLmxvZyhcInhcIiwgc2VsZi5vcHRpb25zKVxyXG5cdFx0XHRcdGlmIChzZWxmLm9wdGlvbnMub25Mb2dPZmYpe1xyXG5cdFx0XHRcdFx0Y29uc29sZS5sb2coXCJ4MVwiKVxyXG5cdFx0XHRcdFx0c2VsZi5vcHRpb25zLm9uTG9nT2ZmLmNhbGwoc2VsZi5vcHRpb25zLnRhcmdldFNjb3BlLGV2dCk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9IGVsc2VcclxuXHRcdFx0XHR0aGlzLm9wdGlvbnMub25BdXRoZW50aWNhdGVGYWlsZWQuY2FsbCh0aGlzLm9wdGlvbnMudGFyZ2V0U2NvcGUsZXZ0KTtcclxuXHRcdH1cclxuXHRcdGVsc2UgaWYgKHRvcGljPT1cInNlc3Npb25fYXV0aGVudGljYXRlZFwiKXtcclxuXHRcdFx0dmFyIGRhdGUgPSBuZXcgRGF0ZSgpO1xyXG5cdFx0XHRcclxuICAgICAgICBcdGRhdGUuc2V0VGltZShkYXRlLmdldFRpbWUoKSArICgyKjYwKjYwKjEwMDApKTtcclxuICAgICAgICBcdHZhciBleHBpcmVzID0gXCI7IGV4cGlyZXM9XCIgKyBkYXRlLnRvVVRDU3RyaW5nKCk7XHJcblx0XHRcdHRoaXMuc2Vzc2lvbklkID0gbWVzc2FnZS5zZXNzaW9uO1xyXG5cdFx0XHRkb2N1bWVudC5jb29raWUgPSBcImtlcnZpc2Vzc2lvblwiICsgXCI9XCIgKyBtZXNzYWdlLnNlc3Npb24gKyBleHBpcmVzICsgXCI7IHBhdGg9L1wiO1xyXG5cdFx0XHRcclxuXHRcdFx0XHJcblx0XHRcdHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcclxuXHRcdFx0XHRpZiAoc2VsZi5vcHRpb25zLm9uT3BlbilcclxuXHRcdFx0XHRcdHNlbGYub3B0aW9ucy5vbk9wZW4uY2FsbChzZWxmLm9wdGlvbnMudGFyZ2V0U2NvcGUsIHNlbGYuZmlyc3RPbk9wZW4sZXZ0KTtcclxuXHRcdFx0XHRcdHNlbGYuZmlyc3RPbk9wZW4gPSBmYWxzZTtcclxuXHRcdFx0fSwgMTAwXHJcblx0XHRcdCk7XHJcblx0XHRcdFxyXG5cdFx0fSBlbHNlIGlmICh0b3BpYyA9PSBcInNlc3Npb25fbG9nb2ZmXCIpeyBcclxuXHRcdFx0aWYgKHNlbGYub3B0aW9ucy5vbkxvZ09mZilcclxuXHRcdFx0XHRzZWxmLm9wdGlvbnMub25Mb2dPZmYuY2FsbChzZWxmLm9wdGlvbnMudGFyZ2V0U2NvcGUsZXZ0KTtcclxuXHRcdFx0aWYgKHRoaXMuYWxsb3dBbm9ueW1vdXMgJiYgdGhpcy5vcHRpb25zLnVzZXJOYW1lICE9IFwiYW5vbnltb3VzXCIpe1xyXG5cdFx0XHRcdHRoaXMuYXV0aGVudGljYXRlKFwiYW5vbnltb3VzXCIsIG51bGwpXHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0c2VsZi5vcHRpb25zLnVzZXJOYW1lID0gbnVsbDtcclxuXHRcdFx0XHRzZWxmLm9wdGlvbnMucGFzc3dvcmQgPSBudWxsO1xyXG5cdFx0XHRcdHNlbGYuc2Vzc2lvbklkID0gbnVsbDtcclxuXHRcdFx0XHJcblx0XHRcdFx0XHJcblx0XHRcdH1cclxuXHRcdH0gZWxzZSBpZiAoZXZ0LmhlYWRlcnNbXCJ0eXBlXCJdPT1cInF1ZXJ5X3Jlc3BvbnNlXCIpe1xyXG5cdFx0XHR0aGlzLmhhbmRsZVJQQ1Jlc3BvbnNlKHtpZDpldnQuaGVhZGVyc1tcInF1ZXJ5X2lkXCJdLCByZXNwb25zZTptZXNzYWdlfSk7XHJcblx0XHR9ZWxzZSBpZiAoZXZ0LmhlYWRlcnNbXCJ0eXBlXCJdPT1cImV2ZW50XCIpe1xyXG5cdFx0XHRjb25zb2xlLmxvZyhcImVcIiwgZXZ0KTtcclxuXHRcdFx0dmFyIHRvcGljX3RhZz0gZXZ0LmhlYWRlcnNbXCJ0b3BpY1wiXS5zcGxpdChcIjpcIik7XHJcblx0XHRcdFxyXG5cdFx0XHR0aGlzLmhhbmRsZUV2ZW50KHtldmVudDp0b3BpY190YWdbMV0sIGlkOnRvcGljX3RhZ1syXSwgYXJnczptZXNzYWdlLmFyZ3N9KTtcclxuXHRcdH1lbHNlIGlmIChtZXNzYWdlLm1lc3NhZ2VUeXBlPT1cImNvbW1hbmRcIilcclxuXHRcdFx0dGhpcy5oYW5kbGVDb21tYW5kKG1lc3NhZ2UpO1xyXG5cdFx0ZWxzZVxyXG5cdFx0XHRjb25zb2xlLmxvZyhcIktlcnZpIHNwaW5lIG1lc3NhZ2UgdW5rbm93blwiLHRoaXMucnBjUXVldWUsZXZ0KTtcclxuXHR9XHJcblxyXG5cdG9uRXJyb3IoZXZ0KXtcclxuXHRcdGNvbnNvbGUubG9nKFwiS2Vydmkgb24gZXJyb3JcIixldnQpO1xyXG5cdH1cclxuXHJcblx0cHVibGljIGFkZENvbW1hbmRIYW5kbGVyIChjb21tYW5kOnN0cmluZyxjYWxsYmFjayl7XHJcblx0XHR0aGlzLmNvbW1hbmRIYW5kbGVycy5wdXNoKHtjb21tYW5kOmNvbW1hbmQsY2FsbGJhY2s6Y2FsbGJhY2t9KTtcclxuXHRcdHZhciBjbWQ9e2lkOnRoaXMubWVzc2FnZUlkKyssXCJtZXNzYWdlVHlwZVwiOlwicmVnaXN0ZXJDb21tYW5kSGFuZGxlclwiLFwiY29tbWFuZFwiOmNvbW1hbmR9O1xyXG5cdFx0Ly90aGlzLndlYnNvY2tldC5zZW5kKEpTT04uc3RyaW5naWZ5KGNtZCkpO1xyXG5cdFx0dGhpcy53ZWJzb2NrZXQuc2VuZChcclxuXHRcdFx0dGhpcy5leGNoYW5nZSxcclxuXHRcdFx0eyB0b3BpYzpcInJlZ2lzdGVyQ29tbWFuZEhhbmRsZXJcIiwgcm91dGVyX2lkOnRoaXMuc29ja2V0U2Vzc2lvbn0sXHJcblx0XHRcdEpTT04uc3RyaW5naWZ5KGNtZClcclxuXHRcdClcdFxyXG5cdH07XHJcblxyXG5cdHB1YmxpYyBhZGRRdWVyeUhhbmRsZXIocXVlcnk6c3RyaW5nLGNhbGxiYWNrKXtcclxuXHRcdHRoaXMucXVlcnlIYW5kbGVycy5wdXNoKHtxdWVyeTpxdWVyeSxjYWxsYmFjazpjYWxsYmFja30pO1xyXG5cdFx0dmFyIGNtZD17aWQ6dGhpcy5tZXNzYWdlSWQrKyxcIm1lc3NhZ2VUeXBlXCI6XCJyZWdpc3RlclF1ZXJ5SGFuZGxlclwiLFwicXVlcnlcIjpxdWVyeX07XHJcblx0XHR0aGlzLndlYnNvY2tldC5zZW5kKFxyXG5cdFx0XHR0aGlzLmV4Y2hhbmdlLFxyXG5cdFx0XHR7IHRvcGljOlwicmVnaXN0ZXJRdWVyeUhhbmRsZXJcIiwgcm91dGVyX2lkOnRoaXMuc29ja2V0U2Vzc2lvbn0sXHJcblx0XHRcdEpTT04uc3RyaW5naWZ5KGNtZClcclxuXHRcdClcclxuXHR9O1xyXG5cclxuXHRwdWJsaWMgYWRkRXZlbnRIYW5kbGVyPWZ1bmN0aW9uKGV2ZW50TmFtZTpzdHJpbmcsaWQ6c3RyaW5nLGNhbGxiYWNrKXtcclxuXHRcdGlmIChpZClcclxuXHRcdFx0dGhpcy5ldmVudEhhbmRsZXJzLnB1c2goe1wiZXZlbnROYW1lXCI6ZXZlbnROYW1lK1wiL1wiK2lkLGNhbGxiYWNrOmNhbGxiYWNrfSk7XHJcblx0XHRlbHNlXHJcblx0XHRcdHRoaXMuZXZlbnRIYW5kbGVycy5wdXNoKHtcImV2ZW50TmFtZVwiOmV2ZW50TmFtZSxjYWxsYmFjazpjYWxsYmFja30pO1xyXG5cdFx0dmFyIGNtZD17aWQ6dGhpcy5tZXNzYWdlSWQrKyxcIm1lc3NhZ2VUeXBlXCI6XCJyZWdpc3RlckV2ZW50SGFuZGxlclwiLFwiZXZlbnRcIjpldmVudE5hbWUsXCJldmVudElkXCI6aWR9O1xyXG5cdFx0dGhpcy53ZWJzb2NrZXQuc2VuZChcclxuXHRcdFx0dGhpcy5leGNoYW5nZSxcclxuXHRcdFx0eyB0b3BpYzpcInJlZ2lzdGVyRXZlbnRIYW5kbGVyXCIsIHJvdXRlcl9pZDp0aGlzLnNvY2tldFNlc3Npb259LFxyXG5cdFx0XHRKU09OLnN0cmluZ2lmeShjbWQpXHJcblx0XHQpXHJcblx0fTtcclxuXHJcblx0cHVibGljIHNlbmRDb21tYW5kKGNvbW1hbmQ6c3RyaW5nLC4uLnA6YW55W10pe1xyXG5cdFx0Y29uc29sZS5sb2coXCJzZWNcIixhcmd1bWVudHMpO1xyXG5cdFx0dmFyIGFyZ3M9W107XHJcblx0XHRcclxuXHRcdHZhciBjYWxsYmFjaz1udWxsO1xyXG5cclxuXHRcdGZvciAodmFyIGk9MDsoaTxwLmxlbmd0aCk7aSsrKXtcclxuXHRcdFx0aWYgKHBbaV0gaW5zdGFuY2VvZiBGdW5jdGlvbilcclxuXHRcdFx0XHRjYWxsYmFjaz1wW2ldO1xyXG5cdFx0XHRlbHNlXHJcblx0XHRcdFx0YXJncy5wdXNoKHBbaV0pO1xyXG5cdFx0fVxyXG5cdFx0XHJcblx0XHQvKmlmIChwLmxlbmd0aD4xKXtcclxuXHRcdFx0dmFyIGFyZ09mZnNldD0xO1xyXG5cdFx0XHRpZiAoIGNhbGxiYWNrICYmIGNhbGxiYWNrIGluc3RhbmNlb2YgRnVuY3Rpb24gKVxyXG5cdFx0XHRcdGFyZ09mZnNldCs9MTtcclxuXHRcdFx0Zm9yICh2YXIgaT1hcmdPZmZzZXQ7KGk8YXJndW1lbnRzLmxlbmd0aCk7aSsrKXtcclxuXHRcdFx0XHRhcmdzLnB1c2goYXJndW1lbnRzW2ldKTtcclxuXHRcdFx0fVxyXG5cdFx0fSovXHJcblx0XHR2YXIgY21kPXtpZDp0aGlzLm1lc3NhZ2VJZCsrLFwiYXJnc1wiOmFyZ3MsIGt3YXJnczp7fX07XHJcblx0XHRcclxuXHRcdGlmIChjYWxsYmFjayAmJiBjYWxsYmFjayBpbnN0YW5jZW9mIEZ1bmN0aW9uKVxyXG5cdFx0XHR0aGlzLmFkZFJQQ0NhbGxiYWNrKGNtZC5pZC50b1N0cmluZygpLGNhbGxiYWNrLCBudWxsLCAwKTtcclxuXHRcdGNvbnNvbGUubG9nKFwic2VuZENvbW1hbmRcIix0aGlzLGNtZCk7XHJcblx0XHR0aGlzLndlYnNvY2tldC5zZW5kKFxyXG5cdFx0XHR0aGlzLmV4Y2hhbmdlLFxyXG5cdFx0XHR7IHRvcGljOlwiY29tbWFuZDpcIisgY29tbWFuZCwgcm91dGVyX2lkOnRoaXMuc29ja2V0U2Vzc2lvbn0sXHJcblx0XHRcdEpTT04uc3RyaW5naWZ5KGNtZClcclxuXHRcdClcclxuXHR9O1xyXG5cclxuXHRwdWJsaWMgc2VuZFF1ZXJ5KHF1ZXJ5LC4uLnA6YW55W10pe1xyXG5cdFx0dmFyIGFyZ3M9W107XHJcblx0XHR2YXIgY2FsbGJhY2s9bnVsbDtcclxuXHRcdHZhciBjYWxsYmFja1RpbWVvdXQ9bnVsbDtcclxuXHRcdHZhciB0aW1lb3V0ID0gMTAwMDA7XHJcblx0XHRmb3IgKHZhciBpPTA7KGk8cC5sZW5ndGgpO2krKyl7XHJcblx0XHRcdGlmIChwW2ldIGluc3RhbmNlb2YgRnVuY3Rpb24pXHJcblx0XHRcdFx0aWYgKCFjYWxsYmFjaykgXHJcblx0XHRcdFx0XHRjYWxsYmFjaz1wW2ldO1xyXG5cdFx0XHRcdGVsc2VcclxuXHRcdFx0XHRcdGNhbGxiYWNrVGltZW91dCA9IHBbaV07XHJcblx0XHRcdGVsc2V7XHJcblx0XHRcdFx0aWYgKGNhbGxiYWNrVGltZW91dClcclxuXHRcdFx0XHRcdHRpbWVvdXQgPSBwW2ldXHJcblx0XHRcdFx0ZWxzZVxyXG5cdFx0XHRcdFx0YXJncy5wdXNoKHBbaV0pO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHQgXHJcblx0XHR2YXIgY21kPXtpZDp0aGlzLm1lc3NhZ2VJZCsrLFwibWVzc2FnZVR5cGVcIjpcInF1ZXJ5XCIsXCJxdWVyeVwiOnF1ZXJ5LFwiYXJnc1wiOmFyZ3MsIGt3YXJnczpbXSwgcXRzOjB9O1xyXG5cdFx0dGhpcy5hZGRSUENDYWxsYmFjayhjbWQuaWQudG9TdHJpbmcoKSxjYWxsYmFjaywgY2FsbGJhY2tUaW1lb3V0LCB0aW1lb3V0KTtcclxuXHRcdGNvbnNvbGUubG9nKFwic2VuZFF1ZXJ5XCIsIGNhbGxiYWNrLGNtZCk7XHJcblx0XHQvL3RoaXMud2Vic29ja2V0LnNlbmQoSlNPTi5zdHJpbmdpZnkoY21kKSk7XHJcblx0XHR0aGlzLndlYnNvY2tldC5zZW5kKFxyXG5cdFx0XHR0aGlzLmV4Y2hhbmdlLFxyXG5cdFx0XHR7IHRvcGljOlwicXVlcnk6XCIgKyBxdWVyeSwgcXRzOjAsIHF1ZXJ5X2lkOiBjbWQuaWQudG9TdHJpbmcoKSwgcm91dGVyX2lkOnRoaXMuc29ja2V0U2Vzc2lvbiwgcmVzcG9uc2VfYWRkcmVzczp0aGlzLnNvY2tldFNlc3Npb259LFxyXG5cdFx0XHRKU09OLnN0cmluZ2lmeShjbWQpXHJcblx0XHQpXHJcblx0fTtcclxuXHJcblx0cHVibGljIHRyaWdnZXJFdmVudChldmVudE5hbWU6c3RyaW5nLGlkOnN0cmluZyl7XHJcblx0XHR2YXIgZT17aWQ6dGhpcy5tZXNzYWdlSWQrKyxcIm1lc3NhZ2VUeXBlXCI6XCJldmVudFwiLFwiZXZlbnRcIjpldmVudE5hbWUsXCJhcmdzXCI6YXJndW1lbnRzfTtcclxuXHRcdHRoaXMud2Vic29ja2V0LnNlbmQoSlNPTi5zdHJpbmdpZnkoZSkpO1xyXG5cdH07XHJcbn0iLCJcclxuZXhwb3J0IGNsYXNzIERhc2hib2FyZExpbmt7XHJcbiAgICBkYXNoYm9hcmRJZDpzdHJpbmc7XHJcbiAgICBwYW5lbElkOnN0cmluZztcclxuICAgIHBhbmVsTmFtZTpzdHJpbmc7XHJcbiAgICBjb21wb25lbnQ6SUNvbXBvbmVudDtcclxuICAgIHBhcmFtZXRlcnM6YW55O1xyXG5cclxuICAgIC8qY29uc3RydWN0b3IoZGFzaGJvYXJkSWQ6c3RyaW5nLCBzZWN0aW9uSWQ6c3RyaW5nLCBzZWN0aW9uTmFtZTpzdHJpbmcpe1xyXG4gICAgICAgIHRoaXMuZGFzaGJvYXJkSWQgPSBkYXNoYm9hcmRJZDtcclxuICAgICAgICB0aGlzLnNlY3Rpb25JZCA9IHNlY3Rpb25JZDtcclxuICAgICAgICB0aGlzLnNlY3Rpb25OYW1lID0gc2VjdGlvbk5hbWU7XHJcbiAgICB9Ki9cclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihjb21wb25lbnQ6SUNvbXBvbmVudCwgbWVzc2FnZTphbnkpe1xyXG4gICAgICAgIHRoaXMuZGFzaGJvYXJkSWQgPSBtZXNzYWdlLmRhc2hib2FyZElkO1xyXG4gICAgICAgIHRoaXMucGFuZWxJZCA9IG1lc3NhZ2Uuc2VjdGlvbklkO1xyXG4gICAgICAgIHRoaXMucGFuZWxOYW1lID0gbWVzc2FnZS5zZWN0aW9uTmFtZTtcclxuICAgICAgICB0aGlzLmNvbXBvbmVudCA9IGNvbXBvbmVudDtcclxuICAgICAgICB0aGlzLnBhcmFtZXRlcnMgPSBtZXNzYWdlLnBhcmFtZXRlcnM7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSUNvbXBvbmVudCB7XHJcbiAgICBpZDogc3RyaW5nO1xyXG4gICAgbmFtZTogc3RyaW5nO1xyXG4gICAgY29tcG9uZW50VHlwZTogc3RyaW5nO1xyXG4gICAgdWk6YW55O1xyXG4gICAgZGFzaGJvYXJkcyA6IERhc2hib2FyZExpbmtbXTtcclxuXHJcbiAgICAvL3VwZGF0ZVJlZmVyZW5jZXMoa2VydmlTZXJ2aWNlOktlcnZpQmFzZVNlcnZpY2UpO1xyXG4gICAgLy9yZWxvYWQoY29tcG9uZW50OklDb21wb25lbnQpO1xyXG4gICAgLy9yZW1vdmVSZWZlcmVuY2VzKGNvbXBvbmVudHM6SUNvbXBvbmVudFtdKTtcclxufSIsIi8vIENvcHlyaWdodCAoYykgMjAxNiwgVGltIFdlbnR6bGF1XHJcbi8vIExpY2Vuc2VkIHVuZGVyIE1JVFxyXG5pbXBvcnQgeyBJQ29tcG9uZW50LCBEYXNoYm9hcmRMaW5rIH0gZnJvbSBcIi4vSUNvbXBvbmVudC5tb2RlbFwiXHJcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBLZXJ2aUJhc2VTZXJ2aWNlIH0gZnJvbSAnLi4va2VydmktanMuc2VydmljZSdcclxuZGVjbGFyZSB2YXIgUXR5OmFueTtcclxuXHJcbmV4cG9ydCBjbGFzcyBLZXJ2aVZhbHVlIGltcGxlbWVudHMgSUNvbXBvbmVudHtcclxuICAgIHB1YmxpYyBuYW1lOiBzdHJpbmc7XHJcbiAgICBwdWJsaWMgY29tcG9uZW50VHlwZSA9IFwiS2VydmlWYWx1ZVwiXHJcbiAgICBwdWJsaWMgdHlwZU5hbWU6c3RyaW5nID0gbnVsbDsgICAgXHJcbiAgICBwdWJsaWMgaWQ6IHN0cmluZztcclxuICAgIHB1YmxpYyBkYXNoYm9hcmRzOiBEYXNoYm9hcmRMaW5rW10gPSBbXTtcclxuICAgIHB1YmxpYyBpc0lucHV0OmJvb2xlYW47XHJcbiAgICBwdWJsaWMgY29tbWFuZDogc3RyaW5nO1xyXG4gICAgcHVibGljIHZhbHVlVFM6RGF0ZTtcclxuXHJcbiAgICBwdWJsaWMgdWkgPSB7XHJcbiAgICAgICAgdHlwZTogXCJcIixcclxuICAgICAgICBvcmllbnRhdGlvbjogXCJcIixcclxuICAgICAgICB2aXNpYmxlOiB0cnVlXHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBLZXJ2aVZhbHVlVHlwZTx2YWx1ZVR5cGU+IGV4dGVuZHMgS2VydmlWYWx1ZXtcclxuICAgIFxyXG4gICAgcHVibGljIHZhbHVlJDogQmVoYXZpb3JTdWJqZWN0PHZhbHVlVHlwZT47XHJcbiAgICBwcm90ZWN0ZWQga2VydmlTZXJ2aWNlOktlcnZpQmFzZVNlcnZpY2UgPSBudWxsO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2U6YW55LCBrZXJ2aVNlcnZpY2U6S2VydmlCYXNlU2VydmljZSl7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLmtlcnZpU2VydmljZSA9IGtlcnZpU2VydmljZTtcclxuICAgICAgICB0aGlzLnZhbHVlJD0gbmV3IEJlaGF2aW9yU3ViamVjdDx2YWx1ZVR5cGU+KG1lc3NhZ2UudmFsdWUpO1xyXG4gICAgICAgIHRoaXMubmFtZSA9IG1lc3NhZ2UubmFtZTtcclxuICAgICAgICB0aGlzLmlzSW5wdXQgPSBtZXNzYWdlLmlzSW5wdXQ7XHJcbiAgICAgICAgdGhpcy51aSA9IG1lc3NhZ2UudWk7XHJcbiAgICAgICAgdGhpcy5jb21tYW5kID0gbWVzc2FnZS5jb21tYW5kO1xyXG4gICAgICAgIHRoaXMuaWQgPSBtZXNzYWdlLmlkO1xyXG4gICAgICAgIHRoaXMudWlbXCJ0eXBlXCJdID0gbWVzc2FnZS5jb21wb25lbnRUeXBlO1xyXG4gICAgICAgIHRoaXMudWlbXCJvcmllbnRhdGlvblwiXSA9IG1lc3NhZ2Uub3JpZW50YXRpb247XHJcbiAgICAgICAgdGhpcy51aVtcInZpc2libGVcIl0gPSBtZXNzYWdlLnZpc2libGU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgZm9yICh2YXIgcHJvcCBpbiBtZXNzYWdlLnVpKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnVpW3Byb3BdICE9IHVuZGVmaW5lZClcclxuICAgICAgICAgICAgICAgIHRoaXMudWlbcHJvcF0gPSBtZXNzYWdlLnVpW3Byb3BdO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZm9yIChsZXQgZGFzaGJvYXJkTGluayBvZiBtZXNzYWdlLmRhc2hib2FyZExpbmtzKXtcclxuICAgICAgICAgICAgdGhpcy5kYXNoYm9hcmRzLnB1c2goIG5ldyBEYXNoYm9hcmRMaW5rKHRoaXMsIGRhc2hib2FyZExpbmspKTsgXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGdldCB2YWx1ZSgpe1xyXG4gICAgICAgXHJcbiAgICAgICAgLy9jb25zb2xlLmxvZyhcImd2XCIsIHRoaXMuaWQsIHRoaXMudmFsdWUkLnZhbHVlKVxyXG4gICAgICAgcmV0dXJuIHRoaXMudmFsdWUkLnZhbHVlIFxyXG4gICAgfVxyXG5cclxuICAgIHNldCB2YWx1ZSh2YWx1ZTp2YWx1ZVR5cGUpe1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwic3ZcIiwgdGhpcy5pZCk7XHJcbiAgICAgICAgdGhpcy52YWx1ZSQubmV4dCh2YWx1ZSk7IFxyXG4gICAgICAgIHRoaXMua2VydmlTZXJ2aWNlLnNwaW5lLnNlbmRDb21tYW5kKHRoaXMuY29tbWFuZCwgdmFsdWUpO1xyXG4gICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgYWJzdHJhY3QgZ2V0RGVmYXVsdFZhbHVlKCk6dmFsdWVUeXBlO1xyXG4gICAgcHVibGljIHNldCh2OnZhbHVlVHlwZSwgbm90aWZ5OmJvb2xlYW49dHJ1ZSl7XHJcbiAgICAgICAgdGhpcy52YWx1ZSQubmV4dCh2KTtcclxuICAgICAgICBpZiAobm90aWZ5KVxyXG4gICAgICAgICAgICB0aGlzLmtlcnZpU2VydmljZS5zcGluZS5zZW5kQ29tbWFuZCh0aGlzLmNvbW1hbmQsIHYpO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuZXhwb3J0IGVudW0gVmFsdWVSYW5nZVR5cGUge25vcm1hbCwgd2FybmluZywgZXJyb3J9O1xyXG5cclxuZXhwb3J0IGNsYXNzIFZhbHVlUmFuZ2V7XHJcbiAgICBcclxuICAgIHB1YmxpYyBzdGFydDpudW1iZXIgPSBudWxsO1xyXG4gICAgcHVibGljIGVuZDpudW1iZXIgPSBudWxsO1xyXG4gICAgcHVibGljIHR5cGU6VmFsdWVSYW5nZVR5cGUgPSBudWxsO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHJhbmdlOmFueSl7XHJcbiAgICAgICAgdGhpcy5zdGFydCA9IHJhbmdlW1wic3RhcnRcIl07XHJcbiAgICAgICAgdGhpcy5lbmQgPSByYW5nZVtcImVuZFwiXVxyXG4gICAgICAgIGlmIChyYW5nZVtcInR5cGVcIl0gPT0gXCJ3YXJuaW5nXCIpXHJcbiAgICAgICAgICAgIHRoaXMudHlwZSA9IFZhbHVlUmFuZ2VUeXBlLndhcm5pbmc7XHJcbiAgICAgICAgZWxzZSBpZiAocmFuZ2VbXCJ0eXBlXCJdID09IFwiZXJyb3JcIilcclxuICAgICAgICAgICAgdGhpcy50eXBlID0gVmFsdWVSYW5nZVR5cGUuZXJyb3I7XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICB0aGlzLnR5cGUgPSBWYWx1ZVJhbmdlVHlwZS5ub3JtYWw7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5cclxuZXhwb3J0IGNsYXNzIEtlcnZpRW51bU9wdGlvbk1vZGVse1xyXG4gICAgcHVibGljIHZhbHVlOnN0cmluZztcclxuICAgIHB1YmxpYyB0ZXh0OnN0cmluZztcclxuICAgIHB1YmxpYyBzZWxlY3RlZCQ6IEJlaGF2aW9yU3ViamVjdDxib29sZWFuPiA9IG5ldyBCZWhhdmlvclN1YmplY3Q8Ym9vbGVhbj4oZmFsc2UpO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2VPcHRpb246YW55KXtcclxuICAgICAgICB0aGlzLnZhbHVlID0gbWVzc2FnZU9wdGlvbi52YWx1ZTtcclxuICAgICAgICB0aGlzLnRleHQgPSBtZXNzYWdlT3B0aW9uLnRleHQ7XHJcbiAgICAgICAgdGhpcy5zZWxlY3RlZCQubmV4dChtZXNzYWdlT3B0aW9uLnNlbGVjdGVkKTtcclxuICAgIH1cclxuICAgIHVwZGF0ZVJlZmVyZW5jZXMoKXt9O1xyXG4gICAgcmVsb2FkKGNvbXBvbmVudDpJQ29tcG9uZW50KXt9O1xyXG4gICAgcmVtb3ZlUmVmZXJlbmNlcyhjb21wb25lbnRzOklDb21wb25lbnRbXSl7fTtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFNlbGVjdFZhbHVlIGV4dGVuZHMgS2VydmlWYWx1ZVR5cGU8c3RyaW5nW10+e1xyXG4gICAgcHVibGljIG9wdGlvbnM6S2VydmlFbnVtT3B0aW9uTW9kZWxbXSA9IFtdO1xyXG4gICAgcHVibGljIGxhc3RTZWxlY3RlZCQ6QmVoYXZpb3JTdWJqZWN0PEtlcnZpRW51bU9wdGlvbk1vZGVsPiA9IG5ldyBCZWhhdmlvclN1YmplY3Q8S2VydmlFbnVtT3B0aW9uTW9kZWw+KG51bGwpOyBcclxuICAgIFxyXG4gICAgY29uc3RydWN0b3IgKG1lc3NhZ2U6YW55LCBrZXJ2aVNlcnZpY2U6S2VydmlCYXNlU2VydmljZSl7XHJcbiAgICAgICAgc3VwZXIobWVzc2FnZSwga2VydmlTZXJ2aWNlKTtcclxuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICAgICAgdGhpcy5vcHRpb25zID0gW11cclxuICAgICAgICBcclxuICAgICAgICBmb3IgKGxldCBvcHRpb24gb2YgbWVzc2FnZS5vcHRpb25zKXtcclxuICAgICAgICAgICAgdGhpcy5vcHRpb25zLnB1c2goIG5ldyBLZXJ2aUVudW1PcHRpb25Nb2RlbChvcHRpb24pICk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLnNlbGVjdE9wdGlvbnModGhpcy52YWx1ZSQudmFsdWUpO1xyXG4gICAgICAgIHRoaXMudmFsdWUkLnN1YnNjcmliZShmdW5jdGlvbih2KXtcclxuICAgICAgICAgICAgc2VsZi5zZWxlY3RPcHRpb25zKHYpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBnZXREZWZhdWx0VmFsdWUoKTpzdHJpbmdbXXtcclxuICAgICAgICByZXR1cm4gW107XHJcbiAgICB9XHJcblxyXG4gICAgXHJcbiAgICBwdWJsaWMgc2VsZWN0T3B0aW9ucyhzZWxlY3RlZE9wdGlvbnM6YW55KXtcclxuICAgICAgICBjb25zb2xlLmxvZyhcInNvY1wiKTtcclxuICAgICAgICBpZiAoIXNlbGVjdGVkT3B0aW9ucylcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIGZvciAobGV0IG9wdGlvbiBvZiB0aGlzLm9wdGlvbnMpe1xyXG4gICAgICAgICAgICBvcHRpb24uc2VsZWN0ZWQkLm5leHQoZmFsc2UpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBmb3IgKGxldCBzZWxlY3RlZE9wdGlvbiBvZiBzZWxlY3RlZE9wdGlvbnMpe1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcInNvXCIsIHNlbGVjdGVkT3B0aW9uKVxyXG4gICAgICAgICAgICBmb3IobGV0IG9wdGlvbiBvZiB0aGlzLm9wdGlvbnMpe1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJzb3hcIiwgb3B0aW9uIClcclxuICAgICAgICAgICAgICAgIGlmIChvcHRpb24udmFsdWUgPT0gc2VsZWN0ZWRPcHRpb24pe1xyXG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbi5zZWxlY3RlZCQubmV4dCh0cnVlKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmxhc3RTZWxlY3RlZCQubmV4dChvcHRpb24pO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwib3NcIiwgb3B0aW9uLnRleHQsIG9wdGlvbi5zZWxlY3RlZCQudmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgTnVtYmVyVmFsdWUgZXh0ZW5kcyBLZXJ2aVZhbHVlVHlwZTxudW1iZXI+IHtcclxuICAgIHB1YmxpYyB1bml0OiBzdHJpbmc7XHJcbiAgICBwdWJsaWMgcXR5VW5pdEZyb206c3RyaW5nO1xyXG4gICAgcHVibGljIHF0eVVuaXRUbzpzdHJpbmcgPSBudWxsO1xyXG4gICAgcHVibGljIG1heFZhbHVlOiBudW1iZXI7XHJcbiAgICBwdWJsaWMgbWluVmFsdWU6IG51bWJlcjtcclxuICAgIHB1YmxpYyBzcGFya2xpbmUkOiBCZWhhdmlvclN1YmplY3Q8bnVtYmVyW10+ID0gbmV3IEJlaGF2aW9yU3ViamVjdDxudW1iZXJbXT4oW10pO1xyXG4gICAgcHVibGljIHJhbmdlczogVmFsdWVSYW5nZVtdID0gW107XHJcblxyXG4gICAgcHJvdGVjdGVkIGdldERlZmF1bHRWYWx1ZSgpOm51bWJlcntcclxuICAgICAgICByZXR1cm4gMDtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlOiBhbnksIGtlcnZpU2VydmljZTpLZXJ2aUJhc2VTZXJ2aWNlKSB7XHJcbiAgICAgICAgc3VwZXIobWVzc2FnZSwga2VydmlTZXJ2aWNlKTtcclxuICAgICAgICB0aGlzLnVuaXQgPSBtZXNzYWdlLnVuaXQ7XHJcbiAgICAgICAgdGhpcy50eXBlTmFtZSA9IFwiTnVtYmVyXCI7XHJcbiAgICBcclxuICAgICAgICBcdFxyXG4gICAgICAgIHRoaXMucXR5VW5pdEZyb20gPSBtZXNzYWdlLnVuaXQ7XHJcbiAgICAgICAgaWYgKHRoaXMudW5pdCA9PSBcImNcIiAmJiBrZXJ2aVNlcnZpY2UuYXBwbGljYXRpb24kLnZhbHVlW1wiZGlzcGxheVwiXVtcInVuaXRfc3lzdGVtXCJdW1widGVtcGVyYXR1cmVcIl09PVwiRlwiKXtcclxuICAgICAgICAgICAgdGhpcy5xdHlVbml0RnJvbSA9IFwidGVtcENcIjtcclxuICAgICAgICAgICAgdGhpcy5xdHlVbml0VG8gPSBcInRlbXBGXCI7XHJcbiAgICAgICAgICAgIHRoaXMudW5pdCA9IFwiRlwiXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmb3IgKHZhciByYW5nZSBvZiBtZXNzYWdlLnJhbmdlcyl7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnF0eVVuaXRUbyl7XHJcbiAgICAgICAgICAgICAgICB2YXIgcSA9IG5ldyBRdHkocmFuZ2VbXCJzdGFydFwiXSwgdGhpcy5xdHlVbml0RnJvbSk7XHJcbiAgICAgICAgICAgICAgICByYW5nZVtcInN0YXJ0XCJdID0gcS50byh0aGlzLnF0eVVuaXRUbykuc2NhbGFyXHJcbiAgICAgICAgICAgICAgICB2YXIgcSA9IG5ldyBRdHkocmFuZ2VbXCJlbmRcIl0sIHRoaXMucXR5VW5pdEZyb20pO1xyXG4gICAgICAgICAgICAgICAgcmFuZ2VbXCJlbmRcIl0gPSBxLnRvKHRoaXMucXR5VW5pdFRvKS5zY2FsYXJcclxuICAgICAgICAgICAgICAgIHRoaXMucmFuZ2VzLnB1c2gobmV3IFZhbHVlUmFuZ2UocmFuZ2UpKTtcclxuICAgICAgICAgICAgfSBlbHNlXHJcbiAgICAgICAgICAgICAgICB0aGlzLnJhbmdlcy5wdXNoKG5ldyBWYWx1ZVJhbmdlKHJhbmdlKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIGlmICh0aGlzLnF0eVVuaXRUbyAmJiBtZXNzYWdlLm1heFZhbHVlKXtcclxuICAgICAgICAgICAgdmFyIHEgPSBuZXcgUXR5KG1lc3NhZ2UubWF4VmFsdWUsIHRoaXMucXR5VW5pdEZyb20pO1xyXG4gICAgICAgICAgICB0aGlzLm1heFZhbHVlID0gcS50byh0aGlzLnF0eVVuaXRUbykuc2NhbGFyO1xyXG4gICAgICAgIH0gZWxzZVxyXG4gICAgICAgICAgICB0aGlzLm1heFZhbHVlID0gbWVzc2FnZS5tYXhWYWx1ZTsgXHJcblxyXG4gICAgICAgIGlmICh0aGlzLnF0eVVuaXRUbyAmJiBtZXNzYWdlLm1pblZhbHVlKXtcclxuICAgICAgICAgICAgdmFyIHEgPSBuZXcgUXR5KG1lc3NhZ2UubWluVmFsdWUsIHRoaXMucXR5VW5pdEZyb20pO1xyXG4gICAgICAgICAgICB0aGlzLm1pblZhbHVlID0gcS50byh0aGlzLnF0eVVuaXRUbykuc2NhbGFyO1xyXG4gICAgICAgIH0gZWxzZVxyXG4gICAgICAgICAgICB0aGlzLm1pblZhbHVlID0gbWVzc2FnZS5taW5WYWx1ZTsgXHJcbiAgICAgICAgXHJcbiAgICAgICAgXHJcbiAgICAgICAgdmFyIHNwbCA9IFtdXHJcbiAgICAgICAgZm9yKHZhciBzcHYgb2YgbWVzc2FnZS5zcGFya2xpbmUpe1xyXG4gICAgICAgICAgICBpZiAodGhpcy5xdHlVbml0VG8pe1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJzcHZcIiwgc3B2KTtcclxuICAgICAgICAgICAgICAgIHZhciBxID0gbmV3IFF0eShzcHYudmFsdWUsIHRoaXMucXR5VW5pdEZyb20pO1xyXG4gICAgICAgICAgICAgICAgLy9zcHYudmFsdWUgPSBxLnRvKHRoaXMucXR5VW5pdFRvKS5zY2FsYXI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgc3BsLnB1c2goc3B2KVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnNwYXJrbGluZSQubmV4dChzcGwpO1xyXG4gICAgICAgIHRoaXMuc2V0KG1lc3NhZ2UudmFsdWUsIGZhbHNlKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXQodiwgbm90aWZ5PXRydWUpe1xyXG4gICAgICAgIHZhciBuZXdWYWx1ZSA9IHY7XHJcbiAgICAgICAgaWYgKHRoaXMucXR5VW5pdFRvKXtcclxuICAgICAgICAgICAgdmFyIHEgPSBuZXcgUXR5KHYsIHRoaXMucXR5VW5pdEZyb20pO1xyXG4gICAgICAgICAgICBuZXdWYWx1ZSA9IHEudG8odGhpcy5xdHlVbml0VG8pLnNjYWxhcjtcclxuICAgICAgICB9IFxyXG5cclxuICAgICAgICB0aGlzLnZhbHVlJC5uZXh0KG5ld1ZhbHVlKTtcclxuICAgICAgICBpZiAobm90aWZ5KVxyXG4gICAgICAgICAgICB0aGlzLmtlcnZpU2VydmljZS5zcGluZS5zZW5kQ29tbWFuZCh0aGlzLmNvbW1hbmQsIHYpO1xyXG4gICAgICAgIHZhciBzcGw9dGhpcy5zcGFya2xpbmUkLnZhbHVlO1xyXG4gICAgICAgIHNwbC5wdXNoKG5ld1ZhbHVlKTtcclxuICAgICAgICBpZiAoc3BsLmxlbmd0aD4xMClcclxuICAgICAgICAgICAgIHNwbC5zaGlmdCgpO1xyXG4gICAgICAgIHRoaXMuc3BhcmtsaW5lJC5uZXh0KHNwbCk7ICBcclxuICAgICAgICBcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFN0cmluZ1ZhbHVlIGV4dGVuZHMgS2VydmlWYWx1ZVR5cGU8c3RyaW5nPiB7XHJcbiAgICBcclxuICAgIHByb3RlY3RlZCBnZXREZWZhdWx0VmFsdWUoKTpzdHJpbmd7XHJcbiAgICAgICAgcmV0dXJuIFwiXCI7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3RydWN0b3IobWVzc2FnZTogYW55LCBrZXJ2aVNlcnZpY2U6S2VydmlCYXNlU2VydmljZSkge1xyXG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsIGtlcnZpU2VydmljZSlcclxuICAgICAgICB0aGlzLnR5cGVOYW1lID0gXCJTdHJpbmdcIjtcclxuICAgIH1cclxuICAgIFxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgQm9vbGVhblZhbHVlIGV4dGVuZHMgS2VydmlWYWx1ZVR5cGU8Ym9vbGVhbj4ge1xyXG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwga2VydmlTZXJ2aWNlOktlcnZpQmFzZVNlcnZpY2UpIHtcclxuICAgICAgICBzdXBlcihtZXNzYWdlLCBrZXJ2aVNlcnZpY2UpXHJcbiAgICAgICAgdGhpcy50eXBlTmFtZSA9IFwiQm9vbGVhblwiO1xyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBnZXREZWZhdWx0VmFsdWUoKTpib29sZWFue1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIERhdGVUaW1lVmFsdWUgZXh0ZW5kcyBLZXJ2aVZhbHVlVHlwZTxEYXRlPiB7XHJcbiAgICBwdWJsaWMgc3ViVHlwZTogc3RyaW5nO1xyXG4gICAgXHJcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBrZXJ2aVNlcnZpY2U6S2VydmlCYXNlU2VydmljZSkge1xyXG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsIGtlcnZpU2VydmljZSlcclxuICAgICAgICB0aGlzLnN1YlR5cGUgPSBtZXNzYWdlLmlucHV0VHlwZTtcclxuICAgICAgICB0aGlzLnR5cGVOYW1lID0gXCJEYXRlVGltZVwiO1xyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBnZXREZWZhdWx0VmFsdWUoKTpEYXRle1xyXG4gICAgICAgIHJldHVybiBuZXcgRGF0ZSgpO1xyXG4gICAgfVxyXG4gICAgXHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBDb2xvclZhbHVlIGV4dGVuZHMgS2VydmlWYWx1ZVR5cGU8c3RyaW5nPiB7XHJcbiAgICBcclxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIGtlcnZpU2VydmljZTpLZXJ2aUJhc2VTZXJ2aWNlKSB7XHJcbiAgICAgICAgc3VwZXIobWVzc2FnZSwga2VydmlTZXJ2aWNlKVxyXG4gICAgICAgIHRoaXMudHlwZU5hbWUgPSBcIkNvbG9yXCI7XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIGdldERlZmF1bHRWYWx1ZSgpOnN0cmluZ3tcclxuICAgICAgICByZXR1cm4gXCIjZmZmZmZmXCI7XHJcbiAgICB9ICAgIFxyXG59IiwiZXhwb3J0IGNsYXNzIENvbXBvbmVudFJlZntcclxuICAgIHB1YmxpYyBpZDogc3RyaW5nO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2Upe1xyXG4gICAgICAgIHRoaXMuaWQ9IG1lc3NhZ2UuaWQ7XHJcbiAgICB9XHJcbn0iLCIvLyBDb3B5cmlnaHQgKGMpIDIwMTYsIFRpbSBXZW50emxhdVxyXG4vLyBMaWNlbnNlZCB1bmRlciBNSVRcclxuaW1wb3J0IHsgSUNvbXBvbmVudCwgRGFzaGJvYXJkTGluayB9IGZyb20gXCIuL0lDb21wb25lbnQubW9kZWxcIlxyXG5pbXBvcnQgeyBDb21wb25lbnRSZWYgfSBmcm9tIFwiLi9Db21wb25lbnRSZWZcIlxyXG5pbXBvcnQgeyBLZXJ2aUJhc2VTZXJ2aWNlIH0gZnJvbSAnLi4va2VydmktanMuc2VydmljZSdcclxuXHJcbmV4cG9ydCBjbGFzcyBDb250cm9sbGVyIGltcGxlbWVudHMgSUNvbXBvbmVudCB7XHJcbiAgICBwdWJsaWMgdHlwZTogc3RyaW5nO1xyXG4gICAgcHVibGljIHZpc2libGU6IGJvb2xlYW47XHJcbiAgICBwdWJsaWMgY29tcG9uZW50VHlwZT1cImNvbnRyb2xsZXJcIlxyXG4gICAgcHVibGljIHVpOmFueSA9IHt9XHJcbiAgICBwdWJsaWMgbmFtZTogc3RyaW5nO1xyXG4gICAgcHVibGljIGlkOiBzdHJpbmc7XHJcbiAgICBwdWJsaWMgcGFyYW1ldGVyczogYW55O1xyXG4gICAgcHVibGljIGlucHV0czogSUNvbXBvbmVudFtdID0gW107XHJcbiAgICBwdWJsaWMgb3V0cHV0czogSUNvbXBvbmVudFtdID0gW107XHJcbiAgICBwdWJsaWMgYWN0aW9uczogSUNvbXBvbmVudFtdID0gW107XHJcbiAgICBwdWJsaWMgaW5wdXRSZWZlcmVuY2VzOiBDb21wb25lbnRSZWZbXSA9IFtdO1xyXG4gICAgcHVibGljIG91dHB1dFJlZmVyZW5jZXM6IENvbXBvbmVudFJlZltdID0gW107XHJcbiAgICBwdWJsaWMgYWN0aW9uc1JlZmVyZW5jZXM6IENvbXBvbmVudFJlZltdID0gW107XHJcbiAgICBwdWJsaWMgZGFzaGJvYXJkczogRGFzaGJvYXJkTGlua1tdPVtdO1xyXG4gICAgcHVibGljIHRlbXBsYXRlOnN0cmluZztcclxuICAgIHByaXZhdGUga2VydmlTZXJ2aWNlOktlcnZpQmFzZVNlcnZpY2VcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlOiBhbnksIGtlcnZpU2VydmljZTpLZXJ2aUJhc2VTZXJ2aWNlKSB7XHJcbiAgICAgICAgdGhpcy5rZXJ2aVNlcnZpY2UgPSBrZXJ2aVNlcnZpY2U7XHJcbiAgICAgICAgdGhpcy5pZCA9IG1lc3NhZ2UuaWQ7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gbWVzc2FnZS5uYW1lO1xyXG4gICAgICAgIHRoaXMudHlwZSA9IG1lc3NhZ2UudHlwZTtcclxuICAgICAgICB0aGlzLnVpID0gbWVzc2FnZS51aTtcclxuICAgICAgICB0aGlzLnZpc2libGUgPSBtZXNzYWdlLnZpc2libGU7XHJcbiAgICAgICAgdGhpcy5wYXJhbWV0ZXJzID0gbWVzc2FnZS5wYXJhbWV0ZXJzO1xyXG4gICAgICAgIHRoaXMudGVtcGxhdGU9bWVzc2FnZS50ZW1wbGF0ZTtcclxuICAgICAgICBmb3IodmFyIHJlZiBvZiBtZXNzYWdlLmlucHV0cyl7XHJcbiAgICAgICAgICAgIHRoaXMuaW5wdXRSZWZlcmVuY2VzLnB1c2goIG5ldyBDb21wb25lbnRSZWYocmVmKSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmb3IodmFyIHJlZiBvZiBtZXNzYWdlLm91dHB1dHMpe1xyXG4gICAgICAgICAgICB0aGlzLm91dHB1dFJlZmVyZW5jZXMucHVzaCggbmV3IENvbXBvbmVudFJlZihyZWYpKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZvcih2YXIgcmVmIG9mIG1lc3NhZ2UuYWN0aW9ucyl7XHJcbiAgICAgICAgICAgIHRoaXMuYWN0aW9uc1JlZmVyZW5jZXMucHVzaCggbmV3IENvbXBvbmVudFJlZihyZWYpKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZvciAobGV0IGRhc2hib2FyZExpbmsgb2YgbWVzc2FnZS5kYXNoYm9hcmRMaW5rcyl7XHJcbiAgICAgICAgICAgIHRoaXMuZGFzaGJvYXJkcy5wdXNoKCBuZXcgRGFzaGJvYXJkTGluayh0aGlzLCBkYXNoYm9hcmRMaW5rKSk7IFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGVSZWZlcmVuY2VzKCl7XHJcbiAgICAgICAgaWYgKHRoaXMuaW5wdXRzLmxlbmd0aD09MCl7XHJcbiAgICAgICAgICAgIGZvcih2YXIgcmVmIG9mIHRoaXMuaW5wdXRSZWZlcmVuY2VzKXtcclxuICAgICAgICAgICAgICAgIHZhciBjb21wb25lbnQgPSB0aGlzLmtlcnZpU2VydmljZS5nZXRDb21wb25lbnQocmVmLmlkKVxyXG4gICAgICAgICAgICAgICAgaWYgKGNvbXBvbmVudClcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmlucHV0cy5wdXNoKGNvbXBvbmVudClcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5vdXRwdXRzLmxlbmd0aD09MCl7XHJcbiAgICAgICAgICAgIGZvcih2YXIgcmVmIG9mIHRoaXMub3V0cHV0UmVmZXJlbmNlcyl7XHJcbiAgICAgICAgICAgICAgICB2YXIgY29tcG9uZW50ID0gdGhpcy5rZXJ2aVNlcnZpY2UuZ2V0Q29tcG9uZW50KHJlZi5pZClcclxuICAgICAgICAgICAgICAgIGlmIChjb21wb25lbnQpXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vdXRwdXRzLnB1c2goY29tcG9uZW50KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLmFjdGlvbnMubGVuZ3RoPT0wKXtcclxuICAgICAgICAgICAgZm9yKHZhciByZWYgb2YgdGhpcy5hY3Rpb25zUmVmZXJlbmNlcyl7XHJcbiAgICAgICAgICAgICAgICB2YXIgY29tcG9uZW50ID0gdGhpcy5rZXJ2aVNlcnZpY2UuZ2V0Q29tcG9uZW50KHJlZi5pZClcclxuICAgICAgICAgICAgICAgIGlmIChjb21wb25lbnQpXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hY3Rpb25zLnB1c2goY29tcG9uZW50KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIHJlbW92ZVJlZmVyZW5jZXMoY29tcG9uZW50czpJQ29tcG9uZW50W10pe307XHJcbiAgICByZWxvYWQoY29tcG9uZW50OklDb21wb25lbnQpe307XHJcbn0iLCIvLyBDb3B5cmlnaHQgKGMpIDIwMTYsIFRpbSBXZW50emxhdVxyXG4vLyBMaWNlbnNlZCB1bmRlciBNSVRcclxuXHJcbmltcG9ydCB7IElDb21wb25lbnQsIERhc2hib2FyZExpbmsgfSBmcm9tICcuL0lDb21wb25lbnQubW9kZWwnXHJcblxyXG5cclxuZXhwb3J0IGNsYXNzIERhc2hib2FyZFNpemVze1xyXG4gICAgcHVibGljIHZhbHVlV2lkdGg6c3RyaW5nID0nM3JlbSc7XHJcbiAgICBwdWJsaWMgYnV0dG9uV2lkdGg6c3RyaW5nID0gJzI1cHgnO1xyXG4gICAgcHVibGljIGJ1dHRvbkhlaWdodDpzdHJpbmcgPSAnJztcclxuICAgIHB1YmxpYyBzd2l0Y2hXaWR0aDpzdHJpbmcgPSAnMjVweCc7XHJcbiAgICBwdWJsaWMgc3dpdGNoSGVpZ2h0OnN0cmluZyA9ICcyNXB4JztcclxuICAgIHB1YmxpYyBnYXVnZVdpZHRoOnN0cmluZyA9ICcxMDBweCc7XHJcbiAgICBwdWJsaWMgZ2F1Z2VIZWlnaHQ6c3RyaW5nID0gJzIwMHB4JztcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIERhc2hib2FyZE1lc3NhZ2VNb2RlbHtcclxuICAgIHB1YmxpYyBzb3VyY2VJZDpzdHJpbmc7XHJcbiAgICBwdWJsaWMgc291cmNlTmFtZTpzdHJpbmc7XHJcbiAgICBwdWJsaWMgYXJlYTogc3RyaW5nO1xyXG4gICAgcHVibGljIGxldmVsOiBudW1iZXI7XHJcbiAgICBwdWJsaWMgdGltZXN0YW1wOiBEYXRlO1xyXG4gICAgcHVibGljIHRvcGljOnN0cmluZztcclxuICAgIHB1YmxpYyBib2R5OnN0cmluZztcclxuICAgIHB1YmxpYyB0eXBlOnN0cmluZztcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKXtcclxuICAgICAgICB0aGlzLnRpbWVzdGFtcCA9IG5ldyBEYXRlKG1lc3NhZ2UudGltZXN0YW1wKjEwMDApO1xyXG4gICAgICAgIHRoaXMudG9waWMgPSBtZXNzYWdlLnRvcGljO1xyXG4gICAgICAgIHRoaXMuYm9keSA9IG1lc3NhZ2UuYm9keTtcclxuICAgICAgICB0aGlzLnR5cGUgPSBtZXNzYWdlLnR5cGU7XHJcbiAgICAgICAgdGhpcy5zb3VyY2VJZCA9IG1lc3NhZ2Uuc291cmNlX2lkO1xyXG4gICAgICAgIHRoaXMuc291cmNlTmFtZSA9IG1lc3NhZ2Uuc291cmNlX25hbWU7XHJcbiAgICAgICAgdGhpcy5hcmVhID0gbWVzc2FnZS5hcmVhO1xyXG4gICAgICAgIHRoaXMubGV2ZWwgPSBtZXNzYWdlLmxldmVsO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRGFzaGJvYXJkUGFuZWxDb21wb25lbnR7XHJcbiAgICBwdWJsaWMgY29tcG9uZW50OklDb21wb25lbnQ7XHJcbiAgICBwdWJsaWMgY29tcG9uZW50SWQ6c3RyaW5nO1xyXG4gICAgcHVibGljIGxpbmtJZDphbnk7XHJcbiAgICBwdWJsaWMgcGFyYW1ldGVyczphbnk7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBtZXNzYWdlOiBhbnkpe1xyXG4gICAgICAgIHRoaXMubGlua0lkID0gbWVzc2FnZS5saW5rSWQ7XHJcbiAgICAgICAgdGhpcy5jb21wb25lbnRJZCA9IG1lc3NhZ2UuY29tcG9uZW50SWQ7XHJcbiAgICAgICAgdGhpcy5jb21wb25lbnQgPSBtZXNzYWdlLmNvbXBvbmVudDtcclxuICAgICAgICB0aGlzLnBhcmFtZXRlcnMgPSBtZXNzYWdlLnBhcmFtZXRlcnM7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBEYXNoYm9hcmRQYW5lbFBhcmFtZXRlcnN7XHJcbiAgICBwdWJsaWMgdGl0bGU6IHN0cmluZyA9IG51bGw7XHJcbiAgICBwdWJsaWMgd2lkdGg6IHN0cmluZyA9IG51bGw7XHJcbiAgICBwdWJsaWMgaGVpZ2h0OiBzdHJpbmcgPSBudWxsO1xyXG4gICAgcHVibGljIHR5cGU6IHN0cmluZyA9IG51bGw7XHJcbiAgICBwdWJsaWMgdXNlckxvZzogYm9vbGVhbiA9IG51bGw7XHJcbiAgICBwdWJsaWMgYXBwSGVhbHRoOiBib29sZWFuID0gbnVsbDtcclxuICAgIHB1YmxpYyBsb2dMZW5ndGggPSA1O1xyXG4gICAgcHVibGljIGxheW91dCA9ICdyb3cnO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2VQYXJhbWV0ZXJzKSB7XHJcbiAgICAgICAgdGhpcy50aXRsZSA9IG1lc3NhZ2VQYXJhbWV0ZXJzLmxhYmVsO1xyXG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gdGhpcy5jYWxjU2l6ZShtZXNzYWdlUGFyYW1ldGVycy5oZWlnaHQpO1xyXG4gICAgICAgIHRoaXMud2lkdGggPSB0aGlzLmNhbGNTaXplKG1lc3NhZ2VQYXJhbWV0ZXJzLndpZHRoKTtcclxuICAgICAgICB0aGlzLnVzZXJMb2cgPSBtZXNzYWdlUGFyYW1ldGVycy51c2VyTG9nO1xyXG4gICAgICAgIHRoaXMubG9nTGVuZ3RoID0gbWVzc2FnZVBhcmFtZXRlcnMubG9nTGVuZ3RoO1xyXG4gICAgICAgIHRoaXMuYXBwSGVhbHRoID0gbWVzc2FnZVBhcmFtZXRlcnMuYXBwX2hlYWx0aDtcclxuXHJcbiAgICAgICAgaWYgKG1lc3NhZ2VQYXJhbWV0ZXJzLnR5cGUpIHtcclxuICAgICAgICAgICAgdGhpcy50eXBlID0gbWVzc2FnZVBhcmFtZXRlcnMudHlwZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKG1lc3NhZ2VQYXJhbWV0ZXJzLmxheW91dCkge1xyXG4gICAgICAgICAgICB0aGlzLmxheW91dCA9IG1lc3NhZ2VQYXJhbWV0ZXJzLmxheW91dDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBjYWxjU2l6ZSh2YWx1ZSl7XHJcbiAgICAgICAgaWYgKHZhbHVlPT1udWxsKVxyXG4gICAgICAgICAgICByZXR1cm4gJydcclxuICAgICAgICBlbHNlIGlmICh2YWx1ZT09PScnKVxyXG4gICAgICAgICAgICByZXR1cm4gJydcclxuICAgICAgICBlbHNlIGlmIChpc05hTih2YWx1ZSkpe1xyXG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XHJcbiAgICAgICAgfSBlbHNlXHJcbiAgICAgICAgICAgIGlmICh2YWx1ZT4wKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlICsgJyUnO1xyXG4gICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJyc7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBEYXNoYm9hcmRQYW5lbCB7XHJcbiAgICBwdWJsaWMgaWQ6c3RyaW5nO1xyXG4gICAgcHVibGljIG5hbWU6c3RyaW5nO1xyXG4gICAgcHVibGljIHBhcmFtZXRlcnM6IERhc2hib2FyZFBhbmVsUGFyYW1ldGVycztcclxuICAgIHB1YmxpYyBjb21wb25lbnRzOiBEYXNoYm9hcmRQYW5lbENvbXBvbmVudFtdPVtdO1xyXG4gICAgcHVibGljIGRhc2hib2FyZDogRGFzaGJvYXJkO1xyXG4gICAgcHVibGljIHR5cGU6c3RyaW5nO1xyXG4gICAgcHVibGljIHN1YlBhbmVsczogRGFzaGJvYXJkUGFuZWxbXSA9IFtdO1xyXG4gICAgcHVibGljIGhhc09ubHlHcm91cFBhbmVsczpib29sZWFuID0gdHJ1ZTtcclxuICAgIFxyXG4gICAgY29uc3RydWN0b3IgKGRhc2hib2FyZCwgbWVzc2FnZVBhbmVsKSB7XHJcbiAgICAgICAgdGhpcy5kYXNoYm9hcmQ9ZGFzaGJvYXJkO1xyXG4gICAgICAgIHRoaXMuaWQ9bWVzc2FnZVBhbmVsLmlkO1xyXG4gICAgICAgIHRoaXMubmFtZT1tZXNzYWdlUGFuZWwubmFtZTtcclxuICAgICAgICB0aGlzLnR5cGU9bWVzc2FnZVBhbmVsLnR5cGU7XHJcbiAgICAgICAgdGhpcy5wYXJhbWV0ZXJzPW5ldyBEYXNoYm9hcmRQYW5lbFBhcmFtZXRlcnMobWVzc2FnZVBhbmVsLnVpUGFyYW1ldGVycyk7XHJcbiAgICAgICAgLyppZiAobWVzc2FnZVBhbmVsLmNvbXBvbmVudHMpXHJcbiAgICAgICAgICAgIGZvcih2YXIgY29tcG9uZW50UmVmIG9mIG1lc3NhZ2VQYW5lbC5jb21wb25lbnRzKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29tcG9uZW50cy5wdXNoKG5ldyBEYXNoYm9hcmRQYW5lbENvbXBvbmVudE1vZGVsKGNvbXBvbmVudFJlZikpXHJcbiAgICAgICAgICAgIH0qL1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmIChtZXNzYWdlUGFuZWwucGFuZWxzKXtcclxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZygnc3BhJyxtZXNzYWdlUGFuZWwucGFuZWxzKTtcclxuICAgICAgICAgICAgZm9yKHZhciBzdWJNZXNzYWdlUGFuZWwgb2YgbWVzc2FnZVBhbmVsLnBhbmVscyl7XHJcbiAgICAgICAgICAgICAgICB2YXIgcGFuZWw9bmV3IERhc2hib2FyZFBhbmVsKHRoaXMsIHN1Yk1lc3NhZ2VQYW5lbCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnN1YlBhbmVscy5wdXNoKHBhbmVsKTtcclxuICAgICAgICAgICAgICAgIGlmIChwYW5lbC50eXBlICE9PSAnZ3JvdXAnKVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaGFzT25seUdyb3VwUGFuZWxzID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHJlbG9hZChzb3VyY2U6RGFzaGJvYXJkUGFuZWwpe1xyXG4gICAgICAgIC8vY29uc29sZS5sb2coJ3JsJywgdGhpcyk7XHJcbiAgICAgICAgZm9yKHZhciBzdWJQYW5lbCBvZiBzb3VyY2Uuc3ViUGFuZWxzKXtcclxuICAgICAgICAgICAgdGhpcy5yZWxvYWQoc3ViUGFuZWwpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZvcih2YXIgc291cmNlQ29tcG9uZW50IG9mIHNvdXJjZS5jb21wb25lbnRzKXtcclxuICAgICAgICAgICAgdmFyIGZvdW5kPWZhbHNlO1xyXG4gICAgICAgICAgICBmb3IodmFyIGNvbXBvbmVudCBvZiB0aGlzLmNvbXBvbmVudHMpe1xyXG4gICAgICAgICAgICAgICAgaWYgKGNvbXBvbmVudC5jb21wb25lbnRJZCA9PSBzb3VyY2VDb21wb25lbnQuY29tcG9uZW50SWQpe1xyXG4gICAgICAgICAgICAgICAgICAgIGZvdW5kPXRydWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKCFmb3VuZCl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbXBvbmVudHMucHVzaChzb3VyY2VDb21wb25lbnQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBkZWxldGVDb21wb25lbnRzOkRhc2hib2FyZFBhbmVsQ29tcG9uZW50W10gPSBbXTtcclxuICAgICAgICBmb3IgKHZhciBjb21wb25lbnQgb2YgdGhpcy5jb21wb25lbnRzKXtcclxuICAgICAgICAgICAgdmFyIGZvdW5kPWZhbHNlO1xyXG4gICAgICAgICAgICBmb3IodmFyIHNvdXJjZUNvbXBvbmVudCBvZiBzb3VyY2UuY29tcG9uZW50cyl7XHJcbiAgICAgICAgICAgICAgICBpZiAoc291cmNlQ29tcG9uZW50LmNvbXBvbmVudElkID09IGNvbXBvbmVudC5jb21wb25lbnRJZCl7XHJcbiAgICAgICAgICAgICAgICAgICAgZm91bmQ9dHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoIWZvdW5kKVxyXG4gICAgICAgICAgICAgICAgZGVsZXRlQ29tcG9uZW50cy5wdXNoKGNvbXBvbmVudCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vY29uc29sZS5sb2coJ2RzYycsZGVsZXRlQ29tcG9uZW50cyk7XHJcbiAgICAgICAgZm9yKHZhciBjb21wb25lbnQgb2YgZGVsZXRlQ29tcG9uZW50cyl7XHJcbiAgICAgICAgICAgIHRoaXMuY29tcG9uZW50cy5zcGxpY2UoIHRoaXMuY29tcG9uZW50cy5pbmRleE9mKGNvbXBvbmVudCksIDEgKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBEYXNoYm9hcmRCYWNrZ3JvdW5kTW9kZWx7XHJcbiAgICBwdWJsaWMgdHlwZTpzdHJpbmc7XHJcbiAgICBwdWJsaWMgY2FtZXJhSWQ6c3RyaW5nO1xyXG4gICAgcHVibGljIGltYWdlOnN0cmluZztcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKXtcclxuICAgICAgICB0aGlzLnR5cGU9bWVzc2FnZS50eXBlO1xyXG4gICAgICAgIHRoaXMuY2FtZXJhSWQ9bWVzc2FnZS5jYW1lcmFJZFxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRGFzaGJvYXJkIGltcGxlbWVudHMgSUNvbXBvbmVudHtcclxuICAgIHB1YmxpYyBpZDpzdHJpbmc7XHJcbiAgICBwdWJsaWMgbmFtZTpzdHJpbmc7XHJcbiAgICBwdWJsaWMgY29tcG9uZW50VHlwZTpzdHJpbmc7XHJcbiAgICBwdWJsaWMgdHlwZTpzdHJpbmc7XHJcbiAgICBwdWJsaWMgaXNEZWZhdWx0OkJvb2xlYW47XHJcbiAgICBwdWJsaWMgdGVtcGxhdGU6c3RyaW5nO1xyXG4gICAgcHVibGljIHBhbmVsczpEYXNoYm9hcmRQYW5lbFtdO1xyXG4gICAgcHVibGljIHN5c1BhbmVsczpEYXNoYm9hcmRQYW5lbFtdO1xyXG4gICAgcHVibGljIGhlYWRlclBhbmVsOiBEYXNoYm9hcmRQYW5lbD1udWxsO1xyXG4gICAgcHVibGljIGZvb3RlckNlbnRlclBhbmVsOiBEYXNoYm9hcmRQYW5lbD1udWxsO1xyXG4gICAgcHVibGljIGZvb3RlckxlZnRQYW5lbDogRGFzaGJvYXJkUGFuZWw9bnVsbDtcclxuICAgIHB1YmxpYyBmb290ZXJSaWdodFBhbmVsOiBEYXNoYm9hcmRQYW5lbD1udWxsO1xyXG4gICAgcHVibGljIHN5c1BhbmVsOiBEYXNoYm9hcmRQYW5lbD1udWxsO1xyXG4gICAgcHVibGljIGJhY2tncm91bmRQYW5lbDogRGFzaGJvYXJkUGFuZWw9bnVsbDtcclxuICAgIHB1YmxpYyBjb250cm9sbGVyUGFuZWw6IERhc2hib2FyZFBhbmVsPW51bGw7XHJcbiAgICBwdWJsaWMgTGVmdFBhZFhQYW5lbDogRGFzaGJvYXJkUGFuZWw9bnVsbDtcclxuICAgIHB1YmxpYyBMZWZ0UGFkWVBhbmVsOiBEYXNoYm9hcmRQYW5lbD1udWxsO1xyXG4gICAgcHVibGljIFJpZ2h0UGFkWFBhbmVsOiBEYXNoYm9hcmRQYW5lbD1udWxsO1xyXG4gICAgcHVibGljIFJpZ2h0UGFkWVBhbmVsOiBEYXNoYm9hcmRQYW5lbD1udWxsO1xyXG4gICAgLy9wdWJsaWMgYmFja2dyb3VuZDogRGFzaGJvYXJkQmFja2dyb3VuZE1vZGVsPW51bGw7XHJcbiAgICBwdWJsaWMgdW5pdFNpemU6IG51bWJlcjtcclxuXHJcbiAgICAvL25vdCB1c2VkIGluIGRhc2hib2FyZHNcclxuICAgIHB1YmxpYyB2aXNpYmxlOmJvb2xlYW47XHJcbiAgICBwdWJsaWMgdWk6YW55O1xyXG4gICAgcHVibGljIGRhc2hib2FyZHM6YW55W10gPSBbXTtcclxuXHJcbiAgICBwcml2YXRlIGN1cnJlbnRQYW5lbDpEYXNoYm9hcmRQYW5lbCA9IG51bGw7XHJcbiBcclxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2Upe1xyXG4gICAgICAgIHRoaXMuaWQ9bWVzc2FnZS5pZDtcclxuICAgICAgICB0aGlzLm5hbWU9bWVzc2FnZS5uYW1lO1xyXG4gICAgICAgIHRoaXMuY29tcG9uZW50VHlwZT0nZGFzaGJvYXJkJztcclxuICAgICAgICB0aGlzLnR5cGU9bWVzc2FnZS50eXBlO1xyXG4gICAgICAgIHRoaXMuaXNEZWZhdWx0PW1lc3NhZ2UuaXNEZWZhdWx0O1xyXG4gICAgICAgIHRoaXMudGVtcGxhdGU9bWVzc2FnZS50ZW1wbGF0ZTtcclxuICAgICAgICB0aGlzLnVuaXRTaXplPW1lc3NhZ2UudW5pdFNpemU7XHJcbiAgICAgICAgLy90aGlzLmJhY2tncm91bmQ9bmV3IERhc2hib2FyZEJhY2tncm91bmRNb2RlbChtZXNzYWdlLmJhY2tncm91bmQpO1xyXG4gICAgICAgIHRoaXMucGFuZWxzPVtdO1xyXG4gICAgICAgIHRoaXMuc3lzUGFuZWxzPVtdO1xyXG4gICAgICAgIGlmICghdGhpcy50ZW1wbGF0ZSl7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBmb3IgKGxldCBtZXNzYWdlUGFuZWwgb2YgbWVzc2FnZS5zZWN0aW9ucyl7XHJcbiAgICAgICAgICAgICAgICBpZiAoIW1lc3NhZ2VQYW5lbCl7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2Rhc2hib2FyZCB3aXRoIG51bGwgcGFuZWwnLCB0aGlzLmlkKTtcclxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHZhciBwYW5lbCA9IG5ldyBEYXNoYm9hcmRQYW5lbCh0aGlzLCBtZXNzYWdlUGFuZWwpO1xyXG4gICAgICAgICAgICAgICAgdmFyIHN5c1BhbmVsID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGlmIChwYW5lbC5pZD09J2hlYWRlcl9jZW50ZXInKVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaGVhZGVyUGFuZWw9cGFuZWw7XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmIChwYW5lbC5pZD09J2Zvb3Rlcl9sZWZ0JylcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmZvb3RlckxlZnRQYW5lbD1wYW5lbDtcclxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHBhbmVsLmlkPT0nZm9vdGVyX2NlbnRlcicpXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5mb290ZXJDZW50ZXJQYW5lbD1wYW5lbDtcclxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHBhbmVsLmlkPT0nZm9vdGVyX3JpZ2h0JylcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmZvb3RlclJpZ2h0UGFuZWw9cGFuZWw7XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmIChwYW5lbC5pZD09J2hlYWRlcl9yaWdodCcpXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zeXNQYW5lbD1wYW5lbDtcclxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHBhbmVsLmlkPT0nY29udHJvbGxlcnMnKVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29udHJvbGxlclBhbmVsPXBhbmVsO1xyXG4gICAgICAgICAgICAgICAgZWxzZSBpZiAocGFuZWwuaWQ9PSdiYWNrZ3JvdW5kJylcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmJhY2tncm91bmRQYW5lbD1wYW5lbDtcclxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHBhbmVsLmlkPT0nbGVmdF9wYWRfeCcpXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5MZWZ0UGFkWFBhbmVsPXBhbmVsO1xyXG4gICAgICAgICAgICAgICAgZWxzZSBpZiAocGFuZWwuaWQ9PSdsZWZ0X3BhZF95JylcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkxlZnRQYWRZUGFuZWw9cGFuZWw7XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmIChwYW5lbC5pZD09J3JpZ2h0X3BhZF94JylcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlJpZ2h0UGFkWFBhbmVsPXBhbmVsO1xyXG4gICAgICAgICAgICAgICAgZWxzZSBpZiAocGFuZWwuaWQ9PSdyaWdodF9wYWRfeScpXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5SaWdodFBhZFlQYW5lbD1wYW5lbDtcclxuICAgICAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgc3lzUGFuZWw9ZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHBhbmVsLnR5cGUhPSdncm91cCcpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZih0aGlzLmN1cnJlbnRQYW5lbD09bnVsbCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRQYW5lbCA9IG5ldyBEYXNoYm9hcmRQYW5lbChcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2lkJzpudWxsLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICduYW1lJzogJycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3R5cGUnOidncm91cCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2NvbXBvbmVudHMnOltdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdwYW5lbHMnOltdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICd1aVBhcmFtZXRlcnMnOntcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RpdGxlJzonJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3dpZHRoJzoxMDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdoZWlnaHQnOjAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICd1c2VyTG9nJzpmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xvZ0xlbmd0aCc6MFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudFBhbmVsLnN1YlBhbmVscy5wdXNoKHBhbmVsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGFuZWxzLnB1c2godGhpcy5jdXJyZW50UGFuZWwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50UGFuZWwuc3ViUGFuZWxzLnB1c2gocGFuZWwpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9ICAgXHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wYW5lbHMucHVzaChwYW5lbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudFBhbmVsPW51bGw7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKHN5c1BhbmVsKVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3lzUGFuZWxzLnB1c2gocGFuZWwpOyAgICAgIFxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoIXRoaXMuY3VycmVudFBhbmVsKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudFBhbmVsID0gbmV3IERhc2hib2FyZFBhbmVsKFxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMsXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAnaWQnOm51bGwsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICduYW1lJzogJycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICd0eXBlJzonZ3JvdXAnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAnY29tcG9uZW50cyc6W10sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICdwYW5lbHMnOltdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAndWlQYXJhbWV0ZXJzJzp7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAndGl0bGUnOicnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3dpZHRoJzoxMDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnaGVpZ2h0JzowLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3VzZXJMb2cnOmZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xvZ0xlbmd0aCc6MFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9ICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vdGhpcy5jdXJyZW50UGFuZWwuc3ViUGFuZWxzLnB1c2gocGFuZWwpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGFuZWxzLnB1c2godGhpcy5jdXJyZW50UGFuZWwpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcHVibGljIGlzRW1wdHkoKXtcclxuICAgICAgICByZXR1cm4gdGhpcy5wYW5lbHMubGVuZ3RoID09IDA7XHJcbiAgICB9XHJcbiAgICByZW1vdmVSZWZlcmVuY2VzKGRlbGV0ZUNvbXBvbmVudHM6SUNvbXBvbmVudFtdKXt9O1xyXG4gICAgdXBkYXRlUmVmZXJlbmNlcygpe307XHJcbiAgICByZWxvYWQoY29tcG9uZW50OklDb21wb25lbnQpe1xyXG4gICAgICAgIHZhciBzb3VyY2UgPSBjb21wb25lbnQgYXMgRGFzaGJvYXJkO1xyXG4gICAgICAgIGlmICghdGhpcy5iYWNrZ3JvdW5kUGFuZWwgJiYgc291cmNlLmJhY2tncm91bmRQYW5lbClcclxuICAgICAgICAgICAgdGhpcy5iYWNrZ3JvdW5kUGFuZWw9c291cmNlLmJhY2tncm91bmRQYW5lbDtcclxuICAgICAgICBlbHNlIGlmICh0aGlzLmJhY2tncm91bmRQYW5lbCAmJiAhc291cmNlLmJhY2tncm91bmRQYW5lbClcclxuICAgICAgICAgICAgdGhpcy5iYWNrZ3JvdW5kUGFuZWwgPSBudWxsXHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5iYWNrZ3JvdW5kUGFuZWwpXHJcbiAgICAgICAgICAgIHRoaXMuYmFja2dyb3VuZFBhbmVsLnJlbG9hZChzb3VyY2UuYmFja2dyb3VuZFBhbmVsKVxyXG5cclxuICAgICAgICBpZiAoIXRoaXMuZm9vdGVyTGVmdFBhbmVsICYmIHNvdXJjZS5mb290ZXJMZWZ0UGFuZWwpXHJcbiAgICAgICAgICAgIHRoaXMuZm9vdGVyTGVmdFBhbmVsPXNvdXJjZS5mb290ZXJMZWZ0UGFuZWw7XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5mb290ZXJMZWZ0UGFuZWwgJiYgIXNvdXJjZS5mb290ZXJMZWZ0UGFuZWwpXHJcbiAgICAgICAgICAgIHRoaXMuZm9vdGVyTGVmdFBhbmVsID0gbnVsbFxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuZm9vdGVyTGVmdFBhbmVsKVxyXG4gICAgICAgICAgICB0aGlzLmZvb3RlckxlZnRQYW5lbC5yZWxvYWQoc291cmNlLmZvb3RlckxlZnRQYW5lbClcclxuXHJcbiAgICAgICAgaWYgKCF0aGlzLmZvb3RlclJpZ2h0UGFuZWwgJiYgc291cmNlLmZvb3RlclJpZ2h0UGFuZWwpXHJcbiAgICAgICAgICAgIHRoaXMuZm9vdGVyUmlnaHRQYW5lbD1zb3VyY2UuZm9vdGVyUmlnaHRQYW5lbDtcclxuICAgICAgICBlbHNlIGlmICh0aGlzLmZvb3RlclJpZ2h0UGFuZWwgJiYgIXNvdXJjZS5mb290ZXJSaWdodFBhbmVsKVxyXG4gICAgICAgICAgICB0aGlzLmZvb3RlclJpZ2h0UGFuZWwgPSBudWxsXHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5mb290ZXJSaWdodFBhbmVsKVxyXG4gICAgICAgICAgICB0aGlzLmZvb3RlclJpZ2h0UGFuZWwucmVsb2FkKHNvdXJjZS5mb290ZXJSaWdodFBhbmVsKVxyXG5cclxuICAgICAgICBpZiAoIXRoaXMuZm9vdGVyQ2VudGVyUGFuZWwgJiYgc291cmNlLmZvb3RlckNlbnRlclBhbmVsKVxyXG4gICAgICAgICAgICB0aGlzLmZvb3RlckNlbnRlclBhbmVsPXNvdXJjZS5mb290ZXJDZW50ZXJQYW5lbDtcclxuICAgICAgICBlbHNlIGlmICh0aGlzLmZvb3RlckNlbnRlclBhbmVsICYmICFzb3VyY2UuZm9vdGVyQ2VudGVyUGFuZWwpXHJcbiAgICAgICAgICAgIHRoaXMuZm9vdGVyQ2VudGVyUGFuZWwgPSBudWxsXHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5mb290ZXJDZW50ZXJQYW5lbClcclxuICAgICAgICAgICAgdGhpcy5mb290ZXJDZW50ZXJQYW5lbC5yZWxvYWQoc291cmNlLmZvb3RlckNlbnRlclBhbmVsKVxyXG5cclxuICAgICAgICAvKmlmICghdGhpcy5oZWFkZXJQYW5lbCAmJiBzb3VyY2UuaGVhZGVyUGFuZWwpXHJcbiAgICAgICAgICAgIHRoaXMuaGVhZGVyUGFuZWw9c291cmNlLmhlYWRlclBhbmVsO1xyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuaGVhZGVyUGFuZWwgJiYgIXNvdXJjZS5oZWFkZXJQYW5lbClcclxuICAgICAgICAgICAgdGhpcy5oZWFkZXJQYW5lbCA9IG51bGxcclxuICAgICAgICBlbHNlIGlmICh0aGlzLmhlYWRlclBhbmVsKVxyXG4gICAgICAgICAgICB0aGlzLmhlYWRlclBhbmVsLnJlbG9hZChzb3VyY2UuaGVhZGVyUGFuZWwpKi9cclxuXHJcbiAgICAgICAgaWYgKCF0aGlzLnN5c1BhbmVsICYmIHNvdXJjZS5zeXNQYW5lbClcclxuICAgICAgICAgICAgdGhpcy5zeXNQYW5lbD1zb3VyY2Uuc3lzUGFuZWw7XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5zeXNQYW5lbCAmJiAhc291cmNlLnN5c1BhbmVsKVxyXG4gICAgICAgICAgICB0aGlzLnN5c1BhbmVsID0gbnVsbFxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuc3lzUGFuZWwpXHJcbiAgICAgICAgICAgIHRoaXMuc3lzUGFuZWwucmVsb2FkKHNvdXJjZS5zeXNQYW5lbClcclxuXHJcbiAgICAgICAgaWYgKCF0aGlzLkxlZnRQYWRYUGFuZWwgJiYgc291cmNlLkxlZnRQYWRYUGFuZWwpXHJcbiAgICAgICAgICAgIHRoaXMuTGVmdFBhZFhQYW5lbD1zb3VyY2UuTGVmdFBhZFhQYW5lbDtcclxuICAgICAgICBlbHNlIGlmICh0aGlzLkxlZnRQYWRYUGFuZWwgJiYgIXNvdXJjZS5MZWZ0UGFkWFBhbmVsKVxyXG4gICAgICAgICAgICB0aGlzLkxlZnRQYWRYUGFuZWwgPSBudWxsXHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5MZWZ0UGFkWFBhbmVsKVxyXG4gICAgICAgICAgICB0aGlzLkxlZnRQYWRYUGFuZWwucmVsb2FkKHNvdXJjZS5MZWZ0UGFkWFBhbmVsKVxyXG5cclxuICAgICAgICBpZiAoIXRoaXMuTGVmdFBhZFlQYW5lbCAmJiBzb3VyY2UuTGVmdFBhZFlQYW5lbClcclxuICAgICAgICAgICAgdGhpcy5MZWZ0UGFkWVBhbmVsPXNvdXJjZS5MZWZ0UGFkWVBhbmVsO1xyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuTGVmdFBhZFlQYW5lbCAmJiAhc291cmNlLkxlZnRQYWRZUGFuZWwpXHJcbiAgICAgICAgICAgIHRoaXMuTGVmdFBhZFlQYW5lbCA9IG51bGxcclxuICAgICAgICBlbHNlIGlmICh0aGlzLkxlZnRQYWRZUGFuZWwpXHJcbiAgICAgICAgICAgIHRoaXMuTGVmdFBhZFlQYW5lbC5yZWxvYWQoc291cmNlLkxlZnRQYWRZUGFuZWwpXHJcblxyXG4gICAgICAgIGlmICghdGhpcy5SaWdodFBhZFhQYW5lbCAmJiBzb3VyY2UuUmlnaHRQYWRYUGFuZWwpXHJcbiAgICAgICAgICAgIHRoaXMuUmlnaHRQYWRYUGFuZWw9c291cmNlLlJpZ2h0UGFkWFBhbmVsO1xyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuUmlnaHRQYWRYUGFuZWwgJiYgIXNvdXJjZS5SaWdodFBhZFhQYW5lbClcclxuICAgICAgICAgICAgdGhpcy5SaWdodFBhZFhQYW5lbCA9IG51bGxcclxuICAgICAgICBlbHNlIGlmICh0aGlzLlJpZ2h0UGFkWFBhbmVsKVxyXG4gICAgICAgICAgICB0aGlzLlJpZ2h0UGFkWFBhbmVsLnJlbG9hZChzb3VyY2UuUmlnaHRQYWRYUGFuZWwpXHJcblxyXG4gICAgICAgIGlmICghdGhpcy5SaWdodFBhZFlQYW5lbCAmJiBzb3VyY2UuUmlnaHRQYWRZUGFuZWwpXHJcbiAgICAgICAgICAgIHRoaXMuUmlnaHRQYWRZUGFuZWw9c291cmNlLlJpZ2h0UGFkWVBhbmVsO1xyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuUmlnaHRQYWRZUGFuZWwgJiYgIXNvdXJjZS5SaWdodFBhZFlQYW5lbClcclxuICAgICAgICAgICAgdGhpcy5SaWdodFBhZFlQYW5lbCA9IG51bGxcclxuICAgICAgICBlbHNlIGlmICh0aGlzLlJpZ2h0UGFkWVBhbmVsKVxyXG4gICAgICAgICAgICB0aGlzLlJpZ2h0UGFkWVBhbmVsLnJlbG9hZChzb3VyY2UuUmlnaHRQYWRZUGFuZWwpXHJcblxyXG4gICAgICAgIGlmICghdGhpcy5jb250cm9sbGVyUGFuZWwgJiYgc291cmNlLmNvbnRyb2xsZXJQYW5lbClcclxuICAgICAgICAgICAgdGhpcy5jb250cm9sbGVyUGFuZWw9c291cmNlLmNvbnRyb2xsZXJQYW5lbDtcclxuICAgICAgICBlbHNlIGlmICh0aGlzLmNvbnRyb2xsZXJQYW5lbCAmJiAhc291cmNlLmNvbnRyb2xsZXJQYW5lbClcclxuICAgICAgICAgICAgdGhpcy5jb250cm9sbGVyUGFuZWwgPSBudWxsXHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5jb250cm9sbGVyUGFuZWwpXHJcbiAgICAgICAgICAgIHRoaXMuY29udHJvbGxlclBhbmVsLnJlbG9hZChzb3VyY2UuY29udHJvbGxlclBhbmVsKVxyXG4gICAgfTtcclxuXHJcbiAgICBwcml2YXRlIGdldERhc2hib2FyZFBhbmVsQnlJZChpZDpzdHJpbmcsIHBhbmVsczpEYXNoYm9hcmRQYW5lbFtdKXtcclxuICAgICAgICBmb3IobGV0IHBhbmVsIG9mIHBhbmVscyl7XHJcbiAgICAgICAgICAgIGlmIChwYW5lbC5pZCA9PSBpZClcclxuICAgICAgICAgICAgICAgIHJldHVybiBwYW5lbDsgXHJcbiAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICB2YXIgcmVzID0gdGhpcy5nZXREYXNoYm9hcmRQYW5lbEJ5SWQoaWQsIHBhbmVsLnN1YlBhbmVscyk7XHJcbiAgICAgICAgICAgICAgICBpZiAocmVzKVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IFxyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhZGREYXNoYm9hcmRMaW5rKGxpbms6RGFzaGJvYXJkTGluayl7XHJcbiAgICAgICAgaWYgKGxpbmsuZGFzaGJvYXJkSWQgPT0gJyonIHx8IGxpbmsuZGFzaGJvYXJkSWQgPT0gdGhpcy5pZCB8fCAobGluay5kYXNoYm9hcmRJZD09JyoqZGVmYXVsdCoqJyAmJiB0aGlzLmlzRGVmYXVsdCkpe1xyXG4gICAgICAgICAgICB2YXIgcGFuZWxGb3VuZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB2YXIgcGFuZWwgPSB0aGlzLmdldERhc2hib2FyZFBhbmVsQnlJZChsaW5rLnBhbmVsSWQsIHRoaXMucGFuZWxzKTtcclxuICAgICAgICAgICAgaWYgKCFwYW5lbClcclxuICAgICAgICAgICAgICAgIHBhbmVsID0gdGhpcy5nZXREYXNoYm9hcmRQYW5lbEJ5SWQobGluay5wYW5lbElkLCB0aGlzLnN5c1BhbmVscyk7XHJcbiAgICAgICAgICAgIGlmIChwYW5lbCl7XHJcbiAgICAgICAgICAgICAgICBwYW5lbC5jb21wb25lbnRzLnB1c2gobmV3IERhc2hib2FyZFBhbmVsQ29tcG9uZW50KGxpbmspKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdhZGgnLGxpbmspO1xyXG4gICAgICAgICAgICAgICAgdmFyIG1lc3NhZ2VQYW5lbCA9e1xyXG4gICAgICAgICAgICAgICAgICAgIGlkOmxpbmsucGFuZWxJZCxcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOmxpbmsucGFuZWxOYW1lLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6J3BhbmVsJyxcclxuICAgICAgICAgICAgICAgICAgICB1aVBhcmFtZXRlcnM6e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAndGl0bGUnOicnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAnd2lkdGgnOjAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICdoZWlnaHQnOjAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICd1c2VyTG9nJzpmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ2xvZ0xlbmd0aCc6MFxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHZhciBuZXdQYW5lbCA9IG5ldyBEYXNoYm9hcmRQYW5lbCh0aGlzLCBtZXNzYWdlUGFuZWwpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50UGFuZWwuc3ViUGFuZWxzLnB1c2gobmV3UGFuZWwpO1xyXG4gICAgICAgICAgICAgICAgbmV3UGFuZWwuY29tcG9uZW50cy5wdXNoKG5ldyBEYXNoYm9hcmRQYW5lbENvbXBvbmVudChsaW5rKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCIvLyBDb3B5cmlnaHQgKGMpIDIwMTYsIFRpbSBXZW50emxhdVxyXG4vLyBMaWNlbnNlZCB1bmRlciBNSVRcclxuXHJcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBJQ29tcG9uZW50LCBEYXNoYm9hcmRMaW5rIH0gZnJvbSAnLi9JQ29tcG9uZW50Lm1vZGVsJ1xyXG5pbXBvcnQgeyBLZXJ2aUJhc2VTZXJ2aWNlIH0gZnJvbSAnLi4va2VydmktanMuc2VydmljZSdcclxuZXhwb3J0IGNsYXNzIEFjdGlvbiBpbXBsZW1lbnRzIElDb21wb25lbnQge1xyXG4gICAgcHJpdmF0ZSBrZXJ2aVNlcnZpY2U6IEtlcnZpQmFzZVNlcnZpY2UgPSBudWxsO1xyXG5cclxuICAgIHB1YmxpYyBpZDogc3RyaW5nID0gbnVsbDtcclxuICAgIHB1YmxpYyBuYW1lOiBzdHJpbmcgPSBudWxsO1xyXG4gICAgcHVibGljIGNvbXBvbmVudFR5cGUgPSAnYWN0aW9uJztcclxuICAgIHB1YmxpYyBydW5Db21tYW5kID0gJyc7XHJcbiAgICBwdWJsaWMgaW50ZXJydXB0Q29tbWFuZCA9ICcnO1xyXG4gICAgcHVibGljIHVpID0ge1xyXG4gICAgICAgIHR5cGU6ICcnLFxyXG4gICAgICAgIG9yaWVudGF0aW9uOiAnJyxcclxuICAgICAgICB2aXNpYmxlOiB0cnVlXHJcbiAgICB9XHJcbiAgICBwdWJsaWMgZGFzaGJvYXJkczogRGFzaGJvYXJkTGlua1tdID0gW107XHJcbiAgICBwdWJsaWMgcnVubmluZyQ6IEJlaGF2aW9yU3ViamVjdDxib29sZWFuPiA9IG5ldyBCZWhhdmlvclN1YmplY3Q8Ym9vbGVhbj4oZmFsc2UpO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2U6IGFueSwga2VydmlTZXJ2aWNlOktlcnZpQmFzZVNlcnZpY2Upe1xyXG4gICAgICAgIHRoaXMua2VydmlTZXJ2aWNlID0ga2VydmlTZXJ2aWNlO1xyXG4gICAgICAgIHRoaXMuaWQgPSBtZXNzYWdlLmlkO1xyXG4gICAgICAgIHRoaXMubmFtZSA9IG1lc3NhZ2UubmFtZTtcclxuICAgICAgICB0aGlzLnVpID0gbWVzc2FnZS51aTtcclxuICAgICAgICB0aGlzLnVpLnZpc2libGUgPSBtZXNzYWdlLnZpc2libGU7XHJcbiAgICAgICAgdGhpcy51aS50eXBlID0gbWVzc2FnZS50eXBlO1xyXG4gICAgICAgIHRoaXMucnVuQ29tbWFuZCA9IG1lc3NhZ2UucnVuQ29tbWFuZDtcclxuICAgICAgICB0aGlzLmludGVycnVwdENvbW1hbmQgPSBtZXNzYWdlLmludGVycnVwdENvbW1hbmQ7XHJcbiAgICAgICAgdGhpcy5ydW5uaW5nJC5uZXh0KG1lc3NhZ2UucnVubmluZyk7XHJcblxyXG4gICAgICAgIGZvciAobGV0IGRhc2hib2FyZExpbmsgb2YgbWVzc2FnZS5kYXNoYm9hcmRMaW5rcyl7XHJcbiAgICAgICAgICAgIHRoaXMuZGFzaGJvYXJkcy5wdXNoKG5ldyBEYXNoYm9hcmRMaW5rKHRoaXMsIGRhc2hib2FyZExpbmspKTsgXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBydW4ocGFyYW1ldGVycyl7XHJcbiAgICAgICAgLy9pZiAoIXRoaXMucnVubmluZyQudmFsdWUpe1xyXG4gICAgICAgICAgICBpZiAocGFyYW1ldGVycyAmJiBwYXJhbWV0ZXJzLmxlbmd0aD4wKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5rZXJ2aVNlcnZpY2Uuc3BpbmUuc2VuZENvbW1hbmQodGhpcy5ydW5Db21tYW5kLCAuLi5wYXJhbWV0ZXJzKTtcclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgdGhpcy5rZXJ2aVNlcnZpY2Uuc3BpbmUuc2VuZENvbW1hbmQodGhpcy5ydW5Db21tYW5kKTtcclxuICAgICAgICAvL31cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgaW50ZXJydXB0KHBhcmFtZXRlcnMpe1xyXG4gICAgICAgIGlmIChwYXJhbWV0ZXJzICYmIHBhcmFtZXRlcnMubGVuZ3RoPjApXHJcbiAgICAgICAgICAgIHRoaXMua2VydmlTZXJ2aWNlLnNwaW5lLnNlbmRDb21tYW5kKHRoaXMuaW50ZXJydXB0Q29tbWFuZCwgLi4ucGFyYW1ldGVycyk7XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICB0aGlzLmtlcnZpU2VydmljZS5zcGluZS5zZW5kQ29tbWFuZCh0aGlzLmludGVycnVwdENvbW1hbmQpO1xyXG4gICAgfVxyXG59IiwiXHJcbmltcG9ydCAqIGFzIEtlcnZpVmFsdWVzIGZyb20gJy4vS2VydmlWYWx1ZXMubW9kZWwnO1xyXG5pbXBvcnQgeyBDb250cm9sbGVyIH0gZnJvbSAnLi9jb250cm9sbGVyLm1vZGVsJztcclxuaW1wb3J0IHsgRGFzaGJvYXJkIH0gZnJvbSAnLi9kYXNoYm9hcmQubW9kZWwnO1xyXG5pbXBvcnQgeyBBY3Rpb24gfSBmcm9tICcuL2FjdGlvbi5tb2RlbCc7XHJcbmltcG9ydCB7IElDb21wb25lbnQgfSBmcm9tICcuL0lDb21wb25lbnQubW9kZWwnO1xyXG5pbXBvcnQgeyBLZXJ2aUJhc2VTZXJ2aWNlIH0gZnJvbSAnLi4va2VydmktanMuc2VydmljZSc7XHJcblxyXG5leHBvcnQgY2xhc3MgQ29tcG9uZW50RmFjdG9yeSB7XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBjcmVhdGVDb21wb25lbnRzKG1lc3NhZ2U6IGFueSwga2VydmlTZXJ2aWNlOiBLZXJ2aUJhc2VTZXJ2aWNlKSB7XHJcbiAgICAgICAgY29uc3QgZm91bmRDb21wb25lbnRzID0gdGhpcy5jcmVhdGVDb21wb25lbnRzUmVjKG1lc3NhZ2UsIGtlcnZpU2VydmljZSk7XHJcbiAgICAgICAgdGhpcy5saW5rVG9EYXNoYm9hcmRzKGZvdW5kQ29tcG9uZW50c1swXSwgZm91bmRDb21wb25lbnRzWzFdKTtcclxuICAgICAgICByZXR1cm4gZm91bmRDb21wb25lbnRzWzBdO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgc3RhdGljIGNyZWF0ZUNvbXBvbmVudHNSZWMobWVzc2FnZTogYW55LCBrZXJ2aVNlcnZpY2UpIHtcclxuICAgICAgICBsZXQgcmVzdWx0ID0gW107XHJcbiAgICAgICAgbGV0IGRhc2hib2FyZHMgPSBbXTtcclxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShtZXNzYWdlKSkge1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgKGkgPCBtZXNzYWdlLmxlbmd0aCk7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgY29uc3Qgc3ViQ29tcG9uZW50cyA9IHRoaXMuY3JlYXRlQ29tcG9uZW50c1JlYyhtZXNzYWdlW2ldLCBrZXJ2aVNlcnZpY2UpO1xyXG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gcmVzdWx0LmNvbmNhdChzdWJDb21wb25lbnRzWzBdKTtcclxuICAgICAgICAgICAgICAgIGRhc2hib2FyZHMgPSBkYXNoYm9hcmRzLmNvbmNhdChzdWJDb21wb25lbnRzWzFdKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGxldCBjb21wb25lbnQ6IGFueSA9IG51bGw7XHJcbiAgICAgICAgICAgIGNvbnN0IHN1YkNvbXBvbmVudHM6IGFueVtdID0gW107XHJcbiAgICAgICAgICAgIGlmIChtZXNzYWdlLmNvbXBvbmVudFR5cGUgPT09ICdLZXJ2aUFjdGlvbicpIHtcclxuICAgICAgICAgICAgICAgIGNvbXBvbmVudCA9IG5ldyBBY3Rpb24obWVzc2FnZSwga2VydmlTZXJ2aWNlKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChtZXNzYWdlLmNvbXBvbmVudFR5cGUgPT09ICdkYXNoYm9hcmQnKSB7XHJcbiAgICAgICAgICAgICAgICBjb21wb25lbnQgPSBuZXcgRGFzaGJvYXJkKG1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgZGFzaGJvYXJkcy5wdXNoKGNvbXBvbmVudCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAobWVzc2FnZS5jb21wb25lbnRUeXBlID09PSAnY29udHJvbGxlcicpIHtcclxuICAgICAgICAgICAgICAgIGNvbXBvbmVudCA9IG5ldyBDb250cm9sbGVyKG1lc3NhZ2UsIGtlcnZpU2VydmljZSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAobWVzc2FnZS5jb21wb25lbnRUeXBlID09PSAnYm9vbGVhbi12YWx1ZScpIHtcclxuICAgICAgICAgICAgICAgIGNvbXBvbmVudCA9IG5ldyBLZXJ2aVZhbHVlcy5Cb29sZWFuVmFsdWUobWVzc2FnZSwga2VydmlTZXJ2aWNlKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChtZXNzYWdlLmNvbXBvbmVudFR5cGUgPT09ICdudW1iZXItdmFsdWUnKSB7XHJcbiAgICAgICAgICAgICAgICBjb21wb25lbnQgPSBuZXcgS2VydmlWYWx1ZXMuTnVtYmVyVmFsdWUobWVzc2FnZSwga2VydmlTZXJ2aWNlKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChtZXNzYWdlLmNvbXBvbmVudFR5cGUgPT09ICdzdHJpbmctdmFsdWUnKSB7XHJcbiAgICAgICAgICAgICAgICBjb21wb25lbnQgPSBuZXcgS2VydmlWYWx1ZXMuU3RyaW5nVmFsdWUobWVzc2FnZSwga2VydmlTZXJ2aWNlKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChtZXNzYWdlLmNvbXBvbmVudFR5cGUgPT09ICdlbnVtLXZhbHVlJykge1xyXG4gICAgICAgICAgICAgICAgY29tcG9uZW50ID0gbmV3IEtlcnZpVmFsdWVzLlNlbGVjdFZhbHVlKG1lc3NhZ2UsIGtlcnZpU2VydmljZSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAobWVzc2FnZS5jb21wb25lbnRUeXBlID09PSAnZGF0ZXRpbWUtdmFsdWUnKSB7XHJcbiAgICAgICAgICAgICAgICBjb21wb25lbnQgPSBuZXcgS2VydmlWYWx1ZXMuRGF0ZVRpbWVWYWx1ZShtZXNzYWdlLCBrZXJ2aVNlcnZpY2UpO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKG1lc3NhZ2UuY29tcG9uZW50VHlwZSA9PT0gJ2NvbG9yLXZhbHVlJykge1xyXG4gICAgICAgICAgICAgICAgY29tcG9uZW50ID0gbmV3IEtlcnZpVmFsdWVzLkNvbG9yVmFsdWUobWVzc2FnZSwga2VydmlTZXJ2aWNlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoY29tcG9uZW50KSB7XHJcbiAgICAgICAgICAgICAgICByZXN1bHQucHVzaChjb21wb25lbnQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChzdWJDb21wb25lbnRzKSB7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBzdWJDb21wb25lbnQgb2Ygc3ViQ29tcG9uZW50cykge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKHN1YkNvbXBvbmVudCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIFtyZXN1bHQsIGRhc2hib2FyZHNdO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgRml4Q29udHJvbGxlclJlZmVyZW5jZXMoY29tcG9uZW50czogSUNvbXBvbmVudFtdKXtcclxuICAgICAgICBmb3IgKGxldCBjb21wb25lbnQgb2YgY29tcG9uZW50cykge1xyXG4gICAgICAgICAgICBjb25zdCBjb250cm9sbGVyID0gY29tcG9uZW50IGFzIENvbnRyb2xsZXI7XHJcbiAgICAgICAgICAgIGlmIChjb250cm9sbGVyICYmIGNvbnRyb2xsZXIuY29tcG9uZW50VHlwZSA9PT0gJ2NvbnRyb2xsZXInKSB7XHJcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyLnVwZGF0ZVJlZmVyZW5jZXMoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHN0YXRpYyBsaW5rVG9EYXNoYm9hcmRzKGNvbXBvbmVudHM6IElDb21wb25lbnRbXSwgZGFzaGJvYXJkczogRGFzaGJvYXJkW10pIHtcclxuICAgICAgICBjb25zb2xlLmxvZygnbHRkJywgY29tcG9uZW50cywgZGFzaGJvYXJkcyk7XHJcbiAgICAgICAgZm9yIChsZXQgY29tcG9uZW50IG9mIGNvbXBvbmVudHMpIHtcclxuICAgICAgICAgICAgaWYgKCEoY29tcG9uZW50IGluc3RhbmNlb2YgRGFzaGJvYXJkKSkge1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgbGluayBvZiBjb21wb25lbnQuZGFzaGJvYXJkcykge1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGRhc2hib2FyZCBvZiBkYXNoYm9hcmRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhc2hib2FyZC5hZGREYXNoYm9hcmRMaW5rKGxpbmspO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iLCJpbXBvcnQgeyAgQmVoYXZpb3JTdWJqZWN0LCBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcblxyXG5leHBvcnQgY2xhc3MgRmlsZUJhc2V7XHJcbiAgICBwdWJsaWMgbmFtZTogc3RyaW5nO1xyXG4gICAgcHVibGljIHBhdGg6IHN0cmluZztcclxuICAgIHB1YmxpYyBpc0ZpbGUgPSB0cnVlO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRmlsZSBleHRlbmRzIEZpbGVCYXNle1xyXG4gICAgcHVibGljIHNpemU6IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIERpcmVjdG9yeSBleHRlbmRzIEZpbGVCYXNle1xyXG4gICAgcHVibGljIGZpbGVzJDogQmVoYXZpb3JTdWJqZWN0PEZpbGVCYXNlW10+ID0gbmV3IEJlaGF2aW9yU3ViamVjdChbXSk7XHJcblxyXG4gICAgY29uc3RydWN0b3IocGF0aDogc3RyaW5nKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLnBhdGggPSBwYXRoO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB1cGRhdGVGaWxlcyhmaWxlcykge1xyXG4gICAgICAgIGxldCByZXN1bHQgPSBbXVxyXG4gICAgICAgIGZvcihsZXQgZmlsZSBvZiBmaWxlcykge1xyXG4gICAgICAgICAgICBpZiAoZmlsZS5pc19maWxlKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBmaWxlRW50cnkgPSBuZXcgRmlsZSgpO1xyXG4gICAgICAgICAgICAgICAgZmlsZUVudHJ5Lm5hbWUgPSBmaWxlLm5hbWU7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBwID0gdGhpcy5wYXRoICE9PSAnLycgPyB0aGlzLnBhdGggOiAnJztcclxuICAgICAgICAgICAgICAgIGZpbGVFbnRyeS5wYXRoID0gcCArICcvJyArIGZpbGUubmFtZTtcclxuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKGZpbGVFbnRyeSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBwID0gdGhpcy5wYXRoICE9PSAnLycgPyB0aGlzLnBhdGggOiAnJztcclxuICAgICAgICAgICAgICAgIGNvbnN0IGRpcmVjdG9yeSA9IG5ldyBEaXJlY3RvcnkocCArICcvJyArIGZpbGUubmFtZSk7XHJcbiAgICAgICAgICAgICAgICBkaXJlY3RvcnkubmFtZSA9IGZpbGUubmFtZTtcclxuICAgICAgICAgICAgICAgIGRpcmVjdG9yeS5pc0ZpbGUgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKGRpcmVjdG9yeSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5maWxlcyQubmV4dChyZXN1bHQpO1xyXG4gICAgfVxyXG59XHJcblxyXG4iLCJpbXBvcnQgeyAgQmVoYXZpb3JTdWJqZWN0LCBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IEtlcnZpQmFzZVNlcnZpY2UgfSBmcm9tICcuLi9rZXJ2aS1qcy5zZXJ2aWNlJ1xyXG5cclxuZXhwb3J0IGNsYXNzIFN0cmVhbUV2ZW50IHtcclxuICAgIHB1YmxpYyBzdHJlYW1JZDogc3RyaW5nO1xyXG4gICAgcHVibGljIGV2ZW50OiBzdHJpbmc7XHJcbiAgICBwdWJsaWMgZGF0YTogYW55O1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHN0cmVhbUlkOiBzdHJpbmcsIHN0cmVhbUV2ZW50OiBzdHJpbmcsIGRhdGE6IGFueSkge1xyXG4gICAgICAgIHRoaXMuc3RyZWFtSWQgPSBzdHJlYW1JZDtcclxuICAgICAgICB0aGlzLmV2ZW50ID0gc3RyZWFtRXZlbnQ7XHJcbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFN0cmVhbSB7XHJcbiAgICBwdWJsaWMgZXZlbnRzJDogQmVoYXZpb3JTdWJqZWN0PFN0cmVhbUV2ZW50PiA9IG5ldyBCZWhhdmlvclN1YmplY3Q8U3RyZWFtRXZlbnQ+KG51bGwpO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgc3RyZWFtSWQ6IHN0cmluZywgcHJpdmF0ZSBldmVudHM6IHN0cmluZ1tdLCBwcml2YXRlIGtlcnZpU2VydmljZTogS2VydmlCYXNlU2VydmljZSl7XHJcbiAgICAgICAgY29uc3Qgc2VsZiA9IHRoaXM7XHJcbiAgICAgICAga2VydmlTZXJ2aWNlLnNwaW5lLmFkZFN0cmVhbUhhbmRsZXIoc3RyZWFtSWQsIGV2ZW50cywgZnVuY3Rpb24oZV9zdHJlYW1JZDogc3RyaW5nLCBlX3N0cmVhbUV2ZW50OiBzdHJpbmcsIGVfZGF0YTogYW55KSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGV2ZW50ID0gbmV3IFN0cmVhbUV2ZW50KGVfc3RyZWFtSWQsIGVfc3RyZWFtRXZlbnQsIGVfZGF0YSk7XHJcbiAgICAgICAgICAgIGxldCBub3RpZnkgPSBmYWxzZTtcclxuICAgICAgICAgICAgaWYgKGV2ZW50cyA9PT0gbnVsbCB8fCBldmVudHMubGVuZ3RoID09PSAwIHx8IGV2ZW50cy5pbmRleE9mKGVfc3RyZWFtRXZlbnQpID49IDApIHtcclxuICAgICAgICAgICAgICAgIG5vdGlmeSA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKG5vdGlmeSkge1xyXG4gICAgICAgICAgICAgICAgc2VsZi5ldmVudHMkLm5leHQoZXZlbnQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGNsb3NlKCkge1xyXG4gICAgICAgIHRoaXMua2VydmlTZXJ2aWNlLnNwaW5lLnJlbW92ZVN0cmVhbUhhbmRsZXIodGhpcy5zdHJlYW1JZCwgdGhpcy5ldmVudHMsIG51bGwpO1xyXG4gICAgfVxyXG59IiwiLy8gQ29weXJpZ2h0IChjKSAyMDE2LCBUaW0gV2VudHpsYXVcclxuLy8gTGljZW5zZWQgdW5kZXIgTUlUXHJcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgS2VydmlTcGluZUJhc2UgfSBmcm9tICcuL3NwaW5lL2tlcnZpLXNwaW5lYmFzZSc7XHJcbmltcG9ydCB7IEtlcnZpV1NTcGluZSB9IGZyb20gJy4vc3BpbmUva2Vydmktd3MnO1xyXG5pbXBvcnQgeyBLZXJ2aVJNUVNwaW5lIH0gZnJvbSAnLi9zcGluZS9rZXJ2aS1ybXEnO1xyXG5pbXBvcnQgeyAgQmVoYXZpb3JTdWJqZWN0LCBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IElDb21wb25lbnQgfSBmcm9tICcuL21vZGVscy9JQ29tcG9uZW50Lm1vZGVsJztcclxuaW1wb3J0IHsgQ29tcG9uZW50RmFjdG9yeSB9IGZyb20gJy4vbW9kZWxzL2ZhY3RvcnknO1xyXG5pbXBvcnQgeyBEYXNoYm9hcmRNZXNzYWdlTW9kZWwgfSBmcm9tICcuL21vZGVscy9kYXNoYm9hcmQubW9kZWwnO1xyXG5pbXBvcnQgeyBEYXNoYm9hcmQgfSBmcm9tICcuL21vZGVscy9kYXNoYm9hcmQubW9kZWwnO1xyXG5pbXBvcnQgeyBGaWxlQmFzZSwgRGlyZWN0b3J5IH0gZnJvbSAnLi9tb2RlbHMvZmlsZS5tb2RlbCc7XHJcbmltcG9ydCB7IFN0cmVhbSB9IGZyb20gJy4vbW9kZWxzL3N0cmVhbS5tb2RlbCc7XHJcbmRlY2xhcmUgdmFyIGtlcnZpU29ja2V0QWRkcmVzczogYW55O1xyXG5kZWNsYXJlIHZhciBzb2NrZXRQcm90b2NvbDogYW55O1xyXG5cclxuZXhwb3J0IGVudW0gQ29ubmVjdGlvblN0YXRlIHtkaXNjb25uZWN0ZWQsIGxvYWRpbmcsIGF1dGhlbnRpY2F0ZSwgY29ubmVjdGVkfVxyXG5leHBvcnQgZW51bSBVc2VyTG9nU3RhdGVUeXBlIHtub3JtYWwsIHdhcm5pbmcsIGVycm9yfVxyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgS2VydmlCYXNlU2VydmljZSB7XHJcbiAgcHVibGljIHNwaW5lOiBLZXJ2aVNwaW5lQmFzZSA9IG51bGw7XHJcbiAgcHJpdmF0ZSBsYXN0QXBwUGluZ1RpbWU6IERhdGUgPSBudWxsO1xyXG4gIHByaXZhdGUgbGFzdFBpbmdEaWZmID0gMDtcclxuICBwdWJsaWMgYXBwUGluZ0RpZmYkOiBCZWhhdmlvclN1YmplY3Q8bnVtYmVyPiA9IG5ldyBCZWhhdmlvclN1YmplY3Q8bnVtYmVyPigwKTtcclxuICBwdWJsaWMgYXBwUGluZ0RlbGF5JDogQmVoYXZpb3JTdWJqZWN0PG51bWJlcj4gPSBuZXcgQmVoYXZpb3JTdWJqZWN0PG51bWJlcj4oMCk7XHJcbiAgcHVibGljIG1wcyQ6IEJlaGF2aW9yU3ViamVjdDxudW1iZXI+ID0gbmV3IEJlaGF2aW9yU3ViamVjdDxudW1iZXI+KDApO1xyXG4gIHByaXZhdGUgYXBwSW5mbyA9IG51bGw7XHJcbiAgcHJpdmF0ZSAgdGV4dHM6IHt9ID0gbnVsbDtcclxuICBwcml2YXRlIGNvbXBvbmVudHM6IElDb21wb25lbnRbXSA9IFtdO1xyXG4gIHByaXZhdGUgY29tcG9uZW50cyQ6IEJlaGF2aW9yU3ViamVjdDxJQ29tcG9uZW50W10+ID0gbmV3ICBCZWhhdmlvclN1YmplY3Q8SUNvbXBvbmVudFtdPihbXSk7XHJcblxyXG4gIHB1YmxpYyBjb25uZWN0aW9uU3RhdGUkOiBCZWhhdmlvclN1YmplY3Q8Q29ubmVjdGlvblN0YXRlPiA9IG5ldyAgQmVoYXZpb3JTdWJqZWN0PENvbm5lY3Rpb25TdGF0ZT4oQ29ubmVjdGlvblN0YXRlLmRpc2Nvbm5lY3RlZCk7XHJcbiAgcHVibGljICBhcHBsaWNhdGlvbiQ6IEJlaGF2aW9yU3ViamVjdDxhbnk+O1xyXG4gIHB1YmxpYyBkb0F1dGhlbnRpY2F0ZSA9IGZhbHNlO1xyXG4gIHB1YmxpYyBjb21wb25lbnRzQ2hhbmdlZCQ6IEJlaGF2aW9yU3ViamVjdDxCb29sZWFuPiA9IG5ldyAgQmVoYXZpb3JTdWJqZWN0PEJvb2xlYW4+KGZhbHNlKTtcclxuXHJcbiAgcHJpdmF0ZSBsb2dNZXNzYWdlczogRGFzaGJvYXJkTWVzc2FnZU1vZGVsW10gPSBbXTtcclxuICBwcml2YXRlIGxvZ01lc3NhZ2VzJDogQmVoYXZpb3JTdWJqZWN0PERhc2hib2FyZE1lc3NhZ2VNb2RlbFtdPiA9IG5ldyAgQmVoYXZpb3JTdWJqZWN0PERhc2hib2FyZE1lc3NhZ2VNb2RlbFtdPihbXSk7XHJcbiAgcHJpdmF0ZSBsYXN0TG9nTWVzc2FnZSQ6IEJlaGF2aW9yU3ViamVjdDxEYXNoYm9hcmRNZXNzYWdlTW9kZWw+ID0gbmV3ICBCZWhhdmlvclN1YmplY3Q8RGFzaGJvYXJkTWVzc2FnZU1vZGVsPihudWxsKTtcclxuICBwcml2YXRlIExvZ01lc3NhZ2VDb3VudCQ6IEJlaGF2aW9yU3ViamVjdDxudW1iZXI+ID0gbmV3ICBCZWhhdmlvclN1YmplY3Q8bnVtYmVyPigwKTtcclxuICBwcml2YXRlIExvZ01lc3NhZ2VTdGF0ZSQ6IEJlaGF2aW9yU3ViamVjdDxVc2VyTG9nU3RhdGVUeXBlPiA9IG5ldyAgQmVoYXZpb3JTdWJqZWN0PFVzZXJMb2dTdGF0ZVR5cGU+KFVzZXJMb2dTdGF0ZVR5cGUubm9ybWFsKTtcclxuXHJcbiAgcHJpdmF0ZSBzdHJlYW1zID0ge31cclxuXHJcbiAgSVBDUmVhZHkkOiBCZWhhdmlvclN1YmplY3Q8Qm9vbGVhbj4gPSBuZXcgIEJlaGF2aW9yU3ViamVjdDxCb29sZWFuPihmYWxzZSk7XHJcblxyXG4gIHByaXZhdGUgX3Jlc29sdmVTZWxmO1xyXG4gIHByaXZhdGUgX3JlamVjdFNlbGY7XHJcbiAgcHJpdmF0ZSBhdXRoUHJvbWlzZTogUHJvbWlzZTxzdHJpbmc+ID0gbnVsbDtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICBjb25zb2xlLmxvZygna2Vydmkgc2VydmljZSBjb25zdHJ1Y3RvcicpO1xyXG4gICAgY29uc3Qgc2VsZiA9IHRoaXM7XHJcbiAgICB0aGlzLmFwcGxpY2F0aW9uJCA9IG5ldyBCZWhhdmlvclN1YmplY3Q8YW55PihudWxsKTtcclxuICAgIHRoaXMuSVBDUmVhZHkkLnN1YnNjcmliZShmdW5jdGlvbihjb25uZWN0ZWQpIHtcclxuICAgICAgaWYgKGNvbm5lY3RlZCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdrZXJ2aSBzZXJ2aWNlIGlwYyByZWFkeSAoY29ubmVjdGVkKScpO1xyXG4gICAgICAgIHNlbGYuc3BpbmUuYWRkRXZlbnRIYW5kbGVyKCd2YWx1ZUNoYW5nZWQnLCAnJywgZnVuY3Rpb24oaWQsIHZhbHVlKSB7XHJcbiAgICAgICAgICBmb3IgKGNvbnN0IGNvbXBvbmVudCBvZiBzZWxmLmNvbXBvbmVudHMpIHtcclxuICAgICAgICAgICAgaWYgKGNvbXBvbmVudC5pZCA9PT0gdmFsdWUuaWQpIHtcclxuICAgICAgICAgICAgICBjb25zdCBkeW5hbWljVmFsdWUgPSBjb21wb25lbnQgYXMgYW55O1xyXG4gICAgICAgICAgICAgIGR5bmFtaWNWYWx1ZS52YWx1ZVRTID0gbmV3IERhdGUodGhpcy50aW1lc3RhbXApO1xyXG4gICAgICAgICAgICAgIGR5bmFtaWNWYWx1ZS5zZXQodmFsdWUudmFsdWUsIGZhbHNlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBzZWxmLnNwaW5lLmFkZEV2ZW50SGFuZGxlcignYXBwUGluZycsIG51bGwsIGZ1bmN0aW9uKGlkLCBkYXRhKSB7XHJcbiAgICAgICAgICAvLyBjb25zb2xlLmxvZygnYXBwUGluZycsIHNlbGYubGFzdEFwcFBpbmdUaW1lLCBpZCwgZGF0YSk7XHJcbiAgICAgICAgICBpZiAoc2VsZi5sYXN0QXBwUGluZ1RpbWUgPT09IG51bGwpIHtcclxuICAgICAgICAgICAgc2VsZi5sYXN0QXBwUGluZ1RpbWUgPSBuZXcgRGF0ZSgpO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTtcclxuICAgICAgICAgICAgY29uc3QgcGluZ0RpZmYgPSBub3cuZ2V0VGltZSgpIC0gc2VsZi5sYXN0QXBwUGluZ1RpbWUuZ2V0VGltZSgpIC0gMTAwMDtcclxuICAgICAgICAgICAgY29uc3QgcGluZ0RlbGF5ID0gbm93LmdldFRpbWUoKSAtIGRhdGEudHMgKiAxMDAwO1xyXG4gICAgICAgICAgICBzZWxmLmFwcFBpbmdEZWxheSQubmV4dChwaW5nRGVsYXkpO1xyXG4gICAgICAgICAgICBzZWxmLmxhc3RBcHBQaW5nVGltZSA9IG5vdztcclxuICAgICAgICAgICAgaWYgKHBpbmdEaWZmICE9PSBzZWxmLmxhc3RQaW5nRGlmZikge1xyXG4gICAgICAgICAgICAgIHNlbGYubGFzdFBpbmdEaWZmID0gcGluZ0RpZmY7XHJcbiAgICAgICAgICAgICAgc2VsZi5hcHBQaW5nRGlmZiQubmV4dChzZWxmLmxhc3RQaW5nRGlmZik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgc2VsZi5zcGluZS5hZGRFdmVudEhhbmRsZXIoJ2FjdGlvblN0YXJ0ZWQnLCAnJywgZnVuY3Rpb24oaWQpIHtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKCdhcycsIGlkKTtcclxuICAgICAgICAgIGZvciAoY29uc3QgY29tcG9uZW50IG9mIHNlbGYuY29tcG9uZW50cykge1xyXG4gICAgICAgICAgICBpZiAoY29tcG9uZW50LmlkID09PSBpZCkge1xyXG4gICAgICAgICAgICAgIGNvbnN0IGFjdGlvbiA9IGNvbXBvbmVudCBhcyBhbnk7XHJcbiAgICAgICAgICAgICAgYWN0aW9uLnJ1bm5pbmckLm5leHQodHJ1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgc2VsZi5zcGluZS5hZGRFdmVudEhhbmRsZXIoJ2FjdGlvbkRvbmUnLCAnJywgZnVuY3Rpb24oaWQpIHtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKCdhZCcsIGlkKTtcclxuICAgICAgICAgIGZvciAoY29uc3QgY29tcG9uZW50IG9mIHNlbGYuY29tcG9uZW50cykge1xyXG4gICAgICAgICAgICBpZiAoY29tcG9uZW50LmlkID09PSBpZCkge1xyXG4gICAgICAgICAgICAgIGNvbnN0IGFjdGlvbiA9IGNvbXBvbmVudCBhcyBhbnk7XHJcbiAgICAgICAgICAgICAgYWN0aW9uLnJ1bm5pbmckLm5leHQoZmFsc2UpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHNlbGYuc3BpbmUuYWRkRXZlbnRIYW5kbGVyKCd1c2VyTG9nTWVzc2FnZScsIG51bGwsIGZ1bmN0aW9uKHYpIHtcclxuICAgICAgICAgIGNvbnN0IG1lc3NhZ2VzID0gc2VsZi5sb2dNZXNzYWdlcyQudmFsdWU7XHJcbiAgICAgICAgICBjb25zdCBuZXdNZXNzYWdlID0gbmV3IERhc2hib2FyZE1lc3NhZ2VNb2RlbCh0aGlzKTtcclxuICAgICAgICAgIG1lc3NhZ2VzLnVuc2hpZnQobmV3TWVzc2FnZSk7XHJcbiAgICAgICAgICBpZiAobWVzc2FnZXMubGVuZ3RoID4gMTApIHtcclxuICAgICAgICAgICAgbWVzc2FnZXMucG9wKCk7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgbGV0IGhhc0Vycm9ycyA9IDA7XHJcbiAgICAgICAgICBsZXQgaGFzV2FybmluZ3MgPSAwO1xyXG4gICAgICAgICAgZm9yIChjb25zdCBtZXNzYWdlIG9mIG1lc3NhZ2VzKSB7XHJcbiAgICAgICAgICAgIGlmIChtZXNzYWdlLmxldmVsID09PSAxKSB7XHJcbiAgICAgICAgICAgICAgaGFzRXJyb3JzICsrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChtZXNzYWdlLmxldmVsID09PSAyKSB7XHJcbiAgICAgICAgICAgICAgaGFzV2FybmluZ3MgKys7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGlmIChoYXNFcnJvcnMpIHtcclxuICAgICAgICAgICAgc2VsZi5Mb2dNZXNzYWdlU3RhdGUkLm5leHQoVXNlckxvZ1N0YXRlVHlwZS5lcnJvcik7XHJcbiAgICAgICAgICB9IGVsc2UgaWYgKGhhc1dhcm5pbmdzKSB7XHJcbiAgICAgICAgICAgIHNlbGYuTG9nTWVzc2FnZVN0YXRlJC5uZXh0KFVzZXJMb2dTdGF0ZVR5cGUud2FybmluZyk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBzZWxmLkxvZ01lc3NhZ2VTdGF0ZSQubmV4dChVc2VyTG9nU3RhdGVUeXBlLm5vcm1hbCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBzZWxmLkxvZ01lc3NhZ2VDb3VudCQubmV4dChtZXNzYWdlcy5sZW5ndGgpO1xyXG4gICAgICAgICAgc2VsZi5sYXN0TG9nTWVzc2FnZSQubmV4dChuZXdNZXNzYWdlKTtcclxuICAgICAgICAgIHNlbGYubG9nTWVzc2FnZXMkLm5leHQobWVzc2FnZXMpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBHZXREaXJlY3RvcnkocGF0aDogc3RyaW5nKTogUHJvbWlzZTxEaXJlY3Rvcnk+IHtcclxuICAgIGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZTxEaXJlY3Rvcnk+KChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgY29uc3QgZGlyZWN0b3J5ID0gbmV3IERpcmVjdG9yeShwYXRoKTtcclxuICAgICAgdGhpcy5zcGluZS5zZW5kUXVlcnkoJ2ZpbGVzX2dldF9kaXInLCBwYXRoLCBmdW5jdGlvbihkaXJlY3RvcnlGaWxlcykge1xyXG4gICAgICAgIGRpcmVjdG9yeS51cGRhdGVGaWxlcyhkaXJlY3RvcnlGaWxlcyk7XHJcbiAgICAgICAgcmVzb2x2ZShkaXJlY3RvcnkpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIHByb21pc2U7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgR2V0VGh1bWJuYWlsKHBhdGg6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XHJcbiAgICBjb25zdCBwcm9taXNlID0gbmV3IFByb21pc2U8c3RyaW5nPigocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgIHRoaXMuc3BpbmUuc2VuZFF1ZXJ5KCdmaWxlc19nZXRfdGh1bWJuYWlsJywgcGF0aCwgZnVuY3Rpb24odGh1bWJuYWlsKSB7XHJcbiAgICAgICAgcmVzb2x2ZSh0aHVtYm5haWwpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIHByb21pc2U7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgR2V0RmlsZShwYXRoOiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZz4ge1xyXG4gICAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlPHN0cmluZz4oKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICB0aGlzLnNwaW5lLnNlbmRRdWVyeSgnZmlsZXNfZ2V0X2ZpbGUnLCBwYXRoLCBmdW5jdGlvbihmaWxlKSB7XHJcbiAgICAgICAgcmVzb2x2ZShmaWxlKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBwcm9taXNlO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIEdldFN0cmVhbShzdHJlYW1JZDogc3RyaW5nLCBldmVudHMgPSBbXSkge1xyXG4gICAgcmV0dXJuIG5ldyBTdHJlYW0oc3RyZWFtSWQsIGV2ZW50cywgdGhpcyk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgdGV4dChrZXk6IHN0cmluZywgZGVmYXVsdFZhbHVlOiBzdHJpbmc9ICcnKTogc3RyaW5nIHtcclxuICAgIGlmICh0aGlzLnRleHRzICYmIGtleSBpbiB0aGlzLnRleHRzKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLnRleHRzW2tleV07XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gZGVmYXVsdFZhbHVlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldExvZ01lc3NhZ2VzJCgpOiBPYnNlcnZhYmxlPERhc2hib2FyZE1lc3NhZ2VNb2RlbFtdPiB7XHJcbiAgICByZXR1cm4gdGhpcy5sb2dNZXNzYWdlcyQuYXNPYnNlcnZhYmxlKCk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0TGFzdExvZ01lc3NhZ2UkKCk6IE9ic2VydmFibGU8RGFzaGJvYXJkTWVzc2FnZU1vZGVsPiB7XHJcbiAgICByZXR1cm4gdGhpcy5sYXN0TG9nTWVzc2FnZSQuYXNPYnNlcnZhYmxlKCk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0TG9nU3RhdGUkKCk6IE9ic2VydmFibGU8VXNlckxvZ1N0YXRlVHlwZT4ge1xyXG4gICAgcmV0dXJuIHRoaXMuTG9nTWVzc2FnZVN0YXRlJC5hc09ic2VydmFibGUoKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXRMb2dNZXNzYWdlQ291bnQkKCk6IE9ic2VydmFibGU8bnVtYmVyPiB7XHJcbiAgICByZXR1cm4gdGhpcy5Mb2dNZXNzYWdlQ291bnQkLmFzT2JzZXJ2YWJsZSgpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGlzQXBwRW1wdHkoKSB7XHJcbiAgICBjb25zdCBkZWZhdWx0RGFzaGJvYXJkID0gdGhpcy5nZXREZWZhdWx0RGFzaGJvYXJkKCk7XHJcbiAgICBpZiAoZGVmYXVsdERhc2hib2FyZCkge1xyXG4gICAgICByZXR1cm4gZGVmYXVsdERhc2hib2FyZC5pc0VtcHR5KCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXRDb21wb25lbnQoaWQ6IHN0cmluZywgY29tcG9uZW50VHlwZTogc3RyaW5nID0gbnVsbCkge1xyXG4gICAgZm9yIChjb25zdCBjb21wb25lbnQgb2YgdGhpcy5jb21wb25lbnRzKSB7XHJcbiAgICAgIGlmIChjb21wb25lbnQuaWQgPT09IGlkICYmIChjb21wb25lbnRUeXBlID09IG51bGwgfHwgY29tcG9uZW50LmNvbXBvbmVudFR5cGUgPT09IGNvbXBvbmVudFR5cGUpKSB7XHJcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0Q29tcG9uZW50c0J5VHlwZSh0eXBlOiBzdHJpbmcpIHtcclxuICAgIGNvbnN0IHJlc3VsdCA9IFtdO1xyXG4gICAgZm9yIChjb25zdCBjb21wb25lbnQgb2YgdGhpcy5jb21wb25lbnRzKSB7XHJcbiAgICAgIGlmIChjb21wb25lbnQuY29tcG9uZW50VHlwZSA9PT0gdHlwZSkge1xyXG4gICAgICAgIHJlc3VsdC5wdXNoKGNvbXBvbmVudCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0RGVmYXVsdERhc2hib2FyZCgpOiBEYXNoYm9hcmQge1xyXG4gICAgY29uc3QgZGFzaGJvYXJkcyA9IHRoaXMuZ2V0Q29tcG9uZW50c0J5VHlwZSgnZGFzaGJvYXJkJykgYXMgRGFzaGJvYXJkW107XHJcbiAgICBmb3IgKGNvbnN0IGRhc2hib2FyZCBvZiBkYXNoYm9hcmRzKSB7XHJcbiAgICAgIGlmIChkYXNoYm9hcmQuaXNEZWZhdWx0KSB7XHJcbiAgICAgICAgICByZXR1cm4gZGFzaGJvYXJkO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBpZiAoZGFzaGJvYXJkcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIHJldHVybiBkYXNoYm9hcmRzWzBdO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG51bGw7XHJcbn1cclxuXHJcbiAgcHVibGljIGNvbm5lY3QoKSB7XHJcbiAgICBsZXQgYWRkcmVzcyA9IG51bGw7XHJcbiAgICBsZXQgcHJvdG9jb2wgPSAnd3MnO1xyXG4gICAgdHJ5IHtcclxuICAgICAgaWYgKGtlcnZpU29ja2V0QWRkcmVzcykge1xyXG4gICAgICAgIGFkZHJlc3MgPSBrZXJ2aVNvY2tldEFkZHJlc3M7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKHNvY2tldFByb3RvY29sKSB7XHJcbiAgICAgICAgcHJvdG9jb2wgPSBzb2NrZXRQcm90b2NvbDtcclxuICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAvLyBmb3IgdGVzdGluZyB3aXRoIG5nIHNlcnZlXHJcbiAgICAgIGNvbnN0IGh0dHBQcm90b2NvbCA9IGxvY2F0aW9uLnByb3RvY29sO1xyXG4gICAgICBpZiAoaHR0cFByb3RvY29sID09PSAnaHR0cHMnKSB7XHJcbiAgICAgICAgcHJvdG9jb2wgPSAnd3NzJztcclxuICAgICAgfVxyXG4gICAgICBjb25zdCBodHRwSG9zdCA9IHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZTtcclxuICAgICAgYWRkcmVzcyA9IGh0dHBIb3N0ICsgJzo5MDAwJztcclxuICAgIH1cclxuICAgIGNvbnNvbGUubG9nKCdrcycsIGFkZHJlc3MpO1xyXG5cclxuICAgIHRoaXMuc3BpbmUgPSBuZXcgS2VydmlXU1NwaW5lKHtcclxuICAgICAgYWRkcmVzczogYWRkcmVzcyxcclxuICAgICAgcHJvdG9jb2w6IHByb3RvY29sLFxyXG4gICAgICBvbk9wZW46IHRoaXMub25PcGVuLFxyXG4gICAgICBvbkNsb3NlOiB0aGlzLm9uQ2xvc2UsXHJcbiAgICAgIG9uQXV0aGVudGljYXRlOiB0aGlzLm9uQXV0aGVudGljYXRlLFxyXG4gICAgICBvbkF1dGhlbnRpY2F0ZUZhaWxlZDogdGhpcy5vbkF1dGhlbnRpY2F0ZUZhaWxlZCxcclxuICAgICAgb25Mb2dPZmY6IHRoaXMub25Mb2dvZmYsXHJcbiAgICAgIG9uQXV0aGVudGljYXRlU3RhcnQ6IHRoaXMub25BdXRoZW50aWNhdGVTdGFydCxcclxuICAgICAgb25NUFM6IHRoaXMub25NUFMsXHJcbiAgICAgIHRhcmdldFNjb3BlOiB0aGlzXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBjb25uZWN0TVEoKSB7XHJcbiAgICBjb25zb2xlLmxvZygna3MnLCBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdtcWMnKSk7XHJcblxyXG4gICAgaWYgKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ21xYycpKSB7XHJcbiAgICAgIHRoaXMuc3BpbmUgPSBuZXcgS2VydmlSTVFTcGluZSh7XHJcbiAgICAgICAgb25PcGVuOiB0aGlzLm9uT3BlbixcclxuICAgICAgICBvbkNsb3NlOiB0aGlzLm9uQ2xvc2UsXHJcbiAgICAgICAgb25BdXRoZW50aWNhdGU6IHRoaXMub25BdXRoZW50aWNhdGUsXHJcbiAgICAgICAgb25BdXRoZW50aWNhdGVGYWlsZWQ6IHRoaXMub25BdXRoZW50aWNhdGVGYWlsZWQsXHJcbiAgICAgICAgb25Mb2dPZmY6IHRoaXMub25Mb2dvZmYsXHJcbiAgICAgICAgb25BdXRoZW50aWNhdGVTdGFydDogdGhpcy5vbkF1dGhlbnRpY2F0ZVN0YXJ0LFxyXG4gICAgICAgIHRhcmdldFNjb3BlOiB0aGlzLFxyXG4gICAgICAgIGFwaVRva2VuOiBKU09OLnBhcnNlKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ21xYycpKVxyXG4gICAgICB9KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdxbWMgbm90IGZvdW5kIGluIHN0b3JhZ2UnKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGlzQW5vbnltb3VzKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuc3BpbmUub3B0aW9ucy51c2VyTmFtZSA9PT0gJ2Fub255bW91cyc7XHJcbiAgfVxyXG5cclxuICBhdXRoZW50aWNhdGUodXNlck5hbWUsIHBhc3N3b3JkKSB7XHJcbiAgICBjb25zb2xlLmxvZygnc2EnLCB1c2VyTmFtZSwgcGFzc3dvcmQpO1xyXG4gICAgdGhpcy5hdXRoUHJvbWlzZSA9IG5ldyBQcm9taXNlPHN0cmluZz4oKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICB0aGlzLl9yZXNvbHZlU2VsZiA9IHJlc29sdmU7XHJcbiAgICAgIHRoaXMuX3JlamVjdFNlbGYgPSByZWplY3Q7XHJcbiAgICB9KTtcclxuICAgIHRoaXMuc3BpbmUuYXV0aGVudGljYXRlKHVzZXJOYW1lLCBwYXNzd29yZCk7XHJcbiAgICByZXR1cm4gdGhpcy5hdXRoUHJvbWlzZTtcclxuICB9XHJcblxyXG4gIGxvZ29mZigpIHtcclxuICAgIHRoaXMuc3BpbmUubG9nb2ZmKCk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIG9uQXV0aGVudGljYXRlU3RhcnQoKSB7XHJcblxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBvbkF1dGhlbnRpY2F0ZSgpIHtcclxuICAgIHRoaXMuZG9BdXRoZW50aWNhdGUgPSB0cnVlO1xyXG4gICAgdGhpcy5yZXNldCgpO1xyXG4gICAgdGhpcy5fcmVzb2x2ZVNlbGYoJ29rJyk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIG9uQXV0aGVudGljYXRlRmFpbGVkKCkge1xyXG4gICAgdGhpcy5fcmVqZWN0U2VsZignZXJyb3InKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgb25Mb2dvZmYoKSB7XHJcbiAgICB0aGlzLmRvQXV0aGVudGljYXRlID0gdHJ1ZTtcclxuICAgIGlmICh0aGlzLnNwaW5lLmZpcnN0T25PcGVuKSB7XHJcbiAgICAgIHRoaXMuSVBDUmVhZHkkLm5leHQodHJ1ZSk7XHJcbiAgICB9XHJcbiAgICB0aGlzLnJlc2V0KCk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIHJlc2V0KCkge1xyXG4gICAgdGhpcy5jb21wb25lbnRzID0gW107XHJcbiAgICB0aGlzLmNvbXBvbmVudHMkLm5leHQodGhpcy5jb21wb25lbnRzKTtcclxuXHJcbiAgICBjb25zdCBtZXNzYWdlcyA9IFtdO1xyXG4gICAgdGhpcy5Mb2dNZXNzYWdlU3RhdGUkLm5leHQoVXNlckxvZ1N0YXRlVHlwZS5ub3JtYWwpO1xyXG4gICAgdGhpcy5Mb2dNZXNzYWdlQ291bnQkLm5leHQobWVzc2FnZXMubGVuZ3RoKTtcclxuICAgIHRoaXMubG9nTWVzc2FnZXMkLm5leHQobWVzc2FnZXMpO1xyXG5cclxuICAgIGlmICh0aGlzLklQQ1JlYWR5JC52YWx1ZSkge1xyXG4gICAgICB0aGlzLmNvbm5lY3Rpb25TdGF0ZSQubmV4dChDb25uZWN0aW9uU3RhdGUuYXV0aGVudGljYXRlKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuY29ubmVjdGlvblN0YXRlJC5uZXh0KENvbm5lY3Rpb25TdGF0ZS5kaXNjb25uZWN0ZWQpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBnZXRDb21wb25lbnRJbmZvKHJldHJ5Q291bnQsIG1vZHVsZV9sb2FkKSB7XHJcbiAgICBjb25zdCBzZWxmID0gdGhpcztcclxuICAgIHRoaXMuc3BpbmUuc2VuZFF1ZXJ5KCdHZXRBcHBsaWNhdGlvbkluZm8nLCBmdW5jdGlvbihhcHBJbmZvKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdhcHAgaW5mbycsIGFwcEluZm8pO1xyXG4gICAgICB0aGlzLnNwaW5lLnNlbmRRdWVyeSgnZ2V0Q29tcG9uZW50SW5mbycsIGZ1bmN0aW9uKG1lc3NhZ2UpIHtcclxuICAgICAgICBjb25zb2xlLmxvZygnY29tcG9uZW50IGluZm8nLCBtZXNzYWdlKTtcclxuICAgICAgICBzZWxmLmFwcGxpY2F0aW9uJC5uZXh0KGFwcEluZm8pO1xyXG4gICAgICAgIHNlbGYudGV4dHMgPSBhcHBJbmZvLmRpc3BsYXkudGV4dHM7XHJcbiAgICAgICAgc2VsZi5jb21wb25lbnRzID0gQ29tcG9uZW50RmFjdG9yeS5jcmVhdGVDb21wb25lbnRzKG1lc3NhZ2UsIHNlbGYpO1xyXG4gICAgICAgIENvbXBvbmVudEZhY3RvcnkuRml4Q29udHJvbGxlclJlZmVyZW5jZXMoc2VsZi5nZXRDb21wb25lbnRzQnlUeXBlKCdjb250cm9sbGVyJykpO1xyXG4gICAgICAgIHNlbGYuY29tcG9uZW50cyQubmV4dChzZWxmLmNvbXBvbmVudHMpO1xyXG4gICAgICAgIHNlbGYuY29ubmVjdGlvblN0YXRlJC5uZXh0KENvbm5lY3Rpb25TdGF0ZS5jb25uZWN0ZWQpO1xyXG4gICAgICAgIGlmIChtb2R1bGVfbG9hZCkge1xyXG4gICAgICAgICAgc2VsZi5jb21wb25lbnRzQ2hhbmdlZCQubmV4dCh0cnVlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc29sZS5sb2coJ2NvbXBvbmVudHMnLCBzZWxmLmNvbXBvbmVudHMpO1xyXG4gICAgICB9LFxyXG4gICAgICBmdW5jdGlvbigpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdnZXQgY29tcG9uZW50IGluZm8gdGltZW91dCcpO1xyXG4gICAgICAgIGlmIChyZXRyeUNvdW50ID4gMCkge1xyXG4gICAgICAgICAgc2VsZi5nZXRDb21wb25lbnRJbmZvKHJldHJ5Q291bnQgLSAxLCBtb2R1bGVfbG9hZCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBvbk9wZW4oZmlyc3QpIHtcclxuICAgIGNvbnNvbGUubG9nKCdrZXJ2aSBzZXJ2aWNlIG9uIG9wZW4nLCB0aGlzLnNwaW5lLmZpcnN0T25PcGVuLCBmaXJzdCwgdGhpcyk7XHJcbiAgICBjb25zdCBzZWxmID0gdGhpcztcclxuICAgIHRoaXMuY29ubmVjdGlvblN0YXRlJC5uZXh0KENvbm5lY3Rpb25TdGF0ZS5sb2FkaW5nKTtcclxuICAgIHRoaXMuZG9BdXRoZW50aWNhdGUgPSB0aGlzLnNwaW5lLmRvQXV0aGVudGljYXRlO1xyXG4gICAgdGhpcy5nZXRDb21wb25lbnRJbmZvKDIsIGZhbHNlKTtcclxuICAgIGlmIChzZWxmLnNwaW5lLmZpcnN0T25PcGVuKSB7XHJcbiAgICAgIHRoaXMuSVBDUmVhZHkkLm5leHQodHJ1ZSk7XHJcbiAgICAgIHRoaXMuc3BpbmUuYWRkRXZlbnRIYW5kbGVyKCdtb2R1bGVTdGFydGVkJywgJycsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgY29uc29sZS5sb2coJ21vZHVsZSBsb2FkZWQnLCBzZWxmLmNvbXBvbmVudHMpO1xyXG4gICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgc2VsZi5nZXRDb21wb25lbnRJbmZvKDIsIHRydWUpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgLCAyMDAwKTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICB0aGlzLnNwaW5lLmFkZEV2ZW50SGFuZGxlcignbW9kdWxlU3RvcHBlZCcsICcnLCBmdW5jdGlvbigpIHtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKCdtb2R1bGUgdW5sb2FkZWQnKTtcclxuICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdtb2R1bGUgdW5sb2FkZWQsIHJlZnJlc2gnKTtcclxuICAgICAgICAgICAgc2VsZi5nZXRDb21wb25lbnRJbmZvKDIsIHRydWUpO1xyXG4gICAgICAgIH0sIDUwMDApO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgb25DbG9zZSgpIHtcclxuICAgIHRoaXMucmVzZXQoKTtcclxuICAgIGNvbnNvbGUubG9nKCdrcyBvbiBjbG9zZScpO1xyXG4gICAgdGhpcy5JUENSZWFkeSQubmV4dChmYWxzZSk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIG9uTVBTKG1wczogbnVtYmVyKSB7XHJcbiAgICB0aGlzLm1wcyQubmV4dChtcHMpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBvbkhlYXJ0YmVhdCgpIHtcclxuXHJcbiAgfVxyXG5cclxuICBwcml2YXRlIG9uQ29ubmVjdCgpIHtcclxuXHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2xpYi1rZXJ2aS1qcycsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxwPlxyXG4gICAgICBrZXJ2aS1qcyB3b3JrcyFcclxuICAgIDwvcD5cclxuICBgLFxyXG4gIHN0eWxlczogW11cclxufSlcclxuZXhwb3J0IGNsYXNzIEtlcnZpSnNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICB9XHJcblxyXG59XHJcbiIsImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEtlcnZpSnNDb21wb25lbnQgfSBmcm9tICcuL2tlcnZpLWpzLmNvbXBvbmVudCc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGltcG9ydHM6IFtcclxuICBdLFxyXG4gIGRlY2xhcmF0aW9uczogW0tlcnZpSnNDb21wb25lbnRdLFxyXG4gIGV4cG9ydHM6IFtLZXJ2aUpzQ29tcG9uZW50XVxyXG59KVxyXG5leHBvcnQgY2xhc3MgS2VydmlKc01vZHVsZSB7IH1cclxuIl0sIm5hbWVzIjpbInRzbGliXzEuX192YWx1ZXMiLCJ0c2xpYl8xLl9fZXh0ZW5kcyIsIktlcnZpVmFsdWVzLkJvb2xlYW5WYWx1ZSIsIktlcnZpVmFsdWVzLk51bWJlclZhbHVlIiwiS2VydmlWYWx1ZXMuU3RyaW5nVmFsdWUiLCJLZXJ2aVZhbHVlcy5TZWxlY3RWYWx1ZSIsIktlcnZpVmFsdWVzLkRhdGVUaW1lVmFsdWUiLCJLZXJ2aVZhbHVlcy5Db2xvclZhbHVlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBR0E7SUE0Q0ksd0JBQW1CLGtCQUFrQjtRQUFsQix1QkFBa0IsR0FBbEIsa0JBQWtCLENBQUE7UUExQzlCLGdCQUFXLEdBQUcsS0FBSyxDQUFDO1FBQ3BCLG1CQUFjLEdBQUcsS0FBSyxDQUFDO1FBRTlCLGNBQVMsR0FBRyxJQUFJLENBQUM7UUFDakIsa0JBQWEsR0FBRyxFQUFFLENBQUM7UUFDbkIsb0JBQWUsR0FBRyxFQUFFLENBQUM7UUFDckIsa0JBQWEsR0FBRyxFQUFFLENBQUM7UUFDbkIsbUJBQWMsR0FBRyxFQUFFLENBQUM7UUFDcEIsYUFBUSxHQUFHLEVBQUUsQ0FBQztRQUNkLFVBQUssR0FBRyxLQUFLLENBQUM7UUFDZCxjQUFTLEdBQUcsQ0FBQyxDQUFDO1FBQ2QsWUFBTyxHQUFHLEVBQUUsQ0FBQztRQUNiLGdCQUFXLEdBQUcsRUFBRSxDQUFDO1FBQ2pCLGdCQUFXLEdBQUcsRUFBRSxDQUFDO1FBQ2pCLG9CQUFlLEdBQUcsRUFBRSxDQUFDO1FBQ3JCLGtCQUFhLEdBQUcsRUFBRSxDQUFDO1FBQ25CLGdCQUFXLEdBQUcsSUFBSSxDQUFDO1FBQ25CLG1CQUFjLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLGdCQUFXLEdBQUcsSUFBSSxDQUFDO1FBQ25CLGlCQUFZLEdBQUcsQ0FBQyxDQUFDO1FBQ2pCLFlBQU8sR0FBRyxJQUFJLElBQUksQ0FBQztRQUNuQixRQUFHLEdBQUcsQ0FBQyxDQUFDO1FBRUUsY0FBUyxHQUFHLElBQUksQ0FBQztRQUVwQixZQUFPLEdBQVE7WUFDZCxR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","import { Injectable, Component, Input, Output, ElementRef, EventEmitter, NgModule, ViewChild, TemplateRef, defineInjectable } from '@angular/core';\nimport { __extends } from 'tslib';\nimport { KerviDashboardPanelComponent, KerviWidgetComponent, KerviNumberComponent, KerviBooleanComponent, KerviStringComponent, KerviDateTimeComponent, KerviColorComponent, NGXKerviService, KerviTemplateService, NGXKerviPipesModule, KerviCameraComponent, KerviActionComponent, KerviUserLogComponent, KerviAppHealthComponent, NgxKerviModule } from 'ngx-kervi';\nimport { DashboardSizes } from 'kervi-js';\nimport { asapScheduler } from 'rxjs';\nimport { DomSanitizer, BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { NgxGaugeModule } from 'ngx-gauge';\nimport { FormsModule } from '@angular/forms';\nimport { NgZorroAntdModule, NzNotificationService } from 'ng-zorro-antd';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviZorroService = /** @class */ (function () {\r\n    function KerviZorroService() {\r\n    }\r\n    KerviZorroService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: 'root'\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviZorroService.ctorParameters = function () { return []; };\r\n    /** @nocollapse */ KerviZorroService.ngInjectableDef = defineInjectable({ factory: function KerviZorroService_Factory() { return new KerviZorroService(); }, token: KerviZorroService, providedIn: \"root\" });\r\n    return KerviZorroService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar DashboardPanelComponent = /** @class */ (function (_super) {\r\n    __extends(DashboardPanelComponent, _super);\r\n    function DashboardPanelComponent() {\r\n        var _this = _super.call(this) || this;\r\n        _this.groupLayout = \"row\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DashboardPanelComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitPanel();\r\n        if (this.panel.hasOnlyGroupPanels)\r\n            this.groupLayout = \"row\";\r\n    };\r\n    DashboardPanelComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-dashboard-panel',\r\n                    template: \"<!-- <p>{{panel.name}} - {{panel.type}} - {{groupLayout}} - {{bodyOnly}} - {{inline}} - {{panel.subPanels.length}} - {{panel.components.length}} - {{headerComponents.length}} - {{bodyComponents.length}}</p> -->\\n<!-- <p>w={{width}} - {{inGroup}}</p> -->\\n<!-- {{ panel.parameters | json}} -->\\n<ng-container *ngIf=\\\"panel.type=='group'\\\">\\n    <div class=\\\"kervi-panel-deck\\\" [fxLayout]=\\\"panel.parameters.layout\\\" fxLayout.xs=\\\"column\\\"  fxLayoutGap=\\\"0.5%\\\">\\n        <ng-container *ngFor=\\\"let subPanel of panel.subPanels\\\">\\n            <ng-container *ngIf=\\\"subPanel.type!='group'\\\">\\n                        <kervi-dashboard-panel fxFlex.xs=\\\"100\\\" [fxFlex]=\\\"subPanel.parameters.width\\\" [bodyOnly]=\\\"true\\\" [inGroup]=\\\"true\\\" [dashboardSizes]=\\\"dashboardSizes\\\"  [panel]=\\\"subPanel\\\"></kervi-dashboard-panel>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"subPanel.type=='group'\\\">\\n                    <kervi-dashboard-panel fxFlex.xs=\\\"100\\\" [fxFlex]=\\\"subPanel.parameters.width\\\" [inGroup]=\\\"true\\\" [dashboardSizes]=\\\"dashboardSizes\\\"  [panel]=\\\"subPanel\\\"></kervi-dashboard-panel>\\n            </ng-container>\\n        </ng-container>\\n    </div>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"panel.type!='group' && !inline\\\">\\n    \\n    <nz-card  [nzTitle]=\\\"showHeader ? title : null\\\" [nzExtra]=\\\"headerComponents.length>0 ? extraTemplate : null\\\">\\n        \\n        <ng-template #extraTemplate>\\n            <ng-container *ngFor=\\\"let panelComponent of headerComponents\\\">\\n                        <kervi-widget [component]=\\\"panelComponent.component\\\" [dashboardPanel]=\\\"panel\\\" [inline]=\\\"inline\\\"  [linkParameters]=\\\"panelComponent.parameters\\\"></kervi-widget>\\n            </ng-container>\\n        </ng-template>\\n        <ng-container *ngFor=\\\"let panelComponent of bodyComponents\\\">\\n            <kervi-widget [component]=\\\"panelComponent.component\\\" [dashboardPanel]=\\\"panel\\\"  [inline]=\\\"inline\\\"  [linkParameters]=\\\"panelComponent.parameters\\\"></kervi-widget>\\n        </ng-container>\\n    \\n        <div *ngIf=\\\"panel.parameters.userLog\\\"  >\\n            \\n            <kervi-user-log></kervi-user-log>\\n        </div>\\n        <div *ngIf=\\\"panel.parameters.appHealth\\\"  >\\n            \\n            <kervi-app-health></kervi-app-health>\\n        </div> \\n    </nz-card>\\n</ng-container>\\n\\n<ng-template [ngIf]=\\\"inline && panel.components.length>0\\\" >\\n    <ng-container *ngFor=\\\"let panelComponent of panel.components\\\" >\\n        <kervi-widget [component]=\\\"panelComponent.component\\\"  [inline]=\\\"inline\\\" [dashboardPanel]=\\\"panel\\\"  [linkParameters]=\\\"panelComponent.parameters\\\"></kervi-widget>\\n    </ng-container>\\n</ng-template>\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DashboardPanelComponent.ctorParameters = function () { return []; };\r\n    return DashboardPanelComponent;\r\n}(KerviDashboardPanelComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar WidgetComponent = /** @class */ (function (_super) {\r\n    __extends(WidgetComponent, _super);\r\n    function WidgetComponent() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    WidgetComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitWidget();\r\n    };\r\n    WidgetComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-widget',\r\n                    template: \"<ng-container *ngIf=\\\"widgetType=='value'\\\">\\n    <div fxLayout=\\\"row\\\" *ngIf=\\\"!inline\\\" class=\\\"kervi-block-widget\\\"> \\n        <div fxFlex=\\\"60\\\" class=\\\"kervi-value-label\\\">\\n            <span   *ngIf=\\\"linkParameters.labelIcon\\\" class=\\\"pi pi-{{linkParameters.labelIcon}}\\\"></span>\\n            <span   *ngIf=\\\"linkParameters.label\\\">{{linkParameters.label}}</span>\\n        </div>\\n        \\n        <div fxFlex class=\\\"kervi-value-section\\\">\\n            <kervi-value *ngIf=\\\"component.componentType=='KerviValue'\\\" [value]=\\\"component\\\" [inline]=\\\"false\\\" [dashboardSizes]=\\\"dashboardSizes\\\"  [linkParameters]=\\\"linkParameters\\\"></kervi-value>\\n            <kervi-action  *ngIf=\\\"component.componentType=='action'\\\" [action]=\\\"component\\\" [inline]=\\\"false\\\" [dashboardSizes]=\\\"dashboardSizes\\\"  [linkParameters]=\\\"linkParameters\\\"></kervi-action>\\n        </div>\\n            \\n    </div>\\n\\n    <div *ngIf=\\\"inline\\\" class=\\\"kervi-inline-widget\\\">\\n        <div class=\\\"kervi-value-label\\\"> \\n            <span style=\\\"display:inline\\\"  *ngIf=\\\"linkParameters.labelIcon\\\" class=\\\"fa fa-{{linkParameters.labelIcon}}\\\"></span>\\n            <span style=\\\"display:inline\\\"  *ngIf=\\\"linkParameters.label\\\"  >{{linkParameters.label}}</span>\\n        </div>\\n        <div class=\\\"kervi-value-section\\\">\\n            <kervi-value *ngIf=\\\"component.componentType=='KerviValue'\\\" [value]=\\\"component\\\" [inline]=\\\"false\\\" [dashboardSizes]=\\\"dashboardSizes\\\"  [linkParameters]=\\\"linkParameters\\\"></kervi-value>\\n            <kervi-action  *ngIf=\\\"component.componentType=='action'\\\" [action]=\\\"component\\\" [inline]=\\\"false\\\" [dashboardSizes]=\\\"dashboardSizes\\\"  [linkParameters]=\\\"linkParameters\\\"></kervi-action>\\n        </div>\\n    </div>\\n</ng-container>    \\n<ng-container *ngIf=\\\"widgetType=='camera'\\\" class=\\\"block-component\\\" >\\n    <kervi-cam-viewer [isBackground]=\\\"false\\\" [camera]=\\\"component\\\" [linkParameters]=\\\"linkParameters\\\"></kervi-cam-viewer>\\n</ng-container>\\n    \\n    \\n<ng-container *ngIf=\\\"widgetType=='gauge'\\\" class=\\\"block-component\\\" >\\n    <kervi-gauge [dashboardSizes]=\\\"dashboardSizes\\\" [value]=\\\"component\\\" [linkParameters]=\\\"linkParameters\\\"></kervi-gauge>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"widgetType=='chart'\\\" class=\\\"\\\" >\\n    <kervi-chart [dashboardSizes]=\\\"dashboardSizes\\\" [value]=\\\"component\\\" [linkParameters]=\\\"linkParameters\\\" ></kervi-chart>\\n</ng-container>\",\r\n                    styles: []\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    WidgetComponent.ctorParameters = function () { return []; };\r\n    return WidgetComponent;\r\n}(KerviWidgetComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NumberComponent = /** @class */ (function (_super) {\r\n    __extends(NumberComponent, _super);\r\n    function NumberComponent(elementRef) {\r\n        var _this = _super.call(this) || this;\r\n        _this.elementRef = elementRef;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NumberComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitNumber();\r\n    };\r\n    NumberComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-number',\r\n                    template: \"<ng-container *ngIf=\\\"linkParameters.isInput\\\">\\n    \\n    <nz-form-control >\\n        <nz-slider [nzMin]=\\\"value.minValue\\\" [nzMax]=\\\"value.maxValue\\\" [nzStep]=\\\"1\\\"  [(ngModel)]=\\\"value.value\\\"></nz-slider>\\n        <nz-input-number id=\\\"{{value.id}}\\\" [nzMin]=\\\"value.minValue\\\" [nzMax]=\\\"value.maxValue\\\" [nzStep]=\\\"1\\\" [(ngModel)]=\\\"value.value\\\"  ></nz-input-number>\\n        \\n    </nz-form-control>\\n    \\n</ng-container>\\n<ng-container *ngIf=\\\"!linkParameters.isInput\\\">\\n\\n    <span class=\\\"value-value\\\" [style.min-width.rem]=\\\"linkParameters.valueSize\\\">\\n        <i *ngIf=\\\"currentIcon\\\" class=\\\"fa fa-{{currentIcon}}\\\"></i>\\n        <value-sparkline *ngIf=\\\"linkParameters.showSparkline && !linkParameters.isInput\\\" [value]=\\\"value\\\"></value-sparkline>\\n        {{(value.value$ | async | number:numberFormat)}}\\n        <span *ngIf=\\\"linkParameters.displayUnit\\\">{{value.unit}}</span>\\n    </span>\\n</ng-container>\\n\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    NumberComponent.ctorParameters = function () { return [\r\n        { type: ElementRef }\r\n    ]; };\r\n    return NumberComponent;\r\n}(KerviNumberComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar BooleanComponent = /** @class */ (function (_super) {\r\n    __extends(BooleanComponent, _super);\r\n    function BooleanComponent() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    BooleanComponent.prototype.changeState = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        this.value.set(event);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    BooleanComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitBoolean();\r\n    };\r\n    BooleanComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-boolean',\r\n                    template: \"<kervi-switchbutton \\n    *ngIf=\\\"displayType!='button'\\\"\\n    [dashboardSizes]=\\\"dashboardSizes\\\" \\n    [inline]=\\\"inline\\\" \\n    [value]=\\\"value.value\\\" \\n    [linkParameters]=\\\"linkParameters\\\"\\n    (buttonState)=\\\"changeState($event)\\\"\\n></kervi-switchbutton>\\n<kervi-button \\n    *ngIf=\\\"displayType=='button'\\\"    \\n    [dashboardSizes]=\\\"dashboardSizes\\\" \\n    [value]=\\\"value\\\" \\n    [inline]=\\\"inline\\\" \\n    [linkParameters]=\\\"linkParameters\\\" \\n    (buttonState)=\\\"changeState($event)\\\" \\n></kervi-button>\\n\\n\\n\\n\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    BooleanComponent.ctorParameters = function () { return []; };\r\n    return BooleanComponent;\r\n}(KerviBooleanComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar StringComponent = /** @class */ (function (_super) {\r\n    __extends(StringComponent, _super);\r\n    function StringComponent(elementRef) {\r\n        var _this = _super.call(this) || this;\r\n        _this.elementRef = elementRef;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    StringComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        this.ngOnInitString();\r\n        this.value.value$.subscribe((/**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            jQuery(\"input\", self.elementRef.nativeElement).val(v).change();\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    StringComponent.prototype.onChange = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        /** @type {?} */\r\n        var v = jQuery(\"input\", this.elementRef.nativeElement).val();\r\n        console.log(\"evv\", v, event);\r\n        this.value.set(v);\r\n    };\r\n    StringComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-string',\r\n                    template: \"<input nz-input *ngIf=\\\"linkParameters.isInput\\\"  [(ngModel)]=\\\"value.value\\\"/>\\n<span *ngIf=\\\"!linkParameters.isInput\\\" class=\\\"form-control pull-right\\\"   >{{(value.value$ | async)}}</span>\\n\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    StringComponent.ctorParameters = function () { return [\r\n        { type: ElementRef }\r\n    ]; };\r\n    return StringComponent;\r\n}(KerviStringComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar DateTimeComponent = /** @class */ (function (_super) {\r\n    __extends(DateTimeComponent, _super);\r\n    function DateTimeComponent() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DateTimeComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitDateTime();\r\n    };\r\n    DateTimeComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-datetime',\r\n                    template: \"<kervi-datetime [type]=\\\"displayType\\\" [format]=\\\"dateTimeFormat\\\" [dateTime]=\\\"value\\\"></kervi-datetime>\\n    \",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DateTimeComponent.ctorParameters = function () { return []; };\r\n    return DateTimeComponent;\r\n}(KerviDateTimeComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ColorComponent = /** @class */ (function (_super) {\r\n    __extends(ColorComponent, _super);\r\n    function ColorComponent() {\r\n        return _super.call(this) || this;\r\n        //console.log(\"cnio\",this);\r\n    }\r\n    /**\r\n     * @param {?} v\r\n     * @return {?}\r\n     */\r\n    ColorComponent.prototype.setValue = /**\r\n     * @param {?} v\r\n     * @return {?}\r\n     */\r\n    function (v) {\r\n        console.log(v);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ColorComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitColor();\r\n    };\r\n    ColorComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-color',\r\n                    template: \"<kervi-color [color]=\\\"(value.value$ | async)\\\" (colorChange)=\\\"setKerviValue($event)\\\" [linkParameters]=\\\"linkParameters\\\" ></kervi-color>\\n\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ColorComponent.ctorParameters = function () { return []; };\r\n    return ColorComponent;\r\n}(KerviColorComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar SparklineComponent = /** @class */ (function () {\r\n    function SparklineComponent(kerviService, templateService) {\r\n        this.kerviService = kerviService;\r\n        this.templateService = templateService;\r\n        this.value = null;\r\n        this.linkParameters = null;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.series = [];\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    SparklineComponent.prototype.createElement = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.series = [this.value.value];\r\n        this.options = {\r\n            chart: {\r\n                height: 14,\r\n                width: 60,\r\n                type: 'area',\r\n                sparkline: {\r\n                    enabled: true\r\n                }\r\n            },\r\n            stroke: {\r\n                curve: 'straight',\r\n                width: 1\r\n            },\r\n            fill: {\r\n                opacity: 0.3,\r\n            },\r\n            series: [{\r\n                    data: this.value.sparkline$.value\r\n                }],\r\n            yaxis: {\r\n                min: 0\r\n            },\r\n            colors: [this.color(\"color\", \".kervi-sparkline\")],\r\n        };\r\n        if (this.chartObj) {\r\n            this.chartObj.destroy();\r\n        }\r\n        console.log(\"create sparkline\", this.value.id);\r\n        this.chartObj = new ApexCharts(this.chartElement.nativeElement, this.options);\r\n        this.chartObj.render();\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    SparklineComponent.prototype.color = /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    function (style, selector) {\r\n        return this.templateService.getColor(style, selector);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SparklineComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var self = this;\r\n        asapScheduler.schedule((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.createElement();\r\n        }));\r\n        this.value.sparkline$.subscribe((/**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            if (self.chartObj && v) {\r\n                self.chartObj.updateSeries([{\r\n                        data: v\r\n                    }]);\r\n            }\r\n        }));\r\n    };\r\n    SparklineComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'value-sparkline',\r\n                    template: \"<div #chart></div>\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    SparklineComponent.ctorParameters = function () { return [\r\n        { type: NGXKerviService },\r\n        { type: KerviTemplateService }\r\n    ]; };\r\n    SparklineComponent.propDecorators = {\r\n        value: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        type: [{ type: Input }],\r\n        size: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        chartElement: [{ type: ViewChild, args: ['chart',] }]\r\n    };\r\n    return SparklineComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar SliderComponent = /** @class */ (function () {\r\n    function SliderComponent(elementRef, templateService) {\r\n        this.elementRef = elementRef;\r\n        this.templateService = templateService;\r\n        this.value = 0;\r\n        this.type = \"horizontal_slider\";\r\n        this.defaultSizes = new DashboardSizes();\r\n        this.sliderChanged = new EventEmitter();\r\n        this.marks = {};\r\n        //console.log(\"cnio\",this);\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    SliderComponent.prototype.color = /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    function (style, selector) {\r\n        return this.templateService.getColor(style, selector);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SliderComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    SliderComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'ui-slider',\r\n                    template: \"\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    SliderComponent.ctorParameters = function () { return [\r\n        { type: ElementRef },\r\n        { type: KerviTemplateService }\r\n    ]; };\r\n    SliderComponent.propDecorators = {\r\n        value: [{ type: Input }],\r\n        type: [{ type: Input }],\r\n        tick: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        defaultSizes: [{ type: Input }],\r\n        maxValue: [{ type: Input }],\r\n        minValue: [{ type: Input }],\r\n        sliderChanged: [{ type: Output }]\r\n    };\r\n    return SliderComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar GaugeComponent = /** @class */ (function () {\r\n    function GaugeComponent(kerviService, templateService) {\r\n        this.kerviService = kerviService;\r\n        this.templateService = templateService;\r\n        this.value = null;\r\n        this.linkParameters = null;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.series = [];\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    GaugeComponent.prototype.createElement = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.series = [this.value.value];\r\n        this.options = {\r\n            chart: {\r\n                type: 'radialBar',\r\n                height: this.linkParameters.gaugeSize\r\n            },\r\n            plotOptions: {\r\n                radialBar: {\r\n                    startAngle: -135,\r\n                    endAngle: 135,\r\n                    hollow: {\r\n                        size: '70%',\r\n                    },\r\n                    track: {\r\n                        startAngle: -135,\r\n                        endAngle: 135,\r\n                    },\r\n                    dataLabels: {\r\n                        name: {\r\n                            show: true,\r\n                            color: \"#2d353c\",\r\n                            fontSize: \"14px\"\r\n                        },\r\n                        value: {\r\n                            fontSize: \"24px\",\r\n                            show: true\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            colors: [this.color(\"color\", \".kervi-chart\")],\r\n            // ['#9fd037'],\r\n            series: this.series,\r\n            labels: [this.value.name],\r\n        };\r\n        if (this.chartObj) {\r\n            this.chartObj.destroy();\r\n        }\r\n        console.log(\"create gauge\", this.value.id);\r\n        this.chartObj = new ApexCharts(this.chartElement.nativeElement, this.options);\r\n        this.chartObj.render();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GaugeComponent.prototype.render = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.chartObj.render();\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    GaugeComponent.prototype.color = /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    function (style, selector) {\r\n        return this.templateService.getColor(style, selector);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GaugeComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var self = this;\r\n        asapScheduler.schedule((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.createElement();\r\n        }));\r\n        this.value.value$.subscribe((/**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            if (self.chartObj && v) {\r\n                // console.log(\"gv\", v);\r\n                self.chartObj.updateSeries([v]);\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GaugeComponent.prototype.loadPeriod = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        //console.log(\"lp\", this.periodStart, this.periodEnd);\r\n        //this.kerviService.spine.sendQuery(\"getSensorData\", this.value.id, this.periodStart.toISOString(), this.periodEnd.toISOString(), function (results) {\r\n        //console.log(\"gsd\", results);\r\n        //var sensorData = results;\r\n        //self.chartData.length = 0;\r\n        //for (var i = 0; (i < sensorData.length); i++) {\r\n        //var dataItem = sensorData[i]\r\n        //self.chartData.push({ x: new Date(dataItem.ts + \" utc\"), y: dataItem.value });\r\n        //}\r\n        //self.chart.render();\r\n        //self.chart.update();\r\n        //});\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    GaugeComponent.prototype.cleanData = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // if(this.updateChart){\r\n        //   var doClean = true;\r\n        //   var limitTS = this.getPeriodLimit();\r\n        //   var ds = this.chart.data.datasets[0].data\r\n        //   while ( ds.length>0 && doClean){\r\n        //     if (ds[0].x < limitTS)\r\n        //       ds.shift();\r\n        //     else\r\n        //       doClean = false\r\n        //   }\r\n        // }\r\n    };\r\n    GaugeComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-gauge',\r\n                    template: \"<div #chart></div>\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    GaugeComponent.ctorParameters = function () { return [\r\n        { type: NGXKerviService },\r\n        { type: KerviTemplateService }\r\n    ]; };\r\n    GaugeComponent.propDecorators = {\r\n        value: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        type: [{ type: Input }],\r\n        size: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        chartElement: [{ type: ViewChild, args: ['chart',] }]\r\n    };\r\n    return GaugeComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviChartComponent = /** @class */ (function () {\r\n    function KerviChartComponent(kerviService, templateService) {\r\n        this.kerviService = kerviService;\r\n        this.templateService = templateService;\r\n        this.value = null;\r\n        this.linkParameters = null;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.series = [];\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviChartComponent.prototype.createElement = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.series = [\r\n            {\r\n                name: this.value.name,\r\n                data: []\r\n            }\r\n        ];\r\n        this.options = {\r\n            chart: {\r\n                id: \"chart_\" + this.value.id,\r\n                width: \"100%\",\r\n                height: 300,\r\n                type: this.linkParameters.chartType,\r\n                animations: {\r\n                    enabled: true,\r\n                    easing: 'linear',\r\n                    dynamicAnimation: {\r\n                        speed: 100\r\n                    }\r\n                },\r\n                toolbar: {\r\n                    show: false,\r\n                    tools: {\r\n                        download: true,\r\n                        selection: true,\r\n                        zoom: true,\r\n                        zoomin: true,\r\n                        zoomout: true,\r\n                        pan: true,\r\n                        reset: true,\r\n                        customIcons: []\r\n                    },\r\n                    autoSelected: 'zoom'\r\n                },\r\n                zoom: {\r\n                    enabled: true\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                curve: 'smooth',\r\n                width: 1\r\n            },\r\n            title: {\r\n                text: this.linkParameters.chartTitle,\r\n                align: 'left'\r\n            },\r\n            markers: {\r\n                size: 0\r\n            },\r\n            xaxis: {\r\n                type: 'datetime',\r\n            },\r\n            yaxis: {\r\n                max: this.value.maxValue,\r\n                min: this.value.minValue\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            grid: {\r\n                show: this.linkParameters.chartGrid,\r\n                xaxis: {\r\n                    lines: {\r\n                        show: true,\r\n                        animate: true\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true,\r\n                        animate: true\r\n                    }\r\n                }\r\n            },\r\n            colors: [this.color(\"color\", \".kervi-chart\")],\r\n            // ['#9fd037'],\r\n            series: this.series\r\n        };\r\n        if (this.chartObj) {\r\n            this.chartObj.destroy();\r\n        }\r\n        if (!this.linkParameters.chartTitle)\r\n            delete (this.options[\"title\"]);\r\n        console.log(\"create chart\", this.value.id);\r\n        this.chartObj = new ApexCharts(this.chartElement.nativeElement, this.options);\r\n        this.chartObj.render();\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    KerviChartComponent.prototype.color = /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    function (style, selector) {\r\n        return this.templateService.getColor(style, selector);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviChartComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var self = this;\r\n        asapScheduler.schedule((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.createElement();\r\n        }));\r\n        this.value.value$.subscribe((/**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            if (self.chartObj) {\r\n                self.series[0].data.push([self.value.valueTS.getTime(), v]);\r\n                self.chartObj.updateSeries(self.series);\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviChartComponent.prototype.loadPeriod = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        //console.log(\"lp\", this.periodStart, this.periodEnd);\r\n        //this.kerviService.spine.sendQuery(\"getSensorData\", this.value.id, this.periodStart.toISOString(), this.periodEnd.toISOString(), function (results) {\r\n        //console.log(\"gsd\", results);\r\n        //var sensorData = results;\r\n        //self.chartData.length = 0;\r\n        //for (var i = 0; (i < sensorData.length); i++) {\r\n        //var dataItem = sensorData[i]\r\n        //self.chartData.push({ x: new Date(dataItem.ts + \" utc\"), y: dataItem.value });\r\n        //}\r\n        //self.chart.render();\r\n        //self.chart.update();\r\n        //});\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    KerviChartComponent.prototype.cleanData = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // if(this.updateChart){\r\n        //   var doClean = true;\r\n        //   var limitTS = this.getPeriodLimit();\r\n        //   var ds = this.chart.data.datasets[0].data\r\n        //   while ( ds.length>0 && doClean){\r\n        //     if (ds[0].x < limitTS)\r\n        //       ds.shift();\r\n        //     else\r\n        //       doClean = false\r\n        //   }\r\n        // }\r\n    };\r\n    KerviChartComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-chart',\r\n                    template: \"<div #chart></div>\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviChartComponent.ctorParameters = function () { return [\r\n        { type: NGXKerviService },\r\n        { type: KerviTemplateService }\r\n    ]; };\r\n    KerviChartComponent.propDecorators = {\r\n        value: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        type: [{ type: Input }],\r\n        size: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        chartElement: [{ type: ViewChild, args: ['chart',] }]\r\n    };\r\n    return KerviChartComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar SwitchButtonComponent = /** @class */ (function () {\r\n    function SwitchButtonComponent() {\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.buttonState = new EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SwitchButtonComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        console.log(\"sb\", this.value);\r\n        if (this.linkParameters) {\r\n            if (!this.linkParameters.buttonWidth)\r\n                this.width = this.dashboardSizes.switchWidth;\r\n            else\r\n                this.width = this.linkParameters.buttonWidth;\r\n            if (!this.linkParameters.buttonHeight)\r\n                this.height = this.dashboardSizes.switchHeight;\r\n            else\r\n                this.height = this.linkParameters.buttonHeight;\r\n        }\r\n        else {\r\n            this.width = this.dashboardSizes.switchWidth;\r\n            this.height = this.dashboardSizes.switchHeight;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} state\r\n     * @return {?}\r\n     */\r\n    SwitchButtonComponent.prototype.modelChange = /**\r\n     * @param {?} state\r\n     * @return {?}\r\n     */\r\n    function (state) {\r\n        this.buttonState.emit(state);\r\n    };\r\n    SwitchButtonComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-switchbutton',\r\n                    template: \"<nz-switch \\n    [(ngModel)]=\\\"value\\\"\\n    [nzCheckedChildren]=\\\"checkedTemplate\\\" [nzUnCheckedChildren]=\\\"unCheckedTemplate\\\"\\n    (ngModelChange)=\\\"modelChange($event)\\\"\\n>\\n\\n</nz-switch>\\n<ng-template #checkedTemplate>\\n    <i *ngIf=\\\"linkParameters.onIcon\\\"  nz-icon [type]=\\\"linkParameters.onIcon\\\"></i>\\n    <span >{{ linkParameters.onText }}</span>\\n</ng-template>\\n<ng-template #unCheckedTemplate>\\n    <i *ngIf=\\\"linkParameters.offIcon\\\"  nz-icon [type]=\\\"linkParameters.offIcon\\\"></i>\\n    <span >{{ linkParameters.offText }}</span>\\n</ng-template>\\n\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    SwitchButtonComponent.ctorParameters = function () { return []; };\r\n    SwitchButtonComponent.propDecorators = {\r\n        value: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        buttonState: [{ type: Output }]\r\n    };\r\n    return SwitchButtonComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ButtonComponent = /** @class */ (function () {\r\n    function ButtonComponent() {\r\n        this.linkParameters = null;\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.buttonState = new EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ButtonComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (self.linkParameters) {\r\n            if (!self.linkParameters.buttonWidth)\r\n                this.width = this.dashboardSizes.buttonWidth;\r\n            else\r\n                this.width = self.linkParameters.buttonWidth;\r\n            if (!self.linkParameters.buttonHeight)\r\n                this.height = this.dashboardSizes.buttonHeight;\r\n            else\r\n                this.height = self.linkParameters.buttonHeight;\r\n        }\r\n        else {\r\n            this.width = this.dashboardSizes.buttonWidth;\r\n            this.height = this.dashboardSizes.buttonHeight;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ButtonComponent.prototype.confirm = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        console.log(\"c\", this.value);\r\n        this.buttonState.emit(true);\r\n        this.buttonState.emit(false);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ButtonComponent.prototype.press = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        console.log(\"p\", this.value);\r\n        this.buttonState.emit(true);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ButtonComponent.prototype.release = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.buttonState.emit(false);\r\n    };\r\n    ButtonComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-button',\r\n                    template: \"<ng-template #buttonContentTemplate>\\n    <i *ngIf=\\\"linkParameters.buttonIcon\\\" nz-icon [type]=\\\"linkParameters.buttonIcon\\\"></i>\\n    {{ linkParameters.buttonText }}\\n</ng-template>\\n<button\\n    *ngIf = \\\"linkParameters.confirm\\\"\\n    nz-button nzType=\\\"primary\\\"\\n    (nzOnConfirm)=\\\"confirm()\\\"\\n    nz-popconfirm [nzTitle]=\\\"linkParameters.confirmMessage\\\"\\n>\\n<ng-container *ngTemplateOutlet=\\\"buttonContentTemplate\\\"></ng-container>\\n</button>\\n<button\\n    *ngIf = \\\"!linkParameters.confirm\\\"\\n    nz-button nzType=\\\"primary\\\"\\n    (mousedown)=\\\"press()\\\" \\n    (mouseup)=\\\"release()\\\"\\n>\\n<ng-container *ngTemplateOutlet=\\\"buttonContentTemplate\\\"></ng-container>\\n</button>\\n\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ButtonComponent.ctorParameters = function () { return []; };\r\n    ButtonComponent.propDecorators = {\r\n        value: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        type: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        title: [{ type: Input }],\r\n        buttonState: [{ type: Output }]\r\n    };\r\n    return ButtonComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar MPEGViewerComponent = /** @class */ (function () {\r\n    function MPEGViewerComponent(kerviService, domSanitizer) {\r\n        this.kerviService = kerviService;\r\n        this.domSanitizer = domSanitizer;\r\n        this.width = null;\r\n        this.height = null;\r\n        this.imageLoaded = new EventEmitter();\r\n        this.stream = null;\r\n        this.firstLoad = true;\r\n        this.fpsCounter = 0;\r\n        this.fpsTime = new Date();\r\n        this.streamSubscription = null;\r\n        this.fps = 0;\r\n    }\r\n    Object.defineProperty(MPEGViewerComponent.prototype, \"cameraSource\", {\r\n        set: /**\r\n         * @param {?} id\r\n         * @return {?}\r\n         */\r\n        function (id) {\r\n            console.log('set cam source', id);\r\n            this.setSource(id);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MPEGViewerComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MPEGViewerComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.stream) {\r\n            this.streamSubscription.unsubscribe();\r\n            this.stream.close();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} source\r\n     * @return {?}\r\n     */\r\n    MPEGViewerComponent.prototype.setSource = /**\r\n     * @param {?} source\r\n     * @return {?}\r\n     */\r\n    function (source) {\r\n        console.log(\"sc\", source);\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (this.stream) {\r\n            this.streamSubscription.unsubscribe();\r\n            this.stream.close();\r\n        }\r\n        this.stream = this.kerviService.GetStream(source, ['IMAGE_FRAME']);\r\n        console.log(\"scx\", this.stream);\r\n        this.streamSubscription = this.stream.events$.subscribe((/**\r\n         * @param {?} event\r\n         * @return {?}\r\n         */\r\n        function (event) {\r\n            //console.log('ce', event);\r\n            if (event) {\r\n                /** @type {?} */\r\n                var blob = new Blob([event.data], { type: \"image/jpeg\" });\r\n                self.streamData = self.domSanitizer.bypassSecurityTrustUrl(URL.createObjectURL(blob));\r\n                self.fpsCounter += 1;\r\n                /** @type {?} */\r\n                var now = new Date();\r\n                /** @type {?} */\r\n                var fpsDiff = now.getTime() - self.fpsTime.getTime();\r\n                /** @type {?} */\r\n                var seconds = fpsDiff / 1000;\r\n                if (seconds > 1) {\r\n                    self.fps = self.fpsCounter / seconds;\r\n                    //console.log('fps', self.fpsCounter, seconds, source, self.fps);\r\n                    self.fpsCounter = 0;\r\n                    self.fpsTime = now;\r\n                }\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MPEGViewerComponent.prototype.imageReady = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.firstLoad) {\r\n            this.firstLoad = false;\r\n            this.imageLoaded.emit(true);\r\n        }\r\n    };\r\n    MPEGViewerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-mpeg-viewer',\r\n                    template: \"<img (load)=\\\"imageReady()\\\" class=\\\"camImage\\\" [attr.src]=\\\"streamData\\\" [style.height.%]=\\\"height\\\" [style.width.%]=\\\"width\\\">\\n\",\r\n                    styles: [\"#video-viewer{margin-top:-20px}.cam-pad-area{z-index:1200;vertical-align:middle;width:200px;display:inline-block;position:absolute;left:389px;top:132px;color:#fff}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MPEGViewerComponent.ctorParameters = function () { return [\r\n        { type: NGXKerviService },\r\n        { type: DomSanitizer }\r\n    ]; };\r\n    MPEGViewerComponent.propDecorators = {\r\n        cameraSource: [{ type: Input }],\r\n        width: [{ type: Input }],\r\n        height: [{ type: Input }],\r\n        imageLoaded: [{ type: Output }],\r\n        streamData: [{ type: Input }],\r\n        fps: [{ type: Input }]\r\n    };\r\n    return MPEGViewerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar DateTimeComponent$1 = /** @class */ (function () {\r\n    function DateTimeComponent(elementRef) {\r\n        this.elementRef = elementRef;\r\n        this.dateTimeChanged = new EventEmitter;\r\n        this.isReady = false;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DateTimeComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    DateTimeComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-datetime',\r\n                    template: \"<nz-date-picker \\n*ngIf=\\\"type=='datetime'\\\"\\nnzShowTime\\n[(ngModel)]=\\\"dateTime.value\\\"\\n[nzFormat] = \\\"format\\\"\\n></nz-date-picker>\\n\\n<nz-date-picker \\n*ngIf=\\\"type=='date'\\\"\\n[(ngModel)]=\\\"dateTime.value\\\"\\n[nzFormat] = \\\"format\\\"\\n></nz-date-picker>\\n\\n\\n<nz-time-picker \\n*ngIf=\\\"type=='time'\\\"\\n[(ngModel)]=\\\"dateTime.value\\\"\\n[nzFormat] = \\\"format\\\"\\n></nz-time-picker>\\n\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DateTimeComponent.ctorParameters = function () { return [\r\n        { type: ElementRef }\r\n    ]; };\r\n    DateTimeComponent.propDecorators = {\r\n        dateTime: [{ type: Input }],\r\n        type: [{ type: Input }],\r\n        format: [{ type: Input }],\r\n        dateTimeChanged: [{ type: Output }]\r\n    };\r\n    return DateTimeComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar IconsComponent = /** @class */ (function () {\r\n    function IconsComponent() {\r\n        this.icon = null;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    IconsComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    IconsComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-icon',\r\n                    template: \"<i class=\\\"pi pi-{{icon}}\\\"></i>\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    IconsComponent.ctorParameters = function () { return []; };\r\n    IconsComponent.propDecorators = {\r\n        icon: [{ type: Input }]\r\n    };\r\n    return IconsComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ColorComponent$1 = /** @class */ (function () {\r\n    function ColorComponent(elementRef) {\r\n        this.elementRef = elementRef;\r\n        this.colorChange = new EventEmitter();\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.picker = null;\r\n    }\r\n    Object.defineProperty(ColorComponent.prototype, \"color\", {\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            console.log(\"cc\", v, this.picker);\r\n            this.colorValue = v;\r\n            if (v) {\r\n                //    jQuery('.color', this.elementRef.nativeElement).css(\"background-color\", v)\r\n                //else\r\n                jQuery('.color', this.elementRef.nativeElement).attr(\"style\", \"background-color:\" + v);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ColorComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (!self.linkParameters.buttonWidth)\r\n            this.width = this.dashboardSizes.switchWidth;\r\n        else\r\n            this.width = self.linkParameters.buttonWidth;\r\n        if (this.linkParameters.isInput) {\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                self.picker = jQuery('.color', self.elementRef.nativeElement).colorPicker({\r\n                    //color: 'rgba(255,12,14,1)',\r\n                    cssAddon: '.cp-color-picker {z-index:2000}',\r\n                    buildCallback: (/**\r\n                     * @param {?} b\r\n                     * @return {?}\r\n                     */\r\n                    function (b) {\r\n                    }),\r\n                    positionCallback: (/**\r\n                     * @param {?} p\r\n                     * @return {?}\r\n                     */\r\n                    function (p) {\r\n                    }),\r\n                    renderCallback: (/**\r\n                     * @param {?} v\r\n                     * @return {?}\r\n                     */\r\n                    function (v) {\r\n                        /** @type {?} */\r\n                        var value = v.text;\r\n                        if (value.indexOf(\"rgb\") == 0) {\r\n                            /** @type {?} */\r\n                            var rgb = v.text.split(',');\r\n                            /** @type {?} */\r\n                            var r = parseInt(rgb[0].substring(4));\r\n                            /** @type {?} */\r\n                            var g = parseInt(rgb[1]);\r\n                            /** @type {?} */\r\n                            var b = parseInt(rgb[2]);\r\n                            value = \"#\" + r.toString(16) + g.toString(16) + b.toString(16);\r\n                        }\r\n                        console.log(\"cc\", value);\r\n                        self.colorChange.emit(value);\r\n                    }),\r\n                    actionCallback: (/**\r\n                     * @param {?} v\r\n                     * @param {?} x\r\n                     * @return {?}\r\n                     */\r\n                    function (v, x) {\r\n                        console.log(\"c\", v, x);\r\n                    })\r\n                });\r\n            }), 0);\r\n        }\r\n    };\r\n    ColorComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-color',\r\n                    template: \"<div style=\\\"max-width:90px\\\" class=\\\"input-group\\\">\\n    <div  [attr.background.value]=\\\"colorValue\\\" class=\\\"form-control color\\\"></div>\\n</div>\\n\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ColorComponent.ctorParameters = function () { return [\r\n        { type: ElementRef }\r\n    ]; };\r\n    ColorComponent.propDecorators = {\r\n        color: [{ type: Input }],\r\n        colorChange: [{ type: Output }],\r\n        linkParameters: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }]\r\n    };\r\n    return ColorComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar UIComponentsModule = /** @class */ (function () {\r\n    function UIComponentsModule() {\r\n    }\r\n    UIComponentsModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    declarations: [\r\n                        SparklineComponent,\r\n                        SliderComponent,\r\n                        IconsComponent,\r\n                        GaugeComponent,\r\n                        KerviChartComponent,\r\n                        SwitchButtonComponent,\r\n                        ButtonComponent,\r\n                        //CamViewerComponent,\r\n                        MPEGViewerComponent,\r\n                        //ImageViewerComponent,\r\n                        //ActionComponent,\r\n                        DateTimeComponent$1,\r\n                        ColorComponent$1\r\n                    ],\r\n                    exports: [\r\n                        SparklineComponent,\r\n                        SliderComponent,\r\n                        IconsComponent,\r\n                        MPEGViewerComponent,\r\n                        GaugeComponent,\r\n                        KerviChartComponent,\r\n                        SwitchButtonComponent,\r\n                        ButtonComponent,\r\n                        //CamViewerComponent,\r\n                        //ActionComponent,\r\n                        DateTimeComponent$1,\r\n                        ColorComponent$1\r\n                    ],\r\n                    imports: [\r\n                        BrowserModule,\r\n                        NGXKerviPipesModule,\r\n                        CommonModule,\r\n                        NgxGaugeModule,\r\n                        FormsModule,\r\n                        NgZorroAntdModule,\r\n                        NgApexchartsModule\r\n                        //KerviPipesModule\r\n                    ],\r\n                    providers: [],\r\n                    bootstrap: []\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    UIComponentsModule.ctorParameters = function () { return []; };\r\n    return UIComponentsModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviValueComponent = /** @class */ (function () {\r\n    function KerviValueComponent() {\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n    }\r\n    KerviValueComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value',\r\n                    template: \"    <kervi-value-number *ngIf=\\\"value.typeName=='Number'\\\" [value]=\\\"value\\\" [dashboardSizes]=\\\"dashboardSizes\\\" [linkParameters]=\\\"linkParameters\\\" [inline]=\\\"inline\\\" ></kervi-value-number>\\n    <kervi-value-boolean *ngIf=\\\"value.typeName=='Boolean'\\\" [dashboardSizes]=\\\"dashboardSizes\\\" [linkParameters]=\\\"linkParameters\\\" [inline]=\\\"inline\\\" [value]=\\\"value\\\"></kervi-value-boolean>\\n    <kervi-value-string *ngIf=\\\"value.typeName=='String'\\\" [dashboardSizes]=\\\"dashboardSizes\\\" [linkParameters]=\\\"linkParameters\\\" [inline]=\\\"inline\\\" [value]=\\\"value\\\"></kervi-value-string>\\n    <kervi-value-color *ngIf=\\\"value.typeName=='Color'\\\" [dashboardSizes]=\\\"dashboardSizes\\\" [linkParameters]=\\\"linkParameters\\\" [inline]=\\\"inline\\\" [value]=\\\"value\\\"></kervi-value-color>\\n    <kervi-value-datetime *ngIf=\\\"value.typeName=='DateTime'\\\" [dashboardSizes]=\\\"dashboardSizes\\\" [linkParameters]=\\\"linkParameters\\\" [inline]=\\\"inline\\\" [value]=\\\"value\\\"></kervi-value-datetime>\\n\",\r\n                    styles: [\"\"]\r\n                    //directives: [ CommonModule  ],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviValueComponent.ctorParameters = function () { return []; };\r\n    KerviValueComponent.propDecorators = {\r\n        value: [{ type: Input }],\r\n        dashboardPanel: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }]\r\n    };\r\n    return KerviValueComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ValuesModule = /** @class */ (function () {\r\n    function ValuesModule() {\r\n    }\r\n    ValuesModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    declarations: [\r\n                        NumberComponent,\r\n                        BooleanComponent,\r\n                        KerviValueComponent,\r\n                        StringComponent,\r\n                        //EnumComponent,\r\n                        DateTimeComponent,\r\n                        ColorComponent\r\n                    ],\r\n                    exports: [\r\n                        NumberComponent,\r\n                        BooleanComponent,\r\n                        KerviValueComponent,\r\n                        StringComponent,\r\n                        //EnumComponent,\r\n                        DateTimeComponent,\r\n                        ColorComponent\r\n                    ],\r\n                    imports: [\r\n                        CommonModule,\r\n                        NGXKerviPipesModule,\r\n                        UIComponentsModule,\r\n                        FormsModule,\r\n                        NgZorroAntdModule\r\n                    ],\r\n                    providers: [],\r\n                    bootstrap: []\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ValuesModule.ctorParameters = function () { return []; };\r\n    return ValuesModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ControllerPadComponent = /** @class */ (function () {\r\n    function ControllerPadComponent(elementRef) {\r\n        this.elementRef = elementRef;\r\n        this.padSize = 180;\r\n        this.moveDelayTimer = null;\r\n        this.inDrag = false;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ControllerPadComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (this.XValue) {\r\n            jQuery(\"input[name='pad-x']\", self.elementRef.nativeElement).val(this.XValue.value$.value).change();\r\n            this.XValue.value$.subscribe((/**\r\n             * @param {?} v\r\n             * @return {?}\r\n             */\r\n            function (v) {\r\n                console.log(\"pad-x\", self.YValue.name, v);\r\n                jQuery(\"input[name='pad-x']\", self.elementRef.nativeElement).val(v).change();\r\n            }));\r\n        }\r\n        if (this.YValue) {\r\n            jQuery(\"input[name='pad-y']\", self.elementRef.nativeElement).val(this.YValue.value$.value).change();\r\n            this.YValue.value$.subscribe((/**\r\n             * @param {?} v\r\n             * @return {?}\r\n             */\r\n            function (v) {\r\n                console.log(\"pad-y\", self.YValue.name, v);\r\n                jQuery(\"input[name='pad-y']\", self.elementRef.nativeElement).val(v).change();\r\n            }));\r\n        }\r\n        /** @type {?} */\r\n        var color = \"rgba(255,255,255,.5)\";\r\n        /** @type {?} */\r\n        var p = jQuery('fieldset', self.elementRef.nativeElement).xy({\r\n            displayPrevious: false,\r\n            min: -100,\r\n            max: 100,\r\n            width: self.padSize,\r\n            height: self.padSize,\r\n            fgColor: color,\r\n            bgColor: color,\r\n            change: (/**\r\n             * @param {?} value\r\n             * @return {?}\r\n             */\r\n            function (value) {\r\n                if (self.moveDelayTimer) {\r\n                    clearTimeout(self.moveDelayTimer);\r\n                }\r\n                self.moveDelayTimer = setTimeout((/**\r\n                 * @return {?}\r\n                 */\r\n                function () {\r\n                    if (self.XValue)\r\n                        self.XValue.set(value[0]);\r\n                    if (self.YValue)\r\n                        self.YValue.set(value[1]);\r\n                }), 0);\r\n            })\r\n        })\r\n            .css({ 'border': '2px solid ' + color });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ControllerPadComponent.prototype.padPress = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.inDrag = true;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ControllerPadComponent.prototype.padRelease = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        console.log(\"pr\", this.inDrag, this.autoCenter);\r\n        this.inDrag = false;\r\n        if (this.autoCenter && this.XValue) {\r\n            console.log(\"x-auto center\");\r\n            jQuery(\"input[name='pad-x']\", this.elementRef.nativeElement).val(0).change();\r\n            this.XValue.set(0);\r\n        }\r\n        if (this.autoCenter && this.YValue) {\r\n            console.log(\"y-auto center\");\r\n            jQuery(\"input[name='pad-y']\", this.elementRef.nativeElement).val(0).change();\r\n            this.YValue.set(0);\r\n        }\r\n    };\r\n    ControllerPadComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-controller-pad',\r\n                    template: \"<div (mousedown)=\\\"padPress()\\\" (mouseup)=\\\"padRelease()\\\">\\n  <fieldset id=\\\"leftPad\\\" style=\\\"position:absolute\\\" class=\\\"pad\\\" [attr.data-width]=\\\"padSize\\\" [attr.data-height]=\\\"padSize\\\" >\\n    <legend></legend>\\n    <input type=\\\"hidden\\\" name=\\\"pad-x\\\" value=\\\"0\\\"><input type=\\\"hidden\\\"  name=\\\"pad-y\\\" value=\\\"0\\\">\\n  </fieldset>\\n</div>\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ControllerPadComponent.ctorParameters = function () { return [\r\n        { type: ElementRef }\r\n    ]; };\r\n    ControllerPadComponent.propDecorators = {\r\n        XValue: [{ type: Input }],\r\n        YValue: [{ type: Input }],\r\n        autoCenter: [{ type: Input }]\r\n    };\r\n    return ControllerPadComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar CamViewerComponent = /** @class */ (function (_super) {\r\n    __extends(CamViewerComponent, _super);\r\n    function CamViewerComponent(elementRef) {\r\n        var _this = _super.call(this) || this;\r\n        _this.elementRef = elementRef;\r\n        _this.showCamPad = false;\r\n        _this.padSize = 180;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CamViewerComponent.prototype.imageLoaded = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CamViewerComponent.prototype.ngAfterViewInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (this.camera !== null) {\r\n            /** @type {?} */\r\n            var element_1 = self.videoViewer.nativeElement;\r\n            /** @type {?} */\r\n            var viewPortHeight = window.innerHeight;\r\n            /** @type {?} */\r\n            var viewPortWidth = window.innerWidth;\r\n            this.camHeight = viewPortHeight - 65;\r\n            this.camWidth = viewPortWidth;\r\n            console.log('avic', this.camHeight, this.camWidth);\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                /** @type {?} */\r\n                var h = element_1.offsetHeight;\r\n                /** @type {?} */\r\n                var w = element_1.offsetWidth;\r\n                if (w < self.padSize) {\r\n                    self.padSize = w - 10;\r\n                }\r\n                console.log('cami', h, w, self.padSize, element_1);\r\n                self.camPadTop = h / 2 - (self.padSize / 2);\r\n                self.camPadLeft = w / 2 - (self.padSize / 2);\r\n                self.showCamPad = true;\r\n            }), 0);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CamViewerComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitCamera();\r\n    };\r\n    CamViewerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-cam-viewer',\r\n                    template: \"<ng-container *ngIf=\\\"isBackground && camera!==null\\\">\\n\\t<div #videoViewer id=\\\"video-viewer\\\" class=\\\"video video-background\\\" style=\\\"text-align:center;position:fixed;top:60px;left:0px;height:100%;\\\" [style.height.px]=\\\"camHeight\\\" [style.width.px]=\\\"camWidth\\\">\\n\\t\\t<div style=\\\"position:fixed;z-index:3000\\\" *ngIf=\\\"streamObservers.length > 0\\\">\\n\\t\\t\\t<button (click)=\\\"changeSource(cameraSource)\\\" >base</button>\\n\\t\\t\\t<button *ngFor=\\\"let observer of streamObservers\\\" (click)=\\\"changeSource(observer.ui.stream)\\\"> {{ observer.name}}</button>\\t\\t\\t\\n\\t\\t</div>\\n\\t\\t<span class=\\\"camImage\\\" style=\\\"top:0px;left:0px;\\\">\\n\\t\\t\\t<kervi-mpeg-viewer (imageLoaded)=\\\"imageLoaded()\\\" [height]=100   [cameraSource]=\\\"selectedSource\\\" > </kervi-mpeg-viewer>\\n\\t\\t</span>\\n\\t\\t<canvas id=\\\"camCanvas\\\" style=\\\"position:absolute;top:0px;left:0px;\\\" [style.height.px]=\\\"camHeight\\\" [style.width.px]=\\\"camWidth\\\"></canvas>\\n\\t\\t<canvas id=\\\"poiCanvas\\\" style=\\\"position:absolute;top:0px;left:0px;width:100%;height:100%\\\"></canvas>\\n\\t\\t<div class=\\\"cam-pad-area\\\" *ngIf=\\\"showCamPad\\\" [style.left.px]=\\\"camPadLeft\\\" [style.top.px]=\\\"camPadTop\\\" style=\\\"position:absolute;z-index: 2000\\\">\\n      <kervi-controller-pad [XValue]=\\\"pan\\\" [YValue]=\\\"tilt\\\"> </kervi-controller-pad>\\n\\t\\t</div>\\n\\t\\t<div style=\\\"position:absolute;top:30px;left:0px;width:100%;height:50px\\\">\\n\\t\\t\\t<ng-container  *ngFor=\\\"let action of camera.actions\\\">\\n\\t\\t\\t\\t<kervi-action title=\\\"{{( action.name | translate)}}\\\" *ngIf=\\\"action.visible\\\" [action]=\\\"action\\\" ></kervi-action>\\n\\t\\t\\t</ng-container>\\n\\t\\t</div>\\n\\t</div>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"!isBackground && camera!==null\\\">\\n\\t<div #videoViewer id=\\\"video-viewer\\\" class=\\\"video\\\" style=\\\"overflow:hidden;position:relative;width:100%\\\">\\n\\t\\t<span class=\\\"camImage\\\" style=\\\"top:0px;left:0px;height:100%;width:100%\\\">\\n\\t\\t\\t<kervi-mpeg-viewer (imageLoaded)=\\\"imageLoaded()\\\" [width]=100  [cameraSource]=\\\"cameraSource\\\" > </kervi-mpeg-viewer>\\n\\t\\t</span>\\n\\t\\t<canvas id=\\\"camCanvas\\\" style=\\\"position:absolute;top:0px;left:0px;width:100%;height:100%\\\"></canvas>\\n\\t\\t<canvas id=\\\"poiCanvas\\\" style=\\\"position:absolute;top:0px;left:0px;width:100%;height:100%\\\"></canvas>\\n\\t\\t<div class=\\\"cam-pad-area\\\" *ngIf=\\\"showCamPad\\\" [style.left.px]=\\\"camPadLeft\\\" [style.top.px]=\\\"camPadTop\\\" style=\\\"position:absolute\\\">\\n      <kervi-controller-pad [XValue]=\\\"pan\\\" [YValue]=\\\"tilt\\\"> </kervi-controller-pad>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div>\\n\\t\\t<ng-container  *ngFor=\\\"let action of camera.actions\\\">\\n\\t\\t\\t<kervi-action *ngIf=\\\"action.ui.visible\\\" title=\\\"{{( action.name | translate)}}\\\" [action]=\\\"action\\\" ></kervi-action>\\n\\t\\t</ng-container>\\n\\t\\t<!-- <button class=\\\"btn btn-primary\\\" (mousedown)=\\\"imageViewer.show()\\\" title=\\\"{{( 'media_folder' | translate)}}\\\">\\n\\t\\t\\t<i  class='fa fa-folder'></i>\\n\\t\\t</button> -->\\n\\t</div>\\n</ng-container>\\n<!-- <kervi-image-viewer #imageViewer [camComponent]=\\\"this\\\" [cameraSource]=\\\"cameraSource\\\"></kervi-image-viewer> -->\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    CamViewerComponent.ctorParameters = function () { return [\r\n        { type: ElementRef }\r\n    ]; };\r\n    CamViewerComponent.propDecorators = {\r\n        videoViewer: [{ type: ViewChild, args: ['videoViewer',] }]\r\n    };\r\n    return CamViewerComponent;\r\n}(KerviCameraComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n//import { TemplateService } from '../../template.service';\r\nvar ActionComponent = /** @class */ (function (_super) {\r\n    __extends(ActionComponent, _super);\r\n    function ActionComponent() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ActionComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitAction();\r\n    };\r\n    ActionComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-action',\r\n                    template: \"<kervi-switchbutton \\n    [dashboardSizes]=\\\"dashboardSizes\\\" \\n    [inline]=\\\"inline\\\" \\n    [value]=\\\"(state | async)\\\" \\n    [linkParameters]=\\\"linkParameters\\\"\\n    (buttonState)=\\\"setActionState($event)\\\"\\n    *ngIf=\\\"displayType!='button'\\\"\\n></kervi-switchbutton>\\n<kervi-button \\n    [title]=\\\"action.name\\\" \\n    [dashboardSizes]=\\\"dashboardSizes\\\" \\n    [value]=\\\"(state | async)\\\" \\n    [inline]=\\\"inline\\\" \\n    [linkParameters]=\\\"linkParameters\\\"\\n    (buttonState)=\\\"setActionState($event)\\\" \\n    *ngIf=\\\"displayType=='button'\\\"\\n></kervi-button>\\n\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ActionComponent.ctorParameters = function () { return []; };\r\n    return ActionComponent;\r\n}(KerviActionComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n//import { TemplateService } from '../../template.service';\r\nvar UserLogComponent = /** @class */ (function (_super) {\r\n    __extends(UserLogComponent, _super);\r\n    function UserLogComponent() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserLogComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitUserLog();\r\n    };\r\n    UserLogComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-user-log',\r\n                    template: \"<nz-timeline >\\n    <nz-timeline-item [nzDot]=\\\"message.level==1 ? dotTemplate1 :  message.level==2 ? dotTemplate2 : dotTemplate3\\\" *ngFor=\\\"let message of messages$ | async\\\">\\n            <strong>{{message.sourceName}}</strong><br>\\n            <span style=\\\"font-size:80%\\\">{{message.timestamp | date: 'HH:mm:ss'}}</span><br>    \\n            {{message.topic}}\\n            <nz-divider></nz-divider>\\n    </nz-timeline-item>\\n</nz-timeline>\\n<ng-template #dotTemplate1>\\n    <i nz-icon type=\\\"close-circle\\\" style=\\\"font-size: 16px;\\\" [nzTheme]=\\\"'twotone'\\\" [nzTwotoneColor]=\\\"'#f5222d'\\\"></i>\\n</ng-template>\\n<ng-template #dotTemplate2>\\n    <i nz-icon type=\\\"warning\\\" style=\\\"font-size: 16px;\\\" [nzTheme]=\\\"'twotone'\\\" [nzTwotoneColor]=\\\"'#faad14'\\\"></i>\\n</ng-template>\\n<ng-template #dotTemplate3>\\n    <i nz-icon nz-icon type=\\\"check-circle\\\" [nzTheme]=\\\"'twotone'\\\" [nzTwotoneColor]=\\\"'#52c41a'\\\" style=\\\"font-size: 16px;\\\"></i>\\n</ng-template>\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    UserLogComponent.ctorParameters = function () { return []; };\r\n    return UserLogComponent;\r\n}(KerviUserLogComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n//import { TemplateService } from '../../template.service';\r\nvar AppHealthComponent = /** @class */ (function (_super) {\r\n    __extends(AppHealthComponent, _super);\r\n    function AppHealthComponent() {\r\n        return _super.call(this) || this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AppHealthComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitAppHealth();\r\n    };\r\n    AppHealthComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-app-health',\r\n                    template: \"<div fxLayout=\\\"row\\\" *ngIf=\\\"!inline\\\" class=\\\"kervi-block-widget\\\"> \\n    <div fxFlex=\\\"60\\\" class=\\\"kervi-value-label\\\">\\n        web socket messages \\n    </div>\\n    \\n    <div fxFlex class=\\\"kervi-value-section\\\">\\n        <span class=\\\"value-value\\\" >\\n            <!-- <i *ngIf=\\\"currentIcon\\\" class=\\\"fa fa-{{currentIcon}}\\\"></i> -->\\n            <!-- <value-sparkline [value]=\\\"value\\\"></value-sparkline> -->\\n            {{mps}}\\n        </span>\\n    </div>\\n        \\n</div>\\n\\n<div fxLayout=\\\"row\\\" *ngIf=\\\"!inline\\\" class=\\\"kervi-block-widget\\\"> \\n    <div fxFlex=\\\"60\\\" class=\\\"kervi-value-label\\\">\\n        Ping diff \\n    </div>\\n    \\n    <div fxFlex class=\\\"kervi-value-section\\\">\\n        <span class=\\\"value-value\\\" >\\n            <!-- <i *ngIf=\\\"currentIcon\\\" class=\\\"fa fa-{{currentIcon}}\\\"></i> -->\\n            <!-- <value-sparkline [value]=\\\"value\\\"></value-sparkline> -->\\n            {{pingDiff}}\\n        </span>\\n    </div>\\n        \\n</div>\\n\\n<div fxLayout=\\\"row\\\" *ngIf=\\\"!inline\\\" class=\\\"kervi-block-widget\\\"> \\n    <div fxFlex=\\\"60\\\" class=\\\"kervi-value-label\\\">\\n        Ping delay \\n    </div>\\n    \\n    <div fxFlex class=\\\"kervi-value-section\\\">\\n        <span class=\\\"value-value\\\" >\\n            <!-- <i *ngIf=\\\"currentIcon\\\" class=\\\"fa fa-{{currentIcon}}\\\"></i> -->\\n            <!-- <value-sparkline [value]=\\\"value\\\"></value-sparkline> -->\\n            {{pingDelay}}\\n        </span>\\n    </div>\\n        \\n</div>\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    AppHealthComponent.ctorParameters = function () { return []; };\r\n    return AppHealthComponent;\r\n}(KerviAppHealthComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar UserMessagesComponent = /** @class */ (function (_super) {\r\n    __extends(UserMessagesComponent, _super);\r\n    function UserMessagesComponent(notification) {\r\n        var _this = _super.call(this) || this;\r\n        _this.notification = notification;\r\n        /** @type {?} */\r\n        var self = _this;\r\n        _this.lastMessage$.subscribe((/**\r\n         * @param {?} message\r\n         * @return {?}\r\n         */\r\n        function (message) {\r\n            if (message) {\r\n                self.notification.template(self.messageTemplate, { nzData: message });\r\n            }\r\n        }));\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserMessagesComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitUserLog();\r\n    };\r\n    UserMessagesComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-user-messages',\r\n                    template: \"<ng-template let-message=\\\"data\\\">\\n    <div class=\\\"ant-notification-notice-content\\\">\\n        <div class=\\\"ant-notification-notice-with-icon\\\">\\n            <span class=\\\"ant-notification-notice-icon\\\">\\n                <i *ngIf=\\\"message.level==3\\\" nz-icon type=\\\"check-circle\\\" [nzTheme]=\\\"'twotone'\\\" [nzTwotoneColor]=\\\"'#52c41a'\\\"></i>\\n                <i *ngIf=\\\"message.level==2\\\" nz-icon type=\\\"warning\\\" [nzTheme]=\\\"'twotone'\\\" [nzTwotoneColor]=\\\"'#faad14'\\\"></i>\\n                <i *ngIf=\\\"message.level==1\\\" nz-icon type=\\\"close-circle\\\" [nzTheme]=\\\"'twotone'\\\" [nzTwotoneColor]=\\\"'#f5222d'\\\"></i>\\n            </span>\\n            <div class=\\\"ant-notification-notice-message\\\">{{message.sourceName}}</div>\\n            <div class=\\\"ant-notification-notice-description\\\">\\n                {{ message.topic }}                \\n            </div>\\n        </div>\\n    </div>\\n    \\n</ng-template>\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    UserMessagesComponent.ctorParameters = function () { return [\r\n        { type: NzNotificationService }\r\n    ]; };\r\n    UserMessagesComponent.propDecorators = {\r\n        messageTemplate: [{ type: ViewChild, args: [TemplateRef,] }]\r\n    };\r\n    return UserMessagesComponent;\r\n}(KerviUserLogComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar UserMessageButtonComponent = /** @class */ (function (_super) {\r\n    __extends(UserMessageButtonComponent, _super);\r\n    function UserMessageButtonComponent() {\r\n        var _this = _super.call(this) || this;\r\n        _this.visible = false;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserMessageButtonComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitUserLog();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserMessageButtonComponent.prototype.open = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.visible = true;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserMessageButtonComponent.prototype.close = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.visible = false;\r\n    };\r\n    UserMessageButtonComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-message-button',\r\n                    template: \"<nz-badge [nzCount]=\\\"messageCount$ | async\\\" [nzOverflowCount]=\\\"99\\\">\\n    <button *ngIf=\\\"(messageCount$ | async)>0\\\" nz-button nzGhost  nzType=\\\"default\\\" nzShape=\\\"circle\\\" (click)=\\\"open()\\\">\\n        <i nz-icon nzType=\\\"notification\\\" nzTheme=\\\"twotone\\\" [nzTwotoneColor]=\\\"'#9fd037'\\\"></i>\\n    </button>\\n</nz-badge>\\n\\n<nz-drawer\\n      [nzClosable]=\\\"false\\\"\\n      [nzVisible]=\\\"visible\\\"\\n      nzPlacement=\\\"right\\\"\\n      nzTitle=\\\"Log\\\"\\n      (nzOnClose)=\\\"close()\\\"\\n    >\\n    <kervi-user-log [inline]=\\\"false\\\"></kervi-user-log>\\n</nz-drawer>\",\r\n                    styles: [\"\"],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    UserMessageButtonComponent.ctorParameters = function () { return []; };\r\n    return UserMessageButtonComponent;\r\n}(KerviUserLogComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviZorroModule = /** @class */ (function () {\r\n    function KerviZorroModule() {\r\n    }\r\n    KerviZorroModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        BrowserModule,\r\n                        NGXKerviPipesModule,\r\n                        NgxKerviModule,\r\n                        ValuesModule,\r\n                        NgZorroAntdModule,\r\n                        FlexLayoutModule,\r\n                        UIComponentsModule\r\n                    ],\r\n                    declarations: [\r\n                        DashboardPanelComponent,\r\n                        WidgetComponent,\r\n                        ControllerPadComponent,\r\n                        CamViewerComponent,\r\n                        ActionComponent,\r\n                        UserLogComponent,\r\n                        UserMessageButtonComponent,\r\n                        UserMessagesComponent,\r\n                        AppHealthComponent\r\n                    ],\r\n                    exports: [\r\n                        DashboardPanelComponent,\r\n                        ControllerPadComponent,\r\n                        CamViewerComponent,\r\n                        UserLogComponent,\r\n                        UserMessageButtonComponent,\r\n                        UserMessagesComponent,\r\n                        AppHealthComponent\r\n                    ]\r\n                },] },\r\n    ];\r\n    return KerviZorroModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { KerviZorroService, KerviZorroModule, ActionComponent as ɵw, AppHealthComponent as ɵba, CamViewerComponent as ɵv, ControllerPadComponent as ɵu, DashboardPanelComponent as ɵs, UserMessageButtonComponent as ɵy, UserMessagesComponent as ɵz, UserLogComponent as ɵx, ButtonComponent as ɵo, KerviChartComponent as ɵm, ColorComponent$1 as ɵr, DateTimeComponent$1 as ɵq, GaugeComponent as ɵl, IconsComponent as ɵk, MPEGViewerComponent as ɵp, SliderComponent as ɵj, SparklineComponent as ɵi, SwitchButtonComponent as ɵn, UIComponentsModule as ɵh, BooleanComponent as ɵc, ColorComponent as ɵg, DateTimeComponent as ɵf, KerviValueComponent as ɵd, NumberComponent as ɵb, StringComponent as ɵe, ValuesModule as ɵa, WidgetComponent as ɵt };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import { __extends, __values } from 'tslib';\nimport { Injectable, Component, Input, NgModule, Injector, Pipe } from '@angular/core';\nimport { KerviBaseService, DashboardSizes, UserLogStateType } from 'kervi-js';\nexport { ConnectionState, DashboardSizes } from 'kervi-js';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NGXKerviService = /** @class */ (function (_super) {\r\n    __extends(NGXKerviService, _super);\r\n    function NGXKerviService() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    NGXKerviService.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    return NGXKerviService;\r\n}(KerviBaseService));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviTemplateService = /** @class */ (function () {\r\n    function KerviTemplateService() {\r\n        this.remUnit = 20;\r\n        console.log(\"kervi service constructor\");\r\n        //console.log(\"ctemplate\");\r\n        this.remUnit = parseFloat(getComputedStyle(document.documentElement).fontSize);\r\n    }\r\n    /**\r\n     * @param {?} rem\r\n     * @return {?}\r\n     */\r\n    KerviTemplateService.prototype.convertRemToPixels = /**\r\n     * @param {?} rem\r\n     * @return {?}\r\n     */\r\n    function (rem) {\r\n        return rem * this.remUnit;\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    KerviTemplateService.prototype.getSizeValue = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        if (value == null)\r\n            return \"100%\";\r\n        else if (value === \"\")\r\n            return \"100%\";\r\n        else if (isNaN(value)) {\r\n            return value;\r\n        }\r\n        else if (value > 0)\r\n            return value + \"%\";\r\n        else\r\n            return \"100%\";\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @param {?} containerSize\r\n     * @return {?}\r\n     */\r\n    KerviTemplateService.prototype.getPixels = /**\r\n     * @param {?} value\r\n     * @param {?} containerSize\r\n     * @return {?}\r\n     */\r\n    function (value, containerSize) {\r\n        //console.log(\"gps\", value, isNaN(value));\r\n        if (isNaN(value)) {\r\n            if (value.lastIndexOf(\"px\") > -1) {\r\n                /** @type {?} */\r\n                var px = parseFloat(value);\r\n                return px;\r\n            }\r\n            else if (value.lastIndexOf(\"rem\") > -1) {\r\n                /** @type {?} */\r\n                var rem = parseFloat(value);\r\n                /** @type {?} */\r\n                var px = this.convertRemToPixels(rem);\r\n                console.log(\"remx\", rem, px);\r\n                return px;\r\n            }\r\n            else if (value.lastIndexOf(\"%\") > -1) {\r\n                /** @type {?} */\r\n                var percentage = parseFloat(value) / 100.0;\r\n                return containerSize * percentage;\r\n            }\r\n        }\r\n        else\r\n            return value;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @param {?} sheet\r\n     * @return {?}\r\n     */\r\n    KerviTemplateService.prototype.getStyleRuleValue = /**\r\n     * @private\r\n     * @param {?} style\r\n     * @param {?} selector\r\n     * @param {?} sheet\r\n     * @return {?}\r\n     */\r\n    function (style, selector, sheet) {\r\n        /** @type {?} */\r\n        var sheets = sheet != null ? [sheet] : document.styleSheets;\r\n        for (var i = 0, l = sheets.length; i < l; i++) {\r\n            /** @type {?} */\r\n            var sheet = sheets[i];\r\n            if (!sheet.cssRules) {\r\n                continue;\r\n            }\r\n            for (var j = 0, k = sheet.cssRules.length; j < k; j++) {\r\n                /** @type {?} */\r\n                var rule = sheet.cssRules[j];\r\n                if (rule.selectorText && rule.selectorText.split(',').indexOf(selector) !== -1) {\r\n                    return rule.style[style];\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviTemplateService.prototype.makeId = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var text = \"\";\r\n        /** @type {?} */\r\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        for (var i = 0; i < 5; i++)\r\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n        return text;\r\n    };\r\n    /**\r\n     * @param {?} colorName\r\n     * @param {?} cssClass\r\n     * @return {?}\r\n     */\r\n    KerviTemplateService.prototype.getColor = /**\r\n     * @param {?} colorName\r\n     * @param {?} cssClass\r\n     * @return {?}\r\n     */\r\n    function (colorName, cssClass) {\r\n        /** @type {?} */\r\n        var styleValue = this.getStyleRuleValue(colorName, cssClass, null);\r\n        //console.log(\"sv\", cssClass,styleValue);\r\n        return styleValue;\r\n    };\r\n    KerviTemplateService.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviTemplateService.ctorParameters = function () { return []; };\r\n    return KerviTemplateService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar AppInjector;\r\n/**\r\n * @param {?} injector\r\n * @return {?}\r\n */\r\nfunction setAppInjector(injector) {\r\n    if (AppInjector) {\r\n        // Should not happen\r\n        console.error('Programming error: AppInjector was already set');\r\n    }\r\n    else {\r\n        AppInjector = injector;\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviDashboardComponent = /** @class */ (function () {\r\n    function KerviDashboardComponent() {\r\n        this.dashboardId = null;\r\n        this.dashboard = null;\r\n        this.dashboards = null;\r\n        this.dashboardSizes = null;\r\n        this.isAppEmpty = true;\r\n        this.showMenu = false;\r\n        this.dashboardPanelsHidden = false;\r\n        this.showPanelController = false;\r\n        this.cameraId = null;\r\n        this.cameraParameters = null;\r\n        this.cameraId$ = new BehaviorSubject(null);\r\n        this.authenticated = false;\r\n        this.anonymous = true;\r\n        this.showLeftPad = false;\r\n        this.leftPadXValue = null;\r\n        this.leftPadYValue = null;\r\n        this.autoCenterLeftPad = false;\r\n        this.showRightPad = false;\r\n        this.rightPadXValue = null;\r\n        this.rightPadYValue = null;\r\n        this.autoCenterRightPad = false;\r\n        this.inFullScreen = false;\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n        /** @type {?} */\r\n        var self = this;\r\n        this.kerviService.componentsChanged$.subscribe((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            self.loadDashboard(self.dashboardId);\r\n        }));\r\n    }\r\n    /**\r\n     * @protected\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    KerviDashboardComponent.prototype.logoff = /**\r\n     * @protected\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        this.kerviService.logoff();\r\n        event.stopPropagation();\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} dashboardId\r\n     * @return {?}\r\n     */\r\n    KerviDashboardComponent.prototype.loadDashboard = /**\r\n     * @protected\r\n     * @param {?} dashboardId\r\n     * @return {?}\r\n     */\r\n    function (dashboardId) {\r\n        this.dashboardId = dashboardId;\r\n        this.dashboard = (/** @type {?} */ (this.kerviService.getComponent(dashboardId, 'dashboard')));\r\n        this.anonymous = this.kerviService.isAnonymous();\r\n        this.isAppEmpty = this.kerviService.isAppEmpty();\r\n        this.authenticated = this.kerviService.doAuthenticate;\r\n        if (this.dashboard) {\r\n            this.dashboards = this.kerviService.getComponentsByType('dashboard');\r\n            this.showMenu = (this.dashboards.length > 1 || this.kerviService.doAuthenticate);\r\n            this.showPanelController = false;\r\n            this.cameraId = null;\r\n            this.cameraParameters = null;\r\n            this.showLeftPad = false;\r\n            this.showRightPad = false;\r\n            this.dashboardPanelsHidden = false;\r\n            if (this.dashboard.backgroundPanel) {\r\n                if (this.dashboard.backgroundPanel.components.length > 0) {\r\n                    this.dashboardPanelsHidden = true;\r\n                    this.showPanelController = true;\r\n                    this.cameraId = this.dashboard.backgroundPanel.components[0].component.id;\r\n                    this.cameraId$.next(this.cameraId);\r\n                    this.cameraParameters = this.dashboard.backgroundPanel.components[0].parameters;\r\n                    console.log(\"db set cam\", this.cameraId, this.cameraParameters);\r\n                }\r\n            }\r\n            if (this.dashboard.LeftPadXPanel && this.dashboard.LeftPadXPanel.components.length || this.dashboard.LeftPadYPanel && this.dashboard.LeftPadYPanel.components.length) {\r\n                this.showLeftPad = true;\r\n                if (this.dashboard.LeftPadXPanel.components.length) {\r\n                    this.leftPadXValue = (/** @type {?} */ (this.dashboard.LeftPadXPanel.components[0].component));\r\n                    if (this.dashboard.LeftPadXPanel.components[0].parameters.padAutoCenter)\r\n                        this.autoCenterLeftPad = true;\r\n                }\r\n                if (this.dashboard.LeftPadYPanel.components.length) {\r\n                    this.leftPadYValue = (/** @type {?} */ (this.dashboard.LeftPadYPanel.components[0].component));\r\n                    if (this.dashboard.LeftPadXPanel.components[0].parameters.padAutoCenter)\r\n                        this.autoCenterLeftPad = true;\r\n                }\r\n            }\r\n            if (this.dashboard.RightPadXPanel && this.dashboard.RightPadXPanel.components.length || this.dashboard.RightPadYPanel && this.dashboard.RightPadYPanel.components.length) {\r\n                this.showRightPad = true;\r\n                if (this.dashboard.RightPadXPanel.components.length) {\r\n                    this.rightPadXValue = (/** @type {?} */ (this.dashboard.RightPadXPanel.components[0].component));\r\n                    if (this.dashboard.LeftPadXPanel.components[0].parameters.padAutoCenter)\r\n                        this.autoCenterRightPad = true;\r\n                }\r\n                if (this.dashboard.RightPadYPanel.components.length) {\r\n                    this.rightPadYValue = (/** @type {?} */ (this.dashboard.RightPadYPanel.components[0].component));\r\n                    if (this.dashboard.RightPadXPanel.components[0].parameters.padAutoCenter)\r\n                        this.autoCenterRightPad = true;\r\n                }\r\n            }\r\n            console.log(\"load db\", dashboardId, this.dashboard, this);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviDashboardComponent.prototype.toggleFullScreen = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        console.log(\"fs\", this.inFullScreen);\r\n        /** @type {?} */\r\n        var doc;\r\n        doc = document;\r\n        if ((doc.fullScreenElement && doc.fullScreenElement !== null)) \r\n        /*(!doc.mozFullScreen && !document.webkitIsFullScreen))*/ {\r\n            this.inFullScreen = true;\r\n            if (doc.documentElement.requestFullScreen) {\r\n                doc.documentElement.requestFullScreen();\r\n            }\r\n            else if (doc.documentElement.mozRequestFullScreen) {\r\n                doc.documentElement.mozRequestFullScreen();\r\n            } // } else if (document.documentElement.webkitRequestFullScreen) {  \r\n            //   doc.documentElement.webkitRequestFullScreen();  \r\n            // }  \r\n        }\r\n        else {\r\n            this.inFullScreen = false;\r\n            if (doc.cancelFullScreen) {\r\n                doc.cancelFullScreen();\r\n            }\r\n            else if (doc.mozCancelFullScreen) {\r\n                doc.mozCancelFullScreen();\r\n            } // } else if (document.webkitCancelFullScreen) {  \r\n            //   doc.webkitCancelFullScreen();  \r\n            // }  \r\n        }\r\n    };\r\n    KerviDashboardComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-dashboard',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviDashboardComponent.ctorParameters = function () { return []; };\r\n    KerviDashboardComponent.propDecorators = {\r\n        cameraId: [{ type: Input }],\r\n        cameraParameters: [{ type: Input }]\r\n    };\r\n    return KerviDashboardComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviDashboardPanelComponent = /** @class */ (function () {\r\n    function KerviDashboardPanelComponent() {\r\n        this.panel = null;\r\n        this.inline = false;\r\n        this.inGroup = false;\r\n        this.bodyOnly = false;\r\n        this.width = \"\";\r\n        this.showHeader = false;\r\n        this.expanded = false;\r\n        this.title = null;\r\n        this.bodyComponents = [];\r\n        this.headerComponents = [];\r\n        this.footerComponents = [];\r\n        //messages: DashboardMessageModel[] = [];\r\n        //panelComponents:IComponent[] = []\r\n        this.templateService = null;\r\n        this.kerviService = null;\r\n        this.templateService = AppInjector.get(KerviTemplateService);\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    /**\r\n     * @param {?} panel\r\n     * @param {?} inGroup\r\n     * @return {?}\r\n     */\r\n    KerviDashboardPanelComponent.prototype.calcWidth = /**\r\n     * @param {?} panel\r\n     * @param {?} inGroup\r\n     * @return {?}\r\n     */\r\n    function (panel, inGroup) {\r\n        if (panel.type == \"group\") {\r\n            if (panel.parameters.width == null || panel.parameters.width == \"0\")\r\n                return \"100%\";\r\n            else\r\n                return this.templateService.getSizeValue(panel.parameters.width);\r\n        }\r\n        else\r\n            return inGroup ? \"\" : this.templateService.getSizeValue(panel.parameters.width);\r\n    };\r\n    /**\r\n     * @param {?} panel\r\n     * @return {?}\r\n     */\r\n    KerviDashboardPanelComponent.prototype.showPanelHeader = /**\r\n     * @param {?} panel\r\n     * @return {?}\r\n     */\r\n    function (panel) {\r\n        var e_1, _a;\r\n        /** @type {?} */\r\n        var hasHeaderComponents = false;\r\n        try {\r\n            for (var _b = __values(this.panel.components), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var component = _c.value;\r\n                if (component.parameters.linkToHeader)\r\n                    hasHeaderComponents = true;\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return (panel.parameters.title != null && panel.parameters.title.length > 0) || hasHeaderComponents;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviDashboardPanelComponent.prototype.ngOnInitPanel = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var e_2, _a;\r\n        this.title = this.panel.parameters.title;\r\n        try {\r\n            for (var _b = __values(this.panel.components), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var component = _c.value;\r\n                if (component.parameters.linkToHeader)\r\n                    this.headerComponents.push(component);\r\n                else\r\n                    this.bodyComponents.push(component);\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n        this.showHeader = (this.panel.parameters.title != null && this.panel.parameters.title.length > 0) || (this.headerComponents.length > 0);\r\n        if (this.panel.type == \"group\") {\r\n            if (this.panel.parameters.width == null || this.panel.parameters.width == \"0\" || this.panel.parameters.width == \"\")\r\n                this.width = \"100%\";\r\n            else\r\n                this.width = this.templateService.getSizeValue(this.panel.parameters.width);\r\n        }\r\n        else\r\n            //this.width = this.inGroup ? \"100%\" : this.templateService.getSizeValue(this.panel.parameters.width);\r\n            this.width = this.templateService.getSizeValue(this.panel.parameters.width);\r\n    };\r\n    KerviDashboardPanelComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-dashboard-panel-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviDashboardPanelComponent.ctorParameters = function () { return []; };\r\n    KerviDashboardPanelComponent.propDecorators = {\r\n        dashboardSizes: [{ type: Input }],\r\n        panel: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        inGroup: [{ type: Input }],\r\n        bodyOnly: [{ type: Input }]\r\n    };\r\n    return KerviDashboardPanelComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviControllerPadComponent = /** @class */ (function () {\r\n    function KerviControllerPadComponent() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviControllerPadComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    KerviControllerPadComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-controller-pad-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviControllerPadComponent.ctorParameters = function () { return []; };\r\n    KerviControllerPadComponent.propDecorators = {\r\n        dashboardSizes: [{ type: Input }]\r\n    };\r\n    return KerviControllerPadComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviWidgetComponent = /** @class */ (function () {\r\n    function KerviWidgetComponent() {\r\n        this.component = null;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.widgetType = \"value\";\r\n        //console.log(\"cnio\",this);\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    Object.defineProperty(KerviWidgetComponent.prototype, \"componentId\", {\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this.component = this.kerviService.getComponent(this.componentId);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviWidgetComponent.prototype.ngOnInitWidget = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.linkParameters)\r\n            this.linkParameters = this.component.ui;\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        //console.log(\"widget\", this.component, this.linkParameters);\r\n        if (this.component.componentType == \"controller\") {\r\n            /** @type {?} */\r\n            var controller = (/** @type {?} */ (this.component));\r\n            console.log(\"widget ctrl\", controller);\r\n            if (controller.type == \"camera\")\r\n                this.widgetType = \"camera\";\r\n        }\r\n        else if (this.linkParameters.type) {\r\n            if (this.linkParameters.type.indexOf(\"gauge\") > -1) {\r\n                this.widgetType = \"gauge\";\r\n            }\r\n            else if (this.linkParameters.type == \"chart\") {\r\n                this.widgetType = \"chart\";\r\n            }\r\n        }\r\n    };\r\n    KerviWidgetComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-widget-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviWidgetComponent.ctorParameters = function () { return []; };\r\n    KerviWidgetComponent.propDecorators = {\r\n        componentId: [{ type: Input }],\r\n        component: [{ type: Input }],\r\n        dashboardPanel: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        inline: [{ type: Input }]\r\n    };\r\n    return KerviWidgetComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @template T\r\n */\r\nvar KerviValueComponent = /** @class */ (function () {\r\n    function KerviValueComponent() {\r\n        this.value = null;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    Object.defineProperty(KerviValueComponent.prototype, \"valueId\", {\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this.value = (/** @type {?} */ (this.kerviService.getComponent(this.valueId)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviValueComponent.prototype.ngOnInitValue = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.linkParameters)\r\n            this.linkParameters = this.value.ui;\r\n    };\r\n    KerviValueComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviValueComponent.ctorParameters = function () { return []; };\r\n    KerviValueComponent.propDecorators = {\r\n        valueId: [{ type: Input }],\r\n        value: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        inline: [{ type: Input }]\r\n    };\r\n    return KerviValueComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviNumberComponent = /** @class */ (function (_super) {\r\n    __extends(KerviNumberComponent, _super);\r\n    function KerviNumberComponent() {\r\n        var _this = _super.call(this) || this;\r\n        _this.numberFormat = \"1.2-2\";\r\n        _this.displayValue = 0;\r\n        _this.displayUnit = \"\";\r\n        _this.displayType = \"\";\r\n        _this.currentIcon = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    KerviNumberComponent.prototype.setKerviValue = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        this.value.set(value);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviNumberComponent.prototype.ngOnInitNumber = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitValue();\r\n        /** @type {?} */\r\n        var self = this;\r\n        this.numberFormat = this.linkParameters.minIntegerDigits + \".\" + this.linkParameters.minFractionDigits + \"-\" + this.linkParameters.maxFractionDigits;\r\n        if (!this.linkParameters.valueIcon)\r\n            this.currentIcon = null;\r\n        else if (typeof (this.linkParameters.valueIcon) == \"string\")\r\n            this.currentIcon = this.linkParameters.valueIcon;\r\n        else {\r\n            this.value.value$.subscribe((/**\r\n             * @param {?} v\r\n             * @return {?}\r\n             */\r\n            function (v) {\r\n                var e_1, _a;\r\n                try {\r\n                    for (var _b = __values(self.linkParameters.valueIcon), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                        var iconSection = _c.value;\r\n                        if (v >= iconSection.range[0] && v <= iconSection.range[1]) {\r\n                            self.currentIcon = iconSection.icon;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                    }\r\n                    finally { if (e_1) throw e_1.error; }\r\n                }\r\n            }));\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        else if (!this.inline && this.linkParameters.size > 0) {\r\n            this.inline = true;\r\n        }\r\n    };\r\n    KerviNumberComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-number-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviNumberComponent.ctorParameters = function () { return []; };\r\n    return KerviNumberComponent;\r\n}(KerviValueComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviBooleanComponent = /** @class */ (function (_super) {\r\n    __extends(KerviBooleanComponent, _super);\r\n    function KerviBooleanComponent() {\r\n        var _this = _super.call(this) || this;\r\n        _this.displayType = \"switch\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    KerviBooleanComponent.prototype.setKerviValue = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        this.value.set(value);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviBooleanComponent.prototype.ngOnInitBoolean = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitValue();\r\n        if (this.linkParameters.type) {\r\n            this.displayType = this.linkParameters.type;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        else if (!this.inline && this.linkParameters.size > 0) {\r\n            this.inline = true;\r\n        }\r\n    };\r\n    KerviBooleanComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-boolean-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviBooleanComponent.ctorParameters = function () { return []; };\r\n    return KerviBooleanComponent;\r\n}(KerviValueComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviActionComponent = /** @class */ (function () {\r\n    function KerviActionComponent() {\r\n        this.action = null;\r\n        this.linkParameters = null;\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.state = new BehaviorSubject(false);\r\n        this.displayType = 'switch';\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviActionComponent.prototype.ngOnInitAction = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (!this.linkParameters)\r\n            this.linkParameters = this.action.ui;\r\n        if (this.linkParameters.displayType) {\r\n            this.displayType = this.linkParameters.displayType;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        self.state.next(this.action.running$.value);\r\n        this.action.running$.subscribe((/**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            console.log(\"ar\", self.action.id, v);\r\n            self.state.next(v);\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    KerviActionComponent.prototype.setActionState = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        if (value)\r\n            this.action.run(this.linkParameters.actionParameters);\r\n        else\r\n            this.action.interrupt(this.linkParameters.interruptParameters);\r\n    };\r\n    KerviActionComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-action-base',\r\n                    template: '',\r\n                    styles: [],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviActionComponent.ctorParameters = function () { return []; };\r\n    KerviActionComponent.propDecorators = {\r\n        action: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }]\r\n    };\r\n    return KerviActionComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviCameraComponent = /** @class */ (function () {\r\n    function KerviCameraComponent() {\r\n        this.streamObservers = [];\r\n        this.linkParameters = null;\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.isBackground = false;\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    Object.defineProperty(KerviCameraComponent.prototype, \"cameraId\", {\r\n        set: /**\r\n         * @param {?} id\r\n         * @return {?}\r\n         */\r\n        function (id) {\r\n            console.log('setcamid', id);\r\n            this.camera = (/** @type {?} */ (this.kerviService.getComponent(id)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(KerviCameraComponent.prototype, \"camera\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () { return this.cam; },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            var e_1, _a;\r\n            console.log('setcam', v);\r\n            this.cam = v;\r\n            if (v) {\r\n                try {\r\n                    for (var _b = __values(v.outputs), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                        var i = _c.value;\r\n                        if (i.id.endsWith('.pan')) {\r\n                            this.pan = (/** @type {?} */ (i));\r\n                        }\r\n                        else if (i.id.endsWith('.tilt')) {\r\n                            this.tilt = (/** @type {?} */ (i));\r\n                        }\r\n                    }\r\n                }\r\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                    }\r\n                    finally { if (e_1) throw e_1.error; }\r\n                }\r\n                this.cameraType = v.ui.type;\r\n                if (this.cameraType === 'frame') {\r\n                    if (v.ui.source) {\r\n                        this.cameraSource = this.cam.id;\r\n                    }\r\n                    this.cameraSource = this.cam.id;\r\n                }\r\n                this.updateStreamObservers();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviCameraComponent.prototype.updateStreamObservers = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var e_2, _a;\r\n        /** @type {?} */\r\n        var streamObservers = [];\r\n        /** @type {?} */\r\n        var controllers = this.kerviService.getComponentsByType('controller');\r\n        try {\r\n            for (var controllers_1 = __values(controllers), controllers_1_1 = controllers_1.next(); !controllers_1_1.done; controllers_1_1 = controllers_1.next()) {\r\n                var controller = controllers_1_1.value;\r\n                if (controller.type === 'stream_observer') {\r\n                    if (controller.ui.sourceStream === this.cameraSource) {\r\n                        streamObservers.push(controller);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (controllers_1_1 && !controllers_1_1.done && (_a = controllers_1.return)) _a.call(controllers_1);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n        this.streamObservers = streamObservers;\r\n        if (this.selectedSource !== this.cameraSource) {\r\n            this.selectedSource = this.cameraSource;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} v\r\n     * @return {?}\r\n     */\r\n    KerviCameraComponent.prototype.setPan = /**\r\n     * @param {?} v\r\n     * @return {?}\r\n     */\r\n    function (v) {\r\n        this.pan.set(v);\r\n    };\r\n    /**\r\n     * @param {?} v\r\n     * @return {?}\r\n     */\r\n    KerviCameraComponent.prototype.setTilt = /**\r\n     * @param {?} v\r\n     * @return {?}\r\n     */\r\n    function (v) {\r\n        this.tilt.set(v);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviCameraComponent.prototype.ngOnInitCamera = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        console.log('ngi cam', this.camera.id);\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (!this.linkParameters) {\r\n            this.linkParameters = this.camera.ui;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        this.kerviService.componentsChanged$.subscribe((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            self.updateStreamObservers();\r\n        }));\r\n        this.updateStreamObservers();\r\n        this.selectedSource = this.cameraSource;\r\n    };\r\n    /**\r\n     * @param {?} source\r\n     * @return {?}\r\n     */\r\n    KerviCameraComponent.prototype.changeSource = /**\r\n     * @param {?} source\r\n     * @return {?}\r\n     */\r\n    function (source) {\r\n        console.log('cs', source);\r\n        this.selectedSource = source;\r\n    };\r\n    KerviCameraComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-camera-base',\r\n                    template: '',\r\n                    styles: [],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviCameraComponent.ctorParameters = function () { return []; };\r\n    KerviCameraComponent.propDecorators = {\r\n        streamObservers: [{ type: Input }],\r\n        selectedSource: [{ type: Input }],\r\n        cameraId: [{ type: Input }],\r\n        camera: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        isBackground: [{ type: Input }]\r\n    };\r\n    return KerviCameraComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviColorComponent = /** @class */ (function (_super) {\r\n    __extends(KerviColorComponent, _super);\r\n    function KerviColorComponent() {\r\n        var _this = _super.call(this) || this;\r\n        _this.displayType = \"button\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    KerviColorComponent.prototype.setKerviValue = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        this.value.set(value);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviColorComponent.prototype.ngOnInitColor = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitValue();\r\n        if (this.linkParameters.type) {\r\n            this.displayType = this.linkParameters.type;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        else if (!this.inline && this.linkParameters.size > 0) {\r\n            this.inline = true;\r\n        }\r\n    };\r\n    KerviColorComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-color-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviColorComponent.ctorParameters = function () { return []; };\r\n    return KerviColorComponent;\r\n}(KerviValueComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviDateTimeComponent = /** @class */ (function (_super) {\r\n    __extends(KerviDateTimeComponent, _super);\r\n    function KerviDateTimeComponent() {\r\n        var _this = _super.call(this) || this;\r\n        _this.displayType = \"datetime\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    KerviDateTimeComponent.prototype.setKerviValue = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        this.value.set(value);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviDateTimeComponent.prototype.ngOnInitDateTime = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitValue();\r\n        /** @type {?} */\r\n        var self = this;\r\n        if (this.linkParameters.type) {\r\n            this.displayType = this.linkParameters.type;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        if (self.linkParameters.type == \"time\")\r\n            this.dateTimeFormat = this.kerviService.application$.value.display.unit_system.datetime.time;\r\n        else if (self.linkParameters.type == \"date\")\r\n            this.dateTimeFormat = self.kerviService.application$.value.display.unit_system.datetime.date;\r\n        else\r\n            this.dateTimeFormat = this.kerviService.application$.value.display.unit_system.datetime.datetime;\r\n    };\r\n    KerviDateTimeComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-datetime-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviDateTimeComponent.ctorParameters = function () { return []; };\r\n    return KerviDateTimeComponent;\r\n}(KerviValueComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviStringComponent = /** @class */ (function (_super) {\r\n    __extends(KerviStringComponent, _super);\r\n    function KerviStringComponent() {\r\n        var _this = _super.call(this) || this;\r\n        _this.displayType = \"\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    KerviStringComponent.prototype.setKerviValue = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        this.value.set(value);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    KerviStringComponent.prototype.ngOnInitString = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ngOnInitValue();\r\n        if (this.linkParameters.type) {\r\n            this.displayType = this.linkParameters.type;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n    };\r\n    KerviStringComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-value-string-base',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviStringComponent.ctorParameters = function () { return []; };\r\n    return KerviStringComponent;\r\n}(KerviValueComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviUserLogComponent = /** @class */ (function () {\r\n    function KerviUserLogComponent() {\r\n        this.logLength = 10;\r\n        this.linkParameters = null;\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.lastMessage$ = null;\r\n        this.messages$ = null;\r\n        this.messageCount$ = null;\r\n        this.logState$ = null;\r\n        this.messageCount = 0;\r\n        this.UserLogState = UserLogStateType.normal;\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n        this.messages$ = this.kerviService.getLogMessages$();\r\n        this.lastMessage$ = this.kerviService.getLastLogMessage$();\r\n        this.messageCount$ = this.kerviService.getLogMessageCount$();\r\n        this.logState$ = this.kerviService.getLogState$();\r\n        this.messageCount$.subscribe((/**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this.messageCount = v;\r\n        }));\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    KerviUserLogComponent.prototype.ngOnInitUserLog = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    KerviUserLogComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-user-log-base',\r\n                    template: '',\r\n                    styles: [],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviUserLogComponent.ctorParameters = function () { return []; };\r\n    KerviUserLogComponent.propDecorators = {\r\n        logLength: [{ type: Input }],\r\n        linkParameters: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }]\r\n    };\r\n    return KerviUserLogComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviDirectoryComponent = /** @class */ (function () {\r\n    function KerviDirectoryComponent() {\r\n        this.path = '/';\r\n        this.directory = null;\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    KerviDirectoryComponent.prototype.loadDirectory = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        //this.directory = this.kerviService.GetDirectory(this.path);\r\n    };\r\n    KerviDirectoryComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-directory',\r\n                    template: ''\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviDirectoryComponent.ctorParameters = function () { return []; };\r\n    return KerviDirectoryComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar KerviAppHealthComponent = /** @class */ (function () {\r\n    function KerviAppHealthComponent() {\r\n        this.linkParameters = null;\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.mps = 0;\r\n        this.pingDiff = 0;\r\n        this.pingDelay = 0;\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    KerviAppHealthComponent.prototype.ngOnInitAppHealth = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var self = this;\r\n        this.kerviService.mps$.subscribe((/**\r\n         * @param {?} mps\r\n         * @return {?}\r\n         */\r\n        function (mps) {\r\n            self.mps = mps;\r\n        }));\r\n        this.kerviService.appPingDiff$.subscribe((/**\r\n         * @param {?} diff\r\n         * @return {?}\r\n         */\r\n        function (diff) {\r\n            self.pingDiff = diff;\r\n        }));\r\n        this.kerviService.appPingDelay$.subscribe((/**\r\n         * @param {?} diff\r\n         * @return {?}\r\n         */\r\n        function (diff) {\r\n            self.pingDelay = diff;\r\n        }));\r\n    };\r\n    KerviAppHealthComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'kervi-app-health-base',\r\n                    template: '',\r\n                    styles: [],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    KerviAppHealthComponent.ctorParameters = function () { return []; };\r\n    KerviAppHealthComponent.propDecorators = {\r\n        linkParameters: [{ type: Input }],\r\n        inline: [{ type: Input }],\r\n        dashboardSizes: [{ type: Input }],\r\n        mps: [{ type: Input }],\r\n        pingDiff: [{ type: Input }],\r\n        pingDelay: [{ type: Input }]\r\n    };\r\n    return KerviAppHealthComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NgxKerviComponent = /** @class */ (function () {\r\n    function NgxKerviComponent() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxKerviComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    NgxKerviComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'lib-ngx-kervi',\r\n                    template: \"\\n    <p>\\n      ngx-kervi works!\\n    </p>\\n  \",\r\n                    styles: []\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    NgxKerviComponent.ctorParameters = function () { return []; };\r\n    return NgxKerviComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NgxKerviModule = /** @class */ (function () {\r\n    function NgxKerviModule(injector) {\r\n        this.injector = injector;\r\n        setAppInjector(injector);\r\n    }\r\n    NgxKerviModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [],\r\n                    declarations: [\r\n                        NgxKerviComponent,\r\n                        KerviDashboardComponent,\r\n                        KerviDashboardPanelComponent,\r\n                        KerviControllerPadComponent,\r\n                        KerviNumberComponent,\r\n                        KerviStringComponent,\r\n                        KerviBooleanComponent,\r\n                        KerviColorComponent,\r\n                        KerviDateTimeComponent,\r\n                        KerviActionComponent,\r\n                        KerviValueComponent,\r\n                        KerviWidgetComponent,\r\n                        KerviCameraComponent,\r\n                        KerviUserLogComponent,\r\n                        KerviDirectoryComponent,\r\n                        KerviAppHealthComponent\r\n                    ],\r\n                    providers: [NGXKerviService, KerviTemplateService],\r\n                    exports: [\r\n                        NgxKerviComponent,\r\n                        KerviDashboardComponent,\r\n                        KerviDashboardPanelComponent,\r\n                        KerviControllerPadComponent,\r\n                        KerviNumberComponent,\r\n                        KerviWidgetComponent,\r\n                        KerviStringComponent,\r\n                        KerviBooleanComponent,\r\n                        KerviColorComponent,\r\n                        KerviDateTimeComponent,\r\n                        KerviActionComponent,\r\n                        KerviCameraComponent,\r\n                        KerviUserLogComponent,\r\n                        KerviActionComponent,\r\n                        KerviAppHealthComponent\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    NgxKerviModule.ctorParameters = function () { return [\r\n        { type: Injector }\r\n    ]; };\r\n    return NgxKerviModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar TranslatePipe = /** @class */ (function () {\r\n    function TranslatePipe(kerviService) {\r\n        this.kerviService = kerviService;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @param {?=} args\r\n     * @return {?}\r\n     */\r\n    TranslatePipe.prototype.transform = /**\r\n     * @param {?} value\r\n     * @param {?=} args\r\n     * @return {?}\r\n     */\r\n    function (value, args) {\r\n        return this.kerviService.text(value, value);\r\n    };\r\n    TranslatePipe.decorators = [\r\n        { type: Pipe, args: [{\r\n                    name: 'translate'\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    TranslatePipe.ctorParameters = function () { return [\r\n        { type: NGXKerviService }\r\n    ]; };\r\n    return TranslatePipe;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar NGXKerviPipesModule = /** @class */ (function () {\r\n    function NGXKerviPipesModule() {\r\n    }\r\n    NGXKerviPipesModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [],\r\n                    exports: [\r\n                        TranslatePipe\r\n                    ],\r\n                    providers: [],\r\n                    declarations: [\r\n                        TranslatePipe\r\n                    ]\r\n                },] },\r\n    ];\r\n    return NGXKerviPipesModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { KerviTemplateService, KerviDashboardComponent, KerviDashboardPanelComponent, KerviControllerPadComponent, KerviWidgetComponent, KerviNumberComponent, KerviBooleanComponent, KerviActionComponent, KerviCameraComponent, KerviColorComponent, KerviDateTimeComponent, KerviStringComponent, KerviUserLogComponent, KerviDirectoryComponent, KerviAppHealthComponent, AppInjector, NGXKerviService, NgxKerviComponent, NgxKerviModule, NGXKerviPipesModule, TranslatePipe as ɵb, KerviValueComponent as ɵa };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy93ZWJBcHAvc3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<router-outlet>\\r\\n              \\r\\n</router-outlet>\\r\\n<kervi-user-messages></kervi-user-messages>\"","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { NGXKerviService } from \"ngx-kervi\";\r\nimport { ConnectionState } from \"ngx-kervi\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  private currentPage=null;\r\n  \r\n  constructor (private kerviService:NGXKerviService, private router:Router, private route:ActivatedRoute){\r\n    var self = this;\r\n    \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n\r\n    this.kerviService.connectionState$.subscribe(function(connectedState){\r\n      console.log(\"connected service state\",connectedState, self);\r\n      if (connectedState == ConnectionState.disconnected){\r\n        self.router.navigate(['/connect']);\r\n      }\r\n      if (connectedState == ConnectionState.loading){\r\n      }\r\n      if (connectedState == ConnectionState.authenticate){\r\n        self.router.navigate(['/authenticate']);\r\n      }\r\n      if (connectedState == ConnectionState.connected){\r\n        if (self.currentPage)\r\n          self.router.navigate([self.currentPage]);\r\n        else {\r\n          var defaultDashboard = self.kerviService.getDefaultDashboard();\r\n          self.router.navigate(['/'+defaultDashboard.componentType+'/'+defaultDashboard.id])\r\n        }\r\n      }\r\n    });\r\n\r\n    setTimeout(function(){\r\n      self.kerviService.connect();\r\n    },0)\r\n    \r\n  }\r\n}\r\n","\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\n\r\nimport { NgZorroAntdModule, NZ_I18N, NZ_ICONS, en_US } from 'ng-zorro-antd';\r\nimport { IconDefinition } from '@ant-design/icons-angular';\r\nimport * as AllIcons from '@ant-design/icons-angular/icons'\r\nimport { registerLocaleData } from '@angular/common';\r\nimport en from '@angular/common/locales/en';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ConnectComponent } from './connect/connect.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { MediaComponent } from './media/media.component' ;\r\nimport { NgxKerviModule } from 'ngx-kervi';\r\nimport { NGXKerviPipesModule } from 'ngx-kervi'\r\nimport { KerviZorroModule  } from 'kervi-zorro'\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { ImgViewerComponent } from './image-viewer/image-viewer.component'\r\n\r\n\r\nregisterLocaleData(en);\r\n\r\nconst antDesignIcons = AllIcons as {\r\n  [key: string]: IconDefinition;\r\n};\r\nconst icons: IconDefinition[] = Object.keys(antDesignIcons).map(key => antDesignIcons[key])\r\n\r\n\r\nconst ROUTES: Routes = [\r\n\r\n  { path: 'connect', component: ConnectComponent },\r\n  { path: 'authenticate', component: LoginComponent },\r\n  { path: 'dashboard/:name', component: DashboardComponent },\r\n  { path: 'media', component: MediaComponent },\r\n  {\r\n    path: '',\r\n    redirectTo: '',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    ConnectComponent,\r\n    DashboardComponent,\r\n    MediaComponent,\r\n    ImgViewerComponent\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    NgxKerviModule,\r\n    NGXKerviPipesModule,\r\n    KerviZorroModule,\r\n    FlexLayoutModule,\r\n    NgZorroAntdModule,\r\n    //NgxKerviComponentsModule,\r\n    RouterModule.forRoot(ROUTES)\r\n  ],\r\n  providers:[\r\n    { provide: NZ_I18N, useValue: en_US },\r\n    { provide: NZ_ICONS, useValue: icons }\r\n  ],\r\n  \r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy93ZWJBcHAvc3JjL2FwcC9jb25uZWN0L2Nvbm5lY3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nz-layout>\\r\\n    <nz-content class=\\\"kervi-app-initializing\\\">\\r\\n      <div nz-row>\\r\\n        <div nz-col nzSpan=\\\"12\\\" nzOffset=\\\"9\\\">\\r\\n          <nz-steps [nzCurrent]=\\\"current\\\" nzDirection=\\\"vertical\\\">\\r\\n            <nz-step nzTitle=\\\"Initializing\\\" nzDescription=\\\"&nbsp;\\\" nzIcon=\\\"setting\\\" ></nz-step>\\r\\n            <nz-step nzTitle=\\\"Connecting\\\" nzDescription=\\\"&nbsp;\\\" nzIcon=\\\"wifi\\\"></nz-step>\\r\\n            <nz-step nzTitle=\\\"Loading dashboards\\\" nzDescription=\\\"&nbsp;\\\" nzIcon=\\\"download\\\"></nz-step>\\r\\n          </nz-steps>\\r\\n        </div>\\r\\n      </div>\\r\\n    </nz-content>\\r\\n</nz-layout>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ConnectionState } from \"ngx-kervi\";\r\nimport { NGXKerviService } from \"ngx-kervi\";\r\n@Component({\r\n  selector: 'app-connect',\r\n  templateUrl: './connect.component.html',\r\n  styleUrls: ['./connect.component.css']\r\n})\r\nexport class ConnectComponent implements OnInit {\r\n\r\n  current = 1;\r\n\r\n  constructor(private kerviService:NGXKerviService,) { \r\n    \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    this.kerviService.connectionState$.subscribe(function(connectedState){\r\n      console.log(\"connected service state\",connectedState, self);\r\n      if (connectedState == ConnectionState.disconnected){\r\n        self.current=1\r\n      }\r\n      if (connectedState == ConnectionState.loading){\r\n        self.current=2\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".dashboard-panels-hidden{\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n::ng-deep .vertical-center-modal {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    z-index:4000;\\r\\n    /* width:90%; */\\r\\n    height:90%;\\r\\n    \\r\\n  }\\r\\n\\r\\n::ng-deep .vertical-center-modal .ant-modal {\\r\\n    top: 0;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL3dlYkFwcC9zcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2QixZQUFZO0lBQ1osZUFBZTtJQUNmLFVBQVU7O0VBRVo7O0FBRUE7SUFDRSxNQUFNO0VBQ1IiLCJmaWxlIjoicHJvamVjdHMvd2ViQXBwL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRhc2hib2FyZC1wYW5lbHMtaGlkZGVue1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuOjpuZy1kZWVwIC52ZXJ0aWNhbC1jZW50ZXItbW9kYWwge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIHotaW5kZXg6NDAwMDtcclxuICAgIC8qIHdpZHRoOjkwJTsgKi9cclxuICAgIGhlaWdodDo5MCU7XHJcbiAgICBcclxuICB9XHJcblxyXG4gIDo6bmctZGVlcCAudmVydGljYWwtY2VudGVyLW1vZGFsIC5hbnQtbW9kYWwge1xyXG4gICAgdG9wOiAwO1xyXG4gIH0iXX0= */\"","module.exports = \"<nz-layout *ngIf=\\\"dashboard\\\">\\r\\n\\t<nz-header *ngIf='!isAppEmpty'>\\r\\n\\t\\t<div nz-row>\\r\\n\\t\\t\\t<div nz-col nzSpan=\\\"6\\\">\\t\\t\\r\\n\\t\\t\\t\\t<ul nz-menu  nzMode=\\\"horizontal\\\" class=\\\"kervi-main-menu\\\">\\r\\n\\t\\t\\t\\t\\t<li nz-submenu  *ngIf=\\\"showMenu\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t<span title><i nz-icon nzTheme=\\\"twotone\\\" type=\\\"dashboard\\\" [nzTwotoneColor]=\\\"'#9fd037'\\\"></i> {{dashboard.name}}</span>\\r\\n\\t\\t\\t\\t\\t\\t<ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t<ng-container *ngIf=\\\"dashboards.length > 1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li nz-menu-item *ngFor=\\\"let dashboard of dashboards\\\" [routerLink]=\\\"['/dashboard', dashboard.id]\\\">{{dashboard.name}}</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li *ngIf=\\\"authenticated && dashboards.length > 1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<nz-divider></nz-divider>\\r\\n\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li nz-menu-item *ngIf=\\\"authenticated && anonymous\\\" href=\\\"javascript: return false;\\\" (click)=\\\"logoff($event)\\\" ><i nz-icon type=\\\"login\\\"></i> {{('login' | translate)}}</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t<li nz-menu-item *ngIf=\\\"authenticated && !anonymous\\\" href=\\\"javascript: return false;\\\" (click)=\\\"logoff($event)\\\"><i nz-icon type=\\\"logout\\\"></i>{{('logout' | translate)}}</li>\\r\\n\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t<li nz-menu-item *ngIf=\\\"showPanelController\\\">\\r\\n\\t\\t\\t\\t\\t\\t<a  (click)=\\\"dashboardPanelsHidden = !dashboardPanelsHidden;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<i nz-icon type=\\\"sliders\\\" nzTheme=\\\"twotone\\\" [nzTwotoneColor]=\\\"'#9fd037'\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"kervi-sys-panel\\\" *ngIf=\\\"dashboard && dashboard.sysPanel\\\" nz-col nzSpan=\\\"18\\\">\\r\\n\\t\\t\\t\\t<kervi-dashboard-panel [dashboardSizes]=\\\"dashboardSizes\\\" [inline]=\\\"true\\\" [panel]=\\\"dashboard.sysPanel\\\" ></kervi-dashboard-panel>\\r\\n\\t\\t\\t\\t&nbsp;<a  (click)=\\\"mediaHidden = !mediaHidden;\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i nz-icon nzType=\\\"folder-open\\\" nzTheme=\\\"twotone\\\" [nzTwotoneColor]=\\\"'#9fd037'\\\"> </i>\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t<kervi-message-button></kervi-message-button>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t</div>\\r\\n\\t</nz-header>\\r\\n\\t\\t\\r\\n\\t<nz-content >\\r\\n\\r\\n\\t\\t<ng-container *ngIf=\\\"isAppEmpty\\\">\\r\\n\\t\\t\\t<div nz-row>\\r\\n\\t\\t\\t\\t<div nz-col nzSpan=\\\"12\\\" nzOffset=\\\"6\\\">\\r\\n\\t\\t\\t\\t\\t<nz-alert\\r\\n\\t\\t\\t\\t\\t\\tnzType=\\\"error\\\"\\r\\n\\t\\t\\t\\t\\t\\t[nzMessage] =\\\"'hello_world' | translate\\\"\\r\\n\\t\\t\\t\\t\\t\\t[nzDescription]=\\\" 'empty_app' | translate\\\"\\r\\n\\t\\t\\t\\t\\t\\tnzShowIcon\\t\\r\\n\\t\\t\\t\\t\\t  >\\r\\n\\t\\t\\t\\t\\t  </nz-alert>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</ng-container>\\r\\n\\t\\t<kervi-cam-viewer *ngIf=\\\"cameraId\\\" [isBackground]=\\\"true\\\" [cameraId]=\\\"(cameraId$| async)\\\" [linkParameters]=\\\"cameraParameters\\\"></kervi-cam-viewer>\\r\\n\\t\\t<div #leftPad class=\\\"kervi-controller-pad\\\" *ngIf=\\\"showLeftPad\\\" [style.left.px]=\\\"leftPadLeft\\\" [style.top.px]=\\\"leftPadTop\\\" >\\r\\n\\t\\t\\t<kervi-controller-pad [autoCenter]=\\\"autoCenterLeftPad\\\" [XValue]=\\\"leftPadXValue\\\" [YValue]=\\\"leftPadYValue\\\"></kervi-controller-pad>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div #rightPad class=\\\"kervi-controller-pad\\\" *ngIf=\\\"showRightPad\\\" [style.left.px]=\\\"rightPadLeft\\\" [style.top.px]=\\\"rightPadTop\\\" >\\r\\n\\t\\t\\t<kervi-controller-pad [autoCenter]=\\\"autoCenterRightPad\\\" [XValue]=\\\"rightPadXValue\\\" [YValue]=\\\"rightPadYValue\\\"></kervi-controller-pad>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<div class=\\\"kervi-panels\\\" fxLayout=\\\" column\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"0.5%\\\" fxLayoutAlign=\\\"\\\"  *ngIf=\\\"!dashboardPanelsHidden\\\" style=\\\"\\\">\\r\\n\\t\\t\\t<ng-container *ngFor=\\\"let panel of dashboard.panels\\\">\\r\\n\\t\\t\\t\\t\\t<kervi-dashboard-panel [fxFlex]=\\\"panel.parameters.width\\\" fxFlex.xs=\\\"100%\\\" [dashboardSizes]=\\\"defaultSizes\\\" [panel]=\\\"panel\\\"></kervi-dashboard-panel>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t</div>\\r\\n\\t</nz-content>\\r\\n\\t<nz-footer *ngIf='!isAppEmpty'>\\r\\n\\t\\t<div nz-col nzSpan=\\\"8\\\" style=\\\"text-align: left\\\">\\r\\n\\t\\t\\t<kervi-dashboard-panel [inline]=\\\"true\\\" *ngIf=\\\"dashboard.footerLeftPanel\\\" [dashboardSizes]=\\\"defaultSizes\\\" [panel]=\\\"dashboard.footerLeftPanel\\\"></kervi-dashboard-panel>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div nz-col nzSpan=\\\"8\\\" style=\\\"text-align:center\\\">\\r\\n\\t\\t\\t<kervi-dashboard-panel [inline]=\\\"true\\\" *ngIf=\\\"dashboard.footerCenterPanel\\\" [dashboardSizes]=\\\"defaultSizes\\\" [panel]=\\\"dashboard.footerCenterPanel\\\"></kervi-dashboard-panel>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div nz-col nzSpan=\\\"8\\\"  style=\\\"text-align: right\\\">\\r\\n\\t\\t\\t<kervi-dashboard-panel [inline]=\\\"true\\\" *ngIf=\\\"dashboard.footerRightPanel\\\" [dashboardSizes]=\\\"defaultSizes\\\" [panel]=\\\"dashboard.footerRightPanel\\\"></kervi-dashboard-panel>\\r\\n\\t\\t\\t<button nz-button nzShape=\\\"round\\\" (mousedown)=\\\"toggleFullScreen()\\\"><i nz-icon [nzType]=\\\"inFullScreen ? 'fullscreen' : 'fullscreen-exit'\\\" title=\\\"{{( 'toggle_screen' | translate)}}\\\"></i></button>\\r\\n\\t\\t</div>\\r\\n\\t</nz-footer>\\r\\n</nz-layout>\\r\\n\\r\\n<nz-modal \\r\\n\\tnzWrapClassName=\\\"vertical-center-modal\\\"\\r\\n\\t[(nzVisible)]=\\\"!mediaHidden\\\"\\r\\n\\tnzTitle=\\\"Media\\\"\\r\\n\\t(nzOnCancel)=\\\"handleMediaClose()\\\"\\r\\n\\t\\r\\n>\\r\\n<div style=\\\"display:inline-block;width:100%\\\"> <app-media ></app-media></div>\\t\\r\\n\\r\\n</nz-modal>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router} from '@angular/router';\r\nimport { KerviDashboardComponent, NGXKerviService, ConnectionState} from 'ngx-kervi'\r\ndeclare var window:any;\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent extends KerviDashboardComponent implements OnInit {\r\n  @ViewChild(\"leftPad\") leftPad:ElementRef;\r\n  @ViewChild(\"rightPad\") rightPad:ElementRef;\r\n  private padSize=180;\r\n  private isConnected:false;\r\n  public leftPadTop:number;\r\n  public leftPadLeft:number;\r\n\r\n  public rightPadTop:number;\r\n  public rightPadLeft:number;\r\n  cameraIdx = \"\";\r\n  mediaHidden = true;\r\n\r\n  constructor(private router:Router, private activatedRoute:ActivatedRoute ) {\r\n    super();\r\n   }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    this.cameraId$.subscribe(function(camId){\r\n      console.log(\"db cid\", camId);\r\n      this.cameraIdx = camId;\r\n    })\r\n    this.kerviService.componentsChanged$.subscribe(function() {\r\n      console.log(\"adb changed\");\r\n      const id = self.dashboardId;\r\n      //self.loadDashboard(\"0\");\r\n      self.loadDashboard(id);\r\n      \r\n      \r\n    });\r\n\r\n    this.activatedRoute.params.subscribe(params => {\r\n      var dashboardId = params['name'];\r\n      console.log(\"dbi\", dashboardId);\r\n      this.loadDashboard(dashboardId);\r\n      \r\n      console.log(\"rid\", dashboardId);\r\n      setTimeout(() => {\r\n        var h = window.innerHeight;\r\n        var w = window.innerWidth;\r\n\r\n        self.leftPadTop = h / 2 - self.padSize/2\r\n        self.leftPadLeft = w / 4 - self.padSize/2 \r\n        \r\n        self.rightPadTop = h / 2 - self.padSize/2\r\n        self.rightPadLeft = w - w / 4 - self.padSize/2 \r\n        \r\n\r\n      }, 0);\r\n    });\r\n  }\r\n\r\n  handleMediaClose(): void {\r\n    console.log('click ok');\r\n    this.mediaHidden = true;\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"img-viewer {{imgViewerClass}}\\\">\\r\\n    <div class=\\\"img-viewer-panel\\\">\\r\\n      <div class=\\\"img-viewer-panel-header\\\">\\r\\n        <div nz-row>\\r\\n          <div nz-col nzSpan=\\\"3\\\">\\r\\n              <i nz-icon (click)=\\\"closeImageViewer()\\\" nzType=\\\"rollback\\\" nzTheme=\\\"outline\\\"></i>\\r\\n          </div>\\r\\n        <div nz-col nzSpan=\\\"21\\\">\\r\\n          <div *ngIf=\\\"showOperate\\\" class=\\\"img-viewer-panel-header-operation\\\">\\r\\n            <span nz-tooltip nzPlacement=\\\"bottom\\\" [nzTitle]=\\\"imageViewerType.zoomInToolTip\\\" *ngIf=\\\"zoom\\\" (click)=\\\"zoomInImg()\\\"><i nz-icon nzType=\\\"zoom-in\\\"></i></span>\\r\\n            <span nz-tooltip nzPlacement=\\\"bottom\\\" [nzTitle]=\\\"imageViewerType.zoomOutToolTip\\\" *ngIf=\\\"zoom\\\" (click)=\\\"zoomOutImg()\\\"><i nz-icon nzType=\\\"zoom-out\\\"></i></span>\\r\\n            <span nz-tooltip nzPlacement=\\\"bottom\\\" [nzTitle]=\\\"imageViewerType.rotateLeftToolTip\\\" *ngIf=\\\"rotate\\\" (click)=\\\"rotateImg(false)\\\"><i nz-icon nzType=\\\"undo\\\"></i></span>\\r\\n            <span nz-tooltip nzPlacement=\\\"bottom\\\" [nzTitle]=\\\"imageViewerType.rotateRightToolTip\\\" *ngIf=\\\"rotate\\\" (click)=\\\"rotateImg(true)\\\"><i nz-icon nzType=\\\"redo\\\"></i></span>\\r\\n            <span nz-tooltip nzPlacement=\\\"bottom\\\" [nzTitle]=\\\"imageViewerType.resetToolTip\\\" *ngIf=\\\"reset\\\" (click)=\\\"showImg()\\\"><i nz-icon nzType=\\\"sync\\\"></i></span>\\r\\n            <span nz-tooltip nzPlacement=\\\"bottom\\\" [nzTitle]=\\\"imageViewerType.fullScreenToolTip\\\" *ngIf=\\\"fullscreen\\\" (click)=\\\"fullscreenImg()\\\"><i nz-icon nzType=\\\"fullscreen\\\"></i></span>\\r\\n            <span nz-tooltip nzPlacement=\\\"bottom\\\" [nzTitle]=\\\"imageViewerType.downloadToolTip\\\" *ngIf=\\\"download\\\" (click)=\\\"downloadImg()\\\"><i nz-icon nzType=\\\"download\\\"></i></span>\\r\\n          </div>\\r\\n      </div>\\r\\n      </div>\\r\\n      </div>\\r\\n      <div class=\\\"img-viewer-panel-body\\\" [class.img-viewer-panel-body-has-footer]=\\\"images.length > 1\\\">\\r\\n        <div class=\\\"img-viewer-panel-body-content\\\">\\r\\n  \\r\\n        </div>\\r\\n        <span *ngIf=\\\"imgTotal > 1\\\" class=\\\"img-viewer-panel-body-prev\\\" (click)=\\\"prevImg()\\\"><i nz-icon nzType=\\\"left\\\"></i></span>\\r\\n        <span *ngIf=\\\"imgTotal > 1\\\" class=\\\"img-viewer-panel-body-next\\\" (click)=\\\"nextImg()\\\"><i nz-icon nzType=\\\"right\\\"></i></span>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"imgTotal > 1\\\" class=\\\"img-viewer-panel-footer\\\">\\r\\n      {{currentImgIndex}} / {{imgTotal}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"","module.exports = \".img-viewer {\\n  position: relative;\\n  line-height: 1.5;\\n  font-family: Consolas, Menlo, Courier, monospace;\\n  text-align: left;\\n  color: rgba(0, 0, 0, 0.65);\\n  width: 100%;\\n  height: 450px; }\\n  .img-viewer .img-viewer-panel {\\n    width: 100%;\\n    height: 100%;\\n    font-size: 12px;\\n    border: 1px solid none;\\n    display: inline-block;\\n    border-radius: 4px;\\n    vertical-align: middle;\\n    position: relative;\\n    padding-top: 50px; }\\n  .img-viewer .img-viewer-panel-header {\\n      padding: 8px 12px;\\n      height: 50px;\\n      border-radius: 4px 4px 0 0;\\n      border-bottom: 1px solid none;\\n      overflow: hidden;\\n      position: absolute;\\n      top: 0;\\n      left: 0;\\n      width: 100%;\\n      font-size: 24px;\\n      line-height: 33px; }\\n  .img-viewer .img-viewer-panel-header-pdf {\\n        position: absolute;\\n        left: 12px; }\\n  .img-viewer .img-viewer-panel-header-operation {\\n        position: absolute;\\n        right: 12px; }\\n  .img-viewer .img-viewer-panel-header-operation span {\\n          margin: 0 3px; }\\n  .img-viewer .img-viewer-panel-body {\\n      height: 100%;\\n      font-size: 12px;\\n      position: relative; }\\n  .img-viewer .img-viewer-panel-body .switch, .img-viewer .img-viewer-panel-body .img-viewer-panel-body-prev, .img-viewer .img-viewer-panel-body .img-viewer-panel-body-next {\\n        position: absolute;\\n        top: 50%;\\n        -webkit-transform: translate(0, -50%);\\n                transform: translate(0, -50%);\\n        font-size: 24px; }\\n  .img-viewer .img-viewer-panel-body .switch:hover, .img-viewer .img-viewer-panel-body .img-viewer-panel-body-prev:hover, .img-viewer .img-viewer-panel-body .img-viewer-panel-body-next:hover {\\n          color: #cccccc; }\\n  .img-viewer .img-viewer-panel-body-prev {\\n        left: 12px; }\\n  .img-viewer .img-viewer-panel-body-next {\\n        right: 12px; }\\n  .img-viewer .img-viewer-panel-body-content {\\n        padding: 0;\\n        overflow: hidden;\\n        height: 100%; }\\n  .img-viewer .img-viewer-panel-body-has-footer {\\n        padding-bottom: 50px; }\\n  .img-viewer .img-viewer-panel-footer {\\n      height: 50px;\\n      border-radius: 0 0 4px 4px;\\n      border-top: 1px solid none;\\n      overflow: hidden;\\n      position: absolute;\\n      bottom: 0;\\n      left: 0;\\n      width: 100%;\\n      font-size: 16px;\\n      text-align: center;\\n      line-height: 50px;\\n      background-color: #cacaca; }\\n  :host ::ng-deep .iv-loader {\\n  border-top: 1.1em solid rgba(0, 0, 0, 0.7);\\n  border-right: 1.1em solid rgba(36, 239, 43, 0.7);\\n  border-bottom: 1.1em solid rgba(254, 202, 55, 0.7);\\n  border-left: 1.1em solid rgba(254, 207, 219, 0.7); }\\n  :host ::ng-deep .iv-snap-view {\\n  display: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL3dlYkFwcC9zcmMvYXBwL2ltYWdlLXZpZXdlci9EOlxcdGltIHByaXZhdFxcZ2l0aHViXFxrZXJ2aVxca2VydmktdWlcXGtlcnZpXFx1aVxcd2ViL3Byb2plY3RzXFx3ZWJBcHBcXHNyY1xcYXBwXFxpbWFnZS12aWV3ZXJcXGltYWdlLXZpZXdlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNQTtFQUNFLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsZ0RBQWdEO0VBQ2hELGdCQUFnQjtFQUNoQiwwQkFUd0I7RUFVeEIsV0FBVztFQUNYLGFBQWEsRUFBQTtFQVBmO0lBVUksV0FaTztJQWFQLFlBYk87SUFjUCxlQWpCTztJQWtCUCxzQkFoQmM7SUFpQmQscUJBQXFCO0lBQ3JCLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLGlCQUFpQixFQUFBO0VBbEJyQjtNQXFCTSxpQkFBaUI7TUFDakIsWUFBWTtNQUNaLDBCQUEwQjtNQUMxQiw2QkEzQlk7TUE0QlosZ0JBQWdCO01BQ2hCLGtCQUFrQjtNQUNsQixNQUFNO01BQ04sT0FBTztNQUNQLFdBL0JLO01BZ0NMLGVBQWU7TUFDZixpQkFBaUIsRUFBQTtFQS9CdkI7UUFrQ1Esa0JBQWtCO1FBQ2xCLFVBQVUsRUFBQTtFQW5DbEI7UUF1Q1Esa0JBQWtCO1FBQ2xCLFdBQVcsRUFBQTtFQXhDbkI7VUEyQ1UsYUFBYSxFQUFBO0VBM0N2QjtNQWlETSxZQUFZO01BQ1osZUF2REs7TUF3REwsa0JBQWtCLEVBQUE7RUFuRHhCO1FBc0RRLGtCQUFrQjtRQUNsQixRQUFRO1FBQ1IscUNBQTZCO2dCQUE3Qiw2QkFBNkI7UUFDN0IsZUFBZSxFQUFBO0VBekR2QjtVQTREVSxjQUFjLEVBQUE7RUE1RHhCO1FBa0VRLFVBQVUsRUFBQTtFQWxFbEI7UUF1RVEsV0FBVyxFQUFBO0VBdkVuQjtRQTJFUSxVQUFVO1FBQ1YsZ0JBQWdCO1FBQ2hCLFlBQVksRUFBQTtFQTdFcEI7UUFpRlEsb0JBQW9CLEVBQUE7RUFqRjVCO01Bc0ZNLFlBQVk7TUFDWiwwQkFBMEI7TUFDMUIsMEJBM0ZZO01BNEZaLGdCQUFnQjtNQUNoQixrQkFBa0I7TUFDbEIsU0FBUztNQUNULE9BQU87TUFDUCxXQUFXO01BQ1gsZUFBZTtNQUNmLGtCQUFrQjtNQUNsQixpQkFBaUI7TUFDakIseUJBQXlCLEVBQUE7RUFLL0I7RUFDRSwwQ0FBMEM7RUFDMUMsZ0RBQWdEO0VBQ2hELGtEQUFrRDtFQUNsRCxpREFBaUQsRUFBQTtFQUduRDtFQUNFLGFBQWEsRUFBQSIsImZpbGUiOiJwcm9qZWN0cy93ZWJBcHAvc3JjL2FwcC9pbWFnZS12aWV3ZXIvaW1hZ2Utdmlld2VyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiJHByZWZpeDogJ2ltZy12aWV3ZXInO1xyXG4kc2l6ZTogMTJweDtcclxuJGNvbG9yOiByZ2JhKDAsIDAsIDAsIC42NSk7XHJcbiRib3JkZXJDb2xvcjogbm9uZTtcclxuJGZ1bGw6IDEwMCU7XHJcblxyXG4uI3skcHJlZml4fSB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjU7XHJcbiAgZm9udC1mYW1pbHk6IENvbnNvbGFzLCBNZW5sbywgQ291cmllciwgbW9ub3NwYWNlO1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgY29sb3I6ICRjb2xvcjtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDQ1MHB4O1xyXG5cclxuICAuI3skcHJlZml4fS1wYW5lbCB7XHJcbiAgICB3aWR0aDogJGZ1bGw7XHJcbiAgICBoZWlnaHQ6ICRmdWxsO1xyXG4gICAgZm9udC1zaXplOiAkc2l6ZTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRib3JkZXJDb2xvcjtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBwYWRkaW5nLXRvcDogNTBweDtcclxuXHJcbiAgICAmLWhlYWRlciB7XHJcbiAgICAgIHBhZGRpbmc6IDhweCAxMnB4O1xyXG4gICAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IDRweCA0cHggMCAwO1xyXG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGJvcmRlckNvbG9yO1xyXG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHRvcDogMDtcclxuICAgICAgbGVmdDogMDtcclxuICAgICAgd2lkdGg6ICRmdWxsO1xyXG4gICAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiAzM3B4O1xyXG5cclxuICAgICAgJi1wZGYge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBsZWZ0OiAxMnB4O1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmLW9wZXJhdGlvbiB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHJpZ2h0OiAxMnB4O1xyXG5cclxuICAgICAgICBzcGFuIHtcclxuICAgICAgICAgIG1hcmdpbjogMCAzcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi1ib2R5IHtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICBmb250LXNpemU6ICRzaXplO1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgICAuc3dpdGNoIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiA1MCU7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgLTUwJSk7XHJcbiAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG5cclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgIGNvbG9yOiAjY2NjY2NjO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgJi1wcmV2IHtcclxuICAgICAgICBAZXh0ZW5kIC5zd2l0Y2g7XHJcbiAgICAgICAgbGVmdDogMTJweDtcclxuICAgICAgfVxyXG5cclxuICAgICAgJi1uZXh0IHtcclxuICAgICAgICBAZXh0ZW5kIC5zd2l0Y2g7XHJcbiAgICAgICAgcmlnaHQ6IDEycHg7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICYtY29udGVudCB7XHJcbiAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgfVxyXG5cclxuICAgICAgJi1oYXMtZm9vdGVyIHtcclxuICAgICAgICBwYWRkaW5nLWJvdHRvbTogNTBweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYtZm9vdGVyIHtcclxuICAgICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgICBib3JkZXItcmFkaXVzOiAwIDAgNHB4IDRweDtcclxuICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRib3JkZXJDb2xvcjtcclxuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICBib3R0b206IDA7XHJcbiAgICAgIGxlZnQ6IDA7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgbGluZS1oZWlnaHQ6IDUwcHg7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNjYWNhY2E7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLml2LWxvYWRlciB7XHJcbiAgYm9yZGVyLXRvcDogMS4xZW0gc29saWQgcmdiYSgwLCAwLCAwLCAwLjcpO1xyXG4gIGJvcmRlci1yaWdodDogMS4xZW0gc29saWQgcmdiYSgzNiwgMjM5LCA0MywgMC43KTtcclxuICBib3JkZXItYm90dG9tOiAxLjFlbSBzb2xpZCByZ2JhKDI1NCwgMjAyLCA1NSwgMC43KTtcclxuICBib3JkZXItbGVmdDogMS4xZW0gc29saWQgcmdiYSgyNTQsIDIwNywgMjE5LCAwLjcpO1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLml2LXNuYXAtdmlld3tcclxuICBkaXNwbGF5OiBub25lO1xyXG59Il19 */\"","\r\n//based on https://github.com/LZHD/ng-picture-viewer\r\n//Copyright 2019 Tim Wentzlau\r\n// Licensed under MIT\r\nimport {\r\n    AfterViewInit,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Inject,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Optional,\r\n    Output,\r\n    Renderer2\r\n  } from '@angular/core';\r\n  import {DOCUMENT} from '@angular/common';\r\n  import ImageViewer from 'iv-viewer';\r\n  import {FullScreenViewer} from 'iv-viewer';\r\n  import {ImgViewerConfig} from './image-viewer.config';\r\n  import {IvViewerType} from './interfaces/iv-viewer.type';\r\n  import {ImgViewerType} from './interfaces/img-viewer.type';\r\n\r\n  @Component({\r\n    selector: 'nz-picture-viewer',\r\n    templateUrl: './image-viewer.component.html',\r\n    styleUrls: ['./image-viewer.component.scss']\r\n  })\r\n  export class ImgViewerComponent implements OnInit, OnDestroy, AfterViewInit {\r\n    @Input() imgViewerClass: string;\r\n    @Input() images: string[] = [];\r\n    @Input() showOperate = true;\r\n    @Input() zoom = true;\r\n    @Input() rotate = true;\r\n    @Input() reset = true;\r\n    @Input() fullscreen = true;\r\n    @Input() download = true;\r\n    @Input() defaultName = 'download';\r\n    @Output() prevChange: EventEmitter<number> = new EventEmitter<number>();\r\n    @Output() nextChange: EventEmitter<number> = new EventEmitter<number>();\r\n    @Output() closeViewer: EventEmitter<number> = new EventEmitter();\r\n    ROTATE_ANGLE = 90;\r\n    imageViewer$: any;\r\n    fullScreenViewer$: any;\r\n    element: HTMLElement;\r\n    currentImgIndex = 1;\r\n    imgTotal = 0;\r\n    zoomValue = 100;\r\n    isVertical = false;\r\n    imgRotate = 0;\r\n    imgViewerConfig: ImgViewerConfig;\r\n    ivViewerType: IvViewerType;\r\n    imageViewerType: ImgViewerType;\r\n\r\n    constructor(\r\n      private el: ElementRef,\r\n      private renderer: Renderer2,\r\n      @Inject(DOCUMENT) private doc: Document,\r\n      @Optional() private config: ImgViewerConfig\r\n    ) {\r\n      this.element = this.el.nativeElement as HTMLElement;\r\n      this.imgViewerConfig = new ImgViewerConfig();\r\n      this.ivViewerType = this.imgViewerConfig.ivViewerType;\r\n      this.imageViewerType = this.imgViewerConfig.imageViewerType;\r\n      if (this.config && this.config.ivViewerType) {\r\n        this.ivViewerType = Object.assign(this.ivViewerType, this.config.ivViewerType);\r\n      }\r\n      if (this.config && this.config.imageViewerType) {\r\n        this.imageViewerType = Object.assign(this.imageViewerType, this.config.imageViewerType);\r\n      }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n      this.imgTotal = this.images.length;\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n      this.initImgViewer();\r\n    }\r\n\r\n    zoomInImg(): void {\r\n      this.zoomValue += 10;\r\n      this.imageViewer$.zoom(this.zoomValue);\r\n    }\r\n\r\n    zoomOutImg(): void {\r\n      if (this.zoomValue === 100) {\r\n        return;\r\n      }\r\n      this.zoomValue -= 10;\r\n      if (this.zoomValue < 0) {\r\n        this.zoomValue = 0;\r\n      }\r\n      this.imageViewer$.zoom(this.zoomValue);\r\n    }\r\n\r\n    rotateImg(isClockwise: boolean): void {\r\n      this.beforeRotateImg().then((time: number) => {\r\n        if (isClockwise) {\r\n          this.imgRotate += this.ROTATE_ANGLE;\r\n        } else {\r\n          this.imgRotate -= this.ROTATE_ANGLE;\r\n        }\r\n        this.isVertical = !this.isVertical;\r\n        time <= 0 ? this.addImgRotate() : setTimeout(() => this.addImgRotate(), time);\r\n      });\r\n    }\r\n\r\n    fullscreenImg(): void {\r\n      this.beforeRotateImg().then((time: number) => {\r\n        if (time <= 0) {\r\n          this.fullScreenViewer$.show(this.images[this.currentImgIndex - 1]);\r\n          this.addImgRotate(false);\r\n        } else {\r\n          setTimeout(() => {\r\n            this.fullScreenViewer$.show(this.images[this.currentImgIndex - 1]);\r\n            this.addImgRotate(false);\r\n          }, time);\r\n        }\r\n      });\r\n    }\r\n\r\n    downloadImg(): void {\r\n      const download = this.renderer.createElement('a');\r\n      this.renderer.setAttribute(download, 'download', `${this.defaultName}-${this.currentImgIndex}`);\r\n      this.renderer.setAttribute(download, 'display', 'none');\r\n      this.renderer.setAttribute(download, 'href', this.images[this.currentImgIndex - 1]);\r\n      this.renderer.setAttribute(download, 'target', '_blank');\r\n      this.renderer.appendChild(this.element, download);\r\n      download.click();\r\n      this.renderer.removeChild(this.renderer, download);\r\n    }\r\n\r\n    prevImg(): void {\r\n      this.isVertical = false;\r\n      this.currentImgIndex--;\r\n      if (this.currentImgIndex <= 0) {\r\n        this.currentImgIndex = this.imgTotal;\r\n      }\r\n      //this.showImg();\r\n      this.prevChange.emit(this.currentImgIndex);\r\n    }\r\n\r\n    nextImg(): void {\r\n      this.isVertical = false;\r\n      this.currentImgIndex++;\r\n      if (this.currentImgIndex > this.imgTotal) {\r\n        this.currentImgIndex = 1;\r\n      }\r\n      //this.showImg();\r\n      this.nextChange.emit(this.currentImgIndex);\r\n    }\r\n\r\n    closeImageViewer(){\r\n      this.closeViewer.emit();\r\n    }\r\n\r\n    private initImgViewer(): void {\r\n      this.imageViewer$ = new ImageViewer(this.element.querySelector('.img-viewer-panel-body-content'), this.ivViewerType);\r\n      this.fullScreenViewer$ = new FullScreenViewer(this.ivViewerType);\r\n      //this.showImg();\r\n    }\r\n\r\n    private addImgRotate(isAnimation = true): void {\r\n      let scale = '';\r\n      if (this.isVertical && this.isImgOverVertical()) {\r\n        scale = `scale(${this.getScale()})`;\r\n      }\r\n      const rotate = `rotate(${this.imgRotate}deg)`;\r\n      if (isAnimation) {\r\n        this.addTransition('iv-snap-image');\r\n        this.addTransition('iv-small-image');\r\n      }\r\n      this.setImgRotate('iv-snap-image', rotate, scale);\r\n      this.setImgRotate('iv-small-image', rotate, scale);\r\n      setTimeout(() => {\r\n        if (isAnimation) {\r\n          this.removeAnimation('iv-snap-image');\r\n          this.removeAnimation('iv-small-image');\r\n        }\r\n      }, 500);\r\n    }\r\n\r\n    private async beforeRotateImg(): Promise<any> {\r\n      this.zoomValue = 100;\r\n      const time: number = this.imageViewer$._state.zoomValue - this.zoomValue;\r\n      await this.imageViewer$.resetZoom();\r\n      await this.imageViewer$.refresh();\r\n      return time === 0 ? 0 : 500;\r\n    }\r\n\r\n    private beforeShowImg(): void {\r\n      this.imgRotate = 0;\r\n      this.isVertical = false;\r\n      const currentImg = this.element.querySelector('.iv-small-image');\r\n      if (!!currentImg) {\r\n        this.renderer.removeChild(this.element, currentImg);\r\n      }\r\n      this.setStyle('iv-loader', 'visibility', 'auto');\r\n      this.setStyle('options-image-viewer', 'visibility', 'inherit');\r\n    }\r\n\r\n    showImg(): void {\r\n      this.beforeShowImg();\r\n      \r\n      this.imageViewer$.load(this.images[0]);\r\n    }\r\n\r\n    private isImgOverVertical(): boolean {\r\n      const imgViewerHeight = this.element.clientHeight;\r\n      const currentImgWidth = this.element.querySelector('.iv-small-image').clientWidth;\r\n      return imgViewerHeight < currentImgWidth + 10;\r\n    }\r\n\r\n    private getScale(): number {\r\n      const imgViewerHeight = this.element.querySelector('.img-viewer-panel-body-content').clientHeight;\r\n      const currentImgWidth = this.element.querySelector('.iv-small-image').clientWidth;\r\n      const differenceWidth = currentImgWidth - imgViewerHeight;\r\n      if (differenceWidth >= 250 && differenceWidth < 300) {\r\n        return differenceWidth / imgViewerHeight - 0.1;\r\n      } else if (differenceWidth >= 300 && differenceWidth < 400) {\r\n        return differenceWidth / imgViewerHeight - 0.15;\r\n      } else if (differenceWidth >= 400) {\r\n        return differenceWidth / imgViewerHeight - 0.32;\r\n      } else if (differenceWidth < 0) {\r\n        return 1;\r\n      }\r\n      return 0.6;\r\n    }\r\n\r\n    private addTransition(node): void {\r\n      this.setStyle(node, 'transition', '0.5s linear');\r\n    }\r\n\r\n    private removeAnimation(node): void {\r\n      this.setStyle(node, 'transition', 'auto');\r\n    }\r\n\r\n    private setImgRotate(node, roate, scale): void {\r\n      this.setStyle(node, 'transform', `${roate} ${scale}`);\r\n    }\r\n\r\n    private setStyle(node, name, value): void {\r\n      const elements = this.doc.querySelectorAll(`.${node}`);\r\n      elements.forEach(ele => this.renderer.setStyle(ele, name, value));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n      if (!!this.imageViewer$) {\r\n        this.imageViewer$ = this.imageViewer$.destroy();\r\n      }\r\n      if (!!this.fullScreenViewer$) {\r\n        this.fullScreenViewer$ = this.fullScreenViewer$.destroy();\r\n      }\r\n    }\r\n  }\r\n","import {IvViewerType} from './interfaces/iv-viewer.type';\r\nimport {ImgViewerType} from './interfaces/img-viewer.type';\r\n\r\nexport class ImgViewerConfig {\r\n  ivViewerType?: IvViewerType = {\r\n    zoomValue: 100,\r\n    maxZoom: 500,\r\n    snapView: false,\r\n    refreshOnResize: true,\r\n    zoomOnMouseWheel: true,\r\n  };\r\n  imageViewerType?: ImgViewerType = {\r\n    zoomInToolTip: 'Zoom in',\r\n    zoomOutToolTip: 'Zoom put',\r\n    rotateLeftToolTip: 'Rotate left',\r\n    rotateRightToolTip: 'Rotate right',\r\n    resetToolTip: 'Reset tools',\r\n    fullScreenToolTip: 'Full screen',\r\n    downloadToolTip: 'Download',\r\n  };\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy93ZWJBcHAvc3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nz-layout>\\r\\n  <nz-content class=\\\"kervi-app-initializing\\\">\\r\\n    <div nz-row>\\r\\n      <div nz-col nzSpan=\\\"12\\\" nzOffset=\\\"6\\\">\\r\\n        <form nz-form \\r\\n          [formGroup]=\\\"loginForm\\\" \\r\\n          (ngSubmit)=\\\"submitForm()\\\"\\r\\n        >\\r\\n            <nz-form-item>\\r\\n              <nz-form-control>\\r\\n                <nz-input-group [nzPrefix]=\\\"prefixUser\\\">\\r\\n                  <input formControlName=\\\"userName\\\" nz-input placeholder=\\\"Username\\\" />\\r\\n                </nz-input-group>\\r\\n                <nz-form-explain *ngIf=\\\"loginForm.get('userName')?.dirty && loginForm.get('userName')?.errors\\\"\\r\\n                  >Please input your username!</nz-form-explain\\r\\n                >\\r\\n              </nz-form-control>\\r\\n            </nz-form-item>\\r\\n            <nz-form-item>\\r\\n              <nz-form-control>\\r\\n                <nz-input-group [nzPrefix]=\\\"prefixLock\\\">\\r\\n                  <input formControlName=\\\"password\\\" nz-input type=\\\"password\\\" placeholder=\\\"Password\\\" />\\r\\n                </nz-input-group>\\r\\n                <nz-form-explain *ngIf=\\\"loginForm.get('password')?.dirty && loginForm.get('password')?.errors\\\"\\r\\n                  >Please input your Password!</nz-form-explain\\r\\n                >\\r\\n              </nz-form-control>\\r\\n            </nz-form-item>\\r\\n            <nz-form-item>\\r\\n              <nz-form-control>\\r\\n                <button nz-button nzType=\\\"primary\\\" [disabled]=\\\"!loginForm.valid\\\">Log in</button>\\r\\n                <nz-form-explain *ngIf=\\\"invalidCredentials\\\"\\r\\n                  >Invalid user name or password</nz-form-explain\\r\\n                >\\r\\n              </nz-form-control>\\r\\n            </nz-form-item>\\r\\n          </form>\\r\\n          <ng-template #prefixUser><i nz-icon type=\\\"user\\\"></i></ng-template>\\r\\n          <ng-template #prefixLock><i nz-icon type=\\\"lock\\\"></i></ng-template>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nz-content>\\r\\n</nz-layout>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { NGXKerviService } from 'ngx-kervi'\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  userName: AbstractControl;\r\n  password: AbstractControl;\r\n  invalidCredentials:boolean = false;\r\n  \r\n  \r\n  constructor(fb: FormBuilder, private kerviService:NGXKerviService) {\r\n    var self = this;\r\n    this.loginForm = fb.group({  \r\n    'userName':  ['', Validators.required],\r\n    'password':  ['', Validators.required]  \r\n    });\r\n    \r\n    this.userName = this.loginForm.controls['userName'];\r\n    this.password = this.loginForm.controls['password']; \r\n   }\r\n\r\n   submitForm(): void {\r\n     var self = this;\r\n     if (this.loginForm.valid){\r\n      console.log(\"fv\");\r\n      this.kerviService.authenticate(this.userName.value, this.password.value)\r\n      .then(function(){\r\n         console.log(\"login ok\");\r\n       }).catch(function(){\r\n         console.log(\"login error\");\r\n         self.invalidCredentials=true;\r\n       });\r\n     } else {\r\n       console.log(\"fve\");\r\n    //   // for (const i in this.loginForm.controls) {\r\n    //   //   this.loginForm.controls[i].markAsDirty();\r\n    //   //   this.loginForm.controls[i].updateValueAndValidity();\r\n    //   // }\r\n     }\r\n    \r\n  } \r\n  ngOnInit() {\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy93ZWJBcHAvc3JjL2FwcC9tZWRpYS9tZWRpYS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div [hidden]=\\\"!showImageViewer\\\">\\r\\n\\t<nz-picture-viewer (closeViewer)=\\\"closeViewer()\\\" (prevChange)='nextImage($event)' (nextChange)='nextImage($event)' #imageViewer></nz-picture-viewer>\\r\\n</div>\\r\\n<div [hidden]=\\\"showImageViewer\\\">\\r\\n\\t<div style=\\\"max-height: 80%;overflow-y: auto; \\\" nz-col nzSpan=\\\"8\\\">\\r\\n\\t\\t<nz-tree [nzData]=\\\"nodes\\\" [nzExpandedKeys]=\\\"defaultExpandedKeys\\\" nzAsyncData (nzClick)=\\\"nzEvent($event)\\\" (nzExpandChange)=\\\"nzEvent($event)\\\"> </nz-tree>\\r\\n\\t</div>\\r\\n\\t<div style=\\\"min-height:40px;max-height: 300px;overflow-y: auto; border-left: 1px solid black;\\\" nz-col nzSpan=\\\"16\\\">\\r\\n\\t\\t\\r\\n\\t\\t<nz-empty *ngIf=\\\"files.length==0\\\" nzNotFoundContent=\\\"No files in folder\\\"></nz-empty>\\r\\n\\t\\t<div (dblclick)=\\\"showImage(file.key)\\\"  style=\\\"display: inline-block;margin-left:5px; margin-bottom:5px;\\\" *ngFor=\\\"let file of files\\\" nzHoverable >\\r\\n\\t\\t\\t<img alt=\\\"example\\\" [attr.src]=\\\"'data:image/png;base64,' + file.thumb\\\" />\\r\\n\\t\\t</div>\\r\\n\\t\\t<!-- <nz-card style=\\\"display: inline-block;\\\" *ngFor=\\\"let file of files\\\" nzHoverable style=\\\"width:140px\\\" >\\r\\n\\t\\t\\t<img alt=\\\"example\\\" [attr.src]=\\\"'data:image/png;base64,' + file.data\\\" />\\r\\n\\t\\t\\t<ng-template #coverTemplate>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t</ng-template>\\r\\n\\t\\t</nz-card> -->\\r\\n\\t\\t\\r\\n\\t</div>\\r\\n</div>\\r\\n\"","// Copyright (c) 2019, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\r\nimport { KerviDirectoryComponent } from 'ngx-kervi';\r\nimport { NzFormatEmitEvent, NzTreeNodeOptions, NzTreeComponent } from 'ng-zorro-antd';\r\nimport { ImgViewerComponent } from '../image-viewer/image-viewer.component';\r\n\r\n@Component({\r\n  selector: 'app-media',\r\n  templateUrl: './media.component.html',\r\n  styleUrls: ['./media.component.css']\r\n})\r\nexport class MediaComponent extends KerviDirectoryComponent implements OnInit {\r\n  @ViewChild('nzTreeComponent') nzTreeComponent: NzTreeComponent;\r\n  @ViewChild('imageViewer') imageViewer: ImgViewerComponent;\r\n  @Input() files = [\r\n\r\n  ];\r\n  showImageViewer = false;\r\n  directoryFiles = {};\r\n\r\n\r\n  @Input() nodes: NzTreeNodeOptions[] = [\r\n    { title: 'root', key: '/' }\r\n  ];\r\n\r\n  defaultExpandedKeys = [];\r\n\r\n  constructor( ) {\r\n    super();\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  nzEvent(event: Required<NzFormatEmitEvent>): void {\r\n    console.log('trev', event);\r\n    const node = event.node;\r\n    if (event.eventName === 'click') {\r\n      this.files = [];\r\n      this.kerviService.GetDirectory(node.key).then( d => {\r\n        const files = d.files$.getValue();\r\n        for(const file of files) {\r\n          if (file.isFile){\r\n            this.kerviService.GetThumbnail(file.path).then( t =>{\r\n              this.files.push( { title: file.name, key: file.path, thumb: t});\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n    if (event.eventName === 'expand') {\r\n      if (node && node.getChildren().length === 0 && node.isExpanded) {\r\n        this.kerviService.GetDirectory(node.key).then( d => {\r\n          const files = d.files$.getValue();\r\n          const dirs = [];\r\n          for(const file of files) {\r\n            if (!file.isFile) {\r\n              dirs.push({ title: file.name, key: file.path, isLeaf: false});\r\n            }\r\n          }\r\n          node.addChildren(dirs);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  showImage(filePath) {\r\n    this.showImageViewer = true;\r\n    this.imageViewer.imgTotal = this.files.length;\r\n    this.kerviService.GetFile(filePath).then( f => {\r\n      this.imageViewer.images = ['data:image/png;base64,' + f];\r\n      this.imageViewer.showImg();\r\n    });\r\n  }\r\n\r\n  nextImage(event){\r\n    console.log(\"ni\", event);\r\n    const filePath = this.files[this.imageViewer.currentImgIndex-1].key;\r\n    this.kerviService.GetFile(filePath).then( f => {\r\n      this.imageViewer.images = ['data:image/png;base64,' + f];\r\n      this.imageViewer.showImg();\r\n    });\r\n  }\r\n\r\n  closeViewer(){\r\n    this.showImageViewer = false;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}