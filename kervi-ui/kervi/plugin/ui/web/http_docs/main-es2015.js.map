{"version":3,"sources":["./projects/webApp/src/app/app.module.ts","./projects/ngx-kervi/src/lib/ngx-kervi.service.ts","./projects/ngx-kervi/src/lib/ngx-kervi-template.service.ts","./projects/ngx-kervi/src/lib/app-injector.service.ts","./projects/ngx-kervi/src/lib/dashboard/kervi-dashboard.component.ts","./projects/ngx-kervi/src/lib/dashboard/kervi-dashboard-panel.component.ts","./projects/ngx-kervi/src/lib/dashboard/kervi-controller-pad.component.ts","./projects/ngx-kervi/src/lib/dashboard/kervi-widget.component.ts","./projects/ngx-kervi/src/lib/values/value.component.ts","./projects/ngx-kervi/src/lib/values/kervi-number-value.component.ts","./projects/ngx-kervi/src/lib/values/kervi-boolean-value.component.ts","./projects/ngx-kervi/src/lib/actions/kervi-action.component.ts","./projects/ngx-kervi/src/lib/camera/kervi-camera.component.ts","./projects/ngx-kervi/src/lib/values/kervi-color-value.component.ts","./projects/ngx-kervi/src/lib/values/kervi-datetime-value.component.ts","./projects/ngx-kervi/src/lib/values/kervi-string-value.component.ts","./projects/ngx-kervi/src/lib/user-log/user-log.component.ts","./projects/ngx-kervi/src/lib/files/kervi-directory.component.ts","./projects/ngx-kervi/src/lib/dashboard/app-health.component.ts","./projects/ngx-kervi/src/lib/ngx-kervi.component.ts","./projects/ngx-kervi/src/lib/pipes/textPipe.ts","./projects/ngx-kervi/src/lib/pipes/pipes.module.ts","./projects/ngx-kervi/src/lib/ngx-kervi.module.ts","./projects/ngx-kervi/src/public_api.ts","./projects/ngx-kervi/src/ngx-kervi.ts","./projects/webApp/src/app/dashboard/dashboard.component.ts","./projects/webApp/src/app/dashboard/dashboard.component.html","./projects/kervi-zorro/src/lib/kervi-zorro.service.ts","./projects/kervi-zorro/src/lib/ui-components/sparkline/sparkline.component.ts","./projects/kervi-zorro/src/lib/ui-components/sparkline/sparkline.component.html","./projects/kervi-zorro/src/lib/values/number-value/number-value.component.ts","./projects/kervi-zorro/src/lib/values/number-value/number-value.component.html","./projects/kervi-zorro/src/lib/ui-components/switch-button/switch-button.component.ts","./projects/kervi-zorro/src/lib/ui-components/switch-button/switch-button.component.html","./projects/kervi-zorro/src/lib/ui-components/button/button.component.ts","./projects/kervi-zorro/src/lib/ui-components/button/button.component.html","./projects/kervi-zorro/src/lib/values/boolean-value/boolean-value.component.ts","./projects/kervi-zorro/src/lib/values/boolean-value/boolean-value.component.html","./projects/kervi-zorro/src/lib/values/string-value/string-value.component.ts","./projects/kervi-zorro/src/lib/values/string-value/string-value.component.html","./projects/kervi-zorro/src/lib/ui-components/color/color.component.ts","./projects/kervi-zorro/src/lib/ui-components/color/color.component.html","./projects/kervi-zorro/src/lib/values/color-value/color-value.component.ts","./projects/kervi-zorro/src/lib/values/color-value/color-value.component.html","./projects/kervi-zorro/src/lib/ui-components/datetimepicker/datetimepicker.component.ts","./projects/kervi-zorro/src/lib/ui-components/datetimepicker/datetimepicker.component.html","./projects/kervi-zorro/src/lib/values/datetime-value/datetime-value.component.ts","./projects/kervi-zorro/src/lib/values/datetime-value/datetime-value.component.html","./projects/kervi-zorro/src/lib/values/kervi-value/kervi-value.component.ts","./projects/kervi-zorro/src/lib/values/kervi-value/kervi-value.component.html","./projects/kervi-zorro/src/lib/action/action.component.ts","./projects/kervi-zorro/src/lib/action/action.component.html","./projects/kervi-zorro/src/lib/ui-components/mpeg-viewer/mpeg-viewer.component.ts","./projects/kervi-zorro/src/lib/ui-components/mpeg-viewer/mpeg-viewer.component.html","./projects/kervi-zorro/src/lib/nipple-pad/nipple-pad.component.ts","./projects/kervi-zorro/src/lib/nipple-pad/nipple-pad.component.html","./projects/kervi-zorro/src/lib/cam-viewer/cam-viewer.component.html","./projects/kervi-zorro/src/lib/cam-viewer/cam-viewer.component.ts","./projects/kervi-zorro/src/lib/ui-components/gauge/gauge.component.ts","./projects/kervi-zorro/src/lib/ui-components/gauge/gauge.component.html","./projects/kervi-zorro/src/lib/ui-components/chart/chart.component.ts","./projects/kervi-zorro/src/lib/ui-components/chart/chart.component.html","./projects/kervi-zorro/src/lib/widget/widget.component.html","./projects/kervi-zorro/src/lib/widget/widget.component.ts","./projects/kervi-zorro/src/lib/log/user-log/user-log.component.ts","./projects/kervi-zorro/src/lib/log/user-log/user-log.component.html","./projects/kervi-zorro/src/lib/app-health/app-health.component.ts","./projects/kervi-zorro/src/lib/app-health/app-health.component.html","./projects/kervi-zorro/src/lib/dashboard-panel/dashboard-panel.component.html","./projects/kervi-zorro/src/lib/dashboard-panel/dashboard-panel.component.ts","./projects/kervi-zorro/src/lib/ui-components/slider/slider.component.ts","./projects/kervi-zorro/src/lib/ui-components/icons/icons.component.ts","./projects/kervi-zorro/src/lib/ui-components/icons/icons.component.html","./projects/kervi-zorro/src/lib/ui-components/ui-components.module.ts","./projects/kervi-zorro/src/lib/values/values.module.ts","./projects/kervi-zorro/src/lib/controller-pad/controller-pad.component.ts","./projects/kervi-zorro/src/lib/controller-pad/controller-pad.component.html","./projects/kervi-zorro/src/lib/log/messages/messages.component.ts","./projects/kervi-zorro/src/lib/log/messages/messages.component.html","./projects/kervi-zorro/src/lib/log/message-button/message-button.component.ts","./projects/kervi-zorro/src/lib/log/message-button/message-button.component.html","./projects/kervi-zorro/src/lib/kervi-zorro.module.ts","./projects/kervi-zorro/src/lib/media/media.component.ts","./projects/kervi-zorro/src/public_api.ts","./projects/kervi-zorro/src/kervi-zorro.ts","./projects/webApp/src/app/media/media.component.ts","./projects/webApp/src/app/media/media.component.html","./projects/webApp/src/main.ts","./projects/webApp/src/app/connect/connect.component.ts","./projects/webApp/src/app/connect/connect.component.html","./projects/webApp/src/app/image-viewer/image-viewer.component.ts","./projects/webApp/src/app/image-viewer/image-viewer.component.html","./projects/webApp/src/app/login/login.component.ts","./projects/webApp/src/app/login/login.component.html","./projects/webApp/src/environments/environment.ts","./projects/webApp/src/app/image-viewer/image-viewer.config.ts","./projects/kervi-js/src/lib/spine/kervi-spinebase.ts","./projects/kervi-js/src/lib/spine/kervi-ws.ts","./projects/kervi-js/src/lib/spine/kervi-rmq.ts","./projects/kervi-js/src/lib/models/IComponent.model.ts","./projects/kervi-js/src/lib/models/KerviValues.model.ts","./projects/kervi-js/src/lib/models/ComponentRef.ts","./projects/kervi-js/src/lib/models/controller.model.ts","./projects/kervi-js/src/lib/models/dashboard.model.ts","./projects/kervi-js/src/lib/models/action.model.ts","./projects/kervi-js/src/lib/models/factory.ts","./projects/kervi-js/src/lib/models/file.model.ts","./projects/kervi-js/src/lib/models/stream.model.ts","./projects/kervi-js/src/lib/kervi-js.service.ts","./projects/kervi-js/src/lib/kervi-js.component.ts","./projects/kervi-js/src/lib/kervi-js.module.ts","./projects/kervi-js/src/public_api.ts","./projects/kervi-js/src/kervi-js.ts","./projects/webApp/src/app/app.component.ts","./projects/webApp/src/app/app.component.html","./$_lazy_route_resource lazy namespace object"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵelement","i0.ɵɵelementContainerStart","i0.ɵɵlistener","i0.ɵɵelementContainerEnd","i0.ɵɵadvance","i0.ɵɵproperty","i0.ɵɵpropertyInterpolate","i0.ɵɵclassMapInterpolate1","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","i0.ɵɵstyleProp","i0.ɵɵtextInterpolate1","i0.ɵɵelementContainer","ColorComponent","DateTimeComponent","i0.ɵɵattribute","nipplejs.create","ActionComponent","KerviValues.BooleanValue","KerviValues.NumberValue","KerviValues.StringValue","KerviValues.SelectValue","KerviValues.DateTimeValue","KerviValues.ColorValue"],"mappings":"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","file":"main-es2015.js","sourcesContent":["\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\n\r\nimport { NgxKerviModule } from 'ngx-kervi';\r\nimport { NGXKerviPipesModule } from 'ngx-kervi'\r\nimport { KerviZorroModule  } from 'kervi-zorro'\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n\r\nimport { NgZorroAntdModule, NZ_I18N, NZ_ICONS, en_US } from 'ng-zorro-antd';\r\nimport { IconDefinition } from '@ant-design/icons-angular';\r\nimport * as AllIcons from '@ant-design/icons-angular/icons'\r\nimport { registerLocaleData } from '@angular/common';\r\nimport en from '@angular/common/locales/en';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ConnectComponent } from './connect/connect.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { MediaComponent } from './media/media.component' ;\r\nimport { ImgViewerComponent } from './image-viewer/image-viewer.component'\r\n\r\n\r\nregisterLocaleData(en);\r\n\r\nconst antDesignIcons = AllIcons as {\r\n  [key: string]: IconDefinition;\r\n};\r\nconst icons: IconDefinition[] = Object.keys(antDesignIcons).map(key => antDesignIcons[key])\r\n\r\n\r\nconst ROUTES: Routes = [\r\n\r\n  { path: 'connect', component: ConnectComponent },\r\n  { path: 'authenticate', component: LoginComponent },\r\n  { path: 'dashboard/:name', component: DashboardComponent },\r\n  { path: 'media', component: MediaComponent },\r\n  {\r\n    path: '',\r\n    redirectTo: '',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    ConnectComponent,\r\n    DashboardComponent,\r\n    MediaComponent,\r\n    ImgViewerComponent\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    NgxKerviModule,\r\n    NGXKerviPipesModule,\r\n    KerviZorroModule,\r\n    FlexLayoutModule,\r\n    NgZorroAntdModule,\r\n    //NgxKerviComponentsModule,\r\n    RouterModule.forRoot(ROUTES)\r\n  ],\r\n  providers:[\r\n    { provide: NZ_I18N, useValue: en_US },\r\n    { provide: NZ_ICONS, useValue: icons }\r\n  ],\r\n  \r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { KerviBaseService } from \"kervi-js\"\r\n\r\n@Injectable()\r\nexport class NGXKerviService extends KerviBaseService{\r\n\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class KerviTemplateService {\r\n\r\n    private remUnit:number=20;\r\n    constructor() \r\n  { \r\n    console.log(\"kervi service constructor\");\r\n        //console.log(\"ctemplate\");\r\n        this.remUnit = parseFloat(getComputedStyle(document.documentElement).fontSize)\r\n    }\r\n    \r\n    public convertRemToPixels(rem) {    \r\n        return rem * this.remUnit;\r\n    }\r\n\r\n    public getSizeValue(value){\r\n        if (value==null)\r\n            return \"100%\"\r\n        else if (value===\"\")\r\n            return \"100%\"\r\n        else if (isNaN(value)){\r\n            return value;\r\n        } else\r\n            if (value>0)\r\n                return value + \"%\";\r\n            else\r\n                return \"100%\";\r\n    }\r\n\r\n    public  getPixels(value, containerSize){\r\n        //console.log(\"gps\", value, isNaN(value));\r\n        if (isNaN(value)){\r\n          if (value.lastIndexOf(\"px\")>-1){\r\n            var px = parseFloat(value);\r\n            return px;\r\n          } else if (value.lastIndexOf(\"rem\")>-1){\r\n            var rem = parseFloat(value);\r\n            var px = this.convertRemToPixels(rem);\r\n            console.log(\"remx\",rem, px);\r\n            return px;\r\n          } else if (value.lastIndexOf(\"%\")>-1){\r\n            var percentage = parseFloat(value)/100.0;\r\n            return containerSize * percentage;\r\n          }\r\n        } else \r\n          return value;\r\n      }\r\n\r\n    private getStyleRuleValue(style, selector, sheet) {\r\n        var sheets = sheet!=null ? [sheet] : document.styleSheets;\r\n        for (var i = 0, l = sheets.length; i < l; i++) {\r\n            \r\n            var sheet = sheets[i];\r\n            if( !sheet.cssRules ) { continue; }\r\n            for (var j = 0, k = sheet.cssRules.length; j < k; j++) {\r\n                var rule = sheet.cssRules[j];\r\n                if (rule.selectorText && rule.selectorText.split(',').indexOf(selector) !== -1) {\r\n                    return rule.style[style];\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public makeId()\r\n    {\r\n        var text = \"\";\r\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n        for( var i=0; i < 5; i++ )\r\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n        return text;\r\n    }\r\n\r\n    public getColor(colorName:string,cssClass:string){\r\n        var styleValue=this.getStyleRuleValue(colorName,cssClass,null);\r\n        //console.log(\"sv\", cssClass,styleValue);\r\n        return styleValue;\r\n    }\r\n}","import { Injector } from '@angular/core';\r\nexport let AppInjector: Injector;\r\nexport function setAppInjector(injector: Injector) {\r\n    if (AppInjector) {\r\n        // Should not happen\r\n        console.error('Programming error: AppInjector was already set');\r\n    }\r\n    else {\r\n        AppInjector = injector;\r\n    }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Dashboard, DashboardSizes, NumberValue } from 'kervi-js';\r\nimport { NGXKerviService } from '../ngx-kervi.service';\r\nimport { AppInjector } from '../app-injector.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\n@Component({\r\n  selector: 'kervi-dashboard',\r\n  template: ''\r\n})\r\nexport class KerviDashboardComponent {\r\n  protected dashboardId: string = null;\r\n  public dashboard: Dashboard = null;\r\n  protected kerviService: NGXKerviService;\r\n  protected dashboards: Dashboard[] = null;\r\n  protected dashboardSizes: DashboardSizes = null;\r\n  public isAppEmpty = true;\r\n  public showMenu = false;\r\n  public dashboardPanelsHidden = false;\r\n  public showPanelController = false;\r\n  @Input() public cameraId: string = null;\r\n  @Input() public cameraParameters: any = null;\r\n  public cameraId$: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n  public authenticated: Boolean = false;\r\n  private anonymous: Boolean = true;\r\n\r\n  public showLeftPad: boolean = false;\r\n  public leftPadXValue: NumberValue = null;\r\n  public leftPadYValue: NumberValue = null;\r\n  public autoCenterLeftPad: boolean = false;\r\n\r\n  public showRightPad: boolean = false;\r\n  public rightPadXValue: NumberValue = null;\r\n  public rightPadYValue: NumberValue = null;\r\n  public autoCenterRightPad: boolean = false;\r\n\r\n  public inFullScreen: boolean = false;\r\n  constructor() {\r\n    this.kerviService = AppInjector.get(NGXKerviService);\r\n    var self = this;\r\n    this.kerviService.componentsChanged$.subscribe(function() {\r\n      self.loadDashboard(self.dashboardId);\r\n    });\r\n   }\r\n\r\n  protected logoff(event){\r\n    this.kerviService.logoff();\r\n    event.stopPropagation();\r\n  }\r\n\r\n  protected loadDashboard(dashboardId: string) {\r\n    this.dashboardId = dashboardId;\r\n    this.dashboard = this.kerviService.getComponent(dashboardId, 'dashboard') as Dashboard;\r\n    this.anonymous = this.kerviService.isAnonymous();\r\n    this.isAppEmpty = this.kerviService.isAppEmpty();\r\n    this.authenticated = this.kerviService.doAuthenticate;\r\n    if (this.dashboard){\r\n      this.dashboards = this.kerviService.getComponentsByType('dashboard');\r\n      this.showMenu = (this.dashboards.length > 1 || this.kerviService.doAuthenticate);\r\n      this.showPanelController=false;\r\n      this.cameraId = null;\r\n      this.cameraParameters = null;\r\n      this.showLeftPad = false;\r\n      this.showRightPad = false;\r\n      this.dashboardPanelsHidden=false;\r\n      if (this.dashboard.backgroundPanel){\r\n        if (this.dashboard.backgroundPanel.components.length > 0)\r\n        {\r\n          this.dashboardPanelsHidden=true;\r\n          this.showPanelController=true;\r\n          this.cameraId=this.dashboard.backgroundPanel.components[0].component.id;\r\n          this.cameraId$.next(this.cameraId);\r\n          this.cameraParameters=this.dashboard.backgroundPanel.components[0].parameters;\r\n          console.log(\"db set cam\", this.cameraId, this.cameraParameters);\r\n        } \r\n      }\r\n      if (this.dashboard.LeftPadXPanel && this.dashboard.LeftPadXPanel.components.length || this.dashboard.LeftPadYPanel && this.dashboard.LeftPadYPanel.components.length){\r\n        this.showLeftPad = true;\r\n        if (this.dashboard.LeftPadXPanel.components.length){\r\n          this.leftPadXValue=this.dashboard.LeftPadXPanel.components[0].component as NumberValue;\r\n          if (this.dashboard.LeftPadXPanel.components[0].parameters.padAutoCenter)\r\n            this.autoCenterLeftPad = true;\r\n        }\r\n        if (this.dashboard.LeftPadYPanel.components.length){\r\n          this.leftPadYValue=this.dashboard.LeftPadYPanel.components[0].component as NumberValue;\r\n          if (this.dashboard.LeftPadXPanel.components[0].parameters.padAutoCenter)\r\n            this.autoCenterLeftPad = true;\r\n        }\r\n      }\r\n\r\n      if (this.dashboard.RightPadXPanel && this.dashboard.RightPadXPanel.components.length || this.dashboard.RightPadYPanel && this.dashboard.RightPadYPanel.components.length){\r\n        this.showRightPad = true;\r\n        if (this.dashboard.RightPadXPanel.components.length){\r\n          this.rightPadXValue=this.dashboard.RightPadXPanel.components[0].component as NumberValue;\r\n          if (this.dashboard.LeftPadXPanel.components[0].parameters.padAutoCenter)\r\n            this.autoCenterRightPad = true;\r\n        }\r\n        if (this.dashboard.RightPadYPanel.components.length){\r\n          this.rightPadYValue=this.dashboard.RightPadYPanel.components[0].component as NumberValue;\r\n          if (this.dashboard.RightPadXPanel.components[0].parameters.padAutoCenter)\r\n            this.autoCenterRightPad = true;\r\n        }\r\n      }\r\n      console.log(\"load db\", dashboardId, this.dashboard, this);\r\n    }\r\n  }\r\n\r\n  toggleFullScreen() {\r\n    var doc: any;\r\n    doc = document;\r\n    var el = doc.body;\r\n\r\n    // Supports most browsers and their versions.\r\n    var requestMethod = el.requestFullScreen || el.webkitRequestFullScreen \r\n    || el.mozRequestFullScreen || el.msRequestFullScreen;\r\n\r\n\r\n    if ((doc.fullscreenElement && doc.fullScreenElement !== null))   {\r\n      console.log(\"in full screen\");\r\n      doc.exitFullscreen();\r\n      this.inFullScreen = false;\r\n    } else if (requestMethod) {\r\n\r\n      // Native full screen.\r\n      requestMethod.call(el);\r\n      this.inFullScreen = true;\r\n    }\r\n  }\r\n\r\n  toggleFullScreenx() {\r\n    var doc:any;\r\n    doc = document;\r\n    \r\n    console.log(\"fs\", this.inFullScreen, doc.documentElement.requestFullScreen);\r\n    var doc:any;\r\n    doc = document;\r\n    if ((doc.fullScreenElement && doc.fullScreenElement !== null))     \r\n     /*(!doc.mozFullScreen && !document.webkitIsFullScreen))*/ {\r\n       this.inFullScreen = true;\r\n      if (doc.documentElement.requestFullScreen) {  \r\n        doc.documentElement.requestFullScreen();  \r\n      } else if (doc.documentElement.mozRequestFullScreen) {  \r\n        doc.documentElement.mozRequestFullScreen();  \r\n      }// } else if (document.documentElement.webkitRequestFullScreen) {  \r\n      //   doc.documentElement.webkitRequestFullScreen();  \r\n      // }  \r\n    } else {  \r\n      this.inFullScreen=false;\r\n      if (doc.cancelFullScreen) {  \r\n        doc.cancelFullScreen();  \r\n      } else if (doc.mozCancelFullScreen) {  \r\n        doc.mozCancelFullScreen();  \r\n      }// } else if (document.webkitCancelFullScreen) {  \r\n      //   doc.webkitCancelFullScreen();  \r\n      // }  \r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { DashboardSizes, DashboardPanel } from 'kervi-js';\r\nimport { NGXKerviService } from '../ngx-kervi.service';\r\nimport { KerviTemplateService } from '../ngx-kervi-template.service';\r\nimport { AppInjector } from '../app-injector.service';\r\n\r\n@Component({\r\n  selector: 'kervi-dashboard-panel-base',\r\n  template: ''\r\n})\r\nexport class KerviDashboardPanelComponent {\r\n  @Input() dashboardSizes: DashboardSizes;\r\n  @Input() panel:DashboardPanel=null;\r\n  @Input() inline:boolean = false;\r\n  @Input() inGroup:boolean = false;\r\n  @Input() bodyOnly:boolean = false;\r\n  \r\n  \r\n  public width:string = \"\";\r\n  public showHeader:boolean = false;\r\n  public expanded:boolean = false;\r\n  public title:string = null;\r\n  public bodyComponents:any[]=[];\r\n  public headerComponents: any[] = [];\r\n  public footerComponents: any[] = [];\r\n  //messages: DashboardMessageModel[] = [];\r\n  \r\n  //panelComponents:IComponent[] = []\r\n  protected templateService: KerviTemplateService = null;\r\n  protected kerviService:NGXKerviService = null;\r\n  constructor (){\r\n    this.templateService = AppInjector.get(KerviTemplateService);    \r\n    this.kerviService = AppInjector.get(NGXKerviService);  \r\n  }\r\n\r\n    calcWidth(panel:DashboardPanel, inGroup){\r\n        if (panel.type==\"group\"){\r\n            if (panel.parameters.width==null || panel.parameters.width==\"0\")\r\n                return \"100%\"\r\n            else\r\n                return this.templateService.getSizeValue(panel.parameters.width);\r\n        } else\r\n            return inGroup ? \"\" : this.templateService.getSizeValue(panel.parameters.width);\r\n    }\r\n\r\n    showPanelHeader(panel:DashboardPanel){\r\n        var hasHeaderComponents = false\r\n        for( let component of this.panel.components){\r\n            if (component.parameters.linkToHeader)\r\n                hasHeaderComponents = true\r\n        }\r\n        \r\n        return (panel.parameters.title != null && panel.parameters.title.length>0) || hasHeaderComponents\r\n        \r\n    }\r\n\r\n    ngOnInitPanel() {\r\n        var self=this;\r\n        \r\n        this.title = this.panel.parameters.title;\r\n        \r\n        for( let component of this.panel.components){\r\n            if (component.parameters.linkToHeader)\r\n                this.headerComponents.push(component)\r\n            else\r\n                this.bodyComponents.push(component)\r\n        }\r\n        \r\n        this.showHeader = (this.panel.parameters.title != null && this.panel.parameters.title.length>0) || (this.headerComponents.length > 0)\r\n        \r\n\r\n        if (this.panel.type==\"group\"){\r\n            if (this.panel.parameters.width==null || this.panel.parameters.width==\"0\" || this.panel.parameters.width==\"\")\r\n                this.width = \"100%\"\r\n            else\r\n                this.width = this.templateService.getSizeValue(this.panel.parameters.width);\r\n        } else\r\n            //this.width = this.inGroup ? \"100%\" : this.templateService.getSizeValue(this.panel.parameters.width);\r\n            this.width = this.templateService.getSizeValue(this.panel.parameters.width);\r\n    }\r\n  }","import { Component, OnInit, Input } from '@angular/core';\r\nimport { DashboardSizes } from 'kervi-js';\r\n\r\n@Component({\r\n  selector: 'kervi-controller-pad-base',\r\n  template: ''\r\n})\r\nexport class KerviControllerPadComponent implements OnInit {\r\n  @Input() dashboardSizes: DashboardSizes;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, Input, ElementRef } from '@angular/core';\r\nimport { IComponent, DashboardPanel, DashboardSizes, Controller } from 'kervi-js';\r\nimport { NGXKerviService } from '../ngx-kervi.service';\r\nimport { AppInjector } from '../app-injector.service';\r\n@Component({\r\n\tselector: 'kervi-widget-base',\r\n\ttemplate: ''\r\n})\r\nexport class KerviWidgetComponent   {\r\n\t@Input() set componentId(v:string){\r\n\t\tthis.component = this.kerviService.getComponent(this.componentId);\r\n\t}\r\n\t@Input() component:IComponent = null;\r\n\t@Input() dashboardPanel: DashboardPanel;\r\n\t@Input() linkParameters:any;\r\n\t@Input() dashboardSizes:DashboardSizes = new DashboardSizes();\r\n    @Input() inline:boolean;\r\n\tpublic widgetType:string=\"value\";\r\n\t\r\n\t\r\n\tprivate kerviService: NGXKerviService;\r\n\tprivate elementRef: ElementRef;\r\n\tconstructor() { \r\n\t\t//console.log(\"cnio\",this);\r\n\t\tthis.kerviService = AppInjector.get(NGXKerviService);  \r\n\t}\r\n\r\n\tngOnInitWidget() {\r\n\t\t\t\r\n\t\tif (!this.linkParameters)\r\n              this.linkParameters = this.component.ui;\r\n    \r\n        if (!this.inline && this.linkParameters.inline){\r\n            this.inline = true;\r\n\t\t}\r\n\t\t//console.log(\"widget\", this.component, this.linkParameters);\r\n\t\tif (this.component.componentType == \"controller\"){\r\n\t\t\tvar controller = this.component as Controller;\r\n\t\t\tconsole.log(\"widget ctrl\", controller);\r\n\t\t\tif (controller.type == \"camera\")\r\n\t\t\t\tthis.widgetType = \"camera\"\r\n\t\t\t\t\r\n\t\t} else if (this.linkParameters.type){\r\n\t\t\tif (this.linkParameters.type.indexOf(\"gauge\") > -1 ){\r\n\t\t\t\tthis.widgetType = \"gauge\";\r\n\r\n\t\t\t} else if (this.linkParameters.type==\"chart\"){\r\n\t\t\t\tthis.widgetType=\"chart\"\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, Input, HostListener } from '@angular/core';\r\nimport { KerviValue, DashboardPanel, DashboardSizes } from 'kervi-js';\r\nimport { NGXKerviService } from '../ngx-kervi.service';\r\nimport { AppInjector } from '../app-injector.service';\r\n@Component({\r\n\tselector: 'kervi-value-base',\r\n\ttemplate: ''\r\n})\r\nexport class KerviValueComponent<T extends KerviValue>   {\r\n\t@Input() set valueId(v:string){\r\n\t\tthis.value = this.kerviService.getComponent(this.valueId) as T;\r\n\t}\r\n\t@Input() value:T = null;\r\n\t\r\n\t@Input() linkParameters:any;\r\n\t@Input() dashboardSizes:DashboardSizes = new DashboardSizes();\r\n\t@Input() inline:boolean;\r\n\tprotected kerviService: NGXKerviService;\r\n\tconstructor() { \r\n\t\tthis.kerviService = AppInjector.get(NGXKerviService);  \r\n\t}\r\n\r\n\tngOnInitValue() {\r\n\t\tif (!this.linkParameters)\r\n      \t\tthis.linkParameters = this.value.ui;\r\n\t}\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component } from '@angular/core';\r\nimport { NumberValue } from 'kervi-js';\r\nimport { KerviValueComponent } from './value.component'\r\n\r\n@Component({\r\n\tselector: 'kervi-value-number-base',\r\n\ttemplate: ''\r\n})\r\nexport class KerviNumberComponent extends KerviValueComponent<NumberValue> {\r\n\tpublic numberFormat = \"1.2-2\";\r\n\tpublic displayValue:number = 0;\r\n\tpublic displayUnit:string = \"\";\r\n\tpublic displayType:string=\"\";\r\n\tpublic currentIcon:string=null;\r\n\t\r\n\tconstructor(){ \r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic setKerviValue(value){\r\n\t\tthis.value.set(value);\r\n\t}\r\n\r\n\tngOnInitNumber() {\r\n\t\tthis.ngOnInitValue();\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tthis.numberFormat = this.linkParameters.minIntegerDigits + \".\" + this.linkParameters.minFractionDigits + \"-\" + this.linkParameters.maxFractionDigits\r\n\t\tif (!this.linkParameters.valueIcon)\r\n\t\t\tthis.currentIcon = null;\r\n\t\telse if (typeof(this.linkParameters.valueIcon) == \"string\" )\r\n\t\t\tthis.currentIcon = this.linkParameters.valueIcon;\r\n\t\telse {\r\n\t\t\tthis.value.value$.subscribe(function(v){\r\n\t\t\t\tfor(let iconSection of self.linkParameters.valueIcon){\r\n\t\t\t\t\tif (v >= iconSection.range[0] && v <= iconSection.range[1]){\r\n\t\t\t\t\t\tself.currentIcon = iconSection.icon;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\t\t\r\n\r\n\t\tif (!this.inline && this.linkParameters.inline){\r\n\t\t\tthis.inline = true;\r\n\t\t}else if (!this.inline && this.linkParameters.size > 0)\r\n\t\t{\r\n\t\t\tthis.inline = true;\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component } from '@angular/core';\r\nimport { BooleanValue } from 'kervi-js';\r\nimport { KerviValueComponent } from './value.component'\r\n\r\n@Component({\r\n\tselector: 'kervi-value-boolean-base',\r\n\ttemplate: ''\r\n})\r\nexport class KerviBooleanComponent extends KerviValueComponent<BooleanValue> {\r\n\tpublic displayType:string=\"switch\";\r\n\t\r\n\tconstructor(){ \r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic setKerviValue(value){\r\n\t\tthis.value.set(value);\r\n\t}\r\n\r\n\tngOnInitBoolean() {\r\n\t\tthis.ngOnInitValue();\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tif (this.linkParameters.type){\r\n\t\t\tthis.displayType = this.linkParameters.type\r\n\t\t}\r\n\t\t\r\n\t\tif (!this.inline && this.linkParameters.inline){\r\n\t\t\tthis.inline = true;\r\n\t\t} else if (!this.inline && this.linkParameters.size > 0)\r\n\t\t{\r\n\t\t\tthis.inline = true;\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, Input } from '@angular/core';\r\nimport { Action } from 'kervi-js';\r\nimport { DashboardSizes  } from 'kervi-js';\r\nimport { NGXKerviService } from '../ngx-kervi.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { AppInjector } from '../app-injector.service';\r\n\r\n@Component({\r\n  selector: 'kervi-action-base',\r\n  template: '',\r\n  styleUrls: [],\r\n})\r\nexport class KerviActionComponent {\r\n    @Input() action: Action = null;\r\n    @Input() linkParameters: any = null;\r\n    @Input() inline = false;\r\n    @Input() dashboardSizes:DashboardSizes = new DashboardSizes();\r\n    public state: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    protected kerviService:NGXKerviService;\r\n\r\n    public displayType = 'switch';\r\n    constructor() {\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n\r\n    ngOnInitAction() {\r\n        var self = this;\r\n        if (!this.linkParameters)\r\n            this.linkParameters = this.action.ui;\r\n\r\n        if (this.linkParameters.displayType){\r\n            this.displayType = this.linkParameters.displayType;\r\n        }\r\n\r\n        if (!this.inline && this.linkParameters.inline){\r\n            this.inline = true;\r\n        }\r\n\r\n        self.state.next(this.action.running$.value);\r\n        this.action.running$.subscribe(function(v){\r\n            console.log(\"ar\", self.action.id, v)\r\n            self.state.next(v);\r\n        })\r\n    }\r\n\r\n    public setActionState(value){\r\n        if (value)\r\n            this.action.run(this.linkParameters.actionParameters);\r\n        else\r\n            this.action.interrupt(this.linkParameters.interruptParameters)\r\n    }\r\n}","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, Input } from '@angular/core';\r\nimport { Controller, NumberValue } from 'kervi-js';\r\nimport { DashboardSizes  } from 'kervi-js';\r\nimport { NGXKerviService } from '../ngx-kervi.service';\r\nimport { AppInjector } from '../app-injector.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'kervi-camera-base',\r\n  template: '',\r\n  styleUrls: [],\r\n})\r\nexport class KerviCameraComponent {\r\n    @Input() streamObservers: Controller[] = [];\r\n    @Input() public selectedSource: string;\r\n    private cam: Controller;\r\n\r\n    @Input() set cameraId(id: string) {\r\n        console.log('setcamid', id);\r\n\r\n        this.camera = this.kerviService.getComponent(id) as Controller;\r\n    }\r\n    @Input() set camera(v: Controller) {\r\n        console.log('setcam', v);\r\n\r\n        this.cam = v;\r\n        if (v){\r\n            for (let i of v.outputs) {\r\n                if (i.id.endsWith('.pan')) {\r\n                    this.pan = i as NumberValue;\r\n                } else if (i.id.endsWith('.tilt')) {\r\n                    this.tilt = i as NumberValue;\r\n                }\r\n            }\r\n            this.cameraType = v.ui.type;\r\n            if (this.cameraType === 'frame' ) {\r\n                if (v.ui.source) {\r\n                    this.cameraSource = this.cam.id;\r\n                }\r\n                this.cameraSource = this.cam.id;\r\n            }\r\n            this.updateStreamObservers();\r\n        }\r\n    }\r\n\r\n    get camera() { return this.cam; }\r\n    @Input() linkParameters: any = null;\r\n    @Input() inline = false;\r\n    @Input() dashboardSizes = new DashboardSizes();\r\n    @Input() isBackground = false;\r\n\r\n    protected kerviService: NGXKerviService;\r\n    public pan: NumberValue;\r\n    public tilt: NumberValue;\r\n    public cameraType: string;\r\n    public cameraSource: string;\r\n    constructor() {\r\n        const self = this;\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n\r\n    updateStreamObservers() {\r\n        const streamObservers = [];\r\n        const controllers = this.kerviService.getComponentsByType('controller');\r\n        for (let controller of controllers) {\r\n            if (controller.type === 'stream_observer') {\r\n                if (controller.ui.sourceStream === this.cameraSource) {\r\n                    streamObservers.push(controller);\r\n                }\r\n            }\r\n        }\r\n        this.streamObservers = streamObservers;\r\n        if (this.selectedSource !== this.cameraSource){\r\n            this.selectedSource = this.cameraSource;\r\n        }\r\n    }\r\n\r\n    public setPan(v) {\r\n        this.pan.set(v);\r\n    }\r\n\r\n    public setTilt(v) {\r\n        this.tilt.set(v);\r\n    }\r\n\r\n    ngOnInitCamera() {\r\n        console.log('ngi cam', this.camera.id);\r\n        const self = this;\r\n        if (!this.linkParameters) {\r\n              this.linkParameters = this.camera.ui;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        this.kerviService.componentsChanged$.subscribe(function() {\r\n            self.updateStreamObservers();\r\n        });\r\n        this.updateStreamObservers();\r\n        this.selectedSource = this.cameraSource;\r\n    }\r\n\r\n    changeSource(source: string) {\r\n        console.log('cs', source);\r\n        this.selectedSource = source;\r\n      }\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component } from '@angular/core';\r\nimport { ColorValue } from 'kervi-js';\r\nimport { KerviValueComponent } from './value.component'\r\n\r\n@Component({\r\n\tselector: 'kervi-value-color-base',\r\n\ttemplate: ''\r\n})\r\nexport class KerviColorComponent extends KerviValueComponent<ColorValue> {\r\n\tpublic displayType:string=\"button\";\r\n\t\r\n\tconstructor(){ \r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic setKerviValue(value){\r\n\t\tthis.value.set(value);\r\n\t}\r\n\r\n\tngOnInitColor() {\r\n\t\tthis.ngOnInitValue();\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tif (this.linkParameters.type){\r\n\t\t\tthis.displayType = this.linkParameters.type\r\n\t\t}\r\n\t\t\r\n\t\tif (!this.inline && this.linkParameters.inline){\r\n\t\t\tthis.inline = true;\r\n\t\t} else if (!this.inline && this.linkParameters.size > 0)\r\n\t\t{\r\n\t\t\tthis.inline = true;\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component } from '@angular/core';\r\nimport { DateTimeValue } from 'kervi-js';\r\nimport { KerviValueComponent } from './value.component'\r\n\r\n@Component({\r\n\tselector: 'kervi-value-datetime-base',\r\n\ttemplate: ''\r\n})\r\nexport class KerviDateTimeComponent extends KerviValueComponent<DateTimeValue> {\r\n\tpublic displayType:string=\"datetime\";\r\n\tpublic dateTimeFormat:string;\r\n\tconstructor(){ \r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\r\n\tpublic setKerviValue(value){\r\n\t\tthis.value.set(value);\r\n\t}\r\n\r\n\tpublic ngOnInitDateTime() {\r\n\t\tthis.ngOnInitValue();\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tif (this.linkParameters.type){\r\n\t\t\tthis.displayType = this.linkParameters.type\r\n\t\t}\r\n\t\t\r\n\t\tif (!this.inline && this.linkParameters.inline){\r\n\t\t\tthis.inline = true;\r\n\t\t}\r\n\r\n\t\tif (self.linkParameters.type==\"time\")\r\n        \tthis.dateTimeFormat = this.kerviService.application$.value.display.unit_system.datetime.time;\r\n      \telse if (self.linkParameters.type==\"date\")\r\n        \tthis.dateTimeFormat = self.kerviService.application$.value.display.unit_system.datetime.date;\r\n      \telse\r\n        \tthis.dateTimeFormat = this.kerviService.application$.value.display.unit_system.datetime.datetime;\r\n      \r\n\t}\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component } from '@angular/core';\r\nimport { StringValue } from 'kervi-js';\r\nimport { KerviValueComponent } from './value.component'\r\n\r\n@Component({\r\n\tselector: 'kervi-value-string-base',\r\n\ttemplate: ''\r\n})\r\nexport class KerviStringComponent extends KerviValueComponent<StringValue> {\r\n\tpublic displayType:string=\"\";\r\n\t\r\n\tconstructor(){ \r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic setKerviValue(value){\r\n\t\tthis.value.set(value);\r\n\t}\r\n\r\n\tpublic ngOnInitString() {\r\n\t\tthis.ngOnInitValue();\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tif (this.linkParameters.type){\r\n\t\t\tthis.displayType = this.linkParameters.type\r\n\t\t}\r\n\t\t\r\n\t\tif (!this.inline && this.linkParameters.inline){\r\n\t\t\tthis.inline = true;\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, Input } from '@angular/core';\r\nimport { DashboardSizes, DashboardMessageModel, UserLogStateType } from 'kervi-js';\r\nimport { NGXKerviService } from '../ngx-kervi.service';\r\nimport { AppInjector } from '../app-injector.service';\r\nimport {  Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'kervi-user-log-base',\r\n  template: '',\r\n  styleUrls: [],\r\n})\r\n\r\nexport class KerviUserLogComponent {\r\n    @Input() logLength = 10;\r\n    @Input() linkParameters: any = null;\r\n    @Input() inline = false;\r\n    @Input() dashboardSizes: DashboardSizes = new DashboardSizes();\r\n    protected kerviService: NGXKerviService;\r\n    lastMessage$: Observable<DashboardMessageModel> = null;\r\n    messages$: Observable<DashboardMessageModel[]> = null;\r\n    messageCount$: Observable<number> = null;\r\n    logState$: Observable<UserLogStateType> = null;\r\n    public messageCount = 0;\r\n    public UserLogState: UserLogStateType = UserLogStateType.normal;\r\n\r\n    constructor() {\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n        this.messages$ = this.kerviService.getLogMessages$();\r\n        this.lastMessage$ = this.kerviService.getLastLogMessage$();\r\n        this.messageCount$ = this.kerviService.getLogMessageCount$();\r\n        this.logState$ = this.kerviService.getLogState$();\r\n        this.messageCount$.subscribe(function(v){\r\n          this.messageCount = v;\r\n        });\r\n    }\r\n\r\n    protected ngOnInitUserLog() {\r\n\r\n    }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NGXKerviService } from '../ngx-kervi.service';\r\nimport { AppInjector } from '../app-injector.service';\r\nimport { Directory } from 'kervi-js';\r\n\r\n@Component({\r\n  selector: 'kervi-directory',\r\n  template: ''\r\n})\r\nexport class KerviDirectoryComponent {\r\n    protected path = '/';\r\n    protected directory: Directory = null;\r\n    protected kerviService: NGXKerviService;\r\n\r\n    constructor() {\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n\r\n    protected loadDirectory() {\r\n        //this.directory = this.kerviService.GetDirectory(this.path);\r\n    }\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, Input } from '@angular/core';\r\nimport { DashboardSizes, DashboardMessageModel, UserLogStateType } from 'kervi-js';\r\nimport { NGXKerviService } from '../ngx-kervi.service';\r\nimport { AppInjector } from '../app-injector.service';\r\nimport {  Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'kervi-app-health-base',\r\n  template: '',\r\n  styleUrls: [],\r\n})\r\n\r\nexport class KerviAppHealthComponent {\r\n    @Input() linkParameters: any = null;\r\n    @Input() inline = false;\r\n    @Input() dashboardSizes: DashboardSizes = new DashboardSizes();\r\n    @Input() mps = 0;\r\n    @Input() pingDiff = 0;\r\n    @Input() pingDelay = 0;\r\n    protected kerviService: NGXKerviService;\r\n\r\n    constructor() {\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n\r\n    protected ngOnInitAppHealth() {\r\n      const self = this;\r\n      this.kerviService.mps$.subscribe(function(mps) {\r\n        self.mps = mps;\r\n      });\r\n\r\n      this.kerviService.appPingDiff$.subscribe(function(diff) {\r\n        self.pingDiff = diff;\r\n      });\r\n\r\n      this.kerviService.appPingDelay$.subscribe(function(diff) {\r\n        self.pingDelay = diff;\r\n      });\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-ngx-kervi',\r\n  template: `\r\n    <p>\r\n      ngx-kervi works!\r\n    </p>\r\n  `,\r\n  styles: []\r\n})\r\nexport class NgxKerviComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { NGXKerviService } from \"../ngx-kervi.service\"\r\n@Pipe({\r\n  name: 'translate'\r\n})\r\nexport class TranslatePipe implements PipeTransform {\r\n  constructor(private kerviService: NGXKerviService) {\r\n\r\n  }\r\n  transform(value: string, args?: any): any {\r\n    return this.kerviService.text(value, value);\r\n  }\r\n}","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { TranslatePipe } from './textPipe' \r\n@NgModule({\r\n  imports: [\r\n  ],\r\n  exports:[\r\n    TranslatePipe\r\n  ],\r\n  providers: [  \r\n      \r\n  ],\r\n  declarations: [\r\n    TranslatePipe\r\n  ]\r\n})\r\nexport class NGXKerviPipesModule { }\r\n","import { NgModule, Injector } from '@angular/core';\r\nimport { NgxKerviComponent } from './ngx-kervi.component';\r\nimport { KerviDashboardComponent } from './dashboard/kervi-dashboard.component';\r\nimport { setAppInjector } from \"./app-injector.service\";\r\nimport { KerviDashboardPanelComponent } from './dashboard/kervi-dashboard-panel.component';\r\nimport { KerviControllerPadComponent } from './dashboard/kervi-controller-pad.component';\r\nimport { NGXKerviService } from './ngx-kervi.service';\r\nimport { KerviTemplateService } from './ngx-kervi-template.service';\r\nimport { KerviValueComponent } from './values/value.component';\r\nimport { KerviNumberComponent } from './values/kervi-number-value.component';\r\nimport { KerviStringComponent } from './values/kervi-string-value.component';\r\nimport { KerviBooleanComponent } from './values/kervi-boolean-value.component';\r\nimport { KerviColorComponent } from './values/kervi-color-value.component';\r\nimport { KerviDateTimeComponent } from './values/kervi-datetime-value.component';\r\nimport { KerviActionComponent } from './actions/kervi-action.component';\r\nimport { KerviCameraComponent } from './camera/kervi-camera.component';\r\nimport { KerviWidgetComponent } from './dashboard/kervi-widget.component';\r\nimport { KerviUserLogComponent } from './user-log/user-log.component';\r\nimport { KerviDirectoryComponent } from './files/kervi-directory.component';\r\nimport { KerviAppHealthComponent } from './dashboard/app-health.component';\r\nimport {  NGXKerviPipesModule } from '../lib/pipes/pipes.module'\r\n@NgModule({\r\n  imports: [\r\n  ],\r\n  declarations: [\r\n    NgxKerviComponent,\r\n    KerviDashboardComponent,\r\n    KerviDashboardPanelComponent,\r\n    KerviControllerPadComponent,\r\n    KerviNumberComponent,\r\n    KerviStringComponent,\r\n    KerviBooleanComponent,\r\n    KerviColorComponent,\r\n    KerviDateTimeComponent,\r\n    KerviActionComponent,\r\n    KerviValueComponent,\r\n    KerviWidgetComponent,\r\n    KerviCameraComponent,\r\n    KerviUserLogComponent,\r\n    KerviDirectoryComponent,\r\n    KerviAppHealthComponent\r\n  ],\r\n  providers: [NGXKerviService, KerviTemplateService],\r\n  exports: [\r\n    NgxKerviComponent,\r\n    KerviDashboardComponent,\r\n    KerviDashboardPanelComponent,\r\n    KerviControllerPadComponent,\r\n    KerviNumberComponent,\r\n    KerviWidgetComponent,\r\n    KerviStringComponent,\r\n    KerviBooleanComponent,\r\n    KerviColorComponent,\r\n    KerviDateTimeComponent,\r\n    KerviActionComponent,\r\n    KerviCameraComponent,\r\n    KerviUserLogComponent,\r\n    KerviActionComponent,\r\n    KerviAppHealthComponent,\r\n    NGXKerviPipesModule\r\n  ]\r\n})\r\nexport class NgxKerviModule {\r\n  constructor(private injector:Injector){\r\n    setAppInjector(injector);\r\n  }\r\n }\r\n","/*\r\n * Public API Surface of ngx-kervi\r\n */\r\n\r\nexport * from './lib/ngx-kervi.service';\r\nexport { KerviTemplateService } from './lib/ngx-kervi-template.service';\r\nexport { ConnectionState, DashboardSizes } from \"kervi-js\";\r\nexport { KerviDashboardComponent } from './lib/dashboard/kervi-dashboard.component';\r\nexport { KerviDashboardPanelComponent } from './lib/dashboard/kervi-dashboard-panel.component';\r\nexport { KerviControllerPadComponent } from './lib//dashboard/kervi-controller-pad.component';\r\nexport { KerviWidgetComponent } from './lib/dashboard/kervi-widget.component';\r\nexport { KerviNumberComponent } from './lib/values/kervi-number-value.component';\r\nexport { KerviBooleanComponent } from './lib/values/kervi-boolean-value.component';\r\nexport { KerviActionComponent } from './lib/actions/kervi-action.component';\r\nexport { KerviCameraComponent } from './lib/camera/kervi-camera.component';\r\nexport { KerviColorComponent } from './lib/values/kervi-color-value.component';\r\nexport { KerviDateTimeComponent } from './lib/values/kervi-datetime-value.component';\r\nexport { KerviStringComponent } from './lib/values/kervi-string-value.component';\r\nexport { KerviUserLogComponent } from './lib/user-log/user-log.component';\r\nexport { KerviDirectoryComponent } from './lib/files/kervi-directory.component';\r\nexport { KerviAppHealthComponent } from './lib/dashboard/app-health.component';\r\n\r\nexport  { AppInjector } from './lib/app-injector.service';\r\n\r\nexport * from './lib/ngx-kervi.component';\r\nexport * from './lib/ngx-kervi.module';\r\nexport * from './lib/pipes/pipes.module'\r\nexport * from './lib/pipes/textPipe';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router} from '@angular/router';\r\nimport { KerviDashboardComponent, NGXKerviService, ConnectionState} from 'ngx-kervi'\r\nimport { DashboardPanelComponent } from 'kervi-zorro'\r\ndeclare var window:any;\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent extends KerviDashboardComponent implements OnInit {\r\n  @ViewChild(\"leftPad\") leftPad:ElementRef;\r\n  @ViewChild(\"rightPad\") rightPad:ElementRef;\r\n  private padSize=180;\r\n  private isConnected:false;\r\n  public leftPadTop:number;\r\n  public leftPadLeft:number;\r\n\r\n  public rightPadTop:number;\r\n  public rightPadLeft:number;\r\n  cameraIdx = \"\";\r\n  mediaHidden = true;\r\n\r\n  constructor(private router:Router, private activatedRoute:ActivatedRoute ) {\r\n    super();\r\n   }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    this.cameraId$.subscribe(function(camId){\r\n      console.log(\"db cid\", camId);\r\n      this.cameraIdx = camId;\r\n    })\r\n    this.kerviService.componentsChanged$.subscribe(function() {\r\n      console.log(\"adb changed\");\r\n      const id = self.dashboardId;\r\n      //self.loadDashboard(\"0\");\r\n      self.loadDashboard(id);\r\n      \r\n      \r\n    });\r\n\r\n    this.activatedRoute.params.subscribe(params => {\r\n      var dashboardId = params['name'];\r\n      console.log(\"dbi\", dashboardId);\r\n      this.loadDashboard(dashboardId);\r\n      \r\n      console.log(\"rid\", dashboardId);\r\n      setTimeout(() => {\r\n        var h = window.innerHeight;\r\n        var w = window.innerWidth;\r\n\r\n        self.leftPadTop = h / 2 - self.padSize/2\r\n        self.leftPadLeft = w / 4 - self.padSize/2 \r\n        \r\n        self.rightPadTop = h / 2 - self.padSize/2\r\n        self.rightPadLeft = w - w / 4 - self.padSize/2 \r\n        \r\n\r\n      }, 0);\r\n    });\r\n  }\r\n\r\n  handleMediaClose(): void {\r\n    console.log('click ok');\r\n    this.mediaHidden = true;\r\n  }\r\n\r\n}\r\n","<nz-layout >\r\n\t<nz-header *ngIf='!isAppEmpty'>\r\n\t\t<div nz-row>\r\n\t\t\t<div nz-col nzSpan=\"6\">\t\t\r\n\t\t\t\t<ul nz-menu  nzMode=\"horizontal\" class=\"kervi-main-menu\">\r\n\t\t\t\t\t<li nz-submenu  *ngIf=\"showMenu\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<span title><i nz-icon nzTheme=\"twotone\" nzType=\"dashboard\" [nzTwotoneColor]=\"'#9fd037'\"></i> {{dashboard.name}}</span>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<ng-container *ngIf=\"dashboards.length > 1\">\r\n\t\t\t\t\t\t\t\t<li nz-menu-item *ngFor=\"let dashboard of dashboards\" [routerLink]=\"['/dashboard', dashboard.id]\">{{dashboard.name}}</li>\r\n\t\t\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\t\t<li *ngIf=\"authenticated && dashboards.length > 1\">\r\n\t\t\t\t\t\t\t\t<nz-divider></nz-divider>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li nz-menu-item *ngIf=\"authenticated && anonymous\" (click)=\"logoff($event)\"> <i nz-icon nzType=\"login\" nzTheme=\"outline\"></i>  {{('login' | translate)}}</li>\r\n\t\t\t\t\t\t\t<li nz-menu-item *ngIf=\"authenticated && !anonymous\" (click)=\"logoff($event)\"> <i nz-icon nzType=\"logout\"></i> {{('logout' | translate)}}</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li nz-menu-item *ngIf=\"showPanelController\">\r\n\t\t\t\t\t\t<a  (click)=\"dashboardPanelsHidden = !dashboardPanelsHidden;\">\r\n\t\t\t\t\t\t\t<i nz-icon nzType=\"sliders\" nzTheme=\"twotone\" [nzTwotoneColor]=\"'#9fd037'\"></i>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"kervi-sys-panel\" *ngIf=\"dashboard && dashboard.sysPanel\" nz-col nzSpan=\"18\">\r\n\t\t\t\t<kervi-dashboard-panel [dashboardSizes]=\"dashboardSizes\" [inline]=\"true\" [panel]=\"dashboard.sysPanel\" ></kervi-dashboard-panel>\r\n\t\t\t\t&nbsp;<a  (click)=\"mediaHidden = !mediaHidden;\">\r\n\t\t\t\t\t\t<i nz-icon nzType=\"folder-open\" nzTheme=\"twotone\" [nzTwotoneColor]=\"'#9fd037'\"> </i>\r\n\t\t\t\t</a>\r\n\t\t\t\t<kervi-message-button></kervi-message-button>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n\t</nz-header>\r\n\t\t\r\n\t<nz-content>\r\n\t\t<ng-container *ngIf=\"isAppEmpty\">\r\n\t\t\t<div nz-row style=\"height:100%\" class=\"kervi-panels\">\r\n\t\t\t\t<div nz-col nzSpan=\"12\" nzOffset=\"6\">\r\n\t\t\t\t\t<p></p>\r\n\t\t\t\t\t<nz-alert\r\n\t\t\t\t\t\tnzType=\"warning\"\r\n\t\t\t\t\t\t[nzMessage] =\"'hello_world' | translate\"\r\n\t\t\t\t\t\t[nzDescription]=\" 'empty_app' | translate\"\r\n\t\t\t\t\t\tnzShowIcon\t\r\n\t\t\t\t\t  >\r\n\t\t\t\t\t</nz-alert>\r\n\t\t\t\t\t<p></p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</ng-container>\r\n\t\t<kervi-cam-viewer *ngIf=\"cameraId\" [isBackground]=\"true\" [cameraId]=\"(cameraId$| async)\" [linkParameters]=\"cameraParameters\"></kervi-cam-viewer>\r\n\t\t<div #leftPad class=\"kervi-controller-pad\" *ngIf=\"showLeftPad\" [style.left.px]=\"0\" [style.top.px]=\"65\" [style.bottom.px]=\"65\" [style.right.%]=\"66\" >\r\n\t\t\t<kervi-nipple-pad [autoCenter]=\"autoCenterLeftPad\" [XValue]=\"leftPadXValue\" [YValue]=\"leftPadYValue\" style=\"width: 100%; height: 100%;\"></kervi-nipple-pad>\r\n\t\t</div>\r\n\t\t<div #rightPad class=\"kervi-controller-pad\" *ngIf=\"showRightPad\" [style.left.%]=\"66\" [style.top.px]=\"65\" [style.bottom.px]=\"65\" [style.right.px]=\"0\" >\r\n\t\t\t<kervi-nipple-pad [autoCenter]=\"autoCenterRightPad\" [XValue]=\"rightPadXValue\" [YValue]=\"rightPadYValue\" style=\"width: 100%; height: 100%;\"></kervi-nipple-pad>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"kervi-panels\" fxLayout=\" column\" fxLayout.xs=\"column\" fxLayoutGap=\"0.5%\" fxLayoutAlign=\"\"  *ngIf=\"!dashboardPanelsHidden && !isAppEmpty\" style=\"\">\r\n\t\t\t<ng-container *ngFor=\"let panel of dashboard.panels\">\r\n\t\t\t\t\t<kervi-dashboard-panel [fxFlex]=\"panel.parameters.width\" fxFlex.xs=\"100%\" [dashboardSizes]=\"defaultSizes\" [panel]=\"panel\"></kervi-dashboard-panel>\r\n\t\t\t\t\r\n\t\t\t</ng-container>\r\n\t\t</div>\r\n\t</nz-content>\r\n\t<nz-footer *ngIf='!isAppEmpty'>\r\n\t\t<div nz-row>\r\n\t\t\t<div nz-col nzSpan=\"8\" style=\"text-align: left\">\r\n\t\t\t\t<kervi-dashboard-panel [inline]=\"true\" *ngIf=\"dashboard.footerLeftPanel\" [dashboardSizes]=\"defaultSizes\" [panel]=\"dashboard.footerLeftPanel\"></kervi-dashboard-panel>\r\n\t\t\t</div>\r\n\t\t\t<div nz-col nzSpan=\"8\" style=\"text-align:center\">\r\n\t\t\t\t<kervi-dashboard-panel [inline]=\"true\" *ngIf=\"dashboard.footerCenterPanel\" [dashboardSizes]=\"defaultSizes\" [panel]=\"dashboard.footerCenterPanel\"></kervi-dashboard-panel>\r\n\t\t\t</div>\r\n\t\t\t<div nz-col nzSpan=\"8\"  style=\"text-align: right\">\r\n\t\t\t\t<kervi-dashboard-panel [inline]=\"true\" *ngIf=\"dashboard.footerRightPanel\" [dashboardSizes]=\"defaultSizes\" [panel]=\"dashboard.footerRightPanel\"></kervi-dashboard-panel>\r\n\t\t\t\t<button nz-button nz-type=\"text\"  (mousedown)=\"toggleFullScreen()\"><i nz-icon [nzType]=\"inFullScreen ? 'fullscreen-exit' : 'fullscreen'\" title=\"{{( 'toggle_screen' | translate)}}\"></i></button>\r\n\t\t\t</div>\r\n\t</div>\r\n\t</nz-footer>\r\n</nz-layout>\r\n\r\n<nz-modal \r\n\tnzWrapClassName=\"vertical-center-modal\"\r\n\t[(nzVisible)]=\"!mediaHidden\"\r\n\tnzTitle=\"Media\"\r\n\t(nzOnCancel)=\"handleMediaClose()\"\r\n\t\r\n>\r\n<div style=\"display:inline-block;width:100%\"> <app-media ></app-media></div>\t\r\n\r\n</nz-modal>\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class KerviZorroService {\r\n\r\n  constructor() { }\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { NumberValue, DashboardSizes   } from 'kervi-js';\r\nimport { NGXKerviService, KerviTemplateService } from 'ngx-kervi';\r\nimport { asapScheduler } from 'rxjs';\r\n\r\ndeclare var ApexCharts: any;\r\n\r\n@Component({\r\n  selector: 'value-sparkline',\r\n  templateUrl: './sparkline.component.html',\r\n  styleUrls: ['./sparkline.component.scss'],\r\n})\r\n\r\nexport class SparklineComponent implements OnInit {\r\n  @Input() value: NumberValue = null;\r\n  @Input() linkParameters: any = null;\r\n  @Input() type: string;\r\n  @Input() size:number;\r\n  @Input() dashboardSizes:DashboardSizes = new DashboardSizes();\r\n  @ViewChild('chart') private chartElement: ElementRef;\r\n  private series=[];\r\n  private chartObj: any;\r\n  private options:any;\r\n  constructor(private kerviService:NGXKerviService, private templateService:KerviTemplateService ) {\r\n\r\n  }\r\n\r\n  private createElement(){\r\n    this.series = [this.value.value]\r\n\r\n    this.options ={\r\n      chart: {\r\n          height: 14,\r\n          width:60,\r\n          type: 'area',\r\n          sparkline: {\r\n            enabled: true\r\n          }\r\n      },\r\n      stroke: {\r\n        curve: 'straight',\r\n        width:1\r\n      },\r\n      fill: {\r\n        opacity: 0.3,\r\n      },\r\n      series: [{\r\n        data: this.value.sparkline$.value\r\n      }],\r\n      yaxis: {\r\n        min: 0\r\n      },\r\n      colors: [this.color(\"color\",\".kervi-sparkline\")],\r\n    }\r\n  \r\n    if (this.chartObj) {\r\n      this.chartObj.destroy();\r\n    }\r\n    console.log(\"create sparkline\", this.value.id);\r\n    this.chartObj = new ApexCharts(\r\n      this.chartElement.nativeElement,\r\n      this.options\r\n    );\r\n    this.chartObj.render();\r\n  }\r\n\r\n  \r\n\r\n  private color(style,selector){\r\n    return this.templateService.getColor(style,selector);\r\n  }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    asapScheduler.schedule(() => {\r\n      this.createElement();\r\n    });\r\n\r\n    this.value.sparkline$.subscribe(function(v){\r\n      if (self.chartObj && v){\r\n        self.chartObj.updateSeries([{\r\n          data: v\r\n        }]);\r\n      }\r\n    });\r\n  }\r\n}","<div #chart></div>","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, ElementRef } from '@angular/core';\r\nimport { KerviNumberComponent } from 'ngx-kervi'\r\n@Component({\r\n\tselector: 'kervi-value-number',\r\n\ttemplateUrl: './number-value.component.html',\r\n\tstyleUrls: ['./number-value.component.scss']\r\n})\r\nexport class NumberComponent extends KerviNumberComponent implements OnInit {\r\n\tconstructor(private elementRef:ElementRef) { \r\n\t\tsuper();\r\n\t}\r\n\t\r\n\tngOnInit() {\r\n\t\tthis.ngOnInitNumber();\r\n\t}\r\n\tsliderMouseDown(){\r\n\t\tconsole.log(\"md\");\r\n\r\n\t}\r\n\r\n\tsliderMouseUp(){\r\n\t\tconsole.log(\"mu\");\r\n\t}\r\n}\r\n","<ng-container *ngIf=\"linkParameters.isInput\">\r\n    \r\n    <nz-form-control >\r\n        <span (mousedown)=\"sliderMouseDown()\" (mouseup)=\"sliderMouseUp()\"><nz-slider [nzMin]=\"value.minValue\" [nzMax]=\"value.maxValue\" [nzStep]=\"1\"  [(ngModel)]=\"value.value\" ></nz-slider></span>\r\n        <nz-input-number id=\"{{value.id}}\" [nzMin]=\"value.minValue\" [nzMax]=\"value.maxValue\" [nzStep]=\"1\" [(ngModel)]=\"value.value\"  ></nz-input-number>\r\n        \r\n    </nz-form-control>\r\n    \r\n</ng-container>\r\n<ng-container *ngIf=\"!linkParameters.isInput\">\r\n\r\n    <span class=\"value-value\" [style.min-width.rem]=\"linkParameters.valueSize\">\r\n        <i *ngIf=\"currentIcon\" class=\"fa fa-{{currentIcon}}\"></i>\r\n        <value-sparkline *ngIf=\"linkParameters.showSparkline && !linkParameters.isInput\" [value]=\"value\"></value-sparkline>\r\n        {{(value.value$ | async | number:numberFormat)}}\r\n        <span *ngIf=\"linkParameters.displayUnit\">{{value.unit}}</span>\r\n    </span>\r\n</ng-container>\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, Input, Output, ElementRef, ViewEncapsulation, EventEmitter } from '@angular/core';\r\nimport { DashboardSizes } from 'kervi-js'\r\n@Component({\r\n  selector: 'kervi-switchbutton',\r\n  templateUrl: './switch-button.component.html',\r\n  styleUrls: ['./switch-button.component.scss'],\r\n})\r\nexport class SwitchButtonComponent implements OnInit {\r\n  @Input() value: Boolean;\r\n  @Input() linkParameters:any;\r\n  @Input() inline:boolean = false;\r\n  @Input() dashboardSizes:DashboardSizes = new DashboardSizes();\r\n  @Output() buttonState = new EventEmitter();\r\n  public width:string;\r\n  public height:string;\r\n  constructor() { }\r\n  \r\n  ngOnInit() {\r\n    console.log(\"sb\", this.value);\r\n    if (this.linkParameters){\r\n      \r\n      if (!this.linkParameters.buttonWidth)\r\n        this.width = this.dashboardSizes.switchWidth;\r\n      else\r\n        this.width = this.linkParameters.buttonWidth;\r\n\r\n      if (!this.linkParameters.buttonHeight)\r\n        this.height = this.dashboardSizes.switchHeight;\r\n      else\r\n        this.height = this.linkParameters.buttonHeight;\r\n\r\n    } else{\r\n      this.width = this.dashboardSizes.switchWidth;\r\n      this.height = this.dashboardSizes.switchHeight;\r\n    }\r\n  }\r\n\r\n  modelChange(state){\r\n    this.buttonState.emit(state);\r\n  }\r\n}\r\n","<nz-switch \r\n    [(ngModel)]=\"value\"\r\n    [nzCheckedChildren]=\"checkedTemplate\" [nzUnCheckedChildren]=\"unCheckedTemplate\"\r\n    (ngModelChange)=\"modelChange($event)\"\r\n>\r\n\r\n</nz-switch>\r\n<ng-template #checkedTemplate>\r\n    <i *ngIf=\"linkParameters.onIcon\"  nz-icon [nzType]=\"linkParameters.onIcon\"></i>\r\n    <span >{{ linkParameters.onText }}</span>\r\n</ng-template>\r\n<ng-template #unCheckedTemplate>\r\n    <i *ngIf=\"linkParameters.offIcon\"  nz-icon [nzType]=\"linkParameters.offIcon\"></i>\r\n    <span >{{ linkParameters.offText }}</span>\r\n</ng-template>\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { DashboardSizes, BooleanValue } from 'kervi-js';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\ndeclare var jQuery:any;\r\n@Component({\r\n  selector: 'kervi-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss'],\r\n})\r\n\r\nexport class ButtonComponent implements OnInit {\r\n  @Input() value: BooleanValue;\r\n  @Input() linkParameters: any = null;\r\n  @Input() type: string;\r\n  @Input() inline:boolean = false;\r\n  @Input() dashboardSizes:DashboardSizes = new DashboardSizes();\r\n  @Input() title:string;\r\n  @Output() buttonState = new EventEmitter();\r\n  public width:string;\r\n  public height:string;\r\n  \r\n  constructor() {  \r\n  }\r\n \r\n  ngOnInit() {\r\n    var self = this; \r\n    if (self.linkParameters){\r\n      \r\n      if (!self.linkParameters.buttonWidth)\r\n        this.width = this.dashboardSizes.buttonWidth;\r\n      else\r\n        this.width = self.linkParameters.buttonWidth;\r\n\r\n      if (!self.linkParameters.buttonHeight)\r\n        this.height = this.dashboardSizes.buttonHeight;\r\n      else\r\n        this.height = self.linkParameters.buttonHeight;\r\n\r\n    } else{\r\n      this.width = this.dashboardSizes.buttonWidth;\r\n      this.height = this.dashboardSizes.buttonHeight;\r\n    }\r\n  }\r\n\r\n  public confirm() {\r\n    console.log(\"c\", this.value);\r\n    this.buttonState.emit(true);\r\n    this.buttonState.emit(false);\r\n  }\r\n\r\n  public press() {\r\n\r\n    console.log(\"p\", this.value);\r\n    this.buttonState.emit(true);\r\n  }\r\n\r\n  public release() {\r\n    this.buttonState.emit(false);\r\n  }\r\n}","<ng-template #buttonContentTemplate>\r\n    <i *ngIf=\"!linkParameters.buttonIcon && linkParameters.onIcon && value.value\" nz-icon [nzType]=\"linkParameters.onIcon\"></i>\r\n    <i *ngIf=\"!linkParameters.buttonIcon && linkParameters.offIcon && !value.value\" nz-icon [nzType]=\"linkParameters.offIcon\"></i>\r\n    <i *ngIf=\"linkParameters.buttonIcon\" nz-icon [nzType]=\"linkParameters.buttonIcon\"></i>\r\n    <span *ngIf=\"linkParameters.buttonText\">{{ linkParameters.buttonText }}</span>\r\n    <span *ngIf=\"!linkParameters.buttonText && linkParameters.onText && value.value\">{{ linkParameters.onText }}</span>\r\n    <span *ngIf=\"!linkParameters.buttonText && linkParameters.offText && !value.value\">{{ linkParameters.offText }}</span>\r\n\r\n</ng-template>\r\n<button\r\n    *ngIf = \"linkParameters.confirm\"\r\n    nz-button nzType=\"primary\"\r\n    (nzOnConfirm)=\"confirm()\" \r\n    nz-popconfirm [nzTitle]=\"linkParameters.confirmMessage\"\r\n>\r\n<ng-container *ngTemplateOutlet=\"buttonContentTemplate\"></ng-container>\r\n</button>\r\n<button\r\n    *ngIf = \"!linkParameters.confirm\"\r\n    nz-button nzType=\"primary\"\r\n    (mousedown)=\"press()\" \r\n    (mouseup)=\"release()\"\r\n>\r\n<ng-container *ngTemplateOutlet=\"buttonContentTemplate\"></ng-container>\r\n</button>\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { KerviBooleanComponent } from 'ngx-kervi';\r\n\r\n@Component({\r\n\tselector: 'kervi-value-boolean',\r\n\ttemplateUrl: './boolean-value.component.html',\r\n\tstyleUrls: ['./boolean-value.component.scss']\r\n})\r\nexport class BooleanComponent extends KerviBooleanComponent implements OnInit {\r\n\tconstructor() { \r\n\t\tsuper();\r\n\t}\r\n\r\n\tchangeState(event){\r\n\t\tthis.value.set(event);\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.ngOnInitBoolean();\r\n\t}\r\n}\r\n","<kervi-switchbutton \r\n    *ngIf=\"displayType!='button'\"\r\n    [dashboardSizes]=\"dashboardSizes\" \r\n    [inline]=\"inline\" \r\n    [value]=\"value.value\" \r\n    [linkParameters]=\"linkParameters\"\r\n    (buttonState)=\"changeState($event)\"\r\n></kervi-switchbutton>\r\n<kervi-button \r\n    *ngIf=\"displayType=='button'\"    \r\n    [dashboardSizes]=\"dashboardSizes\" \r\n    [value]=\"value\" \r\n    [inline]=\"inline\" \r\n    [linkParameters]=\"linkParameters\" \r\n    (buttonState)=\"changeState($event)\" \r\n></kervi-button>\r\n\r\n\r\n\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, Input, OnInit, ElementRef } from '@angular/core';\r\nimport { KerviStringComponent } from 'ngx-kervi'\r\n\r\ndeclare var jQuery:any;\r\n@Component({\r\n\tselector: 'kervi-value-string',\r\n\ttemplateUrl: './string-value.component.html',\r\n\tstyleUrls: ['./string-value.component.scss']\r\n})\r\nexport class StringComponent extends KerviStringComponent implements OnInit {\r\n\tconstructor(private elementRef: ElementRef) \r\n\t{\r\n\t\tsuper();\r\n\t }\r\n\r\n\tngOnInit(){\r\n\t\tvar self = this;\r\n\t\tthis.ngOnInitString();\r\n\t\tthis.value.value$.subscribe(function(v){\r\n\t\t \tjQuery(\"input\", self.elementRef.nativeElement).val(v).change();\r\n\t\t})\r\n\t}\r\n\r\n\tonChange(event){\r\n\t\tvar v = jQuery(\"input\", this.elementRef.nativeElement).val();\r\n\t\tconsole.log(\"evv\", v, event);\r\n\t\tthis.value.set(v);\r\n\t}\r\n}\r\n","<input nz-input *ngIf=\"linkParameters.isInput\"  [(ngModel)]=\"value.value\"/>\r\n<span *ngIf=\"!linkParameters.isInput\" class=\"form-control pull-right\"   >{{(value.value$ | async)}}</span>\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, Input, Output, ElementRef, EventEmitter} from '@angular/core';\r\nimport { DashboardSizes } from 'kervi-js'\r\nimport { BehaviorSubject } from 'rxjs';\r\n//declare var jQuery: any;\r\n//declare var Colors: any;\r\n@Component({\r\n  selector: 'kervi-color',\r\n  templateUrl: './color.component.html',\r\n  styleUrls: ['./color.component.scss'],\r\n})\r\nexport class ColorComponent implements OnInit {\r\n    public colorValue:string;\r\n    @Input() set color(v:string) {\r\n        if (v){\r\n            this.colorValue = v;\r\n        }\r\n  };\r\n  @Output() colorChange = new EventEmitter()\r\n  @Input() linkParameters:any;\r\n  @Input() inline:boolean = false;\r\n  @Input() dashboardSizes:DashboardSizes = new DashboardSizes();\r\n  private width:string;\r\n  private height:string;\r\n  private state:any;\r\n  private rgbString:string;\r\n  private picker:any = null;\r\n  private moveDelayTimer = null;\r\n  \r\n  constructor() { }\r\n    \r\n  ngOnInit() {\r\n    var self = this;\r\n    if (!self.linkParameters.buttonWidth)\r\n        this.width = this.dashboardSizes.switchWidth;\r\n    else\r\n        this.width = self.linkParameters.buttonWidth;\r\n    \r\n    if (this.linkParameters.isInput){\r\n        \r\n    }\r\n  }\r\n\r\n  public onChangeColor(color: string) {\r\n    const self = this;\r\n    if (self.moveDelayTimer) {\r\n        clearTimeout(self.moveDelayTimer);\r\n    }\r\n    self.moveDelayTimer = setTimeout(function () {\r\n        self.colorChange.emit(color);\r\n    }, 200);\r\n  }\r\n}\r\n","<nz-form-control >\r\n    <input nz-input\r\n    [value]=\"colorValue\"\r\n    [(colorPicker)]=\"colorValue\"\r\n    [style.background]=\"colorValue\"\r\n    [cpOKButton]=\"true\"\r\n    [cpSaveClickOutside]=\"false\"\r\n    [cpAlphaChannel]=\"'disabled'\"\r\n    (colorPickerChange)=\"onChangeColor($event)\"/>\r\n</nz-form-control>","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, Input, OnInit, ElementRef } from '@angular/core';\r\nimport { KerviColorComponent } from 'ngx-kervi'\r\n\r\n@Component({\r\n\tselector: 'kervi-value-color',\r\n\ttemplateUrl: './color-value.component.html',\r\n\tstyleUrls: ['./color-value.component.scss']\r\n})\r\nexport class ColorComponent extends KerviColorComponent implements OnInit {\r\n\t\r\n\tconstructor() { \r\n\t\tsuper();\r\n\t\t//console.log(\"cnio\",this);\r\n\t}\r\n\r\n\r\n\tsetValue(v){\r\n\t\tconsole.log(v);\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.ngOnInitColor();\r\n\t}\r\n}\r\n","<kervi-color [color]=\"(value.value$ | async)\" (colorChange)=\"setKerviValue($event)\" [linkParameters]=\"linkParameters\" ></kervi-color>\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, Input, Output, ElementRef, EventEmitter } from '@angular/core';\r\nimport { DateTimeValue } from 'kervi-js'\r\n@Component({\r\n  selector: 'kervi-datetime',\r\n  templateUrl: './datetimepicker.component.html',\r\n  styleUrls: ['./datetimepicker.component.scss']\r\n})\r\n\r\nexport class DateTimeComponent implements OnInit {\r\n  @Input() dateTime:DateTimeValue;\r\n  @Input() type:string;\r\n  @Input() format: string;\r\n  @Output() dateTimeChanged = new EventEmitter\r\n  private isReady=false;\r\n  constructor(private elementRef:ElementRef) {  \r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  \r\n    \r\n  }\r\n}","<nz-date-picker \r\n*ngIf=\"type=='datetime'\"\r\nnzShowTime\r\n[(ngModel)]=\"dateTime.value\"\r\n[nzFormat] = \"format\"\r\n></nz-date-picker>\r\n\r\n<nz-date-picker \r\n*ngIf=\"type=='date'\"\r\n[(ngModel)]=\"dateTime.value\"\r\n[nzFormat] = \"format\"\r\n></nz-date-picker>\r\n\r\n\r\n<nz-time-picker \r\n*ngIf=\"type=='time'\"\r\n[(ngModel)]=\"dateTime.value\"\r\n[nzFormat] = \"format\"\r\n></nz-time-picker>\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { KerviDateTimeComponent } from 'ngx-kervi';\r\ndeclare var moment:any;\r\n\r\n@Component({\r\n\tselector: 'kervi-value-datetime',\r\n\ttemplateUrl: './datetime-value.component.html',\r\n\tstyleUrls: ['./datetime-value.component.scss']\r\n})\r\nexport class DateTimeComponent extends KerviDateTimeComponent implements OnInit {\r\n\tconstructor() { \r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.ngOnInitDateTime();\r\n\t}\r\n}\r\n","<kervi-datetime [type]=\"displayType\" [format]=\"dateTimeFormat\" [dateTime]=\"value\"></kervi-datetime>\r\n    ","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, Input } from '@angular/core';\r\nimport { KerviValue, DashboardPanel, DashboardSizes } from 'kervi-js'\r\n\r\n@Component({\r\n\tselector: 'kervi-value',\r\n\ttemplateUrl: './kervi-value.component.html',\r\n\tstyleUrls: ['./kervi-value.component.scss']\r\n\t//directives: [ CommonModule  ],\r\n})\r\nexport class KerviValueComponent {\r\n\t@Input() value: KerviValue;\r\n\t@Input() dashboardPanel: DashboardPanel;\r\n\t@Input() linkParameters:any;\r\n\t@Input() inline:boolean = false;\r\n\t@Input() dashboardSizes:DashboardSizes = new DashboardSizes();\r\n\r\n\tconstructor() { \r\n\t}\r\n\t \r\n\t\r\n}\r\n","    <kervi-value-number *ngIf=\"value.typeName=='Number'\" [value]=\"value\" [dashboardSizes]=\"dashboardSizes\" [linkParameters]=\"linkParameters\" [inline]=\"inline\" ></kervi-value-number>\r\n    <kervi-value-boolean *ngIf=\"value.typeName=='Boolean'\" [dashboardSizes]=\"dashboardSizes\" [linkParameters]=\"linkParameters\" [inline]=\"inline\" [value]=\"value\"></kervi-value-boolean>\r\n    <kervi-value-string *ngIf=\"value.typeName=='String'\" [dashboardSizes]=\"dashboardSizes\" [linkParameters]=\"linkParameters\" [inline]=\"inline\" [value]=\"value\"></kervi-value-string>\r\n    <kervi-value-color *ngIf=\"value.typeName=='Color'\" [dashboardSizes]=\"dashboardSizes\" [linkParameters]=\"linkParameters\" [inline]=\"inline\" [value]=\"value\"></kervi-value-color>\r\n    <kervi-value-datetime *ngIf=\"value.typeName=='DateTime'\" [dashboardSizes]=\"dashboardSizes\" [linkParameters]=\"linkParameters\" [inline]=\"inline\" [value]=\"value\"></kervi-value-datetime>\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { KerviActionComponent } from 'ngx-kervi';\r\n//import { TemplateService } from '../../template.service';\r\n\r\n@Component({\r\n  selector: 'kervi-action',\r\n  templateUrl: './action.component.html',\r\n  styleUrls: ['./action.component.scss'],\r\n})\r\n\r\nexport class ActionComponent extends KerviActionComponent implements OnInit {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n  ngOnInit() {\r\n   this.ngOnInitAction();\r\n  }\r\n}","<kervi-switchbutton \r\n    [dashboardSizes]=\"dashboardSizes\" \r\n    [inline]=\"inline\" \r\n    [value]=\"(state | async)\" \r\n    [linkParameters]=\"linkParameters\"\r\n    (buttonState)=\"setActionState($event)\"\r\n    *ngIf=\"displayType!='button'\"\r\n></kervi-switchbutton>\r\n<kervi-button \r\n    [title]=\"action.name\" \r\n    [dashboardSizes]=\"dashboardSizes\" \r\n    [value]=\"(state | async)\" \r\n    [inline]=\"inline\" \r\n    [linkParameters]=\"linkParameters\"\r\n    (buttonState)=\"setActionState($event)\" \r\n    *ngIf=\"displayType=='button'\"\r\n></kervi-button>\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, Input, Output, EventEmitter, OnInit, OnDestroy} from '@angular/core';\r\nimport { NGXKerviService } from 'ngx-kervi';\r\nimport { Stream } from 'kervi-js';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n@Component({\r\n  selector: 'kervi-mpeg-viewer',\r\n  templateUrl: './mpeg-viewer.component.html',\r\n  styleUrls: ['./mpeg-viewer.component.scss']\r\n})\r\nexport class MPEGViewerComponent implements OnInit, OnDestroy{\r\n  @Input() set cameraSource(id: string) {\r\n    console.log('set cam source', id);\r\n    this.setSource(id);\r\n};\r\n  \r\n  @Input() width: number = null;\r\n  @Input() height: number = null;\r\n  @Output() imageLoaded = new EventEmitter();\r\n  stream: Stream = null;\r\n  @Input()\r\n  streamData: any;\r\n  private firstLoad = true;\r\n  private fpsCounter = 0;\r\n  private fpsTime = new Date();\r\n  private streamSubscription = null;\r\n\r\n  @Input()\r\n  fps = 0;\r\n\r\n  constructor( private kerviService: NGXKerviService, private domSanitizer: DomSanitizer) {\r\n  \r\n  }\r\n\r\n  ngOnInit() {\r\n    const self = this;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.stream) {\r\n      this.streamSubscription.unsubscribe();\r\n      this.stream.close();\r\n    }\r\n  }\r\n\r\n  setSource(source: string) {\r\n    console.log(\"sc\", source);\r\n    const self = this;\r\n    if (this.stream) {\r\n      this.streamSubscription.unsubscribe();\r\n      this.stream.close();\r\n    }\r\n    this.stream = this.kerviService.GetStream(source, ['IMAGE_FRAME']);\r\n    console.log(\"scx\", this.stream);\r\n    this.streamSubscription = this.stream.events$.subscribe( function(event) {\r\n      //console.log('ce', event);\r\n      if (event) {\r\n        var blob = new Blob( [ event.data ], { type: \"image/jpeg\" } );\r\n        self.streamData = self.domSanitizer.bypassSecurityTrustUrl(URL.createObjectURL(blob));\r\n        self.fpsCounter += 1;\r\n        const now   = new Date();\r\n        const fpsDiff = now.getTime() - self.fpsTime.getTime();\r\n        const seconds = fpsDiff / 1000;\r\n        if (seconds > 1) {\r\n          self.fps = self.fpsCounter / seconds;\r\n          //console.log('fps', self.fpsCounter, seconds, source, self.fps);\r\n          self.fpsCounter = 0;\r\n          self.fpsTime = now;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  imageReady(){\r\n    if (this.firstLoad){\r\n        this.firstLoad=false;\r\n        this.imageLoaded.emit(true);\r\n    }\r\n  }\r\n}","<img (load)=\"imageReady()\" class=\"camImage\" [attr.src]=\"streamData\" [style.height.%]=\"height\" [style.width.%]=\"width\">\r\n","import { Component, Input, OnInit, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { Observable, fromEvent, BehaviorSubject, combineLatest, Subject } from 'rxjs';\r\nimport { NumberValue } from 'kervi-js';\r\nimport * as nipplejs from 'nipplejs';\r\nimport { takeUntil, tap, switchMap, publishReplay, refCount, take, map, delay, repeat, mergeMap, debounceTime } from 'rxjs/operators';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n//declare var nipplejs: any;\r\n\r\n@Component({\r\n  selector: 'kervi-nipple-pad',\r\n  templateUrl: './nipple-pad.component.html',\r\n  styleUrls: ['./nipple-pad.component.css']\r\n})\r\nexport class NipplePadComponent implements OnInit, AfterViewInit {\r\n    @Input() XValue: NumberValue;\r\n    @Input() YValue: NumberValue;\r\n    @Input() autoCenter: boolean;\r\n    @Input() mode = 'semi';\r\n\r\n\r\n    private XMin = 0;\r\n    private XMax = 0;\r\n    private YMin = 0;\r\n    private YMax = 0;\r\n    @ViewChild('nipplePad') nipplePad;\r\n    private manager: nipplejs.JoystickManager;\r\n    private moveDelayTimer = null;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n    ngAfterViewInit() {\r\n        const self = this;\r\n        this.XMax = this.XValue != null ? this.XValue.maxValue : 0;\r\n        this.XMin = this.XValue != null ? this.XValue.minValue : 0;\r\n        this.YMax = this.YValue != null ? this.YValue.maxValue : 0;\r\n        this.YMin = this.XValue != null ? this.YValue.minValue : 0;\r\n        console.log('np', this.nipplePad, this.nipplePad.nativeElement);\r\n        this.manager = nipplejs.create( {\r\n            zone: this.nipplePad.nativeElement,\r\n            position: {left: '50%', top: '50%'},\r\n            mode: 'semi',\r\n            restJoystick: this.autoCenter\r\n        });\r\n\r\n        this.manager.on('start',  (evt, nipple) => {\r\n            console.log('np start', nipple);\r\n          });\r\n\r\n        this.manager.on('move',  (evt, nipple) => {\r\n            console.log('np move', nipple);\r\n            const x = nipple.vector.x;\r\n            const y = nipple.vector.y;\r\n            if (self.moveDelayTimer) {\r\n                clearTimeout(self.moveDelayTimer);\r\n            }\r\n            self.moveDelayTimer = setTimeout(function () {\r\n                if (self.XValue) {\r\n                  let valueX = 0;\r\n                    if (x < 0) {\r\n                        valueX = self.XMin * x;\r\n                    } else if (x > 0) {\r\n                        valueX = self.XMax * x;\r\n                    }\r\n                    self.XValue.set(valueX);\r\n                }\r\n\r\n                if (self.YValue) {\r\n                    let valueY = 0;\r\n                      if (y < 0) {\r\n                          valueY = self.YMin * y;\r\n                      } else if (y > 0) {\r\n                          valueY = self.YMax * y;\r\n                      }\r\n                      self.YValue.set(valueY);\r\n                  }\r\n              }, 0);\r\n          });\r\n\r\n        this.manager.on('end',  (evt, nipple) => {\r\n            console.log('np end', nipple);\r\n            if (self.autoCenter) {\r\n                if (self.XValue) {\r\n                    self.XValue.set(0);\r\n                }\r\n                if (self.YValue) {\r\n                    self.YValue.set(0);\r\n                }\r\n            }\r\n          });\r\n      }\r\n}\r\n","<div #nipplePad class=\"nipple-pad\" style=\"width:100%; height:100%;position: relative;\">\r\n    \r\n</div>","<ng-container *ngIf=\"isBackground && camera!==null\">\r\n\t<div #videoViewer id=\"video-viewer\" class=\"video video-background\" style=\"text-align:center;position:fixed;top:60px;left:0px;height:100%;\" [style.height.px]=\"camHeight\" [style.width.px]=\"camWidth\">\r\n\t\t<div style=\"position:fixed;z-index:3000\" *ngIf=\"streamObservers.length > 0\">\r\n\t\t\t<button (click)=\"changeSource(cameraSource)\" >base</button>\r\n\t\t\t<button *ngFor=\"let observer of streamObservers\" (click)=\"changeSource(observer.ui.stream)\"> {{ observer.name}}</button>\t\t\t\r\n\t\t</div>\r\n\t\t<span class=\"camImage\" style=\"top:0px;left:0px;\">\r\n\t\t\t<kervi-mpeg-viewer (imageLoaded)=\"imageLoaded()\" [height]=100   [cameraSource]=\"selectedSource\" > </kervi-mpeg-viewer>\r\n\t\t</span>\r\n\t\t<canvas id=\"camCanvas\" style=\"position:absolute;top:0px;left:0px;\" [style.height.px]=\"camHeight\" [style.width.px]=\"camWidth\"></canvas>\r\n\t\t<canvas id=\"poiCanvas\" style=\"position:absolute;top:0px;left:0px;width:100%;height:100%\"></canvas>\r\n\t\t<div class=\"cam-pad-area\" *ngIf=\"showCamPad\" [style.left.%]=\"33\" [style.top.px]=\"0\" [style.bottom.px]=\"0\" [style.right.%]=\"33\" style=\"position:absolute;z-index: 2000\">\r\n\t\t\t<kervi-nipple-pad [XValue]=\"pan\" [YValue]=\"tilt\"> </kervi-nipple-pad>\r\n\t\t</div>\r\n\t\t<div style=\"position:absolute;top:30px;left:0px;width:100%;height:50px\">\r\n\t\t\t<ng-container  *ngFor=\"let action of camera.actions\">\r\n\t\t\t\t<kervi-action title=\"{{( action.name | translate)}}\" *ngIf=\"action.visible\" [action]=\"action\" ></kervi-action>\r\n\t\t\t</ng-container>\r\n\t\t</div>\r\n\t</div>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"!isBackground && camera!==null\">\r\n\t<div #videoViewer id=\"video-viewer\" class=\"video\" style=\"overflow:hidden;position:relative;width:100%\">\r\n\t\t<span class=\"camImage\" style=\"top:0px;left:0px;height:100%;width:100%\">\r\n\t\t\t<kervi-mpeg-viewer (imageLoaded)=\"imageLoaded()\" [width]=100  [cameraSource]=\"cameraSource\" > </kervi-mpeg-viewer>\r\n\t\t</span>\r\n\t\t<canvas id=\"camCanvas\" style=\"position:absolute;top:0px;left:0px;width:100%;height:100%\"></canvas>\r\n\t\t<canvas id=\"poiCanvas\" style=\"position:absolute;top:0px;left:0px;width:100%;height:100%\"></canvas>\r\n\t\t<div class=\"cam-pad-area\" *ngIf=\"showCamPad\" [style.left.px]=\"0\" [style.top.px]=\"0\" [style.bottom.px]=\"0\" [style.right.px]=\"0\" style=\"position:absolute\">\r\n     \t\t<kervi-nipple-pad [XValue]=\"pan\" [YValue]=\"tilt\" [mode]=\"'static'\"> </kervi-nipple-pad>\r\n\t\t</div>\r\n\t</div>\r\n\t<div>\r\n\t\t<ng-container  *ngFor=\"let action of camera.actions\">\r\n\t\t\t<kervi-action *ngIf=\"action.ui.visible\" title=\"{{( action.name | translate)}}\" [action]=\"action\" ></kervi-action>\r\n\t\t</ng-container>\r\n\t\t<!-- <button class=\"btn btn-primary\" (mousedown)=\"imageViewer.show()\" title=\"{{( 'media_folder' | translate)}}\">\r\n\t\t\t<i  class='fa fa-folder'></i>\r\n\t\t</button> -->\r\n\t</div>\r\n</ng-container>\r\n<!-- <kervi-image-viewer #imageViewer [camComponent]=\"this\" [cameraSource]=\"cameraSource\"></kervi-image-viewer> -->","import { Component, ElementRef, OnInit, AfterViewInit, ViewChild, Input } from '@angular/core';\r\nimport { KerviCameraComponent } from 'ngx-kervi';\r\ndeclare var window: any;\r\n\r\n@Component({\r\n  selector: 'kervi-cam-viewer',\r\n  templateUrl: './cam-viewer.component.html',\r\n  styleUrls: ['./cam-viewer.component.css']\r\n})\r\nexport class CamViewerComponent extends KerviCameraComponent implements OnInit, AfterViewInit {\r\n  public camHeight: number;\r\n  public camWidth: number;\r\n  public camPadLeft: number;\r\n  public camPadTop: number;\r\n  public showCamPad = false;\r\n  @ViewChild('videoViewer') videoViewer: ElementRef;\r\n  padSize = 180;\r\n  constructor(private elementRef: ElementRef) {\r\n    super();\r\n  }\r\n\r\n  imageLoaded() {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const self = this;\r\n    if (this.camera !== null) {\r\n      const element = self.videoViewer.nativeElement;\r\n      const viewPortHeight = window.innerHeight;\r\n      const viewPortWidth = window.innerWidth;\r\n\r\n      this.camHeight = viewPortHeight - 65;\r\n      this.camWidth = viewPortWidth;\r\n      console.log('avic', this.camHeight, this.camWidth);\r\n\r\n      setTimeout(() => {\r\n\r\n        const h = element.offsetHeight;\r\n        const w = element.offsetWidth;\r\n        if (w < self.padSize) {\r\n          self.padSize = w - 10;\r\n        }\r\n        console.log('cami', h, w, self.padSize, element);\r\n        self.camPadTop = h / 2 - (self.padSize / 2);\r\n        self.camPadLeft =  w / 2 - (self.padSize / 2);\r\n        self.showCamPad = true;\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ngOnInitCamera();\r\n  }\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { NumberValue, DashboardSizes   } from 'kervi-js';\r\nimport { NGXKerviService, KerviTemplateService } from 'ngx-kervi';\r\nimport { asapScheduler } from 'rxjs';\r\n\r\ndeclare var ApexCharts: any;\r\n\r\n@Component({\r\n  selector: 'kervi-gauge',\r\n  templateUrl: './gauge.component.html',\r\n  styleUrls: ['./gauge.component.scss'],\r\n})\r\n\r\nexport class GaugeComponent implements OnInit {\r\n  @Input() value: NumberValue = null;\r\n  @Input() linkParameters: any = null;\r\n  @Input() type: string;\r\n  @Input() size:number;\r\n  @Input() dashboardSizes:DashboardSizes = new DashboardSizes();\r\n  @ViewChild('chart') private chartElement: ElementRef;\r\n  private series=[];\r\n  private chartObj: any;\r\n  private options:any;\r\n  constructor(private kerviService:NGXKerviService, private templateService:KerviTemplateService ) {\r\n\r\n  }\r\n\r\n  private createElement(){\r\n    this.series = [this.value.value]\r\n\r\n    this.options ={\r\n      chart: {\r\n        type: 'radialBar',\r\n        height: this.linkParameters.gaugeSize\r\n      },\r\n      plotOptions: {\r\n        radialBar: {\r\n          startAngle: -135,\r\n          endAngle:135,  \r\n          hollow: {\r\n            size: '70%',\r\n          },\r\n          \r\n          track:{\r\n            startAngle: -135,\r\n            endAngle: 135,\r\n          },\r\n          dataLabels: {\r\n            name: {\r\n              show: true,\r\n              color: this.color(\"color\",\".kervi-gauge-text\"),\r\n              fontSize:\"14px\"\r\n            },\r\n            value: {\r\n              fontSize: \"24px\",\r\n              color: this.color(\"color\",\".kervi-gauge-text\"),\r\n              show: true\r\n            }\r\n          }\r\n        } \r\n      },\r\n      colors: [this.color(\"color\",\".kervi-gauge\")],// ['#9fd037'],\r\n      series: this.series,\r\n      stroke: {\r\n        lineCap: \"round\"\r\n      },\r\n      labels: [this.value.name],\r\n\r\n    }\r\n  \r\n    if (this.chartObj) {\r\n      this.chartObj.destroy();\r\n    }\r\n    console.log(\"create gauge\", this.value.id);\r\n    this.chartObj = new ApexCharts(\r\n      this.chartElement.nativeElement,\r\n      this.options\r\n    );\r\n    this.chartObj.render();\r\n  }\r\n\r\n  public render(): Promise<void> {\r\n    return this.chartObj.render();\r\n  }\r\n\r\n  private color(style,selector){\r\n    return this.templateService.getColor(style,selector);\r\n  }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    asapScheduler.schedule(() => {\r\n      this.createElement();\r\n    });\r\n\r\n    this.value.value$.subscribe(function(v){\r\n      if (self.chartObj && v){\r\n        // console.log(\"gv\", v);\r\n        self.chartObj.updateSeries( [v]);\r\n      }\r\n    });\r\n  }\r\n\r\n  public loadPeriod(){\r\n    var self = this;\r\n    //console.log(\"lp\", this.periodStart, this.periodEnd);\r\n    //this.kerviService.spine.sendQuery(\"getSensorData\", this.value.id, this.periodStart.toISOString(), this.periodEnd.toISOString(), function (results) {\r\n        //console.log(\"gsd\", results);\r\n        //var sensorData = results;\r\n        //self.chartData.length = 0;\r\n        //for (var i = 0; (i < sensorData.length); i++) {\r\n          //var dataItem = sensorData[i]\r\n          //self.chartData.push({ x: new Date(dataItem.ts + \" utc\"), y: dataItem.value });\r\n        //}\r\n        //self.chart.render();\r\n        //self.chart.update();\r\n    //});\r\n  }\r\n\r\n  private cleanData(){\r\n    // if(this.updateChart){\r\n    //   var doClean = true;\r\n    //   var limitTS = this.getPeriodLimit();\r\n    //   var ds = this.chart.data.datasets[0].data\r\n    //   while ( ds.length>0 && doClean){\r\n    //     if (ds[0].x < limitTS)\r\n    //       ds.shift();\r\n    //     else\r\n    //       doClean = false\r\n    //   }\r\n    // }\r\n  }\r\n}","<div #chart></div>","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { NumberValue, DashboardSizes   } from 'kervi-js';\r\nimport { NGXKerviService, KerviTemplateService } from 'ngx-kervi';\r\nimport { asapScheduler } from 'rxjs';\r\n\r\ndeclare var ApexCharts: any;\r\n\r\n@Component({\r\n  selector: 'kervi-chart',\r\n  templateUrl: './chart.component.html',\r\n  styleUrls: ['./chart.component.scss'],\r\n})\r\n\r\nexport class KerviChartComponent implements OnInit {\r\n  @Input() value: NumberValue = null;\r\n  @Input() linkParameters: any = null;\r\n  @Input() type: string;\r\n  @Input() size:number;\r\n  @Input() dashboardSizes:DashboardSizes = new DashboardSizes();\r\n  @ViewChild('chart') private chartElement: ElementRef;\r\n  private series=[];\r\n  private chartObj: any;\r\n  private options:any;\r\n  constructor(private kerviService:NGXKerviService, private templateService:KerviTemplateService ) {\r\n\r\n  }\r\n  \r\n  private createElement(){\r\n    this.series= [\r\n    {\r\n        name: this.value.name,\r\n        data: [ ]\r\n    }]\r\n\r\n    \r\n    this.options ={\r\n      chart: {\r\n          id: \"chart_\" + this.value.id,\r\n          width:\"100%\",\r\n          height:300,\r\n          type: this.linkParameters.chartType,\r\n          animations: {\r\n            enabled: true,\r\n            easing: 'linear',\r\n            dynamicAnimation: {\r\n              speed: 100\r\n            }\r\n          },\r\n          toolbar: {\r\n            show: false,\r\n            tools: {\r\n              download: true,\r\n              selection: true,\r\n              zoom: true,\r\n              zoomin: true,\r\n              zoomout: true,\r\n              pan: true,\r\n              reset: true ,\r\n              customIcons: []\r\n            },\r\n            autoSelected: 'zoom' \r\n          },\r\n          zoom: {\r\n            enabled: true\r\n          }\r\n        },\r\n      dataLabels: {\r\n          enabled: false\r\n        },\r\n      stroke: {\r\n          curve: 'smooth',\r\n          width:1\r\n        },\r\n\r\n      title: {\r\n          text: this.linkParameters.chartTitle,\r\n          align: 'left',\r\n          style: {\r\n            color: this.color(\"color\",\".kervi-chart-axis\")//\"#6c757d \",\r\n          }\r\n        },\r\n      markers: {\r\n          size: 0\r\n        },\r\n      xaxis: {\r\n          type: 'datetime',\r\n          labels: {\r\n            \r\n            style: {\r\n              colors: this.color(\"color\",\".kervi-chart-axis\")//\"#6c757d \",\r\n            }\r\n          },\r\n          axisBorder: {\r\n            show: true,\r\n            color: this.color(\"color\",\".kervi-chart-axis\"),\r\n            height: 1,\r\n            width: '100%',\r\n            offsetX: 0,\r\n            offsetY: 0\r\n        }\r\n          //range: 1552983230 - 300,\r\n      },\r\n      yaxis: {\r\n          max: this.value.maxValue,\r\n          min:this.value.minValue,\r\n          labels: {\r\n            \r\n            style: {\r\n              colors: this.color(\"color\",\".kervi-chart-axis\"),\r\n            }\r\n          },\r\n        },\r\n      legend: {\r\n          show: false\r\n      },\r\n      grid: {\r\n        show: this.linkParameters.chartGrid,\r\n        borderColor: this.color(\"color\",\".kervi-chart-grid\"),\r\n        xaxis: {\r\n          lines: {\r\n            show: true,\r\n            animate: true\r\n          }\r\n        },\r\n        yaxis: {\r\n          lines: {\r\n            show: true,\r\n            animate: true\r\n          }\r\n        }\r\n      },\r\n      colors: [this.color(\"color\",\".kervi-chart-line\")],// ['#9fd037'],\r\n      series: this.series\r\n    }\r\n  \r\n    if (this.chartObj) {\r\n      this.chartObj.destroy();\r\n    }\r\n\r\n    if (!this.linkParameters.chartTitle)\r\n      delete(this.options[\"title\"]);\r\n\r\n    console.log(\"create chart\", this.value.id);\r\n    this.chartObj = new ApexCharts(\r\n      this.chartElement.nativeElement,\r\n      this.options\r\n    );\r\n    this.chartObj.render();\r\n  }\r\n\r\n  private color(style,selector){\r\n    return this.templateService.getColor(style,selector);\r\n  }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    asapScheduler.schedule(() => {\r\n      this.createElement();\r\n    });\r\n\r\n    this.value.value$.subscribe(function(v){\r\n      if (self.chartObj){\r\n        self.series[0].data.push([ self.value.valueTS.getTime(), v ]);\r\n        self.chartObj.updateSeries( self.series);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  public loadPeriod(){\r\n    var self = this;\r\n    //console.log(\"lp\", this.periodStart, this.periodEnd);\r\n    //this.kerviService.spine.sendQuery(\"getSensorData\", this.value.id, this.periodStart.toISOString(), this.periodEnd.toISOString(), function (results) {\r\n        //console.log(\"gsd\", results);\r\n        //var sensorData = results;\r\n        //self.chartData.length = 0;\r\n        //for (var i = 0; (i < sensorData.length); i++) {\r\n          //var dataItem = sensorData[i]\r\n          //self.chartData.push({ x: new Date(dataItem.ts + \" utc\"), y: dataItem.value });\r\n        //}\r\n        //self.chart.render();\r\n        //self.chart.update();\r\n    //});\r\n  }\r\n\r\n  private cleanData(){\r\n    // if(this.updateChart){\r\n    //   var doClean = true;\r\n    //   var limitTS = this.getPeriodLimit();\r\n    //   var ds = this.chart.data.datasets[0].data\r\n    //   while ( ds.length>0 && doClean){\r\n    //     if (ds[0].x < limitTS)\r\n    //       ds.shift();\r\n    //     else\r\n    //       doClean = false\r\n    //   }\r\n    // }\r\n  }\r\n}","<div #chart></div>","<ng-container *ngIf=\"widgetType=='value'\">\r\n    <div fxLayout=\"row\" *ngIf=\"!inline\" class=\"kervi-block-widget\"> \r\n        <div fxFlex=\"60\" class=\"kervi-value-label\">\r\n            <!-- <i nz-icon nzType=\"bulb\" nzTheme=\"outline\"></i> -->\r\n            <i nz-icon  *ngIf=\"linkParameters.labelIcon\" [nzType]=\"linkParameters.labelIcon\"></i>\r\n            <span  *ngIf=\"linkParameters.label\">{{linkParameters.label}}</span>\r\n        </div>\r\n        \r\n        <div fxFlex class=\"kervi-value-section\">\r\n            <kervi-value *ngIf=\"component.componentType=='KerviValue'\" [value]=\"component\" [inline]=\"false\" [dashboardSizes]=\"dashboardSizes\"  [linkParameters]=\"linkParameters\"></kervi-value>\r\n            <kervi-action  *ngIf=\"component.componentType=='action'\" [action]=\"component\" [inline]=\"false\" [dashboardSizes]=\"dashboardSizes\"  [linkParameters]=\"linkParameters\"></kervi-action>\r\n        </div>\r\n            \r\n    </div>\r\n\r\n    <div *ngIf=\"inline\" class=\"kervi-inline-widget\">\r\n        <div class=\"kervi-value-label\"> \r\n            <i nz-icon style=\"display:inline\"  *ngIf=\"linkParameters.labelIcon\" [nzType]=\"linkParameters.labelIcon\"></i>\r\n            <span style=\"display:inline\"  *ngIf=\"linkParameters.label\"  >{{linkParameters.label}}</span>\r\n        </div>\r\n        <div class=\"kervi-value-section\">\r\n            <kervi-value *ngIf=\"component.componentType=='KerviValue'\" [value]=\"component\" [inline]=\"false\" [dashboardSizes]=\"dashboardSizes\"  [linkParameters]=\"linkParameters\"></kervi-value>\r\n            <kervi-action  *ngIf=\"component.componentType=='action'\" [action]=\"component\" [inline]=\"false\" [dashboardSizes]=\"dashboardSizes\"  [linkParameters]=\"linkParameters\"></kervi-action>\r\n        </div>\r\n    </div>\r\n</ng-container>    \r\n<ng-container *ngIf=\"widgetType=='camera'\" class=\"block-component\" >\r\n    <kervi-cam-viewer [isBackground]=\"false\" [camera]=\"component\" [linkParameters]=\"linkParameters\"></kervi-cam-viewer>\r\n</ng-container>\r\n    \r\n    \r\n<ng-container *ngIf=\"widgetType=='gauge'\" class=\"block-component\" >\r\n    <kervi-gauge [dashboardSizes]=\"dashboardSizes\" [value]=\"component\" [linkParameters]=\"linkParameters\"></kervi-gauge>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"widgetType=='chart'\" class=\"\" >\r\n    <kervi-chart [dashboardSizes]=\"dashboardSizes\" [value]=\"component\" [linkParameters]=\"linkParameters\" ></kervi-chart>\r\n</ng-container>","import { Component, OnInit } from '@angular/core';\r\nimport { KerviWidgetComponent } from 'ngx-kervi'\r\n\r\n@Component({\r\n  selector: 'kervi-widget',\r\n  templateUrl: \"./widget.component.html\",\r\n  styles: []\r\n})\r\nexport class WidgetComponent extends KerviWidgetComponent implements OnInit {\r\n  constructor() {\r\n    super();\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.ngOnInitWidget();\r\n  }\r\n\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { KerviUserLogComponent } from 'ngx-kervi';\r\n//import { TemplateService } from '../../template.service';\r\n\r\n@Component({\r\n  selector: 'kervi-user-log',\r\n  templateUrl: './user-log.component.html',\r\n  styleUrls: ['./user-log.component.scss'],\r\n})\r\n\r\nexport class UserLogComponent extends KerviUserLogComponent implements OnInit {\r\n    constructor() {\r\n        super(); \r\n    \r\n    }\r\n\r\n  ngOnInit() {\r\n    this.ngOnInitUserLog(); \r\n  }\r\n\r\n  \r\n  \r\n}","<nz-timeline >\r\n    <nz-timeline-item [nzDot]=\"message.level==1 ? dotTemplate1 :  message.level==2 ? dotTemplate2 : dotTemplate3\" *ngFor=\"let message of messages$ | async\">\r\n            <strong>{{message.sourceName}}</strong><br>\r\n            <span style=\"font-size:80%\">{{message.timestamp | date: 'HH:mm:ss'}}</span><br>    \r\n            {{message.topic}}\r\n            <nz-divider></nz-divider>\r\n    </nz-timeline-item>\r\n</nz-timeline>\r\n<ng-template #dotTemplate1>\r\n    <i nz-icon type=\"close-circle\" style=\"font-size: 16px;\" [nzTheme]=\"'twotone'\" [nzTwotoneColor]=\"'#f5222d'\"></i>\r\n</ng-template>\r\n<ng-template #dotTemplate2>\r\n    <i nz-icon type=\"warning\" style=\"font-size: 16px;\" [nzTheme]=\"'twotone'\" [nzTwotoneColor]=\"'#faad14'\"></i>\r\n</ng-template>\r\n<ng-template #dotTemplate3>\r\n    <i nz-icon nz-icon type=\"check-circle\" [nzTheme]=\"'twotone'\" [nzTwotoneColor]=\"'#52c41a'\" style=\"font-size: 16px;\"></i>\r\n</ng-template>","// Copyright (c) 2019, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { KerviAppHealthComponent } from 'ngx-kervi';\r\n//import { TemplateService } from '../../template.service';\r\n\r\n@Component({\r\n  selector: 'kervi-app-health',\r\n  templateUrl: './app-health.component.html',\r\n  styleUrls: ['./app-health.component.scss'],\r\n})\r\n\r\nexport class AppHealthComponent extends KerviAppHealthComponent implements OnInit {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.ngOnInitAppHealth();\r\n  }\r\n}","<div fxLayout=\"row\" *ngIf=\"!inline\" class=\"kervi-block-widget\"> \r\n    <div fxFlex=\"60\" class=\"kervi-value-label\">\r\n        web socket messages \r\n    </div>\r\n    \r\n    <div fxFlex class=\"kervi-value-section\">\r\n        <span class=\"value-value\" >\r\n            <!-- <i *ngIf=\"currentIcon\" class=\"fa fa-{{currentIcon}}\"></i> -->\r\n            <!-- <value-sparkline [value]=\"value\"></value-sparkline> -->\r\n            {{mps}}\r\n        </span>\r\n    </div>\r\n        \r\n</div>\r\n\r\n<div fxLayout=\"row\" *ngIf=\"!inline\" class=\"kervi-block-widget\"> \r\n    <div fxFlex=\"60\" class=\"kervi-value-label\">\r\n        Ping diff \r\n    </div>\r\n    \r\n    <div fxFlex class=\"kervi-value-section\">\r\n        <span class=\"value-value\" >\r\n            <!-- <i *ngIf=\"currentIcon\" class=\"fa fa-{{currentIcon}}\"></i> -->\r\n            <!-- <value-sparkline [value]=\"value\"></value-sparkline> -->\r\n            {{pingDiff}}\r\n        </span>\r\n    </div>\r\n        \r\n</div>\r\n\r\n<div fxLayout=\"row\" *ngIf=\"!inline\" class=\"kervi-block-widget\"> \r\n    <div fxFlex=\"60\" class=\"kervi-value-label\">\r\n        Ping delay \r\n    </div>\r\n    \r\n    <div fxFlex class=\"kervi-value-section\">\r\n        <span class=\"value-value\" >\r\n            <!-- <i *ngIf=\"currentIcon\" class=\"fa fa-{{currentIcon}}\"></i> -->\r\n            <!-- <value-sparkline [value]=\"value\"></value-sparkline> -->\r\n            {{pingDelay}}\r\n        </span>\r\n    </div>\r\n        \r\n</div>","<!-- <p>{{panel.name}} - {{panel.type}} - {{groupLayout}} - {{bodyOnly}} - {{inline}} - {{panel.subPanels.length}} - {{panel.components.length}} - {{headerComponents.length}} - {{bodyComponents.length}}</p> -->\r\n<!-- <p>w={{width}} - {{inGroup}}</p> -->\r\n<!-- {{ panel.parameters | json}} -->\r\n<ng-container *ngIf=\"panel.type=='group'\">\r\n    <div class=\"kervi-panel-deck\" [fxLayout]=\"panel.parameters.layout\" fxLayout.xs=\"column\"  fxLayoutGap=\"0.5%\">\r\n        <ng-container *ngFor=\"let subPanel of panel.subPanels\">\r\n            <ng-container *ngIf=\"subPanel.type!='group'\">\r\n                        <kervi-dashboard-panel fxFlex.xs=\"100\" [fxFlex]=\"subPanel.parameters.width\" [bodyOnly]=\"true\" [inGroup]=\"true\" [dashboardSizes]=\"dashboardSizes\"  [panel]=\"subPanel\"></kervi-dashboard-panel>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"subPanel.type=='group'\">\r\n                    <kervi-dashboard-panel fxFlex.xs=\"100\" [fxFlex]=\"subPanel.parameters.width\" [inGroup]=\"true\" [dashboardSizes]=\"dashboardSizes\"  [panel]=\"subPanel\"></kervi-dashboard-panel>\r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"panel.type!='group' && !inline\">\r\n    \r\n    <nz-card  [nzTitle]=\"showHeader ? title : null\" [nzExtra]=\"headerComponents.length>0 ? extraTemplate : null\">\r\n        \r\n        <ng-template #extraTemplate>\r\n            <ng-container *ngFor=\"let panelComponent of headerComponents\">\r\n                        <kervi-widget [component]=\"panelComponent.component\" [dashboardPanel]=\"panel\" [inline]=\"inline\"  [linkParameters]=\"panelComponent.parameters\"></kervi-widget>\r\n            </ng-container>\r\n        </ng-template>\r\n        <ng-container *ngFor=\"let panelComponent of bodyComponents\">\r\n            <kervi-widget [component]=\"panelComponent.component\" [dashboardPanel]=\"panel\"  [inline]=\"inline\"  [linkParameters]=\"panelComponent.parameters\"></kervi-widget>\r\n        </ng-container>\r\n    \r\n        <div *ngIf=\"panel.parameters.userLog\"  >\r\n            \r\n            <kervi-user-log></kervi-user-log>\r\n        </div>\r\n        <div *ngIf=\"panel.parameters.appHealth\"  >\r\n            \r\n            <kervi-app-health></kervi-app-health>\r\n        </div> \r\n    </nz-card>\r\n</ng-container>\r\n\r\n<ng-template [ngIf]=\"inline && panel.components.length>0\" >\r\n    <ng-container *ngFor=\"let panelComponent of panel.components\" >\r\n        <kervi-widget [component]=\"panelComponent.component\"  [inline]=\"inline\" [dashboardPanel]=\"panel\"  [linkParameters]=\"panelComponent.parameters\"></kervi-widget>\r\n    </ng-container>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { KerviDashboardPanelComponent } from 'ngx-kervi'\r\nimport { group } from '@angular/animations';\r\n@Component({\r\n  selector: 'kervi-dashboard-panel',\r\n  templateUrl: './dashboard-panel.component.html',\r\n  styleUrls: ['./dashboard-panel.component.css']\r\n})\r\nexport class DashboardPanelComponent extends KerviDashboardPanelComponent {\r\n  public groupLayout=\"row\";\r\n  constructor() {\r\n    super();\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.ngOnInitPanel();\r\n    if (this.panel.hasOnlyGroupPanels)\r\n      this.groupLayout = \"row\";\r\n  }\r\n\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, Input, Output, EventEmitter, OnInit, ElementRef } from '@angular/core';\r\nimport { DashboardSizes } from 'kervi-js'\r\nimport { KerviTemplateService } from 'ngx-kervi'\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n  selector: 'ui-slider',\r\n  templateUrl: './slider.component.html',\r\n  styleUrls: ['./slider.component.scss']\r\n})\r\nexport class SliderComponent implements OnInit {\r\n  @Input() value = 0;\r\n  @Input() type = \"horizontal_slider\";\r\n  @Input() tick: number;\r\n  @Input() linkParameters: any;\r\n  @Input() defaultSizes: DashboardSizes = new DashboardSizes();\r\n  @Input() maxValue: number;\r\n  @Input() minValue: number;\r\n  @Output() sliderChanged = new EventEmitter();\r\n\r\n  private marks = {};\r\n\r\n  constructor(private elementRef: ElementRef, private templateService:KerviTemplateService) { \r\n    //console.log(\"cnio\",this);\r\n  }\r\n\r\n  private color(style,selector){\r\n    return this.templateService.getColor(style,selector);\r\n  }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n\r\n  }\r\n\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, Input, ElementRef, ChangeDetectionStrategy } from '@angular/core';\r\n@Component({\r\n  selector: 'kervi-icon',\r\n  templateUrl: './icons.component.html',\r\n  styleUrls: ['./icons.component.scss'],\r\n})\r\n\r\nexport class IconsComponent implements OnInit {\r\n  @Input() icon: string = null;\r\n \r\n  constructor() {  \r\n  }\r\n\r\n  \r\n  \r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n  \r\n}","<i class=\"pi pi-{{icon}}\"></i>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NGXKerviPipesModule  } from 'ngx-kervi';\r\nimport { SparklineComponent } from './sparkline/sparkline.component';\r\nimport { SliderComponent } from './slider/slider.component';\r\nimport { GaugeComponent } from './gauge/gauge.component';\r\nimport { KerviChartComponent } from './chart/chart.component';\r\nimport { SwitchButtonComponent} from './switch-button/switch-button.component';\r\nimport { ButtonComponent} from './button/button.component';\r\nimport { MPEGViewerComponent } from './mpeg-viewer/mpeg-viewer.component';\r\nimport { DateTimeComponent } from './datetimepicker/datetimepicker.component';\r\nimport { IconsComponent } from './icons/icons.component';\r\nimport { NgxGaugeModule } from 'ngx-gauge';\r\nimport { ColorComponent } from './color/color.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { ColorPickerModule } from 'ngx-color-picker';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SparklineComponent,\r\n    SliderComponent,\r\n    IconsComponent,\r\n    GaugeComponent,\r\n    KerviChartComponent,\r\n    SwitchButtonComponent,\r\n    ButtonComponent,\r\n    MPEGViewerComponent,\r\n    DateTimeComponent,\r\n    ColorComponent\r\n  ],\r\n  exports:[\r\n      SparklineComponent,\r\n      SliderComponent,\r\n      IconsComponent,\r\n      MPEGViewerComponent,\r\n      GaugeComponent,\r\n      KerviChartComponent,\r\n      SwitchButtonComponent,\r\n      ButtonComponent,\r\n      DateTimeComponent,\r\n      ColorComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NGXKerviPipesModule,\r\n    CommonModule,\r\n    NgxGaugeModule,\r\n    FormsModule,\r\n    NgZorroAntdModule,\r\n    NgApexchartsModule,\r\n    ColorPickerModule \r\n  ],\r\n  providers: [],\r\n  bootstrap: []\r\n})\r\nexport class UIComponentsModule {\r\n  constructor () {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common'\r\nimport { NumberComponent} from './number-value/number-value.component'\r\nimport { NGXKerviPipesModule  } from 'ngx-kervi'\r\nimport { BooleanComponent} from './boolean-value/boolean-value.component'\r\nimport { StringComponent} from './string-value/string-value.component'\r\nimport { DateTimeComponent} from './datetime-value/datetime-value.component'\r\nimport { ColorComponent} from './color-value/color-value.component'\r\n// import { EnumComponent} from './enum-value/enum-value.component'\r\nimport { UIComponentsModule} from '../ui-components/ui-components.module'\r\nimport { KerviValueComponent } from './kervi-value/kervi-value.component'\r\nimport { FormsModule }    from '@angular/forms';\r\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\r\n@NgModule({\r\n  declarations: [\r\n    NumberComponent,\r\n    BooleanComponent,\r\n    KerviValueComponent,\r\n    StringComponent,\r\n    //EnumComponent,\r\n    DateTimeComponent,\r\n    ColorComponent\r\n  ],\r\n  exports:[\r\n      NumberComponent,\r\n      BooleanComponent,\r\n      KerviValueComponent,\r\n      StringComponent,\r\n      //EnumComponent,\r\n      DateTimeComponent,\r\n      ColorComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NGXKerviPipesModule,\r\n    UIComponentsModule,\r\n    FormsModule,\r\n    NgZorroAntdModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: []\r\n})\r\nexport class ValuesModule {\r\n  constructor (){}\r\n}\r\n","import { Component, Input, OnInit,ElementRef } from '@angular/core';\r\nimport { NumberValue } from \"kervi-js\"\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n  selector: 'kervi-controller-pad',\r\n  templateUrl: './controller-pad.component.html',\r\n  styleUrls: ['./controller-pad.component.css']\r\n})\r\nexport class ControllerPadComponent implements OnInit {\r\n  @Input() XValue:NumberValue;\r\n  @Input() YValue:NumberValue;\r\n  @Input() autoCenter:boolean;\r\n  padSize:number=180;\r\n  private moveDelayTimer = null;\r\n  private inDrag:boolean = false;\r\n  \r\n  constructor(private elementRef:ElementRef) { }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    if (this.XValue){\r\n      jQuery(\"input[name='pad-x']\", self.elementRef.nativeElement).val(this.XValue.value$.value).change();\r\n      this.XValue.value$.subscribe(function (v) {\r\n        console.log(\"pad-x\", self.YValue.name, v);\r\n        jQuery(\"input[name='pad-x']\", self.elementRef.nativeElement).val(v).change();\r\n      });\r\n    }\r\n\r\n    if (this.YValue){\r\n      jQuery(\"input[name='pad-y']\", self.elementRef.nativeElement).val(this.YValue.value$.value).change();        \r\n      this.YValue.value$.subscribe(function (v) {\r\n        console.log(\"pad-y\", self.YValue.name, v);\r\n        jQuery(\"input[name='pad-y']\", self.elementRef.nativeElement).val(v).change();\r\n      });\r\n    }\r\n\r\n    var color = \"rgba(255,255,255,.5)\";\r\n    var p = jQuery('fieldset', self.elementRef.nativeElement).xy({\r\n      displayPrevious: false\r\n      , min: -100\r\n      , max: 100\r\n      , width: self.padSize\r\n      , height: self.padSize\r\n      , fgColor: color\r\n      , bgColor: color\r\n      , change: function (value) {\r\n        if (self.moveDelayTimer) {\r\n          clearTimeout(self.moveDelayTimer);\r\n        }\r\n        \r\n        self.moveDelayTimer = setTimeout(function () {\r\n          if (self.XValue)\r\n            self.XValue.set(value[0]);\r\n          if (self.YValue)\r\n            self.YValue.set(value[1]);\r\n        }, 0);\r\n      }\r\n    })\r\n    .css({ 'border': '2px solid ' + color });  \r\n  }\r\n\r\n  padPress(){\r\n    this.inDrag=true;\r\n  }\r\n\r\n  padRelease(){\r\n    console.log(\"pr\", this.inDrag, this.autoCenter);   \r\n    this.inDrag=false;\r\n       if (this.autoCenter && this.XValue){\r\n         console.log(\"x-auto center\");\r\n         jQuery(\"input[name='pad-x']\", this.elementRef.nativeElement).val(0).change();\r\n         this.XValue.set(0);\r\n       }\r\n       if (this.autoCenter && this.YValue){\r\n        console.log(\"y-auto center\"); \r\n        jQuery(\"input[name='pad-y']\", this.elementRef.nativeElement).val(0).change();\r\n         this.YValue.set(0);\r\n       }\r\n  }\r\n\r\n\r\n}\r\n","<div (mousedown)=\"padPress()\" (mouseup)=\"padRelease()\">\r\n  <fieldset id=\"leftPad\" style=\"position:absolute\" class=\"pad\" [attr.data-width]=\"padSize\" [attr.data-height]=\"padSize\" >\r\n    <legend></legend>\r\n    <input type=\"hidden\" name=\"pad-x\" value=\"0\"><input type=\"hidden\"  name=\"pad-y\" value=\"0\">\r\n  </fieldset>\r\n</div>","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { KerviUserLogComponent } from 'ngx-kervi';\r\nimport { NzNotificationService } from 'ng-zorro-antd';\r\n@Component({\r\n  selector: 'kervi-user-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.scss'],\r\n})\r\n\r\nexport class UserMessagesComponent extends KerviUserLogComponent implements OnInit {\r\n  @ViewChild(TemplateRef) messageTemplate: TemplateRef<{}>;  \r\n  constructor(private notification: NzNotificationService) {\r\n        super(); \r\n        var self = this;\r\n        this.lastMessage$.subscribe(function(message){\r\n          if (message){\r\n            self.notification.template(self.messageTemplate, { nzData: message });\r\n          }\r\n        })\r\n    }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    this.ngOnInitUserLog(); \r\n    \r\n  }\r\n}","<ng-template let-message=\"data\">\r\n    <div class=\"ant-notification-notice-content\">\r\n        <div class=\"ant-notification-notice-with-icon\">\r\n            <span class=\"ant-notification-notice-icon\">\r\n                <i *ngIf=\"message.level==3\" nz-icon type=\"check-circle\" [nzTheme]=\"'twotone'\" [nzTwotoneColor]=\"'#52c41a'\"></i>\r\n                <i *ngIf=\"message.level==2\" nz-icon type=\"warning\" [nzTheme]=\"'twotone'\" [nzTwotoneColor]=\"'#faad14'\"></i>\r\n                <i *ngIf=\"message.level==1\" nz-icon type=\"close-circle\" [nzTheme]=\"'twotone'\" [nzTwotoneColor]=\"'#f5222d'\"></i>\r\n            </span>\r\n            <div class=\"ant-notification-notice-message\">{{message.sourceName}}</div>\r\n            <div class=\"ant-notification-notice-description\">\r\n                {{ message.topic }}                \r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n</ng-template>","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { KerviUserLogComponent } from 'ngx-kervi';\r\n@Component({\r\n  selector: 'kervi-message-button',\r\n  templateUrl: './message-button.component.html',\r\n  styleUrls: ['./message-button.component.scss'],\r\n})\r\n\r\nexport class UserMessageButtonComponent extends KerviUserLogComponent implements OnInit {\r\n  visible = false;\r\n  \r\n  constructor() {\r\n        super(); \r\n    }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    this.ngOnInitUserLog(); \r\n  }\r\n\r\n  open(): void {\r\n    this.visible = true;\r\n  }\r\n\r\n  close(): void {\r\n    this.visible = false;\r\n  }\r\n}","<nz-badge [nzCount]=\"messageCount$ | async\" [nzOverflowCount]=\"99\">\r\n    <button *ngIf=\"(messageCount$ | async)>0\" nz-button nzGhost  nzType=\"default\" nzShape=\"circle\" (click)=\"open()\">\r\n        <i nz-icon nzType=\"notification\" nzTheme=\"twotone\" [nzTwotoneColor]=\"'#9fd037'\"></i>\r\n    </button>\r\n</nz-badge>\r\n\r\n<nz-drawer\r\n      [nzClosable]=\"false\"\r\n      [nzVisible]=\"visible\"\r\n      nzPlacement=\"right\"\r\n      nzTitle=\"Log\"\r\n      (nzOnClose)=\"close()\"\r\n    >\r\n    <kervi-user-log [inline]=\"false\"></kervi-user-log>\r\n</nz-drawer>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\r\nimport { NgxKerviModule, NGXKerviPipesModule  } from 'ngx-kervi'\r\nimport { DashboardPanelComponent } from './dashboard-panel/dashboard-panel.component';\r\nimport { WidgetComponent } from './widget/widget.component';\r\nimport {  ValuesModule } from './values/values.module';\r\n\r\nimport { ControllerPadComponent } from './controller-pad/controller-pad.component';\r\nimport { NipplePadComponent } from './nipple-pad/nipple-pad.component';\r\nimport { CamViewerComponent } from './cam-viewer/cam-viewer.component';\r\nimport { ActionComponent } from './action/action.component';\r\nimport { UIComponentsModule} from './ui-components/ui-components.module';\r\nimport { UserLogComponent} from './log/user-log/user-log.component';\r\nimport { AppHealthComponent} from './app-health/app-health.component';\r\nimport { UserMessagesComponent } from './log/messages/messages.component';\r\nimport { UserMessageButtonComponent } from './log/message-button/message-button.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    NGXKerviPipesModule,\r\n    NgxKerviModule,\r\n    ValuesModule,\r\n    NgZorroAntdModule,\r\n    FlexLayoutModule,\r\n    UIComponentsModule\r\n  ],\r\n  declarations: [\r\n    DashboardPanelComponent,\r\n    WidgetComponent,\r\n    ControllerPadComponent,\r\n    CamViewerComponent,\r\n    ActionComponent,\r\n    UserLogComponent,\r\n    UserMessageButtonComponent,\r\n    UserMessagesComponent,\r\n    AppHealthComponent,\r\n    NipplePadComponent\r\n  ],\r\n  exports: [\r\n    DashboardPanelComponent,\r\n    ControllerPadComponent,\r\n    CamViewerComponent,\r\n    UserLogComponent,\r\n    UserMessageButtonComponent,\r\n    UserMessagesComponent,\r\n    AppHealthComponent,\r\n    NipplePadComponent\r\n  ]\r\n})\r\nexport class KerviZorroModule { }\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { KerviActionComponent } from 'ngx-kervi';\r\n//import { TemplateService } from '../../template.service';\r\n\r\n@Component({\r\n  selector: 'kervi-action',\r\n  templateUrl: './media.component.html',\r\n  styleUrls: ['./media.component.scss'],\r\n})\r\n\r\nexport class ActionComponent extends KerviActionComponent implements OnInit {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n  ngOnInit() {\r\n   this.ngOnInitAction();\r\n  }\r\n}","/*\r\n * Public API Surface of kervi-zorro\r\n */\r\n\r\nexport * from './lib/kervi-zorro.service';\r\nexport * from './lib/kervi-zorro.module';\r\nexport * from './lib/dashboard-panel/dashboard-panel.component';\r\nexport * from './lib/controller-pad/controller-pad.component';\r\nexport * from './lib/app-health/app-health.component';\r\nexport * from './lib/cam-viewer/cam-viewer.component';\r\nexport * from './lib/media/media.component';\r\nexport * from './lib/log/message-button/message-button.component';\r\nexport * from './lib/log/messages/messages.component';\r\nexport * from './lib/log/user-log/user-log.component';\r\n\r\nexport { DashboardPanelComponent } from './lib/dashboard-panel/dashboard-panel.component';\r\nexport { NipplePadComponent } from './lib/nipple-pad/nipple-pad.component'","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n","// Copyright (c) 2019, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\r\nimport { KerviDirectoryComponent } from 'ngx-kervi';\r\nimport { NzFormatEmitEvent, NzTreeNodeOptions, NzTreeComponent } from 'ng-zorro-antd';\r\nimport { ImgViewerComponent } from '../image-viewer/image-viewer.component';\r\n\r\n@Component({\r\n  selector: 'app-media',\r\n  templateUrl: './media.component.html',\r\n  styleUrls: ['./media.component.css']\r\n})\r\nexport class MediaComponent extends KerviDirectoryComponent implements OnInit {\r\n  @ViewChild('nzTreeComponent') nzTreeComponent: NzTreeComponent;\r\n  @ViewChild('imageViewer', { static: true }) imageViewer: ImgViewerComponent;\r\n  @Input() files = [\r\n\r\n  ];\r\n  showImageViewer = false;\r\n  directoryFiles = {};\r\n\r\n\r\n  @Input() nodes: NzTreeNodeOptions[] = [\r\n    { title: 'root', key: '/' }\r\n  ];\r\n\r\n  defaultExpandedKeys = [];\r\n\r\n  constructor( ) {\r\n    super();\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  nzEvent(event: Required<NzFormatEmitEvent>): void {\r\n    console.log('trev', event);\r\n    const node = event.node;\r\n    if (event.eventName === 'click') {\r\n      this.files = [];\r\n      this.kerviService.GetDirectory(node.key).then( d => {\r\n        const files = d.files$.getValue();\r\n        for(const file of files) {\r\n          if (file.isFile){\r\n            this.kerviService.GetThumbnail(file.path).then( t =>{\r\n              this.files.push( { title: file.name, key: file.path, thumb: t});\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n    if (event.eventName === 'expand') {\r\n      if (node && node.getChildren().length === 0 && node.isExpanded) {\r\n        this.kerviService.GetDirectory(node.key).then( d => {\r\n          const files = d.files$.getValue();\r\n          const dirs = [];\r\n          for(const file of files) {\r\n            if (!file.isFile) {\r\n              dirs.push({ title: file.name, key: file.path, isLeaf: false});\r\n            }\r\n          }\r\n          node.addChildren(dirs);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  showImage(filePath) {\r\n    this.showImageViewer = true;\r\n    this.imageViewer.imgTotal = this.files.length;\r\n    this.kerviService.GetFile(filePath).then( f => {\r\n      this.imageViewer.images = ['data:image/png;base64,' + f];\r\n      this.imageViewer.showImg();\r\n    });\r\n  }\r\n\r\n  nextImage(event){\r\n    console.log(\"ni\", event);\r\n    const filePath = this.files[this.imageViewer.currentImgIndex-1].key;\r\n    this.kerviService.GetFile(filePath).then( f => {\r\n      this.imageViewer.images = ['data:image/png;base64,' + f];\r\n      this.imageViewer.showImg();\r\n    });\r\n  }\r\n\r\n  closeViewer(){\r\n    this.showImageViewer = false;\r\n  }\r\n}\r\n","<div [hidden]=\"!showImageViewer\">\r\n\t<nz-picture-viewer (closeViewer)=\"closeViewer()\" (prevChange)='nextImage($event)' (nextChange)='nextImage($event)' #imageViewer></nz-picture-viewer>\r\n</div>\r\n<div [hidden]=\"showImageViewer\">\r\n\t<div style=\"max-height: 80%;overflow-y: auto; \" nz-col nzSpan=\"8\">\r\n\t\t<nz-tree [nzData]=\"nodes\" [nzExpandedKeys]=\"defaultExpandedKeys\" nzAsyncData (nzClick)=\"nzEvent($event)\" (nzExpandChange)=\"nzEvent($event)\"> </nz-tree>\r\n\t</div>\r\n\t<div style=\"min-height:40px;max-height: 300px;overflow-y: auto; border-left: 1px solid black;\" nz-col nzSpan=\"16\">\r\n\t\t\r\n\t\t<nz-empty *ngIf=\"files.length==0\" nzNotFoundContent=\"No files in folder\"></nz-empty>\r\n\t\t<div (dblclick)=\"showImage(file.key)\"  style=\"display: inline-block;margin-left:5px; margin-bottom:5px;\" *ngFor=\"let file of files\" nzHoverable >\r\n\t\t\t<img alt=\"example\" [attr.src]=\"'data:image/png;base64,' + file.thumb\" />\r\n\t\t</div>\r\n\t\t<!-- <nz-card style=\"display: inline-block;\" *ngFor=\"let file of files\" nzHoverable style=\"width:140px\" >\r\n\t\t\t<img alt=\"example\" [attr.src]=\"'data:image/png;base64,' + file.data\" />\r\n\t\t\t<ng-template #coverTemplate>\r\n\t\t\t\t\r\n\t\t\t</ng-template>\r\n\t\t</nz-card> -->\r\n\t\t\r\n\t</div>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ConnectionState } from \"ngx-kervi\";\r\nimport { NGXKerviService } from \"ngx-kervi\";\r\n@Component({\r\n  selector: 'app-connect',\r\n  templateUrl: './connect.component.html',\r\n  styleUrls: ['./connect.component.css']\r\n})\r\nexport class ConnectComponent implements OnInit {\r\n\r\n  current = 1;\r\n\r\n  constructor(private kerviService:NGXKerviService,) { \r\n    \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    this.kerviService.connectionState$.subscribe(function(connectedState){\r\n      console.log(\"connected service state\",connectedState, self);\r\n      if (connectedState == ConnectionState.disconnected){\r\n        self.current=1\r\n      }\r\n      if (connectedState == ConnectionState.loading){\r\n        self.current=2\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<nz-layout>\r\n    <nz-content class=\"kervi-app-initializing\">\r\n      <div nz-row>\r\n        <div nz-col nzSpan=\"12\" nzOffset=\"9\">\r\n          <nz-steps [nzCurrent]=\"current\" nzDirection=\"vertical\">\r\n            <nz-step nzTitle=\"Initializing\" nzDescription=\"&nbsp;\" nzIcon=\"setting\" ></nz-step>\r\n            <nz-step nzTitle=\"Connecting\" nzDescription=\"&nbsp;\" nzIcon=\"wifi\"></nz-step>\r\n            <nz-step nzTitle=\"Loading dashboards\" nzDescription=\"&nbsp;\" nzIcon=\"download\"></nz-step>\r\n          </nz-steps>\r\n        </div>\r\n      </div>\r\n    </nz-content>\r\n</nz-layout>\r\n","\r\n//based on https://github.com/LZHD/ng-picture-viewer\r\n//Copyright 2019 Tim Wentzlau\r\n// Licensed under MIT\r\nimport {\r\n    AfterViewInit,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Inject,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Optional,\r\n    Output,\r\n    Renderer2\r\n  } from '@angular/core';\r\n  import {DOCUMENT} from '@angular/common';\r\n  import ImageViewer from 'iv-viewer';\r\n  import {FullScreenViewer} from 'iv-viewer';\r\n  import {ImgViewerConfig} from './image-viewer.config';\r\n  import {IvViewerType} from './interfaces/iv-viewer.type';\r\n  import {ImgViewerType} from './interfaces/img-viewer.type';\r\n\r\n  @Component({\r\n    selector: 'nz-picture-viewer',\r\n    templateUrl: './image-viewer.component.html',\r\n    styleUrls: ['./image-viewer.component.scss']\r\n  })\r\n  export class ImgViewerComponent implements OnInit, OnDestroy, AfterViewInit {\r\n    @Input() imgViewerClass: string;\r\n    @Input() images: string[] = [];\r\n    @Input() showOperate = true;\r\n    @Input() zoom = true;\r\n    @Input() rotate = true;\r\n    @Input() reset = true;\r\n    @Input() fullscreen = true;\r\n    @Input() download = true;\r\n    @Input() defaultName = 'download';\r\n    @Output() prevChange: EventEmitter<number> = new EventEmitter<number>();\r\n    @Output() nextChange: EventEmitter<number> = new EventEmitter<number>();\r\n    @Output() closeViewer: EventEmitter<number> = new EventEmitter();\r\n    ROTATE_ANGLE = 90;\r\n    imageViewer$: any;\r\n    fullScreenViewer$: any;\r\n    element: HTMLElement;\r\n    currentImgIndex = 1;\r\n    imgTotal = 0;\r\n    zoomValue = 100;\r\n    isVertical = false;\r\n    imgRotate = 0;\r\n    imgViewerConfig: ImgViewerConfig;\r\n    ivViewerType: IvViewerType;\r\n    imageViewerType: ImgViewerType;\r\n\r\n    constructor(\r\n      private el: ElementRef,\r\n      private renderer: Renderer2,\r\n      @Inject(DOCUMENT) private doc: Document,\r\n      @Optional() private config: ImgViewerConfig\r\n    ) {\r\n      this.element = this.el.nativeElement as HTMLElement;\r\n      this.imgViewerConfig = new ImgViewerConfig();\r\n      this.ivViewerType = this.imgViewerConfig.ivViewerType;\r\n      this.imageViewerType = this.imgViewerConfig.imageViewerType;\r\n      if (this.config && this.config.ivViewerType) {\r\n        this.ivViewerType = Object.assign(this.ivViewerType, this.config.ivViewerType);\r\n      }\r\n      if (this.config && this.config.imageViewerType) {\r\n        this.imageViewerType = Object.assign(this.imageViewerType, this.config.imageViewerType);\r\n      }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n      this.imgTotal = this.images.length;\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n      this.initImgViewer();\r\n    }\r\n\r\n    zoomInImg(): void {\r\n      this.zoomValue += 10;\r\n      this.imageViewer$.zoom(this.zoomValue);\r\n    }\r\n\r\n    zoomOutImg(): void {\r\n      if (this.zoomValue === 100) {\r\n        return;\r\n      }\r\n      this.zoomValue -= 10;\r\n      if (this.zoomValue < 0) {\r\n        this.zoomValue = 0;\r\n      }\r\n      this.imageViewer$.zoom(this.zoomValue);\r\n    }\r\n\r\n    rotateImg(isClockwise: boolean): void {\r\n      this.beforeRotateImg().then((time: number) => {\r\n        if (isClockwise) {\r\n          this.imgRotate += this.ROTATE_ANGLE;\r\n        } else {\r\n          this.imgRotate -= this.ROTATE_ANGLE;\r\n        }\r\n        this.isVertical = !this.isVertical;\r\n        time <= 0 ? this.addImgRotate() : setTimeout(() => this.addImgRotate(), time);\r\n      });\r\n    }\r\n\r\n    fullscreenImg(): void {\r\n      this.beforeRotateImg().then((time: number) => {\r\n        if (time <= 0) {\r\n          this.fullScreenViewer$.show(this.images[this.currentImgIndex - 1]);\r\n          this.addImgRotate(false);\r\n        } else {\r\n          setTimeout(() => {\r\n            this.fullScreenViewer$.show(this.images[this.currentImgIndex - 1]);\r\n            this.addImgRotate(false);\r\n          }, time);\r\n        }\r\n      });\r\n    }\r\n\r\n    downloadImg(): void {\r\n      const download = this.renderer.createElement('a');\r\n      this.renderer.setAttribute(download, 'download', `${this.defaultName}-${this.currentImgIndex}`);\r\n      this.renderer.setAttribute(download, 'display', 'none');\r\n      this.renderer.setAttribute(download, 'href', this.images[this.currentImgIndex - 1]);\r\n      this.renderer.setAttribute(download, 'target', '_blank');\r\n      this.renderer.appendChild(this.element, download);\r\n      download.click();\r\n      this.renderer.removeChild(this.renderer, download);\r\n    }\r\n\r\n    prevImg(): void {\r\n      this.isVertical = false;\r\n      this.currentImgIndex--;\r\n      if (this.currentImgIndex <= 0) {\r\n        this.currentImgIndex = this.imgTotal;\r\n      }\r\n      //this.showImg();\r\n      this.prevChange.emit(this.currentImgIndex);\r\n    }\r\n\r\n    nextImg(): void {\r\n      this.isVertical = false;\r\n      this.currentImgIndex++;\r\n      if (this.currentImgIndex > this.imgTotal) {\r\n        this.currentImgIndex = 1;\r\n      }\r\n      //this.showImg();\r\n      this.nextChange.emit(this.currentImgIndex);\r\n    }\r\n\r\n    closeImageViewer(){\r\n      this.closeViewer.emit();\r\n    }\r\n\r\n    private initImgViewer(): void {\r\n      this.imageViewer$ = new ImageViewer(this.element.querySelector('.img-viewer-panel-body-content'), this.ivViewerType);\r\n      this.fullScreenViewer$ = new FullScreenViewer(this.ivViewerType);\r\n      //this.showImg();\r\n    }\r\n\r\n    private addImgRotate(isAnimation = true): void {\r\n      let scale = '';\r\n      if (this.isVertical && this.isImgOverVertical()) {\r\n        scale = `scale(${this.getScale()})`;\r\n      }\r\n      const rotate = `rotate(${this.imgRotate}deg)`;\r\n      if (isAnimation) {\r\n        this.addTransition('iv-snap-image');\r\n        this.addTransition('iv-small-image');\r\n      }\r\n      this.setImgRotate('iv-snap-image', rotate, scale);\r\n      this.setImgRotate('iv-small-image', rotate, scale);\r\n      setTimeout(() => {\r\n        if (isAnimation) {\r\n          this.removeAnimation('iv-snap-image');\r\n          this.removeAnimation('iv-small-image');\r\n        }\r\n      }, 500);\r\n    }\r\n\r\n    private async beforeRotateImg(): Promise<any> {\r\n      this.zoomValue = 100;\r\n      const time: number = this.imageViewer$._state.zoomValue - this.zoomValue;\r\n      await this.imageViewer$.resetZoom();\r\n      await this.imageViewer$.refresh();\r\n      return time === 0 ? 0 : 500;\r\n    }\r\n\r\n    private beforeShowImg(): void {\r\n      this.imgRotate = 0;\r\n      this.isVertical = false;\r\n      const currentImg = this.element.querySelector('.iv-small-image');\r\n      if (!!currentImg) {\r\n        this.renderer.removeChild(this.element, currentImg);\r\n      }\r\n      this.setStyle('iv-loader', 'visibility', 'auto');\r\n      this.setStyle('options-image-viewer', 'visibility', 'inherit');\r\n    }\r\n\r\n    showImg(): void {\r\n      this.beforeShowImg();\r\n      \r\n      this.imageViewer$.load(this.images[0]);\r\n    }\r\n\r\n    private isImgOverVertical(): boolean {\r\n      const imgViewerHeight = this.element.clientHeight;\r\n      const currentImgWidth = this.element.querySelector('.iv-small-image').clientWidth;\r\n      return imgViewerHeight < currentImgWidth + 10;\r\n    }\r\n\r\n    private getScale(): number {\r\n      const imgViewerHeight = this.element.querySelector('.img-viewer-panel-body-content').clientHeight;\r\n      const currentImgWidth = this.element.querySelector('.iv-small-image').clientWidth;\r\n      const differenceWidth = currentImgWidth - imgViewerHeight;\r\n      if (differenceWidth >= 250 && differenceWidth < 300) {\r\n        return differenceWidth / imgViewerHeight - 0.1;\r\n      } else if (differenceWidth >= 300 && differenceWidth < 400) {\r\n        return differenceWidth / imgViewerHeight - 0.15;\r\n      } else if (differenceWidth >= 400) {\r\n        return differenceWidth / imgViewerHeight - 0.32;\r\n      } else if (differenceWidth < 0) {\r\n        return 1;\r\n      }\r\n      return 0.6;\r\n    }\r\n\r\n    private addTransition(node): void {\r\n      this.setStyle(node, 'transition', '0.5s linear');\r\n    }\r\n\r\n    private removeAnimation(node): void {\r\n      this.setStyle(node, 'transition', 'auto');\r\n    }\r\n\r\n    private setImgRotate(node, roate, scale): void {\r\n      this.setStyle(node, 'transform', `${roate} ${scale}`);\r\n    }\r\n\r\n    private setStyle(node, name, value): void {\r\n      const elements = this.doc.querySelectorAll(`.${node}`);\r\n      elements.forEach(ele => this.renderer.setStyle(ele, name, value));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n      if (!!this.imageViewer$) {\r\n        this.imageViewer$ = this.imageViewer$.destroy();\r\n      }\r\n      if (!!this.fullScreenViewer$) {\r\n        this.fullScreenViewer$ = this.fullScreenViewer$.destroy();\r\n      }\r\n    }\r\n  }\r\n","<div class=\"img-viewer {{imgViewerClass}}\">\r\n    <div class=\"img-viewer-panel\">\r\n      <div class=\"img-viewer-panel-header\">\r\n        <div nz-row>\r\n          <div nz-col nzSpan=\"3\">\r\n              <i nz-icon (click)=\"closeImageViewer()\" nzType=\"rollback\" nzTheme=\"outline\"></i>\r\n          </div>\r\n        <div nz-col nzSpan=\"21\">\r\n          <div *ngIf=\"showOperate\" class=\"img-viewer-panel-header-operation\">\r\n            <span nz-tooltip nzTooltipPlacement=\"bottom\" [nzTooltipTitle]=\"imageViewerType.zoomInToolTip\" *ngIf=\"zoom\" (click)=\"zoomInImg()\"><i nz-icon nzType=\"zoom-in\"></i></span>\r\n            <span nz-tooltip nzTooltipPlacement=\"bottom\" [nzTooltipTitle]=\"imageViewerType.zoomOutToolTip\" *ngIf=\"zoom\" (click)=\"zoomOutImg()\"><i nz-icon nzType=\"zoom-out\"></i></span>\r\n            <span nz-tooltip nzTooltipPlacement=\"bottom\" [nzTooltipTitle]=\"imageViewerType.rotateLeftToolTip\" *ngIf=\"rotate\" (click)=\"rotateImg(false)\"><i nz-icon nzType=\"undo\"></i></span>\r\n            <span nz-tooltip nzTooltipPlacement=\"bottom\" [nzTooltipTitle]=\"imageViewerType.rotateRightToolTip\" *ngIf=\"rotate\" (click)=\"rotateImg(true)\"><i nz-icon nzType=\"redo\"></i></span>\r\n            <span nz-tooltip nzTooltipPlacement=\"bottom\" [nzTooltipTitle]=\"imageViewerType.resetToolTip\" *ngIf=\"reset\" (click)=\"showImg()\"><i nz-icon nzType=\"sync\"></i></span>\r\n            <span nz-tooltip nzTooltipPlacement=\"bottom\" [nzTooltipTitle]=\"imageViewerType.fullScreenToolTip\" *ngIf=\"fullscreen\" (click)=\"fullscreenImg()\"><i nz-icon nzType=\"fullscreen\"></i></span>\r\n            <span nz-tooltip nzTooltipPlacement=\"bottom\" [nzTooltipTitle]=\"imageViewerType.downloadToolTip\" *ngIf=\"download\" (click)=\"downloadImg()\"><i nz-icon nzType=\"download\"></i></span>\r\n          </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      <div class=\"img-viewer-panel-body\" [class.img-viewer-panel-body-has-footer]=\"images.length > 1\">\r\n        <div class=\"img-viewer-panel-body-content\">\r\n  \r\n        </div>\r\n        <span *ngIf=\"imgTotal > 1\" class=\"img-viewer-panel-body-prev\" (click)=\"prevImg()\"><i nz-icon nzType=\"left\"></i></span>\r\n        <span *ngIf=\"imgTotal > 1\" class=\"img-viewer-panel-body-next\" (click)=\"nextImg()\"><i nz-icon nzType=\"right\"></i></span>\r\n      </div>\r\n      <div *ngIf=\"imgTotal > 1\" class=\"img-viewer-panel-footer\">\r\n      {{currentImgIndex}} / {{imgTotal}}\r\n      </div>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { NGXKerviService } from 'ngx-kervi'\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  userName: AbstractControl;\r\n  password: AbstractControl;\r\n  invalidCredentials:boolean = false;\r\n  \r\n  \r\n  constructor(fb: FormBuilder, private kerviService:NGXKerviService) {\r\n    var self = this;\r\n    this.loginForm = fb.group({  \r\n    'userName':  ['', Validators.required],\r\n    'password':  ['', Validators.required]  \r\n    });\r\n    \r\n    this.userName = this.loginForm.controls['userName'];\r\n    this.password = this.loginForm.controls['password']; \r\n   }\r\n\r\n   submitForm(): void {\r\n     var self = this;\r\n     if (this.loginForm.valid){\r\n      console.log(\"fv\");\r\n      this.kerviService.authenticate(this.userName.value, this.password.value)\r\n      .then(function(){\r\n         console.log(\"login ok\");\r\n       }).catch(function(){\r\n         console.log(\"login error\");\r\n         self.invalidCredentials=true;\r\n       });\r\n     } else {\r\n       console.log(\"fve\");\r\n    //   // for (const i in this.loginForm.controls) {\r\n    //   //   this.loginForm.controls[i].markAsDirty();\r\n    //   //   this.loginForm.controls[i].updateValueAndValidity();\r\n    //   // }\r\n     }\r\n    \r\n  } \r\n  ngOnInit() {\r\n  }\r\n}\r\n","<nz-layout>\r\n  <nz-content class=\"kervi-app-initializing\">\r\n    <div nz-row>\r\n      <div nz-col nzSpan=\"12\" nzOffset=\"6\">\r\n        <form nz-form \r\n          [formGroup]=\"loginForm\" \r\n          (ngSubmit)=\"submitForm()\"\r\n        >\r\n            <nz-form-item>\r\n              <nz-form-control>\r\n                <nz-input-group [nzPrefix]=\"prefixUser\">\r\n                  <input formControlName=\"userName\" nz-input placeholder=\"Username\" />\r\n                </nz-input-group>\r\n                <nz-form-explain *ngIf=\"loginForm.get('userName')?.dirty && loginForm.get('userName')?.errors\"\r\n                  >Please input your username!</nz-form-explain\r\n                >\r\n              </nz-form-control>\r\n            </nz-form-item>\r\n            <nz-form-item>\r\n              <nz-form-control>\r\n                <nz-input-group [nzPrefix]=\"prefixLock\">\r\n                  <input formControlName=\"password\" nz-input type=\"password\" placeholder=\"Password\" />\r\n                </nz-input-group>\r\n                <nz-form-explain *ngIf=\"loginForm.get('password')?.dirty && loginForm.get('password')?.errors\"\r\n                  >Please input your Password!</nz-form-explain\r\n                >\r\n              </nz-form-control>\r\n            </nz-form-item>\r\n            <nz-form-item>\r\n              <nz-form-control>\r\n                <button nz-button nzType=\"primary\" [disabled]=\"!loginForm.valid\"> {{( 'login' | translate)}}</button>\r\n                <nz-form-explain *ngIf=\"invalidCredentials\"\r\n                  >Invalid user name or password</nz-form-explain\r\n                >\r\n              </nz-form-control>\r\n            </nz-form-item>\r\n          </form>\r\n          <ng-template #prefixUser><i nz-icon nzType=\"user\"></i></ng-template>\r\n          <ng-template #prefixLock><i nz-icon nzType=\"lock\"></i></ng-template>\r\n      </div>\r\n    </div>\r\n  </nz-content>\r\n</nz-layout>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import {IvViewerType} from './interfaces/iv-viewer.type';\r\nimport {ImgViewerType} from './interfaces/img-viewer.type';\r\n\r\nexport class ImgViewerConfig {\r\n  ivViewerType?: IvViewerType = {\r\n    zoomValue: 100,\r\n    maxZoom: 500,\r\n    snapView: false,\r\n    refreshOnResize: true,\r\n    zoomOnMouseWheel: true,\r\n  };\r\n  imageViewerType?: ImgViewerType = {\r\n    zoomInToolTip: 'Zoom in',\r\n    zoomOutToolTip: 'Zoom put',\r\n    rotateLeftToolTip: 'Rotate left',\r\n    rotateRightToolTip: 'Rotate right',\r\n    resetToolTip: 'Reset tools',\r\n    fullScreenToolTip: 'Full screen',\r\n    downloadToolTip: 'Download',\r\n  };\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nexport class  KerviSpineBase {\r\n\r\n    public isConnected = false;\r\n    public doAuthenticate = false;\r\n\r\n    sessionId = null;\r\n    queryHandlers = [];\r\n    commandHandlers = [];\r\n    eventHandlers = [];\r\n    streamHandlers = [];\r\n    rpcQueue = {};\r\n    ready = false;\r\n    messageId = 0;\r\n    sensors = {};\r\n    controllers = {};\r\n    sensorTypes = [];\r\n    controllerTypes = [];\r\n    visionRegions = [];\r\n    application = null;\r\n    allowAnonymous = true;\r\n    firstOnOpen = true;\r\n    messageCount = 0;\r\n    mpsTime = new Date;\r\n    mps = 0;\r\n\r\n    protected websocket = null;\r\n\r\n    public options: any = {\r\n            userName: 'anonymous',\r\n            password: null,\r\n            address: null,\r\n            onOpen: null,\r\n            onClose: null,\r\n            onAuthenticate: null,\r\n            onAuthenticateFailed: null,\r\n            onAuthenticateStart: null,\r\n            onLogOff: null,\r\n            onMPS: null,\r\n            autoConnect: true,\r\n            targetScope: null,\r\n            protocol: 'ws',\r\n            apiToken: null\r\n    }\r\n\r\n    constructor(public constructorOptions) {\r\n        console.log('Kervi base spine init', this.options, constructorOptions);\r\n        this.options = this.extend(this.options, constructorOptions);\r\n        console.log('kbo', this.options);\r\n        this.connect();\r\n        const self = this;\r\n        setInterval(\r\n            function() {\r\n                var hangingNodes = []\r\n                for(let id in self.rpcQueue) {\r\n                    var query = self.rpcQueue[id];\r\n                    if (query['callbackTimeout']) {\r\n                        if (Date.now() - query['ts'] > query['timeout']){\r\n                            var callback = query['callbackTimeout']; \r\n                            hangingNodes.push(id);\r\n                            callback.call(self.options.targetScope);\r\n                        }\r\n                    }\r\n                }\r\n                for(let id of hangingNodes) {\r\n                    delete self.rpcQueue[id];\r\n                }\r\n            }\r\n        , 1);\r\n    }\r\n\r\n    protected extend(...p: any[])\r\n    {\r\n        for (let i = 1; i < p.length; i++) {\r\n            for(let key in p[i]) {\r\n                if(p[i].hasOwnProperty(key)) {\r\n                    p[0][key] = p[i][key];\r\n                }\r\n            }\r\n        }\r\n        return p[0];\r\n    }\r\n\r\n    protected addRPCCallback(id: string, callback, callbackTimeout, timeout) {\r\n        if (callback) {\r\n            this.rpcQueue[id] = {\r\n                'callback': callback,\r\n                'callbackTimeout': callbackTimeout,\r\n                'timeout': timeout,\r\n                'ts': Date.now(),\r\n             };\r\n        }\r\n    }\r\n\r\n    protected handleRPCResponse(message){\r\n        if (message.id in this.rpcQueue){\r\n            var callback = this.rpcQueue[message.id]['callback'];\r\n            if (callback){\r\n                delete this.rpcQueue[message.id];\r\n                callback.call(this.options.targetScope,message.response,message.response);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected handleEvent(message){\r\n        // console.log('ev', message)\r\n        const eventName = message.event;\r\n        const id = message.id;\r\n\r\n        let eventPath=eventName;\r\n        if (id) {\r\n            eventPath += '/' + id;\r\n        }\r\n\r\n        let value = null;\r\n        if(message.args && message.args.length) {\r\n            value = message.args[0];\r\n        }\r\n        for(var n = 0; (n < this.eventHandlers.length); n++)\r\n        {\r\n            let h = this.eventHandlers[n];\r\n            if (h.eventName === eventPath) \r\n                h.callback.call(value,id,value);\r\n            else if (h.eventName === eventName)\r\n                h.callback.call(value,id,value);\r\n        }\r\n    }\r\n\r\n    protected handleStream(message, streamBlob) {\r\n        const streamTag = message.streamId + '/' + message.streamEvent ;\r\n        for (let n = 0; (n < this.streamHandlers.length); n++) {\r\n            const h = this.streamHandlers[n];\r\n            if (h.streamTag === streamTag) {\r\n                h.callback.call(message.streamId, message.streamId, message.streamEvent, streamBlob);\r\n            } else if (h.streamTag === message.streamId) {\r\n                h.callback.call(message.streamId, message.streamId, message.streamEvent, streamBlob);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected handleCommand(message){\r\n        console.log('cmd',this,message);\r\n        var command=message.command\r\n        \r\n        var args=null;\r\n        if(message.args && message.args.length){\r\n            args=message.args[0];\r\n        }\r\n        \r\n        for(var n=0;(n<this.commandHandlers.length);n++)\r\n        {\r\n            var c=this.commandHandlers[n];\r\n            if (c.command==command)\r\n                c.callback.call(this,args);\r\n        }\r\n    }\r\n\r\n    protected connect() {\r\n\r\n    }\r\n\r\n    protected onOpen(evt) {\r\n        console.log('Kervi open', this, evt);\r\n\r\n        this.isConnected = true;\r\n        this.eventHandlers = [];\r\n        this.streamHandlers = [];\r\n        this.commandHandlers = [];\r\n        this.queryHandlers = [];\r\n        console.log('Kervi spine ready');\r\n\r\n    }\r\n\r\n    protected onClose(evt) {\r\n        console.log('Kervi spine on close', evt);\r\n        this.isConnected = false;\r\n        const self = this;\r\n        if (this.options.onClose)\r\n            this.options.onClose.call(this.options.targetScope,evt);\r\n        this.firstOnOpen = true;\r\n        if (this.options.autoConnect) {\r\n            setTimeout(function() {\r\n                self.connect();\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    public authenticate(userName, password) {\r\n\r\n    }\r\n\r\n    public logoff() {\r\n\r\n    }\r\n\r\n    protected onMessage(evt) {\r\n\r\n    }\r\n\r\n    protected onError(evt) {\r\n        console.log('Kervi on error', evt);\r\n    }\r\n\r\n    public addCommandHandler (command: string, callback) {\r\n\r\n    }\r\n\r\n    public addQueryHandler(query: string, callback) {\r\n\r\n    }\r\n\r\n    public addEventHandler = function(eventName: string, id: string, callback) {\r\n\r\n    };\r\n\r\n    public addStreamHandler = function(streamId: string, streamEvent: string[], callback) {\r\n\r\n    }\r\n\r\n    public removeStreamHandler = function(streamId: string, streamEvent: string[], callback) {\r\n\r\n    }\r\n\r\n    public sendCommand(command: string, ...p: any[]) {\r\n\r\n    }\r\n\r\n    public sendQuery(query, ...p: any[]) {\r\n\r\n    }\r\n\r\n    public triggerEvent(eventName: string, id: string) {\r\n\r\n    }\r\n\r\n    public streamData(stream_id: string, event: string , data: any) {\r\n\r\n    }\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\nimport {KerviSpineBase} from './kervi-spinebase'\r\nexport class  KerviWSSpine extends KerviSpineBase{\r\n    constructor(public constructorOptions){\r\n        super(constructorOptions);\r\n        console.log('kervi spine constructor');\r\n    }\r\n\r\n    protected connect() {\r\n        if (this.isConnected) {\r\n            console.log('Kervi is connected');\r\n            return;\r\n        }\r\n        const self = this;\r\n        this.websocket = new WebSocket(this.options.protocol + '://' + this.options.address);\r\n        this.websocket.binaryType = 'arraybuffer';\r\n        this.websocket.onopen = function(evt) {\r\n            console.log('kervi spine on open');\r\n            self.onOpen(evt);\r\n        };\r\n\r\n        this.websocket.onclose = function(evt) {\r\n            self.onClose(evt) ;\r\n        };\r\n\r\n        this.websocket.onmessage = function(evt) {\r\n            if (typeof evt.data === 'string') {\r\n                const message = JSON.parse(evt.data);\r\n                self.onMessage(message);\r\n            } else {\r\n                const jsonLen = new Int32Array(evt.data.slice(0, 4))[0];\r\n                const jsonBlob = evt.data.slice(4, jsonLen + 4);\r\n                const streamBlob = evt.data.slice(4 + jsonLen);\r\n                const utf8decoder = new TextDecoder();\r\n                const j = utf8decoder.decode(jsonBlob);\r\n                self.onMessage(JSON.parse(j), streamBlob);\r\n            }\r\n        };\r\n\r\n        this.websocket.onerror = function(evt) {\r\n            self.onError(evt);\r\n        };\r\n    }\r\n\r\n    public authenticate(userName, password) {\r\n        this.options.userName = userName;\r\n        this.options.password = password;\r\n        const cmd = {id: this.messageId++, 'messageType': 'authenticate', 'userName': userName, 'password': password};\r\n        console.log('swa', cmd);\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    }\r\n\r\n    public logoff() {\r\n        const cmd = {id: this.messageId++, 'messageType': 'logoff', 'session': this.sessionId};\r\n        this.sessionId = null;\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    }\r\n\r\n    onMessage(message, streamBlob= null) {\r\n        // if (message.messageType !== 'stream') {\r\n        //     console.log('on m', message);\r\n        // }\r\n        const self = this;\r\n        const now   = new Date();\r\n        const fpsDiff = now.getTime() - this.mpsTime.getTime();\r\n        const seconds = fpsDiff / 1000;\r\n        this.messageCount ++;\r\n        if (seconds > 1) {\r\n          this.mps = Math.round(this.messageCount / seconds);\r\n          this.messageCount = 0;\r\n          this.mpsTime = now;\r\n          if (this.options.onMPS) {\r\n             this.options.onMPS.call(this.options.targetScope, this.mps);\r\n          }\r\n        }\r\n\r\n        if (message.messageType === 'authenticate') {\r\n            console.log('authenticate');\r\n            this.doAuthenticate = true;\r\n            if (this.options.userName)\r\n                this.authenticate(this.options.userName, this.options.password)\r\n            else\r\n                this.options.onAuthenticate.call(this.options.targetScope,message);\r\n        } else if (message.messageType === 'authentication_failed') {\r\n            console.log('authentication failed', this.options.userName);\r\n            if (this.options.userName == 'anonymous') {\r\n                this.allowAnonymous = false;\r\n                this.options.userName = null;\r\n                this.options.password = null;\r\n                this.sessionId = null;\r\n                if (self.options.onLogOff) {\r\n                    self.options.onLogOff.call(self.options.targetScope, message);\r\n                }\r\n            } else\r\n                this.options.onAuthenticateFailed.call(this.options.targetScope,message);\r\n        }\r\n        else if (message.messageType === 'session_authenticated'){\r\n            const date = new Date();\r\n\r\n            date.setTime(date.getTime() + (2 * 60 * 60 * 1000));\r\n            const expires = '; expires=' + date.toUTCString();\r\n            this.sessionId = message.session;\r\n            document.cookie = 'kervisession' + '=' + message.session + expires + '; path=/';\r\n\r\n            setTimeout(function() {\r\n                console.log('to', self.options);\r\n                if (self.options.onOpen)\r\n                    self.options.onOpen.call(self.options.targetScope, self.firstOnOpen,message);\r\n                    self.firstOnOpen = false;\r\n            }, 100\r\n            );\r\n        } else if (message.messageType == 'session_logoff') { \r\n            if (self.options.onLogOff)\r\n                self.options.onLogOff.call(self.options.targetScope,message);\r\n            if (this.allowAnonymous && this.options.userName != 'anonymous'){\r\n                this.authenticate('anonymous', null)\r\n            } else {\r\n                self.options.userName = null;\r\n                self.options.password = null;\r\n                self.sessionId = null;\r\n            }\r\n        } else if (message.messageType=='response')\r\n            this.handleRPCResponse(message);\r\n        else if (message.messageType=='event')\r\n            this.handleEvent(message);\r\n        else if (message.messageType=='stream')\r\n            this.handleStream(message, streamBlob);\r\n        else if (message.messageType=='command')\r\n            this.handleCommand(message);\r\n        else\r\n            console.log('Kervi spine message unknown',this.rpcQueue, message);\r\n    }\r\n\r\n    onError(evt){\r\n        console.log('Kervi on error',evt);\r\n    }\r\n\r\n    public addCommandHandler (command:string,callback){\r\n        this.commandHandlers.push({command:command,callback:callback});\r\n        var cmd={id:this.messageId++,'messageType':'registerCommandHandler','command':command};\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n\r\n    public addQueryHandler(query:string,callback){\r\n        this.queryHandlers.push({query:query,callback:callback});\r\n        var cmd={id:this.messageId++,'messageType':'registerQueryHandler','query':query};\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n\r\n    public addEventHandler = function(eventName: string, id: string, callback){\r\n        if (id)\r\n            this.eventHandlers.push({'eventName':eventName+'/'+id,callback:callback});\r\n        else\r\n            this.eventHandlers.push({'eventName':eventName,callback:callback});\r\n        var cmd={id:this.messageId++,'messageType':'registerEventHandler','event':eventName,'eventId':id};\r\n        //console.log('add event handler',cmd);\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n\r\n    public addStreamHandler = function(streamId: string, streamEvents: string[], callback) {\r\n        if (streamEvents && streamEvents.length > 0) {\r\n            for (let event of streamEvents) {\r\n                this.streamHandlers.push({'streamTag': streamId + '/' + event, callback: callback});\r\n                const cmd = {\r\n                    id: this.messageId++,\r\n                    'messageType': 'registerStreamHandler',\r\n                    'streamId': streamId,\r\n                    'streamEvent': event\r\n                };\r\n                console.log('as', cmd);\r\n                this.websocket.send(JSON.stringify(cmd));\r\n            }\r\n        } else {\r\n            this.streamHandlers.push({'streamTag': streamId, callback: callback});\r\n            const cmd = {\r\n                id: this.messageId++,\r\n                'messageType': 'registerStreamHandler',\r\n                'streamId': streamId,\r\n                'streamEvent': event\r\n            };\r\n            console.log('as', cmd);\r\n            this.websocket.send(JSON.stringify(cmd));\r\n        }\r\n    };\r\n\r\n    public removeStreamHandler = function(streamId: string, streamEvents: string[]) {\r\n        if (streamEvents && streamEvents.length > 0) {\r\n            for (let event of streamEvents) {\r\n                //this.streamHandlers.push({'streamTag': streamId + '/' + event, callback: callback});\r\n                const cmd = {\r\n                    id: this.messageId++,\r\n                    'messageType': 'removeStreamHandler',\r\n                    'streamId': streamId,\r\n                    'streamEvent': event\r\n                };\r\n                console.log('as', cmd);\r\n                this.websocket.send(JSON.stringify(cmd));\r\n            }\r\n        } else {\r\n            //this.streamHandlers.push({'streamTag': streamId, callback: callback});\r\n            const cmd = {\r\n                id: this.messageId++,\r\n                'messageType': 'removeStreamHandler',\r\n                'streamId': streamId,\r\n                'streamEvent': event\r\n            };\r\n            console.log('as', cmd);\r\n            this.websocket.send(JSON.stringify(cmd));\r\n        }\r\n    };\r\n\r\n    public sendCommand(command:string,...p:any[]){\r\n        console.log('sec',arguments);\r\n        var args=[];\r\n        \r\n        var callback=null;\r\n\r\n        for (var i=0;(i<p.length);i++){\r\n            if (p[i] instanceof Function)\r\n                callback=p[i];\r\n            else\r\n                args.push(p[i]);\r\n        }\r\n        \r\n        var cmd={id:this.messageId++,'messageType':'command','command':command,'args':args};\r\n        if (callback && callback instanceof Function)\r\n            this.addRPCCallback(cmd.id.toString(), callback, null, 0);\r\n        \r\n        console.log('sendCommand',this,cmd);\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n\r\n    public sendQuery(query,...p:any[]){\r\n        var args=[];\r\n        var callback=null;\r\n        var callbackTimeout = null\r\n        var timeout = 10000\r\n        for (var i=0;(i<p.length);i++){\r\n            if (p[i] instanceof Function)\r\n                if (!callback) \r\n                    callback=p[i];\r\n                else\r\n                    callbackTimeout = p[i];\r\n            else{\r\n                if (callbackTimeout)\r\n                    timeout = p[i]\r\n                else\r\n                    args.push(p[i]);\r\n            }\r\n        }\r\n         \r\n        var cmd={id:this.messageId++,'messageType':'query','query':query,'args':args};\r\n        this.addRPCCallback(cmd.id.toString(),callback, callbackTimeout, timeout);\r\n        console.log('sendQuery', callback,cmd);\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n\r\n    public triggerEvent(eventName:string,id:string){\r\n        var e={id:this.messageId++,'messageType':'event','event':eventName,'args':arguments};\r\n        this.websocket.send(JSON.stringify(e));\r\n    };\r\n}","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\nimport {KerviSpineBase} from \"./kervi-spinebase\";\r\ndeclare var Stomp:any;\r\nexport class  KerviRMQSpine extends KerviSpineBase {\r\n\tprivate socketSession:null;\r\n\tprivate exchange = \"/exchange/\";\r\n\t\r\n\tconstructor(public constructorOptions){\r\n\t\tsuper(constructorOptions);\r\n\t\tconsole.log(\"Kervi io spine init y\", this.options,constructorOptions);\r\n\t\t\r\n\t}\r\n\r\n\tprivate onMQError(frame){\r\n\t\tconsole.log(\"MQ error\", frame);\r\n\t}\r\n\r\n\t\r\n\tprotected connect(){\r\n\t\tif (this.isConnected){\r\n\t\t\tconsole.log(\"Kervi is connected\");\r\n\t\t\treturn\r\n\t\t}\r\n\t\tvar self=this;\r\n\t\t//var mqUrl= this.options.protocol + \"://\" + this.options.address\r\n\t\tvar mqUrl= \"wss://mq.kervi.io:15673/ws\"\r\n\t\tthis.websocket = Stomp.client(mqUrl);\r\n\t\tthis.websocket.heartbeat.incoming = 0;\r\n\t\tself.exchange = \"/exchange/\" +  self.options.apiToken.app_id;\r\n\t\tconsole.log(\"exchange\", self.exchange)\r\n\t\tthis.websocket.connect(\r\n\t\t\tself.options.apiToken.api_token, \r\n\t\t\t\"ui\", \r\n\t\t\tfunction (frame){\r\n\t\t\t\tconsole.log(\"MQ connect\", frame, self.websocket, this, self);\r\n\t\t\t\tself.socketSession = frame.headers.session;\r\n\t\t\t\tself.exchange = \"/exchange/\" +  self.options.apiToken.app_id;\r\n\t\t\t\tself.websocket.subscribe(self.exchange, function(message) {\r\n\t\t\t\t\tconsole.log(\"mq \", message);\r\n\t\t\t\t\tif (message.headers[\"topic\"])\r\n\t\t\t\t\t\tmessage.headers[\"topic\"] = message.headers[\"topic\"].replace(new RegExp(\"\\\\c\",\"g\"),\":\");\r\n\t\t\t\t\tif (message.command==\"CONNECTED\"){\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (message.headers[\"topic\"] == \"ping\")\r\n\t\t\t\t\t\tself.onPing(message);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tself.onMessage(message);\r\n\t\t\t\t}, { });\r\n\t\t\t},\r\n\t\t\tself.onMQError, self.options.apiToken.api_channel);\r\n\t}\r\n\r\n\t\r\n\tonPing(message){\r\n\t\tconsole.log(\"onping\", this.options.appId, message, );\r\n\t\tvar self = this;\r\n\t\tif (!this.isConnected && message.headers[\"connection_id\"]== self.options.apiToken.app_id){\r\n\t\t\tthis.onOpen(message);\r\n\t\t\tthis.websocket.send(self.exchange, { topic:\"session:new\", router_id:message.headers[\"router_id\"], session_id:this.socketSession}, \"{}\")\t\r\n\t\t}\r\n\t}\r\n\r\n\tauthenticate(userName, password){\r\n\t\tthis.options.userName = userName;\r\n\t\tthis.options.password = password;\r\n\t\tif (this.options.onAuthenticateStart)\r\n\t\t\tthis.options.onAuthenticateStart.call(this.options.targetScope);\r\n\t\tvar cmd={id:this.messageId++,\"messageType\":\"authenticate\",\"userName\":this.options.userName, \"password\": this.options.password};\r\n\t\tthis.websocket.send(JSON.stringify(cmd));\r\n\t}\r\n\r\n\tlogoff(){\r\n\t\t//this.options.userName = this.allowAnonymous ? \"anonymous\" : null;\r\n\t\t//this.options.password = null;\r\n\r\n\t\tvar cmd={id:this.messageId++,\"messageType\":\"logoff\", \"session\": this.sessionId};\r\n\t\tthis.sessionId = null;\r\n\t\tthis.websocket.send(JSON.stringify(cmd));\r\n\t}\r\n\r\n\tonMessage(evt){\r\n\t\tconsole.log(\"on m\",evt);\r\n\t\tvar message=JSON.parse(evt.body);\r\n\t\tvar self = this;\r\n\t\tvar topic = evt.headers[\"topic\"];\r\n\r\n\t\tif (topic==\"authenticate\"){\r\n\t\t\tconsole.log(\"authenticate\");\r\n\t\t\tthis.doAuthenticate = true;\r\n\t\t\tif (this.options.userName)\r\n\t\t\t\tthis.authenticate(this.options.userName, this.options.password)\r\n\t\t\telse\r\n\t\t\t\tthis.options.onAuthenticate.call(this.options.targetScope,evt);\r\n\t\t}\r\n\t\telse if (topic==\"authentication_failed\"){\r\n\t\t\tconsole.log(\"authentication failed\", this.options.userName);\r\n\t\t\tif (this.options.userName == \"anonymous\") {\r\n\t\t\t\tthis.allowAnonymous = false;\r\n\t\t\t\tthis.options.userName = null;\r\n\t\t\t\tthis.options.password = null;\r\n\t\t\t\tthis.sessionId = null;\r\n\t\t\t\tconsole.log(\"x\", self.options)\r\n\t\t\t\tif (self.options.onLogOff){\r\n\t\t\t\t\tconsole.log(\"x1\")\r\n\t\t\t\t\tself.options.onLogOff.call(self.options.targetScope,evt);\r\n\t\t\t\t}\r\n\t\t\t} else\r\n\t\t\t\tthis.options.onAuthenticateFailed.call(this.options.targetScope,evt);\r\n\t\t}\r\n\t\telse if (topic==\"session_authenticated\"){\r\n\t\t\tvar date = new Date();\r\n\t\t\t\r\n        \tdate.setTime(date.getTime() + (2*60*60*1000));\r\n        \tvar expires = \"; expires=\" + date.toUTCString();\r\n\t\t\tthis.sessionId = message.session;\r\n\t\t\tdocument.cookie = \"kervisession\" + \"=\" + message.session + expires + \"; path=/\";\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tif (self.options.onOpen)\r\n\t\t\t\t\tself.options.onOpen.call(self.options.targetScope, self.firstOnOpen,evt);\r\n\t\t\t\t\tself.firstOnOpen = false;\r\n\t\t\t}, 100\r\n\t\t\t);\r\n\t\t\t\r\n\t\t} else if (topic == \"session_logoff\"){ \r\n\t\t\tif (self.options.onLogOff)\r\n\t\t\t\tself.options.onLogOff.call(self.options.targetScope,evt);\r\n\t\t\tif (this.allowAnonymous && this.options.userName != \"anonymous\"){\r\n\t\t\t\tthis.authenticate(\"anonymous\", null)\r\n\t\t\t} else {\r\n\t\t\t\tself.options.userName = null;\r\n\t\t\t\tself.options.password = null;\r\n\t\t\t\tself.sessionId = null;\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t} else if (evt.headers[\"type\"]==\"query_response\"){\r\n\t\t\tthis.handleRPCResponse({id:evt.headers[\"query_id\"], response:message});\r\n\t\t}else if (evt.headers[\"type\"]==\"event\"){\r\n\t\t\tconsole.log(\"e\", evt);\r\n\t\t\tvar topic_tag= evt.headers[\"topic\"].split(\":\");\r\n\t\t\t\r\n\t\t\tthis.handleEvent({event:topic_tag[1], id:topic_tag[2], args:message.args});\r\n\t\t}else if (message.messageType==\"command\")\r\n\t\t\tthis.handleCommand(message);\r\n\t\telse\r\n\t\t\tconsole.log(\"Kervi spine message unknown\",this.rpcQueue,evt);\r\n\t}\r\n\r\n\tonError(evt){\r\n\t\tconsole.log(\"Kervi on error\",evt);\r\n\t}\r\n\r\n\tpublic addCommandHandler (command:string,callback){\r\n\t\tthis.commandHandlers.push({command:command,callback:callback});\r\n\t\tvar cmd={id:this.messageId++,\"messageType\":\"registerCommandHandler\",\"command\":command};\r\n\t\t//this.websocket.send(JSON.stringify(cmd));\r\n\t\tthis.websocket.send(\r\n\t\t\tthis.exchange,\r\n\t\t\t{ topic:\"registerCommandHandler\", router_id:this.socketSession},\r\n\t\t\tJSON.stringify(cmd)\r\n\t\t)\t\r\n\t};\r\n\r\n\tpublic addQueryHandler(query:string,callback){\r\n\t\tthis.queryHandlers.push({query:query,callback:callback});\r\n\t\tvar cmd={id:this.messageId++,\"messageType\":\"registerQueryHandler\",\"query\":query};\r\n\t\tthis.websocket.send(\r\n\t\t\tthis.exchange,\r\n\t\t\t{ topic:\"registerQueryHandler\", router_id:this.socketSession},\r\n\t\t\tJSON.stringify(cmd)\r\n\t\t)\r\n\t};\r\n\r\n\tpublic addEventHandler=function(eventName:string,id:string,callback){\r\n\t\tif (id)\r\n\t\t\tthis.eventHandlers.push({\"eventName\":eventName+\"/\"+id,callback:callback});\r\n\t\telse\r\n\t\t\tthis.eventHandlers.push({\"eventName\":eventName,callback:callback});\r\n\t\tvar cmd={id:this.messageId++,\"messageType\":\"registerEventHandler\",\"event\":eventName,\"eventId\":id};\r\n\t\tthis.websocket.send(\r\n\t\t\tthis.exchange,\r\n\t\t\t{ topic:\"registerEventHandler\", router_id:this.socketSession},\r\n\t\t\tJSON.stringify(cmd)\r\n\t\t)\r\n\t};\r\n\r\n\tpublic sendCommand(command:string,...p:any[]){\r\n\t\tconsole.log(\"sec\",arguments);\r\n\t\tvar args=[];\r\n\t\t\r\n\t\tvar callback=null;\r\n\r\n\t\tfor (var i=0;(i<p.length);i++){\r\n\t\t\tif (p[i] instanceof Function)\r\n\t\t\t\tcallback=p[i];\r\n\t\t\telse\r\n\t\t\t\targs.push(p[i]);\r\n\t\t}\r\n\t\t\r\n\t\t/*if (p.length>1){\r\n\t\t\tvar argOffset=1;\r\n\t\t\tif ( callback && callback instanceof Function )\r\n\t\t\t\targOffset+=1;\r\n\t\t\tfor (var i=argOffset;(i<arguments.length);i++){\r\n\t\t\t\targs.push(arguments[i]);\r\n\t\t\t}\r\n\t\t}*/\r\n\t\tvar cmd={id:this.messageId++,\"args\":args, kwargs:{}};\r\n\t\t\r\n\t\tif (callback && callback instanceof Function)\r\n\t\t\tthis.addRPCCallback(cmd.id.toString(),callback, null, 0);\r\n\t\tconsole.log(\"sendCommand\",this,cmd);\r\n\t\tthis.websocket.send(\r\n\t\t\tthis.exchange,\r\n\t\t\t{ topic:\"command:\"+ command, router_id:this.socketSession},\r\n\t\t\tJSON.stringify(cmd)\r\n\t\t)\r\n\t};\r\n\r\n\tpublic sendQuery(query,...p:any[]){\r\n\t\tvar args=[];\r\n\t\tvar callback=null;\r\n\t\tvar callbackTimeout=null;\r\n\t\tvar timeout = 10000;\r\n\t\tfor (var i=0;(i<p.length);i++){\r\n\t\t\tif (p[i] instanceof Function)\r\n\t\t\t\tif (!callback) \r\n\t\t\t\t\tcallback=p[i];\r\n\t\t\t\telse\r\n\t\t\t\t\tcallbackTimeout = p[i];\r\n\t\t\telse{\r\n\t\t\t\tif (callbackTimeout)\r\n\t\t\t\t\ttimeout = p[i]\r\n\t\t\t\telse\r\n\t\t\t\t\targs.push(p[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t \r\n\t\tvar cmd={id:this.messageId++,\"messageType\":\"query\",\"query\":query,\"args\":args, kwargs:[], qts:0};\r\n\t\tthis.addRPCCallback(cmd.id.toString(),callback, callbackTimeout, timeout);\r\n\t\tconsole.log(\"sendQuery\", callback,cmd);\r\n\t\t//this.websocket.send(JSON.stringify(cmd));\r\n\t\tthis.websocket.send(\r\n\t\t\tthis.exchange,\r\n\t\t\t{ topic:\"query:\" + query, qts:0, query_id: cmd.id.toString(), router_id:this.socketSession, response_address:this.socketSession},\r\n\t\t\tJSON.stringify(cmd)\r\n\t\t)\r\n\t};\r\n\r\n\tpublic triggerEvent(eventName:string,id:string){\r\n\t\tvar e={id:this.messageId++,\"messageType\":\"event\",\"event\":eventName,\"args\":arguments};\r\n\t\tthis.websocket.send(JSON.stringify(e));\r\n\t};\r\n}","\r\nexport class DashboardLink{\r\n    dashboardId:string;\r\n    panelId:string;\r\n    panelName:string;\r\n    component:IComponent;\r\n    parameters:any;\r\n\r\n    /*constructor(dashboardId:string, sectionId:string, sectionName:string){\r\n        this.dashboardId = dashboardId;\r\n        this.sectionId = sectionId;\r\n        this.sectionName = sectionName;\r\n    }*/\r\n\r\n    constructor(component:IComponent, message:any){\r\n        this.dashboardId = message.dashboardId;\r\n        this.panelId = message.sectionId;\r\n        this.panelName = message.sectionName;\r\n        this.component = component;\r\n        this.parameters = message.parameters;\r\n    }\r\n}\r\n\r\nexport interface IComponent {\r\n    id: string;\r\n    name: string;\r\n    componentType: string;\r\n    ui:any;\r\n    dashboards : DashboardLink[];\r\n\r\n    //updateReferences(kerviService:KerviBaseService);\r\n    //reload(component:IComponent);\r\n    //removeReferences(components:IComponent[]);\r\n}","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\nimport { IComponent, DashboardLink } from \"./IComponent.model\"\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { KerviBaseService } from '../kervi-js.service'\r\ndeclare var Qty:any;\r\n\r\nexport class KerviValue implements IComponent{\r\n    public name: string;\r\n    public componentType = \"KerviValue\"\r\n    public typeName:string = null;    \r\n    public id: string;\r\n    public dashboards: DashboardLink[] = [];\r\n    public isInput:boolean;\r\n    public command: string;\r\n    public valueTS:Date;\r\n\r\n    public ui = {\r\n        type: \"\",\r\n        orientation: \"\",\r\n        visible: true\r\n    }\r\n}\r\n\r\nexport abstract class KerviValueType<valueType> extends KerviValue{\r\n    \r\n    public value$: BehaviorSubject<valueType>;\r\n    protected kerviService:KerviBaseService = null;\r\n\r\n    constructor(message:any, kerviService:KerviBaseService){\r\n        super();\r\n        this.kerviService = kerviService;\r\n        this.value$= new BehaviorSubject<valueType>(message.value);\r\n        this.name = message.name;\r\n        this.isInput = message.isInput;\r\n        this.ui = message.ui;\r\n        this.command = message.command;\r\n        this.id = message.id;\r\n        this.ui[\"type\"] = message.componentType;\r\n        this.ui[\"orientation\"] = message.orientation;\r\n        this.ui[\"visible\"] = message.visible;\r\n        \r\n        for (var prop in message.ui) {\r\n            if (this.ui[prop] != undefined)\r\n                this.ui[prop] = message.ui[prop];\r\n        }\r\n\r\n        for (let dashboardLink of message.dashboardLinks){\r\n            this.dashboards.push( new DashboardLink(this, dashboardLink)); \r\n        }\r\n    }\r\n\r\n    get value(){\r\n       \r\n        //console.log(\"gv\", this.id, this.value$.value)\r\n       return this.value$.value \r\n    }\r\n\r\n    set value(value:valueType){\r\n        console.log(\"sv\", this.id);\r\n        this.value$.next(value); \r\n        this.kerviService.spine.sendCommand(this.command, value);\r\n     }\r\n\r\n    protected abstract getDefaultValue():valueType;\r\n    public set(v:valueType, notify:boolean=true){\r\n        this.value$.next(v);\r\n        if (notify)\r\n            this.kerviService.spine.sendCommand(this.command, v);\r\n    }\r\n}\r\n\r\n\r\nexport enum ValueRangeType {normal, warning, error};\r\n\r\nexport class ValueRange{\r\n    \r\n    public start:number = null;\r\n    public end:number = null;\r\n    public type:ValueRangeType = null;\r\n\r\n    constructor(range:any){\r\n        this.start = range[\"start\"];\r\n        this.end = range[\"end\"]\r\n        if (range[\"type\"] == \"warning\")\r\n            this.type = ValueRangeType.warning;\r\n        else if (range[\"type\"] == \"error\")\r\n            this.type = ValueRangeType.error;\r\n        else\r\n            this.type = ValueRangeType.normal;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class KerviEnumOptionModel{\r\n    public value:string;\r\n    public text:string;\r\n    public selected$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n    constructor(messageOption:any){\r\n        this.value = messageOption.value;\r\n        this.text = messageOption.text;\r\n        this.selected$.next(messageOption.selected);\r\n    }\r\n    updateReferences(){};\r\n    reload(component:IComponent){};\r\n    removeReferences(components:IComponent[]){};\r\n}\r\n\r\nexport class SelectValue extends KerviValueType<string[]>{\r\n    public options:KerviEnumOptionModel[] = [];\r\n    public lastSelected$:BehaviorSubject<KerviEnumOptionModel> = new BehaviorSubject<KerviEnumOptionModel>(null); \r\n    \r\n    constructor (message:any, kerviService:KerviBaseService){\r\n        super(message, kerviService);\r\n        var self = this;\r\n        this.options = []\r\n        \r\n        for (let option of message.options){\r\n            this.options.push( new KerviEnumOptionModel(option) );\r\n        }\r\n\r\n        this.selectOptions(this.value$.value);\r\n        this.value$.subscribe(function(v){\r\n            self.selectOptions(v);\r\n        });\r\n    }\r\n\r\n    protected getDefaultValue():string[]{\r\n        return [];\r\n    }\r\n\r\n    \r\n    public selectOptions(selectedOptions:any){\r\n        console.log(\"soc\");\r\n        if (!selectedOptions)\r\n            return;\r\n        for (let option of this.options){\r\n            option.selected$.next(false);\r\n        }\r\n        for (let selectedOption of selectedOptions){\r\n            console.log(\"so\", selectedOption)\r\n            for(let option of this.options){\r\n                console.log(\"sox\", option )\r\n                if (option.value == selectedOption){\r\n                    option.selected$.next(true);\r\n                    this.lastSelected$.next(option);\r\n                    console.log(\"os\", option.text, option.selected$.value);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class NumberValue extends KerviValueType<number> {\r\n    public unit: string;\r\n    public qtyUnitFrom:string;\r\n    public qtyUnitTo:string = null;\r\n    public maxValue: number;\r\n    public minValue: number;\r\n    public sparkline$: BehaviorSubject<number[]> = new BehaviorSubject<number[]>([]);\r\n    public ranges: ValueRange[] = [];\r\n\r\n    protected getDefaultValue():number{\r\n        return 0;\r\n    }\r\n\r\n    constructor(message: any, kerviService:KerviBaseService) {\r\n        super(message, kerviService);\r\n        this.unit = message.unit;\r\n        this.typeName = \"Number\";\r\n    \r\n        \t\r\n        this.qtyUnitFrom = message.unit;\r\n        if (this.unit == \"c\" && kerviService.application$.value[\"display\"][\"unit_system\"][\"temperature\"]==\"F\"){\r\n            this.qtyUnitFrom = \"tempC\";\r\n            this.qtyUnitTo = \"tempF\";\r\n            this.unit = \"F\"\r\n        }\r\n\r\n        for (var range of message.ranges){\r\n            if (this.qtyUnitTo){\r\n                var q = new Qty(range[\"start\"], this.qtyUnitFrom);\r\n                range[\"start\"] = q.to(this.qtyUnitTo).scalar\r\n                var q = new Qty(range[\"end\"], this.qtyUnitFrom);\r\n                range[\"end\"] = q.to(this.qtyUnitTo).scalar\r\n                this.ranges.push(new ValueRange(range));\r\n            } else\r\n                this.ranges.push(new ValueRange(range));\r\n        }\r\n        \r\n        if (this.qtyUnitTo && message.maxValue){\r\n            var q = new Qty(message.maxValue, this.qtyUnitFrom);\r\n            this.maxValue = q.to(this.qtyUnitTo).scalar;\r\n        } else\r\n            this.maxValue = message.maxValue; \r\n\r\n        if (this.qtyUnitTo && message.minValue){\r\n            var q = new Qty(message.minValue, this.qtyUnitFrom);\r\n            this.minValue = q.to(this.qtyUnitTo).scalar;\r\n        } else\r\n            this.minValue = message.minValue; \r\n        \r\n        \r\n        var spl = []\r\n        for(var spv of message.sparkline){\r\n            if (this.qtyUnitTo){\r\n                console.log(\"spv\", spv);\r\n                var q = new Qty(spv.value, this.qtyUnitFrom);\r\n                //spv.value = q.to(this.qtyUnitTo).scalar;\r\n            }\r\n            spl.push(spv)\r\n        }\r\n        this.sparkline$.next(spl);\r\n        this.set(message.value, false);\r\n    }\r\n\r\n    set(v, notify=true){\r\n        var newValue = v;\r\n        if (this.qtyUnitTo){\r\n            var q = new Qty(v, this.qtyUnitFrom);\r\n            newValue = q.to(this.qtyUnitTo).scalar;\r\n        } \r\n\r\n        this.value$.next(newValue);\r\n        if (notify)\r\n            this.kerviService.spine.sendCommand(this.command, v);\r\n        var spl=this.sparkline$.value;\r\n        spl.push(newValue);\r\n        if (spl.length>10)\r\n             spl.shift();\r\n        this.sparkline$.next(spl);  \r\n        \r\n    }\r\n}\r\n\r\nexport class StringValue extends KerviValueType<string> {\r\n    \r\n    protected getDefaultValue():string{\r\n        return \"\";\r\n    }\r\n\r\n    constructor(message: any, kerviService:KerviBaseService) {\r\n        super(message, kerviService)\r\n        this.typeName = \"String\";\r\n    }\r\n    \r\n}\r\n\r\nexport class BooleanValue extends KerviValueType<boolean> {\r\n    constructor(message, kerviService:KerviBaseService) {\r\n        super(message, kerviService)\r\n        this.typeName = \"Boolean\";\r\n    }\r\n\r\n    protected getDefaultValue():boolean{\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class DateTimeValue extends KerviValueType<Date> {\r\n    public subType: string;\r\n    \r\n    constructor(message, kerviService:KerviBaseService) {\r\n        super(message, kerviService)\r\n        this.subType = message.inputType;\r\n        this.typeName = \"DateTime\";\r\n    }\r\n\r\n    protected getDefaultValue():Date{\r\n        return new Date();\r\n    }\r\n    \r\n}\r\n\r\nexport class ColorValue extends KerviValueType<string> {\r\n    \r\n    constructor(message, kerviService:KerviBaseService) {\r\n        super(message, kerviService)\r\n        this.typeName = \"Color\";\r\n    }\r\n\r\n    protected getDefaultValue():string{\r\n        return \"#ffffff\";\r\n    }    \r\n}","export class ComponentRef{\r\n    public id: string;\r\n\r\n    constructor(message){\r\n        this.id= message.id;\r\n    }\r\n}","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\nimport { IComponent, DashboardLink } from \"./IComponent.model\"\r\nimport { ComponentRef } from \"./ComponentRef\"\r\nimport { KerviBaseService } from '../kervi-js.service'\r\n\r\nexport class Controller implements IComponent {\r\n    public type: string;\r\n    public visible: boolean;\r\n    public componentType=\"controller\"\r\n    public ui:any = {}\r\n    public name: string;\r\n    public id: string;\r\n    public parameters: any;\r\n    public inputs: IComponent[] = [];\r\n    public outputs: IComponent[] = [];\r\n    public actions: IComponent[] = [];\r\n    public inputReferences: ComponentRef[] = [];\r\n    public outputReferences: ComponentRef[] = [];\r\n    public actionsReferences: ComponentRef[] = [];\r\n    public dashboards: DashboardLink[]=[];\r\n    public template:string;\r\n    private kerviService:KerviBaseService\r\n\r\n    constructor(message: any, kerviService:KerviBaseService) {\r\n        this.kerviService = kerviService;\r\n        this.id = message.id;\r\n        this.name = message.name;\r\n        this.type = message.type;\r\n        this.ui = message.ui;\r\n        this.visible = message.visible;\r\n        this.parameters = message.parameters;\r\n        this.template=message.template;\r\n        for(var ref of message.inputs){\r\n            this.inputReferences.push( new ComponentRef(ref));\r\n        }\r\n\r\n        for(var ref of message.outputs){\r\n            this.outputReferences.push( new ComponentRef(ref));\r\n        }\r\n\r\n        for(var ref of message.actions){\r\n            this.actionsReferences.push( new ComponentRef(ref));\r\n        }\r\n\r\n        for (let dashboardLink of message.dashboardLinks){\r\n            this.dashboards.push( new DashboardLink(this, dashboardLink)); \r\n        }\r\n    }\r\n\r\n    updateReferences(){\r\n        if (this.inputs.length==0){\r\n            for(var ref of this.inputReferences){\r\n                var component = this.kerviService.getComponent(ref.id)\r\n                if (component)\r\n                    this.inputs.push(component)\r\n            }\r\n        }\r\n        if (this.outputs.length==0){\r\n            for(var ref of this.outputReferences){\r\n                var component = this.kerviService.getComponent(ref.id)\r\n                if (component)\r\n                    this.outputs.push(component)\r\n            }\r\n        }\r\n        if (this.actions.length==0){\r\n            for(var ref of this.actionsReferences){\r\n                var component = this.kerviService.getComponent(ref.id)\r\n                if (component)\r\n                    this.actions.push(component)\r\n            }\r\n        }\r\n    };\r\n    removeReferences(components:IComponent[]){};\r\n    reload(component:IComponent){};\r\n}","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { IComponent, DashboardLink } from './IComponent.model'\r\n\r\n\r\nexport class DashboardSizes{\r\n    public valueWidth:string ='3rem';\r\n    public buttonWidth:string = '25px';\r\n    public buttonHeight:string = '';\r\n    public switchWidth:string = '25px';\r\n    public switchHeight:string = '25px';\r\n    public gaugeWidth:string = '100px';\r\n    public gaugeHeight:string = '200px';\r\n}\r\n\r\nexport class DashboardMessageModel{\r\n    public sourceId:string;\r\n    public sourceName:string;\r\n    public area: string;\r\n    public level: number;\r\n    public timestamp: Date;\r\n    public topic:string;\r\n    public body:string;\r\n    public type:string;\r\n\r\n    constructor(message){\r\n        this.timestamp = new Date(message.timestamp*1000);\r\n        this.topic = message.topic;\r\n        this.body = message.body;\r\n        this.type = message.type;\r\n        this.sourceId = message.source_id;\r\n        this.sourceName = message.source_name;\r\n        this.area = message.area;\r\n        this.level = message.level;\r\n    }\r\n}\r\n\r\nexport class DashboardPanelComponent{\r\n    public component:IComponent;\r\n    public componentId:string;\r\n    public linkId:any;\r\n    public parameters:any;\r\n\r\n    constructor(private message: any){\r\n        this.linkId = message.linkId;\r\n        this.componentId = message.componentId;\r\n        this.component = message.component;\r\n        this.parameters = message.parameters;\r\n    }\r\n}\r\n\r\nexport class DashboardPanelParameters{\r\n    public title: string = null;\r\n    public width: string = null;\r\n    public height: string = null;\r\n    public type: string = null;\r\n    public userLog: boolean = null;\r\n    public appHealth: boolean = null;\r\n    public logLength = 5;\r\n    public layout = 'row';\r\n\r\n    constructor(messageParameters) {\r\n        this.title = messageParameters.label;\r\n        this.height = this.calcSize(messageParameters.height);\r\n        this.width = this.calcSize(messageParameters.width);\r\n        this.userLog = messageParameters.userLog;\r\n        this.logLength = messageParameters.logLength;\r\n        this.appHealth = messageParameters.app_health;\r\n\r\n        if (messageParameters.type) {\r\n            this.type = messageParameters.type;\r\n        }\r\n        if (messageParameters.layout) {\r\n            this.layout = messageParameters.layout;\r\n        }\r\n    }\r\n\r\n    private calcSize(value){\r\n        if (value==null)\r\n            return ''\r\n        else if (value==='')\r\n            return ''\r\n        else if (isNaN(value)){\r\n            return value;\r\n        } else\r\n            if (value>0)\r\n                return value + '%';\r\n            else\r\n                return '';\r\n    }\r\n}\r\n\r\nexport class DashboardPanel {\r\n    public id:string;\r\n    public name:string;\r\n    public parameters: DashboardPanelParameters;\r\n    public components: DashboardPanelComponent[]=[];\r\n    public dashboard: Dashboard;\r\n    public type:string;\r\n    public subPanels: DashboardPanel[] = [];\r\n    public hasOnlyGroupPanels:boolean = true;\r\n    \r\n    constructor (dashboard, messagePanel) {\r\n        this.dashboard=dashboard;\r\n        this.id=messagePanel.id;\r\n        this.name=messagePanel.name;\r\n        this.type=messagePanel.type;\r\n        this.parameters=new DashboardPanelParameters(messagePanel.uiParameters);\r\n        /*if (messagePanel.components)\r\n            for(var componentRef of messagePanel.components){\r\n                this.components.push(new DashboardPanelComponentModel(componentRef))\r\n            }*/\r\n        \r\n        if (messagePanel.panels){\r\n            //console.log('spa',messagePanel.panels);\r\n            for(var subMessagePanel of messagePanel.panels){\r\n                var panel=new DashboardPanel(this, subMessagePanel);\r\n                this.subPanels.push(panel);\r\n                if (panel.type !== 'group')\r\n                    this.hasOnlyGroupPanels = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    public reload(source:DashboardPanel){\r\n        //console.log('rl', this);\r\n        for(var subPanel of source.subPanels){\r\n            this.reload(subPanel)\r\n        }\r\n        for(var sourceComponent of source.components){\r\n            var found=false;\r\n            for(var component of this.components){\r\n                if (component.componentId == sourceComponent.componentId){\r\n                    found=true;\r\n                }\r\n            }\r\n            if (!found){\r\n                this.components.push(sourceComponent);\r\n            }\r\n        }\r\n        var deleteComponents:DashboardPanelComponent[] = [];\r\n        for (var component of this.components){\r\n            var found=false;\r\n            for(var sourceComponent of source.components){\r\n                if (sourceComponent.componentId == component.componentId){\r\n                    found=true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!found)\r\n                deleteComponents.push(component);\r\n        }\r\n        //console.log('dsc',deleteComponents);\r\n        for(var component of deleteComponents){\r\n            this.components.splice( this.components.indexOf(component), 1 );\r\n        }\r\n    }\r\n}\r\n\r\nexport class DashboardBackgroundModel{\r\n    public type:string;\r\n    public cameraId:string;\r\n    public image:string;\r\n\r\n    constructor(message){\r\n        this.type=message.type;\r\n        this.cameraId=message.cameraId\r\n    }\r\n}\r\n\r\nexport class Dashboard implements IComponent{\r\n    public id:string;\r\n    public name:string;\r\n    public componentType:string;\r\n    public type:string;\r\n    public isDefault:Boolean;\r\n    public template:string;\r\n    public panels:DashboardPanel[];\r\n    public sysPanels:DashboardPanel[];\r\n    public headerPanel: DashboardPanel=null;\r\n    public footerCenterPanel: DashboardPanel=null;\r\n    public footerLeftPanel: DashboardPanel=null;\r\n    public footerRightPanel: DashboardPanel=null;\r\n    public sysPanel: DashboardPanel=null;\r\n    public backgroundPanel: DashboardPanel=null;\r\n    public controllerPanel: DashboardPanel=null;\r\n    public LeftPadXPanel: DashboardPanel=null;\r\n    public LeftPadYPanel: DashboardPanel=null;\r\n    public RightPadXPanel: DashboardPanel=null;\r\n    public RightPadYPanel: DashboardPanel=null;\r\n    //public background: DashboardBackgroundModel=null;\r\n    public unitSize: number;\r\n\r\n    //not used in dashboards\r\n    public visible:boolean;\r\n    public ui:any;\r\n    public dashboards:any[] = [];\r\n\r\n    private currentPanel:DashboardPanel = null;\r\n \r\n    constructor(message){\r\n        this.id=message.id;\r\n        this.name=message.name;\r\n        this.componentType='dashboard';\r\n        this.type=message.type;\r\n        this.isDefault=message.isDefault;\r\n        this.template=message.template;\r\n        this.unitSize=message.unitSize;\r\n        //this.background=new DashboardBackgroundModel(message.background);\r\n        this.panels=[];\r\n        this.sysPanels=[];\r\n        if (!this.template){\r\n            \r\n            for (let messagePanel of message.sections){\r\n                if (!messagePanel){\r\n                    console.log('dashboard with null panel', this.id);\r\n                    continue;\r\n                }\r\n                var panel = new DashboardPanel(this, messagePanel);\r\n                var sysPanel = true;\r\n                if (panel.id=='header_center')\r\n                    this.headerPanel=panel;\r\n                else if (panel.id=='footer_left')\r\n                    this.footerLeftPanel=panel;\r\n                else if (panel.id=='footer_center')\r\n                    this.footerCenterPanel=panel;\r\n                else if (panel.id=='footer_right')\r\n                    this.footerRightPanel=panel;\r\n                else if (panel.id=='header_right')\r\n                    this.sysPanel=panel;\r\n                else if (panel.id=='controllers')\r\n                    this.controllerPanel=panel;\r\n                else if (panel.id=='background')\r\n                    this.backgroundPanel=panel;\r\n                else if (panel.id=='left_pad_x')\r\n                    this.LeftPadXPanel=panel;\r\n                else if (panel.id=='left_pad_y')\r\n                    this.LeftPadYPanel=panel;\r\n                else if (panel.id=='right_pad_x')\r\n                    this.RightPadXPanel=panel;\r\n                else if (panel.id=='right_pad_y')\r\n                    this.RightPadYPanel=panel;\r\n                else{\r\n                    sysPanel=false;\r\n                    if (panel.type!='group'){\r\n                        if(this.currentPanel==null){\r\n                            this.currentPanel = new DashboardPanel(\r\n                            this,\r\n                            {\r\n                                'id':null,\r\n                                'name': '',\r\n                                'type':'group',\r\n                                'components':[],\r\n                                'panels':[],\r\n                                'uiParameters':{\r\n                                    'title':'',\r\n                                    'width':100,\r\n                                    'height':0,\r\n                                    'userLog':false,\r\n                                    'logLength':0\r\n                                }    \r\n                            });\r\n                            this.currentPanel.subPanels.push(panel);\r\n                            this.panels.push(this.currentPanel);\r\n                        } else {\r\n                            this.currentPanel.subPanels.push(panel)\r\n                        }\r\n                    }   \r\n                    else{\r\n                        this.panels.push(panel);\r\n                        this.currentPanel=null;\r\n                    }\r\n                }\r\n                if (sysPanel)\r\n                    this.sysPanels.push(panel);      \r\n            }\r\n\r\n            if (!this.currentPanel){\r\n                this.currentPanel = new DashboardPanel(\r\n                    this,\r\n                    {\r\n                        'id':null,\r\n                        'name': '',\r\n                        'type':'group',\r\n                        'components':[],\r\n                        'panels':[],\r\n                        'uiParameters':{\r\n                            'title':'',\r\n                            'width':100,\r\n                            'height':0,\r\n                            'userLog':false,\r\n                            'logLength':0\r\n                        }    \r\n                    });\r\n                    //this.currentPanel.subPanels.push(panel);\r\n                    this.panels.push(this.currentPanel);\r\n            }\r\n        }\r\n    }\r\n    public isEmpty(){\r\n        if (this.panels.length == 1 && this.panels[0].components.length === 0 && this.panels[0].subPanels.length === 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    removeReferences(deleteComponents:IComponent[]){};\r\n    updateReferences(){};\r\n    reload(component:IComponent){\r\n        var source = component as Dashboard;\r\n        if (!this.backgroundPanel && source.backgroundPanel)\r\n            this.backgroundPanel=source.backgroundPanel;\r\n        else if (this.backgroundPanel && !source.backgroundPanel)\r\n            this.backgroundPanel = null\r\n        else if (this.backgroundPanel)\r\n            this.backgroundPanel.reload(source.backgroundPanel)\r\n\r\n        if (!this.footerLeftPanel && source.footerLeftPanel)\r\n            this.footerLeftPanel=source.footerLeftPanel;\r\n        else if (this.footerLeftPanel && !source.footerLeftPanel)\r\n            this.footerLeftPanel = null\r\n        else if (this.footerLeftPanel)\r\n            this.footerLeftPanel.reload(source.footerLeftPanel)\r\n\r\n        if (!this.footerRightPanel && source.footerRightPanel)\r\n            this.footerRightPanel=source.footerRightPanel;\r\n        else if (this.footerRightPanel && !source.footerRightPanel)\r\n            this.footerRightPanel = null\r\n        else if (this.footerRightPanel)\r\n            this.footerRightPanel.reload(source.footerRightPanel)\r\n\r\n        if (!this.footerCenterPanel && source.footerCenterPanel)\r\n            this.footerCenterPanel=source.footerCenterPanel;\r\n        else if (this.footerCenterPanel && !source.footerCenterPanel)\r\n            this.footerCenterPanel = null\r\n        else if (this.footerCenterPanel)\r\n            this.footerCenterPanel.reload(source.footerCenterPanel)\r\n\r\n        /*if (!this.headerPanel && source.headerPanel)\r\n            this.headerPanel=source.headerPanel;\r\n        else if (this.headerPanel && !source.headerPanel)\r\n            this.headerPanel = null\r\n        else if (this.headerPanel)\r\n            this.headerPanel.reload(source.headerPanel)*/\r\n\r\n        if (!this.sysPanel && source.sysPanel)\r\n            this.sysPanel=source.sysPanel;\r\n        else if (this.sysPanel && !source.sysPanel)\r\n            this.sysPanel = null\r\n        else if (this.sysPanel)\r\n            this.sysPanel.reload(source.sysPanel)\r\n\r\n        if (!this.LeftPadXPanel && source.LeftPadXPanel)\r\n            this.LeftPadXPanel=source.LeftPadXPanel;\r\n        else if (this.LeftPadXPanel && !source.LeftPadXPanel)\r\n            this.LeftPadXPanel = null\r\n        else if (this.LeftPadXPanel)\r\n            this.LeftPadXPanel.reload(source.LeftPadXPanel)\r\n\r\n        if (!this.LeftPadYPanel && source.LeftPadYPanel)\r\n            this.LeftPadYPanel=source.LeftPadYPanel;\r\n        else if (this.LeftPadYPanel && !source.LeftPadYPanel)\r\n            this.LeftPadYPanel = null\r\n        else if (this.LeftPadYPanel)\r\n            this.LeftPadYPanel.reload(source.LeftPadYPanel)\r\n\r\n        if (!this.RightPadXPanel && source.RightPadXPanel)\r\n            this.RightPadXPanel=source.RightPadXPanel;\r\n        else if (this.RightPadXPanel && !source.RightPadXPanel)\r\n            this.RightPadXPanel = null\r\n        else if (this.RightPadXPanel)\r\n            this.RightPadXPanel.reload(source.RightPadXPanel)\r\n\r\n        if (!this.RightPadYPanel && source.RightPadYPanel)\r\n            this.RightPadYPanel=source.RightPadYPanel;\r\n        else if (this.RightPadYPanel && !source.RightPadYPanel)\r\n            this.RightPadYPanel = null\r\n        else if (this.RightPadYPanel)\r\n            this.RightPadYPanel.reload(source.RightPadYPanel)\r\n\r\n        if (!this.controllerPanel && source.controllerPanel)\r\n            this.controllerPanel=source.controllerPanel;\r\n        else if (this.controllerPanel && !source.controllerPanel)\r\n            this.controllerPanel = null\r\n        else if (this.controllerPanel)\r\n            this.controllerPanel.reload(source.controllerPanel)\r\n    };\r\n\r\n    private getDashboardPanelById(id:string, panels:DashboardPanel[]){\r\n        for(let panel of panels){\r\n            if (panel.id == id)\r\n                return panel; \r\n            else{\r\n                var res = this.getDashboardPanelById(id, panel.subPanels);\r\n                if (res)\r\n                    return res;\r\n            }\r\n        } \r\n        return null;\r\n    }\r\n\r\n    public addDashboardLink(link:DashboardLink){\r\n        if (link.dashboardId == '*' || link.dashboardId == this.id || (link.dashboardId=='**default**' && this.isDefault)){\r\n            var panelFound = false;\r\n            var panel = this.getDashboardPanelById(link.panelId, this.panels);\r\n            if (!panel)\r\n                panel = this.getDashboardPanelById(link.panelId, this.sysPanels);\r\n            if (panel){\r\n                panel.components.push(new DashboardPanelComponent(link));\r\n            } else {\r\n                // console.log('adh',link);\r\n                var messagePanel ={\r\n                    id:link.panelId,\r\n                    name:link.panelName,\r\n                    type:'panel',\r\n                    uiParameters:{\r\n                        'title':'',\r\n                        'width':0,\r\n                        'height':0,\r\n                        'userLog':false,\r\n                        'logLength':0\r\n                    }\r\n                }\r\n                var newPanel = new DashboardPanel(this, messagePanel);\r\n                this.currentPanel.subPanels.push(newPanel);\r\n                newPanel.components.push(new DashboardPanelComponent(link));\r\n            }\r\n        }\r\n    }\r\n}","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { IComponent, DashboardLink } from './IComponent.model'\r\nimport { KerviBaseService } from '../kervi-js.service'\r\nexport class Action implements IComponent {\r\n    private kerviService: KerviBaseService = null;\r\n\r\n    public id: string = null;\r\n    public name: string = null;\r\n    public componentType = 'action';\r\n    public runCommand = '';\r\n    public interruptCommand = '';\r\n    public ui = {\r\n        type: '',\r\n        orientation: '',\r\n        visible: true\r\n    }\r\n    public dashboards: DashboardLink[] = [];\r\n    public running$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n    constructor(message: any, kerviService:KerviBaseService){\r\n        this.kerviService = kerviService;\r\n        this.id = message.id;\r\n        this.name = message.name;\r\n        this.ui = message.ui;\r\n        this.ui.visible = message.visible;\r\n        this.ui.type = message.type;\r\n        this.runCommand = message.runCommand;\r\n        this.interruptCommand = message.interruptCommand;\r\n        this.running$.next(message.running);\r\n\r\n        for (let dashboardLink of message.dashboardLinks){\r\n            this.dashboards.push(new DashboardLink(this, dashboardLink)); \r\n        }\r\n    }\r\n\r\n    public run(parameters){\r\n        //if (!this.running$.value){\r\n            if (parameters && parameters.length>0)\r\n                this.kerviService.spine.sendCommand(this.runCommand, ...parameters);\r\n            else\r\n                this.kerviService.spine.sendCommand(this.runCommand);\r\n        //}\r\n    }\r\n\r\n    public interrupt(parameters){\r\n        if (parameters && parameters.length>0)\r\n            this.kerviService.spine.sendCommand(this.interruptCommand, ...parameters);\r\n        else\r\n            this.kerviService.spine.sendCommand(this.interruptCommand);\r\n    }\r\n}","\r\nimport * as KerviValues from './KerviValues.model';\r\nimport { Controller } from './controller.model';\r\nimport { Dashboard } from './dashboard.model';\r\nimport { Action } from './action.model';\r\nimport { IComponent } from './IComponent.model';\r\nimport { KerviBaseService } from '../kervi-js.service';\r\n\r\nexport class ComponentFactory {\r\n\r\n    public static createComponents(message: any, kerviService: KerviBaseService) {\r\n        const foundComponents = this.createComponentsRec(message, kerviService);\r\n        this.linkToDashboards(foundComponents[0], foundComponents[1]);\r\n        return foundComponents[0];\r\n    }\r\n\r\n    private static createComponentsRec(message: any, kerviService) {\r\n        let result = [];\r\n        let dashboards = [];\r\n        if (Array.isArray(message)) {\r\n            for (let i = 0; (i < message.length); i++) {\r\n                const subComponents = this.createComponentsRec(message[i], kerviService);\r\n                result = result.concat(subComponents[0]);\r\n                dashboards = dashboards.concat(subComponents[1]);\r\n            }\r\n        } else {\r\n            let component: any = null;\r\n            const subComponents: any[] = [];\r\n            if (message.componentType === 'KerviAction') {\r\n                component = new Action(message, kerviService);\r\n            } else if (message.componentType === 'dashboard') {\r\n                component = new Dashboard(message);\r\n                dashboards.push(component);\r\n            } else if (message.componentType === 'controller') {\r\n                component = new Controller(message, kerviService);\r\n            } else if (message.componentType === 'boolean-value') {\r\n                component = new KerviValues.BooleanValue(message, kerviService);\r\n            } else if (message.componentType === 'number-value') {\r\n                component = new KerviValues.NumberValue(message, kerviService);\r\n            } else if (message.componentType === 'string-value') {\r\n                component = new KerviValues.StringValue(message, kerviService);\r\n            } else if (message.componentType === 'enum-value') {\r\n                component = new KerviValues.SelectValue(message, kerviService);\r\n            } else if (message.componentType === 'datetime-value') {\r\n                component = new KerviValues.DateTimeValue(message, kerviService);\r\n            } else if (message.componentType === 'color-value') {\r\n                component = new KerviValues.ColorValue(message, kerviService);\r\n            }\r\n            if (component) {\r\n                result.push(component);\r\n            }\r\n            if (subComponents) {\r\n                for (let subComponent of subComponents) {\r\n                    result.push(subComponent);\r\n                }\r\n            }\r\n        }\r\n        return [result, dashboards];\r\n    }\r\n\r\n    public static FixControllerReferences(components: IComponent[]){\r\n        for (let component of components) {\r\n            const controller = component as Controller;\r\n            if (controller && controller.componentType === 'controller') {\r\n                controller.updateReferences();\r\n            }\r\n        }\r\n    }\r\n\r\n    private static linkToDashboards(components: IComponent[], dashboards: Dashboard[]) {\r\n        console.log('ltd', components, dashboards);\r\n        for (let component of components) {\r\n            if (!(component instanceof Dashboard)) {\r\n                for (let link of component.dashboards) {\r\n                    for (let dashboard of dashboards) {\r\n                        dashboard.addDashboardLink(link);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import {  BehaviorSubject, Observable } from 'rxjs';\r\n\r\nexport class FileBase{\r\n    public name: string;\r\n    public path: string;\r\n    public isFile = true;\r\n}\r\n\r\nexport class File extends FileBase{\r\n    public size: number;\r\n}\r\n\r\nexport class Directory extends FileBase{\r\n    public files$: BehaviorSubject<FileBase[]> = new BehaviorSubject([]);\r\n\r\n    constructor(path: string) {\r\n        super();\r\n        this.path = path;\r\n    }\r\n\r\n    public updateFiles(files) {\r\n        let result = []\r\n        for(let file of files) {\r\n            if (file.is_file) {\r\n                const fileEntry = new File();\r\n                fileEntry.name = file.name;\r\n                const p = this.path !== '/' ? this.path : '';\r\n                fileEntry.path = p + '/' + file.name;\r\n                result.push(fileEntry);\r\n            } else {\r\n                const p = this.path !== '/' ? this.path : '';\r\n                const directory = new Directory(p + '/' + file.name);\r\n                directory.name = file.name;\r\n                directory.isFile = false;\r\n                result.push(directory);\r\n            }\r\n        }\r\n        this.files$.next(result);\r\n    }\r\n}\r\n\r\n","import {  BehaviorSubject, Observable } from 'rxjs';\r\nimport { KerviBaseService } from '../kervi-js.service'\r\n\r\nexport class StreamEvent {\r\n    public streamId: string;\r\n    public event: string;\r\n    public data: any;\r\n\r\n    constructor(streamId: string, streamEvent: string, data: any) {\r\n        this.streamId = streamId;\r\n        this.event = streamEvent;\r\n        this.data = data;\r\n    }\r\n}\r\n\r\nexport class Stream {\r\n    public events$: BehaviorSubject<StreamEvent> = new BehaviorSubject<StreamEvent>(null);\r\n\r\n    constructor(private streamId: string, private events: string[], private kerviService: KerviBaseService){\r\n        const self = this;\r\n        kerviService.spine.addStreamHandler(streamId, events, function(e_streamId: string, e_streamEvent: string, e_data: any) {\r\n            const event = new StreamEvent(e_streamId, e_streamEvent, e_data);\r\n            let notify = false;\r\n            if (events === null || events.length === 0 || events.indexOf(e_streamEvent) >= 0) {\r\n                notify = true;\r\n            }\r\n            if (notify) {\r\n                self.events$.next(event);\r\n            }\r\n        });\r\n    }\r\n\r\n    public close() {\r\n        this.kerviService.spine.removeStreamHandler(this.streamId, this.events, null);\r\n    }\r\n}","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\nimport { Injectable } from '@angular/core';\r\nimport { KerviSpineBase } from './spine/kervi-spinebase';\r\nimport { KerviWSSpine } from './spine/kervi-ws';\r\nimport { KerviRMQSpine } from './spine/kervi-rmq';\r\nimport {  BehaviorSubject, Observable } from 'rxjs';\r\nimport { IComponent } from './models/IComponent.model';\r\nimport { ComponentFactory } from './models/factory';\r\nimport { DashboardMessageModel } from './models/dashboard.model';\r\nimport { Dashboard } from './models/dashboard.model';\r\nimport { FileBase, Directory } from './models/file.model';\r\nimport { Stream } from './models/stream.model';\r\ndeclare var kerviSocketAddress: any;\r\ndeclare var socketProtocol: any;\r\n\r\nexport enum ConnectionState {disconnected, loading, authenticate, connected}\r\nexport enum UserLogStateType {normal, warning, error}\r\n\r\n@Injectable()\r\nexport class KerviBaseService {\r\n  public spine: KerviSpineBase = null;\r\n  private lastAppPingTime: Date = null;\r\n  private lastPingDiff = 0;\r\n  public appPingDiff$: BehaviorSubject<number> = new BehaviorSubject<number>(0);\r\n  public appPingDelay$: BehaviorSubject<number> = new BehaviorSubject<number>(0);\r\n  public mps$: BehaviorSubject<number> = new BehaviorSubject<number>(0);\r\n  private appInfo = null;\r\n  private  texts: {} = null;\r\n  private components: IComponent[] = [];\r\n  private components$: BehaviorSubject<IComponent[]> = new  BehaviorSubject<IComponent[]>([]);\r\n\r\n  public connectionState$: BehaviorSubject<ConnectionState> = new  BehaviorSubject<ConnectionState>(ConnectionState.disconnected);\r\n  public  application$: BehaviorSubject<any>;\r\n  public doAuthenticate = false;\r\n  public componentsChanged$: BehaviorSubject<Boolean> = new  BehaviorSubject<Boolean>(false);\r\n\r\n  private logMessages: DashboardMessageModel[] = [];\r\n  private logMessages$: BehaviorSubject<DashboardMessageModel[]> = new  BehaviorSubject<DashboardMessageModel[]>([]);\r\n  private lastLogMessage$: BehaviorSubject<DashboardMessageModel> = new  BehaviorSubject<DashboardMessageModel>(null);\r\n  private LogMessageCount$: BehaviorSubject<number> = new  BehaviorSubject<number>(0);\r\n  private LogMessageState$: BehaviorSubject<UserLogStateType> = new  BehaviorSubject<UserLogStateType>(UserLogStateType.normal);\r\n\r\n  private streams = {}\r\n\r\n  IPCReady$: BehaviorSubject<Boolean> = new  BehaviorSubject<Boolean>(false);\r\n\r\n  private _resolveSelf;\r\n  private _rejectSelf;\r\n  private authPromise: Promise<string> = null;\r\n\r\n  constructor() {\r\n    console.log('kervi service constructor');\r\n    const self = this;\r\n    this.application$ = new BehaviorSubject<any>(null);\r\n    this.IPCReady$.subscribe(function(connected) {\r\n      if (connected) {\r\n        console.log('kervi service ipc ready (connected)');\r\n        self.spine.addEventHandler('valueChanged', '', function(id, value) {\r\n          for (const component of self.components) {\r\n            if (component.id === value.id) {\r\n              const dynamicValue = component as any;\r\n              dynamicValue.valueTS = new Date(this.timestamp);\r\n              dynamicValue.set(value.value, false);\r\n            }\r\n          }\r\n        });\r\n\r\n        self.spine.addEventHandler('appPing', null, function(id, data) {\r\n          // console.log('appPing', self.lastAppPingTime, id, data);\r\n          if (self.lastAppPingTime === null) {\r\n            self.lastAppPingTime = new Date();\r\n          } else {\r\n            const now = new Date();\r\n            const pingDiff = now.getTime() - self.lastAppPingTime.getTime() - 1000;\r\n            const pingDelay = now.getTime() - data.ts * 1000;\r\n            self.appPingDelay$.next(pingDelay);\r\n            self.lastAppPingTime = now;\r\n            if (pingDiff !== self.lastPingDiff) {\r\n              self.lastPingDiff = pingDiff;\r\n              self.appPingDiff$.next(self.lastPingDiff);\r\n            }\r\n          }\r\n        });\r\n\r\n        self.spine.addEventHandler('actionStarted', '', function(id) {\r\n          console.log('as', id);\r\n          for (const component of self.components) {\r\n            if (component.id === id) {\r\n              const action = component as any;\r\n              action.running$.next(true);\r\n            }\r\n          }\r\n        });\r\n\r\n        self.spine.addEventHandler('actionDone', '', function(id) {\r\n          console.log('ad', id);\r\n          for (const component of self.components) {\r\n            if (component.id === id) {\r\n              const action = component as any;\r\n              action.running$.next(false);\r\n            }\r\n          }\r\n        });\r\n\r\n        self.spine.addEventHandler('userLogMessage', null, function(v) {\r\n          const messages = self.logMessages$.value;\r\n          const newMessage = new DashboardMessageModel(this);\r\n          messages.unshift(newMessage);\r\n          if (messages.length > 10) {\r\n            messages.pop();\r\n          }\r\n\r\n          let hasErrors = 0;\r\n          let hasWarnings = 0;\r\n          for (const message of messages) {\r\n            if (message.level === 1) {\r\n              hasErrors ++;\r\n            }\r\n            if (message.level === 2) {\r\n              hasWarnings ++;\r\n            }\r\n          }\r\n          if (hasErrors) {\r\n            self.LogMessageState$.next(UserLogStateType.error);\r\n          } else if (hasWarnings) {\r\n            self.LogMessageState$.next(UserLogStateType.warning);\r\n          } else {\r\n            self.LogMessageState$.next(UserLogStateType.normal);\r\n          }\r\n          self.LogMessageCount$.next(messages.length);\r\n          self.lastLogMessage$.next(newMessage);\r\n          self.logMessages$.next(messages);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public GetDirectory(path: string): Promise<Directory> {\r\n    const promise = new Promise<Directory>((resolve, reject) => {\r\n      const directory = new Directory(path);\r\n      this.spine.sendQuery('files_get_dir', path, function(directoryFiles) {\r\n        directory.updateFiles(directoryFiles);\r\n        resolve(directory);\r\n      });\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  public GetThumbnail(path: string): Promise<string> {\r\n    const promise = new Promise<string>((resolve, reject) => {\r\n      this.spine.sendQuery('files_get_thumbnail', path, function(thumbnail) {\r\n        resolve(thumbnail);\r\n      });\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  public GetFile(path: string): Promise<string> {\r\n    const promise = new Promise<string>((resolve, reject) => {\r\n      this.spine.sendQuery('files_get_file', path, function(file) {\r\n        resolve(file);\r\n      });\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  public GetStream(streamId: string, events = []) {\r\n    return new Stream(streamId, events, this);\r\n  }\r\n\r\n  public text(key: string, defaultValue: string= ''): string {\r\n    if (this.texts && key in this.texts) {\r\n      return this.texts[key];\r\n    } else {\r\n      return defaultValue;\r\n    }\r\n  }\r\n\r\n  public getLogMessages$(): Observable<DashboardMessageModel[]> {\r\n    return this.logMessages$.asObservable();\r\n  }\r\n\r\n  public getLastLogMessage$(): Observable<DashboardMessageModel> {\r\n    return this.lastLogMessage$.asObservable();\r\n  }\r\n\r\n  public getLogState$(): Observable<UserLogStateType> {\r\n    return this.LogMessageState$.asObservable();\r\n  }\r\n\r\n  public getLogMessageCount$(): Observable<number> {\r\n    return this.LogMessageCount$.asObservable();\r\n  }\r\n\r\n  public isAppEmpty() {\r\n    const defaultDashboard = this.getDefaultDashboard();\r\n    if (defaultDashboard) {\r\n      return defaultDashboard.isEmpty();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public getComponent(id: string, componentType: string = null) {\r\n    for (const component of this.components) {\r\n      if (component.id === id && (componentType == null || component.componentType === componentType)) {\r\n        return component;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public getComponentsByType(type: string) {\r\n    const result = [];\r\n    for (const component of this.components) {\r\n      if (component.componentType === type) {\r\n        result.push(component);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public getDefaultDashboard(): Dashboard {\r\n    const dashboards = this.getComponentsByType('dashboard') as Dashboard[];\r\n    for (const dashboard of dashboards) {\r\n      if (dashboard.isDefault) {\r\n          return dashboard;\r\n      }\r\n    }\r\n    if (dashboards.length > 0) {\r\n      return dashboards[0];\r\n    }\r\n    return null;\r\n}\r\n\r\n  public connect() {\r\n    let address = null;\r\n    let protocol = 'ws';\r\n    try {\r\n      if (kerviSocketAddress) {\r\n        address = kerviSocketAddress;\r\n      }\r\n      if (socketProtocol) {\r\n        protocol = socketProtocol;\r\n      }\r\n    } catch (e) {\r\n      // for testing with ng serve\r\n      const httpProtocol = location.protocol;\r\n      if (httpProtocol === 'https') {\r\n        protocol = 'wss';\r\n      }\r\n      const httpHost = window.location.hostname;\r\n      address = httpHost + ':9000';\r\n    }\r\n    console.log('ks', address);\r\n\r\n    this.spine = new KerviWSSpine({\r\n      address: address,\r\n      protocol: protocol,\r\n      onOpen: this.onOpen,\r\n      onClose: this.onClose,\r\n      onAuthenticate: this.onAuthenticate,\r\n      onAuthenticateFailed: this.onAuthenticateFailed,\r\n      onLogOff: this.onLogoff,\r\n      onAuthenticateStart: this.onAuthenticateStart,\r\n      onMPS: this.onMPS,\r\n      targetScope: this\r\n    });\r\n  }\r\n\r\n  public connectMQ() {\r\n    console.log('ks', sessionStorage.getItem('mqc'));\r\n\r\n    if (sessionStorage.getItem('mqc')) {\r\n      this.spine = new KerviRMQSpine({\r\n        onOpen: this.onOpen,\r\n        onClose: this.onClose,\r\n        onAuthenticate: this.onAuthenticate,\r\n        onAuthenticateFailed: this.onAuthenticateFailed,\r\n        onLogOff: this.onLogoff,\r\n        onAuthenticateStart: this.onAuthenticateStart,\r\n        targetScope: this,\r\n        apiToken: JSON.parse(sessionStorage.getItem('mqc'))\r\n      });\r\n    } else {\r\n      console.log('qmc not found in storage');\r\n    }\r\n  }\r\n\r\n  isAnonymous() {\r\n    return this.spine.options.userName === 'anonymous';\r\n  }\r\n\r\n  authenticate(userName, password) {\r\n    console.log('sa', userName, password);\r\n    this.authPromise = new Promise<string>((resolve, reject) => {\r\n      this._resolveSelf = resolve;\r\n      this._rejectSelf = reject;\r\n    });\r\n    this.spine.authenticate(userName, password);\r\n    return this.authPromise;\r\n  }\r\n\r\n  logoff() {\r\n    this.spine.logoff();\r\n  }\r\n\r\n  private onAuthenticateStart() {\r\n\r\n  }\r\n\r\n  private onAuthenticate() {\r\n    this.doAuthenticate = true;\r\n    this.reset();\r\n    this._resolveSelf('ok');\r\n  }\r\n\r\n  private onAuthenticateFailed() {\r\n    this._rejectSelf('error');\r\n  }\r\n\r\n  private onLogoff() {\r\n    this.doAuthenticate = true;\r\n    if (this.spine.firstOnOpen) {\r\n      this.IPCReady$.next(true);\r\n    }\r\n    this.reset();\r\n  }\r\n\r\n  private reset() {\r\n    this.components = [];\r\n    this.components$.next(this.components);\r\n\r\n    const messages = [];\r\n    this.LogMessageState$.next(UserLogStateType.normal);\r\n    this.LogMessageCount$.next(messages.length);\r\n    this.logMessages$.next(messages);\r\n\r\n    if (this.IPCReady$.value) {\r\n      this.connectionState$.next(ConnectionState.authenticate);\r\n    } else {\r\n      this.connectionState$.next(ConnectionState.disconnected);\r\n    }\r\n  }\r\n\r\n  private getComponentInfo(retryCount, module_load) {\r\n    const self = this;\r\n    this.spine.sendQuery('GetApplicationInfo', function(appInfo) {\r\n      console.log('app info', appInfo);\r\n      this.spine.sendQuery('getComponentInfo', function(message) {\r\n        console.log('component info', message);\r\n        self.application$.next(appInfo);\r\n        self.texts = appInfo.display.texts;\r\n        self.components = ComponentFactory.createComponents(message, self);\r\n        ComponentFactory.FixControllerReferences(self.getComponentsByType('controller'));\r\n        self.components$.next(self.components);\r\n        self.connectionState$.next(ConnectionState.connected);\r\n        if (module_load) {\r\n          self.componentsChanged$.next(true);\r\n        }\r\n        console.log('components', self.components);\r\n      },\r\n      function() {\r\n        console.error('get component info timeout');\r\n        if (retryCount > 0) {\r\n          self.getComponentInfo(retryCount - 1, module_load);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private onOpen(first) {\r\n    console.log('kervi service on open', this.spine.firstOnOpen, first, this);\r\n    const self = this;\r\n    this.connectionState$.next(ConnectionState.loading);\r\n    this.doAuthenticate = this.spine.doAuthenticate;\r\n    this.getComponentInfo(2, false);\r\n    if (self.spine.firstOnOpen) {\r\n      this.IPCReady$.next(true);\r\n      this.spine.addEventHandler('moduleStarted', '', function() {\r\n          console.log('module loaded', self.components);\r\n          setTimeout(function() {\r\n            self.getComponentInfo(2, true);\r\n          }\r\n          , 2000);\r\n      });\r\n\r\n      this.spine.addEventHandler('moduleStopped', '', function() {\r\n          console.log('module unloaded');\r\n          setTimeout(function() {\r\n            console.log('module unloaded, refresh');\r\n            self.getComponentInfo(2, true);\r\n        }, 5000);\r\n      });\r\n    }\r\n  }\r\n\r\n  private onClose() {\r\n    this.reset();\r\n    console.log('ks on close');\r\n    this.IPCReady$.next(false);\r\n  }\r\n\r\n  private onMPS(mps: number) {\r\n    this.mps$.next(mps);\r\n  }\r\n\r\n  private onHeartbeat() {\r\n\r\n  }\r\n\r\n  private onConnect() {\r\n\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-kervi-js',\r\n  template: `\r\n    <p>\r\n      kervi-js works!\r\n    </p>\r\n  `,\r\n  styles: []\r\n})\r\nexport class KerviJsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { KerviJsComponent } from './kervi-js.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n  ],\r\n  declarations: [KerviJsComponent],\r\n  exports: [KerviJsComponent]\r\n})\r\nexport class KerviJsModule { }\r\n","\r\n/*\r\n * Public API Surface of kervi-js\r\n */\r\n\r\nexport { KerviBaseService, ConnectionState } from './lib/kervi-js.service';\r\nexport * from './lib/models/KerviValues.model';\r\nexport * from './lib/models/dashboard.model';\r\nexport * from './lib/models/action.model';\r\nexport * from './lib/models/IComponent.model';\r\nexport * from './lib/models/controller.model';\r\nexport * from './lib/models/file.model';\r\nexport * from './lib/models/stream.model';\r\n\r\nexport { KerviValue, ValueRange, ValueRangeType } from './lib/models/KerviValues.model';\r\n\r\n\r\nexport * from './lib/kervi-js.service';\r\nexport * from './lib/kervi-js.component';\r\nexport * from './lib/kervi-js.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { NGXKerviService } from \"ngx-kervi\";\r\nimport { ConnectionState } from \"ngx-kervi\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  private currentPage=null;\r\n  \r\n  constructor (private kerviService:NGXKerviService, private router:Router, private route:ActivatedRoute){\r\n    var self = this;\r\n    \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n\r\n    this.kerviService.connectionState$.subscribe(function(connectedState){\r\n      console.log(\"connected service state\",connectedState, self);\r\n      if (connectedState == ConnectionState.disconnected){\r\n        self.router.navigate(['/connect']);\r\n      }\r\n      if (connectedState == ConnectionState.loading){\r\n      }\r\n      if (connectedState == ConnectionState.authenticate){\r\n        self.router.navigate(['/authenticate']);\r\n      }\r\n      if (connectedState == ConnectionState.connected){\r\n        if (self.currentPage)\r\n          self.router.navigate([self.currentPage]);\r\n        else {\r\n          var defaultDashboard = self.kerviService.getDefaultDashboard();\r\n          self.router.navigate(['/'+defaultDashboard.componentType+'/'+defaultDashboard.id])\r\n        }\r\n      }\r\n    });\r\n\r\n    setTimeout(function(){\r\n      self.kerviService.connect();\r\n    },0)\r\n    \r\n  }\r\n}\r\n","<router-outlet>\r\n              \r\n</router-outlet>\r\n<!-- <kervi-user-messages></kervi-user-messages> -->","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}