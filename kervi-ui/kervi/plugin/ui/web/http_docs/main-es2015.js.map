{"version":3,"sources":["D:/dev/kervi/kervi/kervi-ui/kervi/ui/web/dist/kervi-js/fesm2015/kervi-js.js","D:/dev/kervi/kervi/kervi-ui/kervi/ui/web/dist/kervi-zorro/fesm2015/kervi-zorro.js","D:/dev/kervi/kervi/kervi-ui/kervi/ui/web/dist/ngx-kervi/fesm2015/ngx-kervi.js","./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/connect/connect.component.ts","./src/app/connect/connect.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/image-viewer/image-viewer.component.ts","./src/app/image-viewer/image-viewer.component.html","./src/app/image-viewer/image-viewer.config.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/media/media.component.ts","./src/app/media/media.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwN;AACjL;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iCAAiC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kCAAkC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,wDAAwD;AACjG;AACA,yCAAyC,6CAA6C;AACtF,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,0DAA0D;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,4CAA4C;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,wDAAwD;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,0CAA0C;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,mFAAmF;AACnF;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uCAAuC;AAC1E,mBAAmB;AACnB;AACA;AACA;AACA;AACA,iCAAiC,mCAAmC;AACpE,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,wDAAwD;AACjG;AACA,yCAAyC,6CAA6C;AACtF,uBAAuB;AACvB,gDAAgD,+DAA+D;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gGAAgG,KAAK;AACrJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,mFAAmF;AACnF;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,iDAAiD;AACrF;AACA;AACA;AACA;AACA,8BAA8B,4DAA4D;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uCAAuC;AAC1E,mBAAmB;AACnB;AACA,4CAA4C,iEAAiE;AAC7G;AACA;AACA;AACA,iCAAiC,mCAAmC;AACpE,mBAAmB;AACnB,4CAA4C,+DAA+D;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qBAAqB;AACtD;AACA;AACA,SAAS;AACT,mBAAmB,+CAA+C;AAClE;AACA;AACA;AACA,4CAA4C,6DAA6D;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,4CAA4C,oIAAoI;AAChL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oDAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAe;AAC5C;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,uBAAuB;AACvB;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oDAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oDAAekCAAkC;AAClC;AACA,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA,wBAAwB;AACxoDAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oDAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oDAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AAC3C;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACA;AACA,gCAAgC,oDAAe;AAC/C,iCAAiC,oDAAe;AAChD,wBAAwB,oDAAe;AACvC;AACA;AACA;AACA,+BAA+B,oDAAe;AAC9C,oCAAoC,oDAAe;AACnD;AACA,sCAAsC,oDAAe;AACrD;AACA,gCAAgC,oDAAe;AAC/C,mCAAmC,oDAAe;AAClD,oCAAoC,oDAAe;AACnD,oCAAoC,oDAAe;AACnD;AACA,6BAA6B,oDAAe;AAC5C;AACA;AACA;AACA,gCAAgC,oDAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,sCAAsC,uEAAiB,CAAC,wDAAU,GAAG;AACvI,0BAA0B,uEAAiB,EAAE,qHAAqH;AAClK,QAAQ,iEAAW;AACnB,KAAK;AACL;AACA,QAAQ,oEAAc,MAAM,iEAAW;AACvC,KAAK,EAAE,aAAa,wEAA0B,mPAAmP,6WAA6W,0/BAA0/B;AACxoD,QAAQ,gEAAU;AAClB,QAAQ,gEAAU;AAClB,KAAK;AACL,QAAQ,gEAAU;AAClB,QAAQ,+DAAS;AACjB,QAAQ,gEAAU;AAClB,KAAK,EAAE,eAAe,oDAAI,uBAAuB,uDAAO,gDAAgD,uDAAa,iBAAiB;AACtI,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAU,EAAE,EAAE,EAAE,GAAG;AACzD,kBAAkB,uDAAS;AAC3B;AACA,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mDAAa;AACrB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yBAAyB;AAClD;AACA,+BAA+B,uDAAuD;AACtF;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,kCAAkC,uEAAiB,CAAC,yDAAe,GAAG,uEAAiB,CAAC,8DAAoB,GAAG;AACzK,sBAAsB,uEAAiB,EAAE,wGAAwG;AACjJ,QAAQ,iEAAW;AACnB,KAAK;AACL;AACA,QAAQ,oEAAc,MAAM,iEAAW;AACvC,KAAK,EAAE,WAAW,iHAAiH,mGAAmG;AACtO,QAAQ,+DAAS;AACjB,KAAK,EAAE,gBAAgB;AACvB,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,yDAAe,EAAE,GAAG,OAAO,8DAAoB,EAAE,EAAE,EAAE,GAAG;AAC9F,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,uDAAS;AAC3B;AACA,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa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EAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA,UAAU,kBAAkB;AAC5B,gCAAgC,8DAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,uCAAuC;AACrG,yBAAyB,uEAAiB,EAAE,oEAAoE,wEAA0B,4EAA4E,EAAE,gBAAgB;AACxO,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA;;AAEA;AACA;AACA;;AAEuQ;AACvQ;;;;;;;;;;;;;ACtjFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6U;AAC/P;AACnB;AACpB;;AAEvC,8BAA8B,yDAAgB;AAC9C;AACA,4DAA4D,2DAA2D;AACvH,wBAAwB,wEAAkB,EAAE,wDAAwD;AACpG,qCAAqC,2EAAqB;AAC1D,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,wDAAU;AACxB,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA,sDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,0CAA0C;AAChH,6BAA6B,wEAAkB,EAAE,kEAAkE;AACnH,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,wDAAU;AACxB,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK,6D;AAClB,+D;AACA,gB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK,4C;AAClB,8C;AACA,gB;AACA;AACA;AACA;AACA,4EAA4E,6CAA6C;AACzH,+BAA+B,uEAAiB,EAAE,2EAA2E,6DAA6D,mFAAmF,EAAE,oBAAoB;AACnS,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,kDAAkD;AACxI,oCAAoC,uEAAiB,EAAE,2FAA2F,+GAA+G,wFAAwF,EAAE,oBAAoB;AAC/W,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA,mBAAmB;AACnB;AACA;AACA;AACA,oFAAoF,iDAAiD;AACrI,mCAAmC,uEAAiB,EAAE,yFAAyF,mCAAmC,uFAAuF,EAAE,oBAAoB;AAC/R,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,0CAA0C;AAChH,4BAA4B,uEAAiB,EAAE,0EAA0E,6KAA6K,gFAAgF,EAAE,oBAAoB;AAC5Y,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,yCAAyC;AAC7G,2BAA2B,uEAAiB,EAAE,wEAAwE,2HAA2H,+EAA+E,EAAE,oBAAoB;AACtV,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,0CAA0C;AAChH,4BAA4B,uEAAiB,EAAE,kFAAkF,wEAA0B,iFAAiF,EAAE,oBAAoB;AAClQ,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,2CAA2C;AACnH,6BAA6B,uEAAiB,EAAE,oFAAoF,wEAA0B,kFAAkF,EAAE,oBAAoB;AACtQ,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD,yBAAyB,oDAAe;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,0CAA0C;AAChH,4BAA4B,uEAAiB,EAAE,0EAA0E,yGAAyG,gFAAgF,EAAE,oBAAoB;AACxU,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,0CAA0C;AAChH,4BAA4B,uEAAiB,EAAE,0EAA0E,mOAAmO,gFAAgF,EAAE,oBAAoB;AAClc,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,yCAAyC;AAC7G,2BAA2B,uEAAiB,EAAE,gFAAgF,wEAA0B,gFAAgF,EAAE,oBAAoB;AAC9P,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,4CAA4C;AACtH,8BAA8B,uEAAiB,EAAE,sFAAsF,wEAA0B,mFAAmF,EAAE,oBAAoB;AAC1Q,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,0CAA0C;AAChH,4BAA4B,uEAAiB,EAAE,kFAAkF,wEAA0B,iFAAiF,EAAE,oBAAoB;AAClQ,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA;AACA,4BAA4B,yDAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,wEAAwE,2CAA2C;AACnH,6BAA6B,uEAAiB,EAAE,6EAA6E,+GAA+G,iFAAiF,EAAE,oBAAoB;AACnV,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,6CAA6C;AACzH,+BAA+B,uEAAiB,EAAE,mJAAmJ,EAAE,oBAAoB;AAC3N,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,4EAA4E,6CAA6C;AACzH,+BAA+B,uEAAiB,EAAE,iFAAiF,iJAAiJ,mFAAmF,EAAE,oBAAoB;AAC7X,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA,mBAAmB;AACnB;AACA;AACA;AACA,gEAAgE,uCAAuC;AACvG,yBAAyB,uEAAiB,EAAE,qIAAqI;AACjL,QAAQ,oEAAc;AACtB,QAAQ,4DAAM;AACd,QAAQ,kEAAY;AACpB,KAAK,EAAE,oBAAoB;AAC3B,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,iCAAiC,uEAAiB,mBAAmB;AAC7H,sBAAsB,kEAAY,EAAE,qDAAqD;AACzF,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,kDAAI;AAClB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,wBAAwB,EAAE,EAAE,QAAQ,EAAE;;AAErE;AACA;AACA;AACA,2BAA2B,sEAAgB,EAAE,4BAA4B;AACzE,2BAA2B,sEAAgB,EAAE,mDAAmD,yCAAyC,EAAE,gCAAgC;AAC3K,cAAc,oDAAoD,wEAAkB,uBAAuB,0DAA0D,EAAE,EAAE;AACzK,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,sDAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sEAAgB,EAAE,uBAAuB;AAC/D,sBAAsB,sEAAgB,EAAE,8CAA8C,kCAAkC,8DAAQ,CAAC,sDAAQ,GAAG,EAAE;AAC9I,8BAA8B;AAC9B,cAAc,oDAAoD,wEAAkB,kBAAkB;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,EAAE,EAAE;AAClC,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,sDAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,sDAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;;AAEod;AACpd;;;;;;;;;;;;ACpgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAA0E;AAC9B;AACA;AACa;;;;AAOlD,MAAM,YAAY;IAGvB,YAAqB,YAA4B,EAAU,MAAa,EAAU,KAAoB;QAAjF,iBAAY,GAAZ,YAAY,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAO;QAAU,UAAK,GAAL,KAAK,CAAe;QAF9F,gBAAW,GAAC,IAAI,CAAC;QAGvB,IAAI,IAAI,GAAG,IAAI,CAAC;IAGlB,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,SAAS,CAAC,UAAS,cAAc;YAClE,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAC,cAAc,EAAE,IAAI,CAAC,CAAC;YAC5D,IAAI,cAAc,IAAI,yDAAe,CAAC,YAAY,EAAC;gBACjD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;aACpC;YACD,IAAI,cAAc,IAAI,yDAAe,CAAC,OAAO,EAAC;aAC7C;YACD,IAAI,cAAc,IAAI,yDAAe,CAAC,YAAY,EAAC;gBACjD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;aACzC;YACD,IAAI,cAAc,IAAI,yDAAe,CAAC,SAAS,EAAC;gBAC9C,IAAI,IAAI,CAAC,WAAW;oBAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;qBACtC;oBACH,IAAI,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,CAAC;oBAC/D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAC,gBAAgB,CAAC,aAAa,GAAC,GAAG,GAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;iBACnF;aACF;QACH,CAAC,CAAC,CAAC;QAEH,UAAU,CAAC;YACT,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QAC9B,CAAC,EAAC,CAAC,CAAC;IAEN,CAAC;;wEApCU,YAAY;4FAAZ,YAAY;QCVzB,2EAEgB;;6FDQH,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACmB;AACpC;AACI;AACO;AAET;AACI;AACA;AACS;AAGoB;AAEjB;AACN;AACT;AAEG;AACU;AACM;AACR;AACc;AACX;AACgB;;;AAG1E,0EAAkB,CAAC,kEAAE,CAAC,CAAC;AAEvB,MAAM,cAAc,GAAG,4DAEtB,CAAC;AACF,MAAM,KAAK,GAAqB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;AAG3F,MAAM,MAAM,GAAW;IAErB,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,4EAAgB,EAAE;IAChD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,sEAAc,EAAE;IACnD,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,kFAAkB,EAAE;IAC1D,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,sEAAc,EAAE;IAC5C;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,EAAE;QACd,SAAS,EAAE,MAAM;KAClB;CACF,CAAC;AA+BK,MAAM,SAAS;;wFAAT,SAAS,cAFR,4DAAY;4IAEb,SAAS,mBAPV;QACR,EAAE,OAAO,EAAE,qDAAO,EAAE,QAAQ,EAAE,mDAAK,EAAE;QACrC,EAAE,OAAO,EAAE,sDAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE;KACvC,YAhBQ;YACP,0DAAW;YACX,kEAAmB;YACnB,uEAAa;YACb,4FAAuB;YACvB,wDAAc;YACd,6DAAmB;YACnB,4DAAgB;YAChB,qEAAgB;YAChB,+DAAiB;YACjB,2BAA2B;YAC3B,6DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;SAC7B;mIAQU,SAAS,mBA3BlB,4DAAY;QACZ,sEAAc;QACd,4EAAgB;QAChB,kFAAkB;QAClB,sEAAc;QACd,wFAAkB,aAGlB,0DAAW;QACX,kEAAmB;QACnB,uEAAa;QACb,4FAAuB;QACvB,wDAAc;QACd,6DAAmB;QACnB,4DAAgB;QAChB,qEAAgB;QAChB,+DAAiB;6FAWR,SAAS;cA7BrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,4DAAY;oBACZ,sEAAc;oBACd,4EAAgB;oBAChB,kFAAkB;oBAClB,sEAAc;oBACd,wFAAkB;iBACnB;gBACD,OAAO,EAAE;oBACP,0DAAW;oBACX,kEAAmB;oBACnB,uEAAa;oBACb,4FAAuB;oBACvB,wDAAc;oBACd,6DAAmB;oBACnB,4DAAgB;oBAChB,qEAAgB;oBAChB,+DAAiB;oBACjB,2BAA2B;oBAC3B,6DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;iBAC7B;gBACD,SAAS,EAAC;oBACR,EAAE,OAAO,EAAE,qDAAO,EAAE,QAAQ,EAAE,mDAAK,EAAE;oBACrC,EAAE,OAAO,EAAE,sDAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE;iBACvC;gBAED,SAAS,EAAE,CAAC,4DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC7ED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACN;AACA;;;;;;AAMrC,MAAM,gBAAgB;IAI3B,YAAoB,YAA4B;QAA5B,iBAAY,GAAZ,YAAY,CAAgB;QAFhD,YAAO,GAAG,CAAC,CAAC;IAKZ,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,SAAS,CAAC,UAAS,cAAc;YAClE,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAC,cAAc,EAAE,IAAI,CAAC,CAAC;YAC5D,IAAI,cAAc,IAAI,yDAAe,CAAC,YAAY,EAAC;gBACjD,IAAI,CAAC,OAAO,GAAC,CAAC;aACf;YACD,IAAI,cAAc,IAAI,yDAAe,CAAC,OAAO,EAAC;gBAC5C,IAAI,CAAC,OAAO,GAAC,CAAC;aACf;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;gFApBU,gBAAgB;gGAAhB,gBAAgB;QCR7B,4EACI;QAAA,gFACE;QAAA,yEACE;QAAA,yEACE;QAAA,8EACE;QAAA,wEAAmF;QACnF,wEAA6E;QAC7E,wEAAyF;QAC3F,4DAAW;QACb,4DAAM;QACR,4DAAM;QACR,4DAAa;QACjB,4DAAY;;QARQ,0DAAqB;QAArB,kFAAqB;;6FDI5B,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;AACjB;AAC4B;;;;;;;;;;;;;;;;;;;;;;ICQ5E,yEAAkG;IAAA,uDAAkB;IAAA,4DAAK;;;IAAnE,+JAA2C;IAAC,0DAAkB;IAAlB,mFAAkB;;;IADrH,wEACC;IAAA,yJAAkG;IACnG,qEAAe;;;IADG,0DAAoC;IAApC,uFAAoC;;;IAEtD,qEACC;IAAA,wEAAyB;IAC1B,4DAAK;;;;IACL,yEAA+G;IAA1B,2VAAwB;IAAE,mEAA4B;IAAC,uDAAyB;;IAAA,4DAAK;;IAA9B,0DAAyB;IAAzB,mJAAyB;;;;IACrK,yEAA+G;IAAzB,2VAAwB;IAAC,mEAA6B;IAAA,uDAA0B;;IAAA,4DAAK;;IAA/B,0DAA0B;IAA1B,0IAA0B;;;IAXxK,yEAEC;IAAA,2EAAY;IAAA,mEAA+E;IAAC,uDAAkB;IAAA,4DAAO;IACrH,qEACC;IAAA,6JACC;IAED,yIACC;IAED,0IAA+G;IAC/G,0IAA+G;IAChH,4DAAK;IACN,4DAAK;;;IAXsD,0DAA4B;IAA5B,qFAA4B;IAAM,0DAAkB;IAAlB,gGAAkB;IAE/F,0DAA6B;IAA7B,8FAA6B;IAGvC,0DAA8C;IAA9C,sHAA8C;IAGjC,0DAAkC;IAAlC,0GAAkC;IAClC,0DAAmC;IAAnC,2GAAmC;;;;IAGtD,yEACC;IAAA,wEACC;IADG,uXAAyD;IAC5D,mEAA6E;IAC9E,4DAAI;IACL,4DAAK;;IAFyC,0DAA4B;IAA5B,qFAA4B;;;;IAK5E,0EACC;IAAA,uFAA+H;IAC/H,kEAAM;IAAA,wEACJ;IADQ,oWAAqC;IAC7C,mEAAoF;IACtF,4DAAI;IACJ,kFAA6C;IAE9C,4DAAM;;;IANkB,0DAAiC;IAAjC,kGAAiC;IAEJ,0DAA4B;IAA5B,qFAA4B;;;IA5BnF,4EACC;IAAA,yEACC;IAAA,yEACC;IAAA,wEACC;IAAA,oIAEC;IAYD,qIACC;IAIF,4DAAK;IACN,4DAAM;IACN,uIACC;IAQF,4DAAM;IACP,4DAAY;;;IA/BQ,0DAAgB;IAAhB,iFAAgB;IAcf,0DAA2B;IAA3B,4FAA2B;IAOjB,0DAAuC;IAAvC,+GAAuC;;;IAcrE,wEACC;IAAA,yEACC;IAAA,0EACC;IAAA,0EAMa;;;IAEd,4DAAM;IACP,4DAAM;IACP,qEAAe;;IARX,0DAAwC;IAAxC,qJAAwC;;;IAS5C,kFAAgJ;;;;IAA7G,8EAAqB;;;IACxD,8EACC;IAAA,kFAA2J;IAC5J,4DAAM;;;IAFyD,0EAAmB;IAC/D,0DAAgC;IAAhC,gGAAgC;;;IAEnD,8EACC;IAAA,kFAA8J;IAC/J,4DAAM;;;IAF2D,0EAAmB;IACjE,0DAAiC;IAAjC,iGAAiC;;;IAInD,wEACE;IAAA,uFAAkJ;IAEpJ,qEAAe;;;;IAFU,0DAAiC;IAAjC,8FAAiC;;;IAF3D,0EACC;IAAA,mJACE;IAGH,4DAAM;;;IAJS,0DAAsC;IAAtC,4FAAsC;;;IAQpD,uFAAqK;;;IAA9I,wEAAe;;;IAGtC,uFAAyK;;;IAAlJ,wEAAe;;;IAGtC,uFAAuK;;;IAAhJ,wEAAe;;;;IARxC,4EACC;IAAA,0EACC;IAAA,4KAA6I;IAC9I,4DAAM;IACN,0EACC;IAAA,4KAAiJ;IAClJ,4DAAM;IACN,0EACC;IAAA,4KAA+I;IAC/I,6EAAmE;IAAjC,4VAAgC;IAAC,mEAAqH;;IAAA,4DAAS;IAClM,4DAAM;IACP,4DAAY;;;IAT6B,0DAAiC;IAAjC,kGAAiC;IAGjC,0DAAmC;IAAnC,oGAAmC;IAGnC,0DAAkC;IAAlC,mGAAkC;IACgE,0DAA0C;IAA1C,8JAA0C;IAArG,0HAA0D;;;IA9E3I,4EACC;IAAA,sIACC;IAoCD,6EACD;IAAA,oEAAG;IAAA,4DAAC;IAAA,4DAAI;IACN,4IACC;IAaD,oJAA6H;IAC7H,2HACC;IAED,2HACC;IAGD,0HACC;IAKF,4DAAa;IACb,yIACC;IAWF,4DAAY;;;IAhFA,0DAAmB;IAAnB,oFAAmB;IAuCf,0DAAkB;IAAlB,mFAAkB;IAcd,0DAAgB;IAAhB,iFAAgB;IACS,0DAAmB;IAAnB,oFAAmB;IAGlB,0DAAoB;IAApB,qFAAoB;IAIuC,0DAA8B;IAA9B,+FAA8B;IAO3H,0DAAmB;IAAnB,oFAAmB;;AD3DxB,MAAM,kBAAmB,SAAQ,iEAAuB;IAa7D,YAAoB,MAAa,EAAU,cAA6B;QACtE,KAAK,EAAE,CAAC;QADU,WAAM,GAAN,MAAM,CAAO;QAAU,mBAAc,GAAd,cAAc,CAAe;QAVhE,YAAO,GAAC,GAAG,CAAC;QAOpB,cAAS,GAAG,EAAE,CAAC;QACf,gBAAW,GAAG,IAAI,CAAC;IAIlB,CAAC;IAEF,QAAQ;QACN,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,UAAS,KAAK;YACrC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,SAAS,CAAC;YAC7C,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAC3B,MAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;YAC5B,0BAA0B;YAC1B,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QAGzB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC5C,IAAI,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;YAChC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;YAEhC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;YAChC,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC;gBAC3B,IAAI,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC;gBAE1B,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,GAAC,CAAC;gBACxC,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,GAAC,CAAC;gBAEzC,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,GAAC,CAAC;gBACzC,IAAI,CAAC,YAAY,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,GAAC,CAAC;YAGhD,CAAC,EAAE,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB;QACd,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;;oFAxDU,kBAAkB;kGAAlB,kBAAkB;;;;;;;;QCV/B,2HACC;QAkFD,8EAOA;QALC,qMAA4B,8FAEd,sBAAkB,IAFJ;QAK7B,yEAA8C;QAAA,uEAAwB;QAAA,4DAAM;QAE5E,4DAAW;;QA5FA,+EAAiB;QAqF3B,0DAA4B;QAA5B,uFAA4B;;6FD3EhB,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;kBAEE,uDAAS;mBAAC,SAAS;;kBACnB,uDAAS;mBAAC,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEXvB,oDAAoD;AACpD,6BAA6B;AAC7B,qBAAqB;AAaI;AACkB;AACL;AACO;AACW;;;;;;;;;;ICX5C,2EAAiI;IAAtB,+TAAqB;IAAC,mEAAgC;IAAA,4DAAO;;;IAA3H,gHAAgD;;;;IAC7F,2EAAmI;IAAvB,gUAAsB;IAAC,mEAAiC;IAAA,4DAAO;;;IAA9H,iHAAiD;;;;IAC9F,2EAA4I;IAA3B,0TAAmB,KAAK,KAAE;IAAC,mEAA6B;IAAA,4DAAO;;;IAAnI,oHAAoD;;;;IACjG,2EAA4I;IAA1B,0TAAmB,IAAI,KAAE;IAAC,mEAA6B;IAAA,4DAAO;;;IAAnI,qHAAqD;;;;IAClG,2EAA+H;IAApB,6TAAmB;IAAC,mEAA6B;IAAA,4DAAO;;;IAAtH,+GAA+C;;;;IAC5F,2EAA+I;IAA1B,mUAAyB;IAAC,mEAAmC;IAAA,4DAAO;;;IAA5I,oHAAoD;;;;IACjG,2EAAyI;IAAxB,iUAAuB;IAAC,mEAAiC;IAAA,4DAAO;;;IAApI,mHAAkD;;;IAPjG,0EACE;IAAA,uHAAiI;IACjI,uHAAmI;IACnI,uHAA4I;IAC5I,uHAA4I;IAC5I,uHAA+H;IAC/H,uHAA+I;IAC/I,uHAAyI;IAC3I,4DAAM;;;IAP0F,0DAAY;IAAZ,6EAAY;IACX,0DAAY;IAAZ,6EAAY;IACT,0DAAc;IAAd,+EAAc;IACb,0DAAc;IAAd,+EAAc;IACpB,0DAAa;IAAb,8EAAa;IACR,0DAAkB;IAAlB,mFAAkB;IACpB,0DAAgB;IAAhB,iFAAgB;;;;IASpH,2EAAkF;IAApB,uTAAmB;IAAC,mEAA6B;IAAA,4DAAO;;;;IACtH,2EAAkF;IAApB,uTAAmB;IAAC,mEAA8B;IAAA,4DAAO;;;IAEzH,0EACA;IAAA,uDACA;IAAA,4DAAM;;;IADN,0DACA;IADA,0HACA;;ADAG,MAAM,kBAAkB;IA0B7B,YACU,EAAc,EACd,QAAmB,EACD,GAAa,EACnB,MAAuB;QAHnC,OAAE,GAAF,EAAE,CAAY;QACd,aAAQ,GAAR,QAAQ,CAAW;QACD,QAAG,GAAH,GAAG,CAAU;QACnB,WAAM,GAAN,MAAM,CAAiB;QA5BpC,WAAM,GAAa,EAAE,CAAC;QACtB,gBAAW,GAAG,IAAI,CAAC;QACnB,SAAI,GAAG,IAAI,CAAC;QACZ,WAAM,GAAG,IAAI,CAAC;QACd,UAAK,GAAG,IAAI,CAAC;QACb,eAAU,GAAG,IAAI,CAAC;QAClB,aAAQ,GAAG,IAAI,CAAC;QAChB,gBAAW,GAAG,UAAU,CAAC;QACxB,eAAU,GAAyB,IAAI,0DAAY,EAAU,CAAC;QAC9D,eAAU,GAAyB,IAAI,0DAAY,EAAU,CAAC;QAC9D,gBAAW,GAAyB,IAAI,0DAAY,EAAE,CAAC;QACjE,iBAAY,GAAG,EAAE,CAAC;QAIlB,oBAAe,GAAG,CAAC,CAAC;QACpB,aAAQ,GAAG,CAAC,CAAC;QACb,cAAS,GAAG,GAAG,CAAC;QAChB,eAAU,GAAG,KAAK,CAAC;QACnB,cAAS,GAAG,CAAC,CAAC;QAWZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,aAA4B,CAAC;QACpD,IAAI,CAAC,eAAe,GAAG,IAAI,oEAAe,EAAE,CAAC;QAC7C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC;QACtD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;QAC5D,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;YAC3C,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;SAChF;QACD,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE;YAC9C,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;SACzF;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IACrC,CAAC;IAED,eAAe;QACb,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACzC,CAAC;IAED,UAAU;QACR,IAAI,IAAI,CAAC,SAAS,KAAK,GAAG,EAAE;YAC1B,OAAO;SACR;QACD,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC;QACrB,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;YACtB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;SACpB;QACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACzC,CAAC;IAED,SAAS,CAAC,WAAoB;QAC5B,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,CAAC,IAAY,EAAE,EAAE;YAC3C,IAAI,WAAW,EAAE;gBACf,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,YAAY,CAAC;aACrC;iBAAM;gBACL,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,YAAY,CAAC;aACrC;YACD,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;YACnC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,IAAI,CAAC,CAAC;QAChF,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,CAAC,IAAY,EAAE,EAAE;YAC3C,IAAI,IAAI,IAAI,CAAC,EAAE;gBACb,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC;gBACnE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;aAC1B;iBAAM;gBACL,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC;oBACnE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBAC3B,CAAC,EAAE,IAAI,CAAC,CAAC;aACV;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAClD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;QAChG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;QACxD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC;QACpF,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACzD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QAClD,QAAQ,CAAC,KAAK,EAAE,CAAC;QACjB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IACrD,CAAC;IAED,OAAO;QACL,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,IAAI,CAAC,eAAe,IAAI,CAAC,EAAE;YAC7B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC;SACtC;QACD,iBAAiB;QACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAC7C,CAAC;IAED,OAAO;QACL,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,EAAE;YACxC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;SAC1B;QACD,iBAAiB;QACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAC7C,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAEO,aAAa;QACnB,IAAI,CAAC,YAAY,GAAG,IAAI,gDAAW,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,gCAAgC,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QACrH,IAAI,CAAC,iBAAiB,GAAG,IAAI,0DAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACjE,iBAAiB;IACnB,CAAC;IAEO,YAAY,CAAC,WAAW,GAAG,IAAI;QACrC,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;YAC/C,KAAK,GAAG,SAAS,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC;SACrC;QACD,MAAM,MAAM,GAAG,UAAU,IAAI,CAAC,SAAS,MAAM,CAAC;QAC9C,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;YACpC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;SACtC;QACD,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QAClD,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QACnD,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,WAAW,EAAE;gBACf,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;gBACtC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;aACxC;QACH,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAEa,eAAe;;YAC3B,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;YACrB,MAAM,IAAI,GAAW,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACzE,MAAM,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;YACpC,MAAM,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;YAClC,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAC9B,CAAC;KAAA;IAEO,aAAa;QACnB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;QACjE,IAAI,CAAC,CAAC,UAAU,EAAE;YAChB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;SACrD;QACD,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,CAAC,sBAAsB,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;IACjE,CAAC;IAED,OAAO;QACL,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC;IAEO,iBAAiB;QACvB,MAAM,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;QAClD,MAAM,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC,WAAW,CAAC;QAClF,OAAO,eAAe,GAAG,eAAe,GAAG,EAAE,CAAC;IAChD,CAAC;IAEO,QAAQ;QACd,MAAM,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,gCAAgC,CAAC,CAAC,YAAY,CAAC;QAClG,MAAM,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC,WAAW,CAAC;QAClF,MAAM,eAAe,GAAG,eAAe,GAAG,eAAe,CAAC;QAC1D,IAAI,eAAe,IAAI,GAAG,IAAI,eAAe,GAAG,GAAG,EAAE;YACnD,OAAO,eAAe,GAAG,eAAe,GAAG,GAAG,CAAC;SAChD;aAAM,IAAI,eAAe,IAAI,GAAG,IAAI,eAAe,GAAG,GAAG,EAAE;YAC1D,OAAO,eAAe,GAAG,eAAe,GAAG,IAAI,CAAC;SACjD;aAAM,IAAI,eAAe,IAAI,GAAG,EAAE;YACjC,OAAO,eAAe,GAAG,eAAe,GAAG,IAAI,CAAC;SACjD;aAAM,IAAI,eAAe,GAAG,CAAC,EAAE;YAC9B,OAAO,CAAC,CAAC;SACV;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAEO,aAAa,CAAC,IAAI;QACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;IACnD,CAAC;IAEO,eAAe,CAAC,IAAI;QAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC;IAC5C,CAAC;IAEO,YAAY,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK;QACrC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,WAAW,EAAE,GAAG,KAAK,IAAI,KAAK,EAAE,CAAC,CAAC;IACxD,CAAC;IAEO,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK;QAChC,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QACvD,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,WAAW;QACT,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE;YACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;SACjD;QACD,IAAI,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE;YAC5B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;SAC3D;IACH,CAAC;;oFAlOU,kBAAkB,uTA6BnB,wDAAQ;kGA7BP,kBAAkB;QC7BjC,sEACI;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACI;QAAA,uEAAgF;QAArE,qIAAS,sBAAkB,IAAC;QAAqC,4DAAI;QACpF,4DAAM;QACR,yEACE;QAAA,8GACE;QAQN,4DAAM;QACN,4DAAM;QACN,4DAAM;QACN,yEACE;QAAA,oEAEM;QACN,kHAAkF;QAClF,mHAAkF;QACpF,4DAAM;QACN,iHACA;QAEF,4DAAM;QACR,4DAAM;;QA/BH,2GAAqC;QAQ3B,0DAAmB;QAAnB,iFAAmB;QAYO,0DAA4D;QAA5D,oHAA4D;QAIvF,0DAAoB;QAApB,kFAAoB;QACpB,0DAAoB;QAApB,kFAAoB;QAEvB,0DAAoB;QAApB,kFAAoB;;6FDEhB,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;6KA8BkC,QAAQ;sBAAtC,oDAAM;uBAAC,wDAAQ;;sBACf,sDAAQ;;kBA7BV,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;kBACL,oDAAM;;kBACN,oDAAM;;kBACN,oDAAM;;;;;;;;;;;;;;AEtCX;AAAA;AAAO,MAAM,eAAe;IAA5B;QACE,iBAAY,GAAkB;YAC5B,SAAS,EAAE,GAAG;YACd,OAAO,EAAE,GAAG;YACZ,QAAQ,EAAE,KAAK;YACf,eAAe,EAAE,IAAI;YACrB,gBAAgB,EAAE,IAAI;SACvB,CAAC;QACF,oBAAe,GAAmB;YAChC,aAAa,EAAE,SAAS;YACxB,cAAc,EAAE,UAAU;YAC1B,iBAAiB,EAAE,aAAa;YAChC,kBAAkB,EAAE,cAAc;YAClC,YAAY,EAAE,aAAa;YAC3B,iBAAiB,EAAE,aAAa;YAChC,eAAe,EAAE,UAAU;SAC5B,CAAC;IACJ,CAAC;CAAA;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACmC;AAC1C;;;;;;;;;;;;;;ICW3B,kFACG;IAAA,sFAA2B;IAAA,4DAC7B;;;IAQD,kFACG;IAAA,sFAA2B;IAAA,4DAC7B;;;IAMD,kFACG;IAAA,wFAA6B;IAAA,4DAC/B;;;IAIkB,mEAA2B;;;IAC3B,mEAA2B;;AD9BvD,MAAM,cAAc;IAQzB,YAAY,EAAe,EAAU,YAA4B;QAA5B,iBAAY,GAAZ,YAAY,CAAgB;QAHjE,uBAAkB,GAAW,KAAK,CAAC;QAIjC,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,KAAK,CAAC;YAC1B,UAAU,EAAG,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,UAAU,EAAG,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACrC,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QACpD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IACrD,CAAC;IAED,UAAU;QACR,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAC;YACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;iBACvE,IAAI,CAAC;gBACH,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC,KAAK,CAAC;gBACP,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBAC3B,IAAI,CAAC,kBAAkB,GAAC,IAAI,CAAC;YAC/B,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACtB,kDAAkD;YAClD,mDAAmD;YACnD,8DAA8D;YAC9D,SAAS;SACP;IAEJ,CAAC;IACD,QAAQ;IACR,CAAC;;4EAxCU,cAAc;8FAAd,cAAc;QCR3B,4EACE;QAAA,gFACE;QAAA,yEACE;QAAA,yEACE;QAAA,0EAII;QAFF,0IAAY,gBAAY,IAAC;QAEvB,+EACE;QAAA,kFACE;QAAA,oFACE;QAAA,sEACF;QAAA,4DAAiB;QACjB,kIACG;QAEL,4DAAkB;QACpB,4DAAe;QACf,gFACE;QAAA,mFACE;QAAA,qFACE;QAAA,uEACF;QAAA,4DAAiB;QACjB,oIACG;QAEL,4DAAkB;QACpB,4DAAe;QACf,gFACE;QAAA,mFACE;QAAA,6EAAiE;QAAA,kEAAM;QAAA,4DAAS;QAChF,oIACG;QAEL,4DAAkB;QACpB,4DAAe;QACjB,4DAAO;QACP,wMAAyB;QACzB,yMAAyB;QAC7B,4DAAM;QACR,4DAAM;QACR,4DAAa;QACf,4DAAY;;;;;;;;QArCF,0DAAuB;QAAvB,oFAAuB;QAKD,0DAAuB;QAAvB,yEAAuB;QAGtB,0DAA6E;QAA7E,2EAA6E;QAO9E,0DAAuB;QAAvB,yEAAuB;QAGtB,0DAA6E;QAA7E,2EAA6E;QAO3D,0DAA6B;QAA7B,0FAA6B;QAC/C,0DAA0B;QAA1B,wFAA0B;;6FDvB9C,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAmC;AACnC,qBAAqB;AAE2D;AAC5B;AACkC;AACV;;;;;;;;;;ICG1E,yEAAoF;;;;IACpF,yEACC;IADI,+VAAgC;IACpC,qEACD;IAAA,4DAAM;;;IADc,0DAAkD;IAAlD,uKAAkD;;ADEjE,MAAM,cAAe,SAAQ,iEAAuB;IAgBzD;QACE,KAAK,EAAE,CAAC;QAdD,UAAK,GAAG,EAEhB,CAAC;QACF,oBAAe,GAAG,KAAK,CAAC;QACxB,mBAAc,GAAG,EAAE,CAAC;QAGX,UAAK,GAAwB;YACpC,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE;SAC5B,CAAC;QAEF,wBAAmB,GAAG,EAAE,CAAC;IAIxB,CAAC;IAEF,QAAQ;IACR,CAAC;IAED,OAAO,CAAC,KAAkC;QACxC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAC3B,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACxB,IAAI,KAAK,CAAC,SAAS,KAAK,OAAO,EAAE;YAC/B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAE,CAAC,CAAC,EAAE;gBACjD,MAAM,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBAClC,KAAI,MAAM,IAAI,IAAI,KAAK,EAAE;oBACvB,IAAI,IAAI,CAAC,MAAM,EAAC;wBACd,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAE,CAAC,CAAC,EAAE;4BAClD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC,CAAC;wBAClE,CAAC,CAAC,CAAC;qBACJ;iBACF;YACH,CAAC,CAAC,CAAC;SACJ;QACD,IAAI,KAAK,CAAC,SAAS,KAAK,QAAQ,EAAE;YAChC,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE;gBAC9D,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAE,CAAC,CAAC,EAAE;oBACjD,MAAM,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;oBAClC,MAAM,IAAI,GAAG,EAAE,CAAC;oBAChB,KAAI,MAAM,IAAI,IAAI,KAAK,EAAE;wBACvB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;4BAChB,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAC,CAAC,CAAC;yBAC/D;qBACF;oBACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBACzB,CAAC,CAAC,CAAC;aACJ;SACF;IACH,CAAC;IAED,SAAS,CAAC,QAAQ;QAChB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAC9C,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAE,CAAC,CAAC,EAAE;YAC5C,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,wBAAwB,GAAG,CAAC,CAAC,CAAC;YACzD,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS,CAAC,KAAK;QACb,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACzB,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,GAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QACpE,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAE,CAAC,CAAC,EAAE;YAC5C,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,wBAAwB,GAAG,CAAC,CAAC,CAAC;YACzD,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IAC/B,CAAC;;4EA3EU,cAAc;8FAAd,cAAc;;;;;;;;QCb3B,yEACC;QAAA,0FAAoJ;QAAjI,6JAAe,iBAAa,IAAC,yGAAe,qBAAiB,IAAhC,yGAAgD,qBAAiB,IAAjE;QAAgF,4DAAoB;QACrJ,4DAAM;QACN,yEACC;QAAA,yEACC;QAAA,6EAAuJ;QAA1E,iJAAW,mBAAe,IAAC,uGAAmB,mBAAe,IAAlC;QAAqC,4DAAU;QACxJ,4DAAM;QACN,yEAEC;QAAA,oHAAyE;QACzE,0GACC;QASF,4DAAM;QACP,4DAAM;;QArBD,wFAA2B;QAG3B,0DAA0B;QAA1B,uFAA0B;QAEpB,0DAAgB;QAAhB,6EAAgB;QAIf,0DAAuB;QAAvB,uFAAuB;QACwE,0DAA0B;QAA1B,8EAA0B;;6FDGxH,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;kBAEE,uDAAS;mBAAC,iBAAiB;;kBAC3B,uDAAS;mBAAC,aAAa,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;kBACzC,mDAAK;;kBAOL,mDAAK;;;;;;;;;;;;;;AEvBR;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["import { ɵɵdefineInjectable, ɵsetClassMetadata, Injectable, ɵɵdefineComponent, ɵɵelementStart, ɵɵtext, ɵɵelementEnd, Component, ɵɵdefineNgModule, ɵɵdefineInjector, ɵɵsetNgModuleScope, NgModule } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\nclass KerviSpineBase {\r\n    constructor(constructorOptions) {\r\n        this.constructorOptions = constructorOptions;\r\n        this.isConnected = false;\r\n        this.doAuthenticate = false;\r\n        this.sessionId = null;\r\n        this.queryHandlers = [];\r\n        this.commandHandlers = [];\r\n        this.eventHandlers = [];\r\n        this.streamHandlers = [];\r\n        this.rpcQueue = {};\r\n        this.ready = false;\r\n        this.messageId = 0;\r\n        this.sensors = {};\r\n        this.controllers = {};\r\n        this.sensorTypes = [];\r\n        this.controllerTypes = [];\r\n        this.visionRegions = [];\r\n        this.application = null;\r\n        this.allowAnonymous = true;\r\n        this.firstOnOpen = true;\r\n        this.messageCount = 0;\r\n        this.mpsTime = new Date;\r\n        this.mps = 0;\r\n        this.websocket = null;\r\n        this.options = {\r\n            userName: 'anonymous',\r\n            password: null,\r\n            address: null,\r\n            onOpen: null,\r\n            onClose: null,\r\n            onAuthenticate: null,\r\n            onAuthenticateFailed: null,\r\n            onAuthenticateStart: null,\r\n            onLogOff: null,\r\n            onMPS: null,\r\n            autoConnect: true,\r\n            targetScope: null,\r\n            protocol: 'ws',\r\n            apiToken: null\r\n        };\r\n        this.addEventHandler = function (eventName, id, callback) {\r\n        };\r\n        this.addStreamHandler = function (streamId, streamEvent, callback) {\r\n        };\r\n        this.removeStreamHandler = function (streamId, streamEvent, callback) {\r\n        };\r\n        console.log('Kervi base spine init', this.options, constructorOptions);\r\n        this.options = this.extend(this.options, constructorOptions);\r\n        console.log('kbo', this.options);\r\n        this.connect();\r\n        const self = this;\r\n        setInterval(function () {\r\n            var hangingNodes = [];\r\n            for (let id in self.rpcQueue) {\r\n                var query = self.rpcQueue[id];\r\n                if (query['callbackTimeout']) {\r\n                    if (Date.now() - query['ts'] > query['timeout']) {\r\n                        var callback = query['callbackTimeout'];\r\n                        hangingNodes.push(id);\r\n                        callback.call(self.options.targetScope);\r\n                    }\r\n                }\r\n            }\r\n            for (let id of hangingNodes) {\r\n                delete self.rpcQueue[id];\r\n            }\r\n        }, 1);\r\n    }\r\n    extend(...p) {\r\n        for (let i = 1; i < p.length; i++) {\r\n            for (let key in p[i]) {\r\n                if (p[i].hasOwnProperty(key)) {\r\n                    p[0][key] = p[i][key];\r\n                }\r\n            }\r\n        }\r\n        return p[0];\r\n    }\r\n    addRPCCallback(id, callback, callbackTimeout, timeout) {\r\n        if (callback) {\r\n            this.rpcQueue[id] = {\r\n                'callback': callback,\r\n                'callbackTimeout': callbackTimeout,\r\n                'timeout': timeout,\r\n                'ts': Date.now(),\r\n            };\r\n        }\r\n    }\r\n    handleRPCResponse(message) {\r\n        if (message.id in this.rpcQueue) {\r\n            var callback = this.rpcQueue[message.id]['callback'];\r\n            if (callback) {\r\n                delete this.rpcQueue[message.id];\r\n                callback.call(this.options.targetScope, message.response, message.response);\r\n            }\r\n        }\r\n    }\r\n    handleEvent(message) {\r\n        // console.log('ev', message)\r\n        const eventName = message.event;\r\n        const id = message.id;\r\n        let eventPath = eventName;\r\n        if (id) {\r\n            eventPath += '/' + id;\r\n        }\r\n        let value = null;\r\n        if (message.args && message.args.length) {\r\n            value = message.args[0];\r\n        }\r\n        for (var n = 0; (n < this.eventHandlers.length); n++) {\r\n            let h = this.eventHandlers[n];\r\n            if (h.eventName === eventPath)\r\n                h.callback.call(value, id, value);\r\n            else if (h.eventName === eventName)\r\n                h.callback.call(value, id, value);\r\n        }\r\n    }\r\n    handleStream(message, streamBlob) {\r\n        const streamTag = message.streamId + '/' + message.streamEvent;\r\n        for (let n = 0; (n < this.streamHandlers.length); n++) {\r\n            const h = this.streamHandlers[n];\r\n            if (h.streamTag === streamTag) {\r\n                h.callback.call(message.streamId, message.streamId, message.streamEvent, streamBlob);\r\n            }\r\n            else if (h.streamTag === message.streamId) {\r\n                h.callback.call(message.streamId, message.streamId, message.streamEvent, streamBlob);\r\n            }\r\n        }\r\n    }\r\n    handleCommand(message) {\r\n        console.log('cmd', this, message);\r\n        var command = message.command;\r\n        var args = null;\r\n        if (message.args && message.args.length) {\r\n            args = message.args[0];\r\n        }\r\n        for (var n = 0; (n < this.commandHandlers.length); n++) {\r\n            var c = this.commandHandlers[n];\r\n            if (c.command == command)\r\n                c.callback.call(this, args);\r\n        }\r\n    }\r\n    connect() {\r\n    }\r\n    onOpen(evt) {\r\n        console.log('Kervi open', this, evt);\r\n        this.isConnected = true;\r\n        this.eventHandlers = [];\r\n        this.streamHandlers = [];\r\n        this.commandHandlers = [];\r\n        this.queryHandlers = [];\r\n        console.log('Kervi spine ready');\r\n    }\r\n    onClose(evt) {\r\n        console.log('Kervi spine on close', evt);\r\n        this.isConnected = false;\r\n        const self = this;\r\n        if (this.options.onClose)\r\n            this.options.onClose.call(this.options.targetScope, evt);\r\n        this.firstOnOpen = true;\r\n        if (this.options.autoConnect) {\r\n            setTimeout(function () {\r\n                self.connect();\r\n            }, 1000);\r\n        }\r\n    }\r\n    authenticate(userName, password) {\r\n    }\r\n    logoff() {\r\n    }\r\n    onMessage(evt) {\r\n    }\r\n    onError(evt) {\r\n        console.log('Kervi on error', evt);\r\n    }\r\n    addCommandHandler(command, callback) {\r\n    }\r\n    addQueryHandler(query, callback) {\r\n    }\r\n    sendCommand(command, ...p) {\r\n    }\r\n    sendQuery(query, ...p) {\r\n    }\r\n    triggerEvent(eventName, id) {\r\n    }\r\n    streamData(stream_id, event, data) {\r\n    }\r\n}\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviWSSpine extends KerviSpineBase {\r\n    constructor(constructorOptions) {\r\n        super(constructorOptions);\r\n        this.constructorOptions = constructorOptions;\r\n        this.addEventHandler = function (eventName, id, callback) {\r\n            if (id)\r\n                this.eventHandlers.push({ 'eventName': eventName + '/' + id, callback: callback });\r\n            else\r\n                this.eventHandlers.push({ 'eventName': eventName, callback: callback });\r\n            var cmd = { id: this.messageId++, 'messageType': 'registerEventHandler', 'event': eventName, 'eventId': id };\r\n            //console.log('add event handler',cmd);\r\n            this.websocket.send(JSON.stringify(cmd));\r\n        };\r\n        this.addStreamHandler = function (streamId, streamEvents, callback) {\r\n            if (streamEvents && streamEvents.length > 0) {\r\n                for (let event of streamEvents) {\r\n                    this.streamHandlers.push({ 'streamTag': streamId + '/' + event, callback: callback });\r\n                    const cmd = {\r\n                        id: this.messageId++,\r\n                        'messageType': 'registerStreamHandler',\r\n                        'streamId': streamId,\r\n                        'streamEvent': event\r\n                    };\r\n                    console.log('as', cmd);\r\n                    this.websocket.send(JSON.stringify(cmd));\r\n                }\r\n            }\r\n            else {\r\n                this.streamHandlers.push({ 'streamTag': streamId, callback: callback });\r\n                const cmd = {\r\n                    id: this.messageId++,\r\n                    'messageType': 'registerStreamHandler',\r\n                    'streamId': streamId,\r\n                    'streamEvent': event\r\n                };\r\n                console.log('as', cmd);\r\n                this.websocket.send(JSON.stringify(cmd));\r\n            }\r\n        };\r\n        this.removeStreamHandler = function (streamId, streamEvents) {\r\n            if (streamEvents && streamEvents.length > 0) {\r\n                for (let event of streamEvents) {\r\n                    //this.streamHandlers.push({'streamTag': streamId + '/' + event, callback: callback});\r\n                    const cmd = {\r\n                        id: this.messageId++,\r\n                        'messageType': 'removeStreamHandler',\r\n                        'streamId': streamId,\r\n                        'streamEvent': event\r\n                    };\r\n                    console.log('as', cmd);\r\n                    this.websocket.send(JSON.stringify(cmd));\r\n                }\r\n            }\r\n            else {\r\n                //this.streamHandlers.push({'streamTag': streamId, callback: callback});\r\n                const cmd = {\r\n                    id: this.messageId++,\r\n                    'messageType': 'removeStreamHandler',\r\n                    'streamId': streamId,\r\n                    'streamEvent': event\r\n                };\r\n                console.log('as', cmd);\r\n                this.websocket.send(JSON.stringify(cmd));\r\n            }\r\n        };\r\n        console.log('kervi spine constructor');\r\n    }\r\n    connect() {\r\n        if (this.isConnected) {\r\n            console.log('Kervi is connected');\r\n            return;\r\n        }\r\n        const self = this;\r\n        this.websocket = new WebSocket(this.options.protocol + '://' + this.options.address);\r\n        this.websocket.binaryType = 'arraybuffer';\r\n        this.websocket.onopen = function (evt) {\r\n            console.log('kervi spine on open');\r\n            self.onOpen(evt);\r\n        };\r\n        this.websocket.onclose = function (evt) {\r\n            self.onClose(evt);\r\n        };\r\n        this.websocket.onmessage = function (evt) {\r\n            if (typeof evt.data === 'string') {\r\n                const message = JSON.parse(evt.data);\r\n                self.onMessage(message);\r\n            }\r\n            else {\r\n                const jsonLen = new Int32Array(evt.data.slice(0, 4))[0];\r\n                const jsonBlob = evt.data.slice(4, jsonLen + 4);\r\n                const streamBlob = evt.data.slice(4 + jsonLen);\r\n                const utf8decoder = new TextDecoder();\r\n                const j = utf8decoder.decode(jsonBlob);\r\n                self.onMessage(JSON.parse(j), streamBlob);\r\n            }\r\n        };\r\n        this.websocket.onerror = function (evt) {\r\n            self.onError(evt);\r\n        };\r\n    }\r\n    authenticate(userName, password) {\r\n        this.options.userName = userName;\r\n        this.options.password = password;\r\n        const cmd = { id: this.messageId++, 'messageType': 'authenticate', 'userName': userName, 'password': password };\r\n        console.log('swa', cmd);\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    }\r\n    logoff() {\r\n        const cmd = { id: this.messageId++, 'messageType': 'logoff', 'session': this.sessionId };\r\n        this.sessionId = null;\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    }\r\n    onMessage(message, streamBlob = null) {\r\n        // if (message.messageType !== 'stream') {\r\n        //     console.log('on m', message);\r\n        // }\r\n        const self = this;\r\n        const now = new Date();\r\n        const fpsDiff = now.getTime() - this.mpsTime.getTime();\r\n        const seconds = fpsDiff / 1000;\r\n        this.messageCount++;\r\n        if (seconds > 1) {\r\n            this.mps = Math.round(this.messageCount / seconds);\r\n            this.messageCount = 0;\r\n            this.mpsTime = now;\r\n            if (this.options.onMPS) {\r\n                this.options.onMPS.call(this.options.targetScope, this.mps);\r\n            }\r\n        }\r\n        if (message.messageType === 'authenticate') {\r\n            console.log('authenticate');\r\n            this.doAuthenticate = true;\r\n            if (this.options.userName)\r\n                this.authenticate(this.options.userName, this.options.password);\r\n            else\r\n                this.options.onAuthenticate.call(this.options.targetScope, message);\r\n        }\r\n        else if (message.messageType === 'authentication_failed') {\r\n            console.log('authentication failed', this.options.userName);\r\n            if (this.options.userName == 'anonymous') {\r\n                this.allowAnonymous = false;\r\n                this.options.userName = null;\r\n                this.options.password = null;\r\n                this.sessionId = null;\r\n                if (self.options.onLogOff) {\r\n                    self.options.onLogOff.call(self.options.targetScope, message);\r\n                }\r\n            }\r\n            else\r\n                this.options.onAuthenticateFailed.call(this.options.targetScope, message);\r\n        }\r\n        else if (message.messageType === 'session_authenticated') {\r\n            const date = new Date();\r\n            date.setTime(date.getTime() + (2 * 60 * 60 * 1000));\r\n            const expires = '; expires=' + date.toUTCString();\r\n            this.sessionId = message.session;\r\n            document.cookie = 'kervisession' + '=' + message.session + expires + '; path=/';\r\n            setTimeout(function () {\r\n                console.log('to', self.options);\r\n                if (self.options.onOpen)\r\n                    self.options.onOpen.call(self.options.targetScope, self.firstOnOpen, message);\r\n                self.firstOnOpen = false;\r\n            }, 100);\r\n        }\r\n        else if (message.messageType == 'session_logoff') {\r\n            if (self.options.onLogOff)\r\n                self.options.onLogOff.call(self.options.targetScope, message);\r\n            if (this.allowAnonymous && this.options.userName != 'anonymous') {\r\n                this.authenticate('anonymous', null);\r\n            }\r\n            else {\r\n                self.options.userName = null;\r\n                self.options.password = null;\r\n                self.sessionId = null;\r\n            }\r\n        }\r\n        else if (message.messageType == 'response')\r\n            this.handleRPCResponse(message);\r\n        else if (message.messageType == 'event')\r\n            this.handleEvent(message);\r\n        else if (message.messageType == 'stream')\r\n            this.handleStream(message, streamBlob);\r\n        else if (message.messageType == 'command')\r\n            this.handleCommand(message);\r\n        else\r\n            console.log('Kervi spine message unknown', this.rpcQueue, message);\r\n    }\r\n    onError(evt) {\r\n        console.log('Kervi on error', evt);\r\n    }\r\n    addCommandHandler(command, callback) {\r\n        this.commandHandlers.push({ command: command, callback: callback });\r\n        var cmd = { id: this.messageId++, 'messageType': 'registerCommandHandler', 'command': command };\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    }\r\n    ;\r\n    addQueryHandler(query, callback) {\r\n        this.queryHandlers.push({ query: query, callback: callback });\r\n        var cmd = { id: this.messageId++, 'messageType': 'registerQueryHandler', 'query': query };\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    }\r\n    ;\r\n    sendCommand(command, ...p) {\r\n        console.log('sec', arguments);\r\n        var args = [];\r\n        var callback = null;\r\n        for (var i = 0; (i < p.length); i++) {\r\n            if (p[i] instanceof Function)\r\n                callback = p[i];\r\n            else\r\n                args.push(p[i]);\r\n        }\r\n        var cmd = { id: this.messageId++, 'messageType': 'command', 'command': command, 'args': args };\r\n        if (callback && callback instanceof Function)\r\n            this.addRPCCallback(cmd.id.toString(), callback, null, 0);\r\n        console.log('sendCommand', this, cmd);\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    }\r\n    ;\r\n    sendQuery(query, ...p) {\r\n        var args = [];\r\n        var callback = null;\r\n        var callbackTimeout = null;\r\n        var timeout = 10000;\r\n        for (var i = 0; (i < p.length); i++) {\r\n            if (p[i] instanceof Function)\r\n                if (!callback)\r\n                    callback = p[i];\r\n                else\r\n                    callbackTimeout = p[i];\r\n            else {\r\n                if (callbackTimeout)\r\n                    timeout = p[i];\r\n                else\r\n                    args.push(p[i]);\r\n            }\r\n        }\r\n        var cmd = { id: this.messageId++, 'messageType': 'query', 'query': query, 'args': args };\r\n        this.addRPCCallback(cmd.id.toString(), callback, callbackTimeout, timeout);\r\n        console.log('sendQuery', callback, cmd);\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    }\r\n    ;\r\n    triggerEvent(eventName, id) {\r\n        var e = { id: this.messageId++, 'messageType': 'event', 'event': eventName, 'args': arguments };\r\n        this.websocket.send(JSON.stringify(e));\r\n    }\r\n    ;\r\n}\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviRMQSpine extends KerviSpineBase {\r\n    constructor(constructorOptions) {\r\n        super(constructorOptions);\r\n        this.constructorOptions = constructorOptions;\r\n        this.exchange = \"/exchange/\";\r\n        this.addEventHandler = function (eventName, id, callback) {\r\n            if (id)\r\n                this.eventHandlers.push({ \"eventName\": eventName + \"/\" + id, callback: callback });\r\n            else\r\n                this.eventHandlers.push({ \"eventName\": eventName, callback: callback });\r\n            var cmd = { id: this.messageId++, \"messageType\": \"registerEventHandler\", \"event\": eventName, \"eventId\": id };\r\n            this.websocket.send(this.exchange, { topic: \"registerEventHandler\", router_id: this.socketSession }, JSON.stringify(cmd));\r\n        };\r\n        console.log(\"Kervi io spine init y\", this.options, constructorOptions);\r\n    }\r\n    onMQError(frame) {\r\n        console.log(\"MQ error\", frame);\r\n    }\r\n    connect() {\r\n        if (this.isConnected) {\r\n            console.log(\"Kervi is connected\");\r\n            return;\r\n        }\r\n        var self = this;\r\n        //var mqUrl= this.options.protocol + \"://\" + this.options.address\r\n        var mqUrl = \"wss://mq.kervi.io:15673/ws\";\r\n        this.websocket = Stomp.client(mqUrl);\r\n        this.websocket.heartbeat.incoming = 0;\r\n        self.exchange = \"/exchange/\" + self.options.apiToken.app_id;\r\n        console.log(\"exchange\", self.exchange);\r\n        this.websocket.connect(self.options.apiToken.api_token, \"ui\", function (frame) {\r\n            console.log(\"MQ connect\", frame, self.websocket, this, self);\r\n            self.socketSession = frame.headers.session;\r\n            self.exchange = \"/exchange/\" + self.options.apiToken.app_id;\r\n            self.websocket.subscribe(self.exchange, function (message) {\r\n                console.log(\"mq \", message);\r\n                if (message.headers[\"topic\"])\r\n                    message.headers[\"topic\"] = message.headers[\"topic\"].replace(new RegExp(\"\\\\c\", \"g\"), \":\");\r\n                if (message.command == \"CONNECTED\") {\r\n                }\r\n                else if (message.headers[\"topic\"] == \"ping\")\r\n                    self.onPing(message);\r\n                else\r\n                    self.onMessage(message);\r\n            }, {});\r\n        }, self.onMQError, self.options.apiToken.api_channel);\r\n    }\r\n    onPing(message) {\r\n        console.log(\"onping\", this.options.appId, message);\r\n        var self = this;\r\n        if (!this.isConnected && message.headers[\"connection_id\"] == self.options.apiToken.app_id) {\r\n            this.onOpen(message);\r\n            this.websocket.send(self.exchange, { topic: \"session:new\", router_id: message.headers[\"router_id\"], session_id: this.socketSession }, \"{}\");\r\n        }\r\n    }\r\n    authenticate(userName, password) {\r\n        this.options.userName = userName;\r\n        this.options.password = password;\r\n        if (this.options.onAuthenticateStart)\r\n            this.options.onAuthenticateStart.call(this.options.targetScope);\r\n        var cmd = { id: this.messageId++, \"messageType\": \"authenticate\", \"userName\": this.options.userName, \"password\": this.options.password };\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    }\r\n    logoff() {\r\n        //this.options.userName = this.allowAnonymous ? \"anonymous\" : null;\r\n        //this.options.password = null;\r\n        var cmd = { id: this.messageId++, \"messageType\": \"logoff\", \"session\": this.sessionId };\r\n        this.sessionId = null;\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    }\r\n    onMessage(evt) {\r\n        console.log(\"on m\", evt);\r\n        var message = JSON.parse(evt.body);\r\n        var self = this;\r\n        var topic = evt.headers[\"topic\"];\r\n        if (topic == \"authenticate\") {\r\n            console.log(\"authenticate\");\r\n            this.doAuthenticate = true;\r\n            if (this.options.userName)\r\n                this.authenticate(this.options.userName, this.options.password);\r\n            else\r\n                this.options.onAuthenticate.call(this.options.targetScope, evt);\r\n        }\r\n        else if (topic == \"authentication_failed\") {\r\n            console.log(\"authentication failed\", this.options.userName);\r\n            if (this.options.userName == \"anonymous\") {\r\n                this.allowAnonymous = false;\r\n                this.options.userName = null;\r\n                this.options.password = null;\r\n                this.sessionId = null;\r\n                console.log(\"x\", self.options);\r\n                if (self.options.onLogOff) {\r\n                    console.log(\"x1\");\r\n                    self.options.onLogOff.call(self.options.targetScope, evt);\r\n                }\r\n            }\r\n            else\r\n                this.options.onAuthenticateFailed.call(this.options.targetScope, evt);\r\n        }\r\n        else if (topic == \"session_authenticated\") {\r\n            var date = new Date();\r\n            date.setTime(date.getTime() + (2 * 60 * 60 * 1000));\r\n            var expires = \"; expires=\" + date.toUTCString();\r\n            this.sessionId = message.session;\r\n            document.cookie = \"kervisession\" + \"=\" + message.session + expires + \"; path=/\";\r\n            setTimeout(function () {\r\n                if (self.options.onOpen)\r\n                    self.options.onOpen.call(self.options.targetScope, self.firstOnOpen, evt);\r\n                self.firstOnOpen = false;\r\n            }, 100);\r\n        }\r\n        else if (topic == \"session_logoff\") {\r\n            if (self.options.onLogOff)\r\n                self.options.onLogOff.call(self.options.targetScope, evt);\r\n            if (this.allowAnonymous && this.options.userName != \"anonymous\") {\r\n                this.authenticate(\"anonymous\", null);\r\n            }\r\n            else {\r\n                self.options.userName = null;\r\n                self.options.password = null;\r\n                self.sessionId = null;\r\n            }\r\n        }\r\n        else if (evt.headers[\"type\"] == \"query_response\") {\r\n            this.handleRPCResponse({ id: evt.headers[\"query_id\"], response: message });\r\n        }\r\n        else if (evt.headers[\"type\"] == \"event\") {\r\n            console.log(\"e\", evt);\r\n            var topic_tag = evt.headers[\"topic\"].split(\":\");\r\n            this.handleEvent({ event: topic_tag[1], id: topic_tag[2], args: message.args });\r\n        }\r\n        else if (message.messageType == \"command\")\r\n            this.handleCommand(message);\r\n        else\r\n            console.log(\"Kervi spine message unknown\", this.rpcQueue, evt);\r\n    }\r\n    onError(evt) {\r\n        console.log(\"Kervi on error\", evt);\r\n    }\r\n    addCommandHandler(command, callback) {\r\n        this.commandHandlers.push({ command: command, callback: callback });\r\n        var cmd = { id: this.messageId++, \"messageType\": \"registerCommandHandler\", \"command\": command };\r\n        //this.websocket.send(JSON.stringify(cmd));\r\n        this.websocket.send(this.exchange, { topic: \"registerCommandHandler\", router_id: this.socketSession }, JSON.stringify(cmd));\r\n    }\r\n    ;\r\n    addQueryHandler(query, callback) {\r\n        this.queryHandlers.push({ query: query, callback: callback });\r\n        var cmd = { id: this.messageId++, \"messageType\": \"registerQueryHandler\", \"query\": query };\r\n        this.websocket.send(this.exchange, { topic: \"registerQueryHandler\", router_id: this.socketSession }, JSON.stringify(cmd));\r\n    }\r\n    ;\r\n    sendCommand(command, ...p) {\r\n        console.log(\"sec\", arguments);\r\n        var args = [];\r\n        var callback = null;\r\n        for (var i = 0; (i < p.length); i++) {\r\n            if (p[i] instanceof Function)\r\n                callback = p[i];\r\n            else\r\n                args.push(p[i]);\r\n        }\r\n        /*if (p.length>1){\r\n            var argOffset=1;\r\n            if ( callback && callback instanceof Function )\r\n                argOffset+=1;\r\n            for (var i=argOffset;(i<arguments.length);i++){\r\n                args.push(arguments[i]);\r\n            }\r\n        }*/\r\n        var cmd = { id: this.messageId++, \"args\": args, kwargs: {} };\r\n        if (callback && callback instanceof Function)\r\n            this.addRPCCallback(cmd.id.toString(), callback, null, 0);\r\n        console.log(\"sendCommand\", this, cmd);\r\n        this.websocket.send(this.exchange, { topic: \"command:\" + command, router_id: this.socketSession }, JSON.stringify(cmd));\r\n    }\r\n    ;\r\n    sendQuery(query, ...p) {\r\n        var args = [];\r\n        var callback = null;\r\n        var callbackTimeout = null;\r\n        var timeout = 10000;\r\n        for (var i = 0; (i < p.length); i++) {\r\n            if (p[i] instanceof Function)\r\n                if (!callback)\r\n                    callback = p[i];\r\n                else\r\n                    callbackTimeout = p[i];\r\n            else {\r\n                if (callbackTimeout)\r\n                    timeout = p[i];\r\n                else\r\n                    args.push(p[i]);\r\n            }\r\n        }\r\n        var cmd = { id: this.messageId++, \"messageType\": \"query\", \"query\": query, \"args\": args, kwargs: [], qts: 0 };\r\n        this.addRPCCallback(cmd.id.toString(), callback, callbackTimeout, timeout);\r\n        console.log(\"sendQuery\", callback, cmd);\r\n        //this.websocket.send(JSON.stringify(cmd));\r\n        this.websocket.send(this.exchange, { topic: \"query:\" + query, qts: 0, query_id: cmd.id.toString(), router_id: this.socketSession, response_address: this.socketSession }, JSON.stringify(cmd));\r\n    }\r\n    ;\r\n    triggerEvent(eventName, id) {\r\n        var e = { id: this.messageId++, \"messageType\": \"event\", \"event\": eventName, \"args\": arguments };\r\n        this.websocket.send(JSON.stringify(e));\r\n    }\r\n    ;\r\n}\n\nclass DashboardLink {\r\n    /*constructor(dashboardId:string, sectionId:string, sectionName:string){\r\n        this.dashboardId = dashboardId;\r\n        this.sectionId = sectionId;\r\n        this.sectionName = sectionName;\r\n    }*/\r\n    constructor(component, message) {\r\n        this.dashboardId = message.dashboardId;\r\n        this.panelId = message.sectionId;\r\n        this.panelName = message.sectionName;\r\n        this.component = component;\r\n        this.parameters = message.parameters;\r\n    }\r\n}\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviValue {\r\n    constructor() {\r\n        this.componentType = \"KerviValue\";\r\n        this.typeName = null;\r\n        this.dashboards = [];\r\n        this.ui = {\r\n            type: \"\",\r\n            orientation: \"\",\r\n            visible: true\r\n        };\r\n    }\r\n}\r\nclass KerviValueType extends KerviValue {\r\n    constructor(message, kerviService) {\r\n        super();\r\n        this.kerviService = null;\r\n        this.kerviService = kerviService;\r\n        this.value$ = new BehaviorSubject(message.value);\r\n        this.name = message.name;\r\n        this.isInput = message.isInput;\r\n        this.ui = message.ui;\r\n        this.command = message.command;\r\n        this.id = message.id;\r\n        this.ui[\"type\"] = message.componentType;\r\n        this.ui[\"orientation\"] = message.orientation;\r\n        this.ui[\"visible\"] = message.visible;\r\n        for (var prop in message.ui) {\r\n            if (this.ui[prop] != undefined)\r\n                this.ui[prop] = message.ui[prop];\r\n        }\r\n        for (let dashboardLink of message.dashboardLinks) {\r\n            this.dashboards.push(new DashboardLink(this, dashboardLink));\r\n        }\r\n    }\r\n    get value() {\r\n        //console.log(\"gv\", this.id, this.value$.value)\r\n        return this.value$.value;\r\n    }\r\n    set value(value) {\r\n        console.log(\"sv\", this.id);\r\n        this.value$.next(value);\r\n        this.kerviService.spine.sendCommand(this.command, value);\r\n    }\r\n    set(v, notify = true) {\r\n        this.value$.next(v);\r\n        if (notify)\r\n            this.kerviService.spine.sendCommand(this.command, v);\r\n    }\r\n}\r\nvar ValueRangeType;\r\n(function (ValueRangeType) {\r\n    ValueRangeType[ValueRangeType[\"normal\"] = 0] = \"normal\";\r\n    ValueRangeType[ValueRangeType[\"warning\"] = 1] = \"warning\";\r\n    ValueRangeType[ValueRangeType[\"error\"] = 2] = \"error\";\r\n})(ValueRangeType || (ValueRangeType = {}));\r\n;\r\nclass ValueRange {\r\n    constructor(range) {\r\n        this.start = null;\r\n        this.end = null;\r\n        this.type = null;\r\n        this.start = range[\"start\"];\r\n        this.end = range[\"end\"];\r\n        if (range[\"type\"] == \"warning\")\r\n            this.type = ValueRangeType.warning;\r\n        else if (range[\"type\"] == \"error\")\r\n            this.type = ValueRangeType.error;\r\n        else\r\n            this.type = ValueRangeType.normal;\r\n    }\r\n}\r\nclass KerviEnumOptionModel {\r\n    constructor(messageOption) {\r\n        this.selected$ = new BehaviorSubject(false);\r\n        this.value = messageOption.value;\r\n        this.text = messageOption.text;\r\n        this.selected$.next(messageOption.selected);\r\n    }\r\n    updateReferences() { }\r\n    ;\r\n    reload(component) { }\r\n    ;\r\n    removeReferences(components) { }\r\n    ;\r\n}\r\nclass SelectValue extends KerviValueType {\r\n    constructor(message, kerviService) {\r\n        super(message, kerviService);\r\n        this.options = [];\r\n        this.lastSelected$ = new BehaviorSubject(null);\r\n        var self = this;\r\n        this.options = [];\r\n        for (let option of message.options) {\r\n            this.options.push(new KerviEnumOptionModel(option));\r\n        }\r\n        this.selectOptions(this.value$.value);\r\n        this.value$.subscribe(function (v) {\r\n            self.selectOptions(v);\r\n        });\r\n    }\r\n    getDefaultValue() {\r\n        return [];\r\n    }\r\n    selectOptions(selectedOptions) {\r\n        console.log(\"soc\");\r\n        if (!selectedOptions)\r\n            return;\r\n        for (let option of this.options) {\r\n            option.selected$.next(false);\r\n        }\r\n        for (let selectedOption of selectedOptions) {\r\n            console.log(\"so\", selectedOption);\r\n            for (let option of this.options) {\r\n                console.log(\"sox\", option);\r\n                if (option.value == selectedOption) {\r\n                    option.selected$.next(true);\r\n                    this.lastSelected$.next(option);\r\n                    console.log(\"os\", option.text, option.selected$.value);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nclass NumberValue extends KerviValueType {\r\n    constructor(message, kerviService) {\r\n        super(message, kerviService);\r\n        this.qtyUnitTo = null;\r\n        this.sparkline$ = new BehaviorSubject([]);\r\n        this.ranges = [];\r\n        this.unit = message.unit;\r\n        this.typeName = \"Number\";\r\n        this.qtyUnitFrom = message.unit;\r\n        if (this.unit == \"c\" && kerviService.application$.value[\"display\"][\"unit_system\"][\"temperature\"] == \"F\") {\r\n            this.qtyUnitFrom = \"tempC\";\r\n            this.qtyUnitTo = \"tempF\";\r\n            this.unit = \"F\";\r\n        }\r\n        for (var range of message.ranges) {\r\n            if (this.qtyUnitTo) {\r\n                var q = new Qty(range[\"start\"], this.qtyUnitFrom);\r\n                range[\"start\"] = q.to(this.qtyUnitTo).scalar;\r\n                var q = new Qty(range[\"end\"], this.qtyUnitFrom);\r\n                range[\"end\"] = q.to(this.qtyUnitTo).scalar;\r\n                this.ranges.push(new ValueRange(range));\r\n            }\r\n            else\r\n                this.ranges.push(new ValueRange(range));\r\n        }\r\n        if (this.qtyUnitTo && message.maxValue) {\r\n            var q = new Qty(message.maxValue, this.qtyUnitFrom);\r\n            this.maxValue = q.to(this.qtyUnitTo).scalar;\r\n        }\r\n        else\r\n            this.maxValue = message.maxValue;\r\n        if (this.qtyUnitTo && message.minValue) {\r\n            var q = new Qty(message.minValue, this.qtyUnitFrom);\r\n            this.minValue = q.to(this.qtyUnitTo).scalar;\r\n        }\r\n        else\r\n            this.minValue = message.minValue;\r\n        var spl = [];\r\n        for (var spv of message.sparkline) {\r\n            if (this.qtyUnitTo) {\r\n                console.log(\"spv\", spv);\r\n                var q = new Qty(spv.value, this.qtyUnitFrom);\r\n                //spv.value = q.to(this.qtyUnitTo).scalar;\r\n            }\r\n            spl.push(spv);\r\n        }\r\n        this.sparkline$.next(spl);\r\n        this.set(message.value, false);\r\n    }\r\n    getDefaultValue() {\r\n        return 0;\r\n    }\r\n    set(v, notify = true) {\r\n        var newValue = v;\r\n        if (this.qtyUnitTo) {\r\n            var q = new Qty(v, this.qtyUnitFrom);\r\n            newValue = q.to(this.qtyUnitTo).scalar;\r\n        }\r\n        this.value$.next(newValue);\r\n        if (notify)\r\n            this.kerviService.spine.sendCommand(this.command, v);\r\n        var spl = this.sparkline$.value;\r\n        spl.push(newValue);\r\n        if (spl.length > 10)\r\n            spl.shift();\r\n        this.sparkline$.next(spl);\r\n    }\r\n}\r\nclass StringValue extends KerviValueType {\r\n    getDefaultValue() {\r\n        return \"\";\r\n    }\r\n    constructor(message, kerviService) {\r\n        super(message, kerviService);\r\n        this.typeName = \"String\";\r\n    }\r\n}\r\nclass BooleanValue extends KerviValueType {\r\n    constructor(message, kerviService) {\r\n        super(message, kerviService);\r\n        this.typeName = \"Boolean\";\r\n    }\r\n    getDefaultValue() {\r\n        return false;\r\n    }\r\n}\r\nclass DateTimeValue extends KerviValueType {\r\n    constructor(message, kerviService) {\r\n        super(message, kerviService);\r\n        this.subType = message.inputType;\r\n        this.typeName = \"DateTime\";\r\n    }\r\n    getDefaultValue() {\r\n        return new Date();\r\n    }\r\n}\r\nclass ColorValue extends KerviValueType {\r\n    constructor(message, kerviService) {\r\n        super(message, kerviService);\r\n        this.typeName = \"Color\";\r\n    }\r\n    getDefaultValue() {\r\n        return \"#ffffff\";\r\n    }\r\n}\n\nclass ComponentRef {\r\n    constructor(message) {\r\n        this.id = message.id;\r\n    }\r\n}\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass Controller {\r\n    constructor(message, kerviService) {\r\n        this.componentType = \"controller\";\r\n        this.ui = {};\r\n        this.inputs = [];\r\n        this.outputs = [];\r\n        this.actions = [];\r\n        this.inputReferences = [];\r\n        this.outputReferences = [];\r\n        this.actionsReferences = [];\r\n        this.dashboards = [];\r\n        this.kerviService = kerviService;\r\n        this.id = message.id;\r\n        this.name = message.name;\r\n        this.type = message.type;\r\n        this.ui = message.ui;\r\n        this.visible = message.visible;\r\n        this.parameters = message.parameters;\r\n        this.template = message.template;\r\n        for (var ref of message.inputs) {\r\n            this.inputReferences.push(new ComponentRef(ref));\r\n        }\r\n        for (var ref of message.outputs) {\r\n            this.outputReferences.push(new ComponentRef(ref));\r\n        }\r\n        for (var ref of message.actions) {\r\n            this.actionsReferences.push(new ComponentRef(ref));\r\n        }\r\n        for (let dashboardLink of message.dashboardLinks) {\r\n            this.dashboards.push(new DashboardLink(this, dashboardLink));\r\n        }\r\n    }\r\n    updateReferences() {\r\n        if (this.inputs.length == 0) {\r\n            for (var ref of this.inputReferences) {\r\n                var component = this.kerviService.getComponent(ref.id);\r\n                if (component)\r\n                    this.inputs.push(component);\r\n            }\r\n        }\r\n        if (this.outputs.length == 0) {\r\n            for (var ref of this.outputReferences) {\r\n                var component = this.kerviService.getComponent(ref.id);\r\n                if (component)\r\n                    this.outputs.push(component);\r\n            }\r\n        }\r\n        if (this.actions.length == 0) {\r\n            for (var ref of this.actionsReferences) {\r\n                var component = this.kerviService.getComponent(ref.id);\r\n                if (component)\r\n                    this.actions.push(component);\r\n            }\r\n        }\r\n    }\r\n    ;\r\n    removeReferences(components) { }\r\n    ;\r\n    reload(component) { }\r\n    ;\r\n}\n\n// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\nclass DashboardSizes {\r\n    constructor() {\r\n        this.valueWidth = '3rem';\r\n        this.buttonWidth = '25px';\r\n        this.buttonHeight = '';\r\n        this.switchWidth = '25px';\r\n        this.switchHeight = '25px';\r\n        this.gaugeWidth = '100px';\r\n        this.gaugeHeight = '200px';\r\n    }\r\n}\r\nclass DashboardMessageModel {\r\n    constructor(message) {\r\n        this.timestamp = new Date(message.timestamp * 1000);\r\n        this.topic = message.topic;\r\n        this.body = message.body;\r\n        this.type = message.type;\r\n        this.sourceId = message.source_id;\r\n        this.sourceName = message.source_name;\r\n        this.area = message.area;\r\n        this.level = message.level;\r\n    }\r\n}\r\nclass DashboardPanelComponent {\r\n    constructor(message) {\r\n        this.message = message;\r\n        this.linkId = message.linkId;\r\n        this.componentId = message.componentId;\r\n        this.component = message.component;\r\n        this.parameters = message.parameters;\r\n    }\r\n}\r\nclass DashboardPanelParameters {\r\n    constructor(messageParameters) {\r\n        this.title = null;\r\n        this.width = null;\r\n        this.height = null;\r\n        this.type = null;\r\n        this.userLog = null;\r\n        this.appHealth = null;\r\n        this.logLength = 5;\r\n        this.layout = 'row';\r\n        this.title = messageParameters.label;\r\n        this.height = this.calcSize(messageParameters.height);\r\n        this.width = this.calcSize(messageParameters.width);\r\n        this.userLog = messageParameters.userLog;\r\n        this.logLength = messageParameters.logLength;\r\n        this.appHealth = messageParameters.app_health;\r\n        if (messageParameters.type) {\r\n            this.type = messageParameters.type;\r\n        }\r\n        if (messageParameters.layout) {\r\n            this.layout = messageParameters.layout;\r\n        }\r\n    }\r\n    calcSize(value) {\r\n        if (value == null)\r\n            return '';\r\n        else if (value === '')\r\n            return '';\r\n        else if (isNaN(value)) {\r\n            return value;\r\n        }\r\n        else if (value > 0)\r\n            return value + '%';\r\n        else\r\n            return '';\r\n    }\r\n}\r\nclass DashboardPanel {\r\n    constructor(dashboard, messagePanel) {\r\n        this.components = [];\r\n        this.subPanels = [];\r\n        this.hasOnlyGroupPanels = true;\r\n        this.dashboard = dashboard;\r\n        this.id = messagePanel.id;\r\n        this.name = messagePanel.name;\r\n        this.type = messagePanel.type;\r\n        this.parameters = new DashboardPanelParameters(messagePanel.uiParameters);\r\n        /*if (messagePanel.components)\r\n            for(var componentRef of messagePanel.components){\r\n                this.components.push(new DashboardPanelComponentModel(componentRef))\r\n            }*/\r\n        if (messagePanel.panels) {\r\n            //console.log('spa',messagePanel.panels);\r\n            for (var subMessagePanel of messagePanel.panels) {\r\n                var panel = new DashboardPanel(this, subMessagePanel);\r\n                this.subPanels.push(panel);\r\n                if (panel.type !== 'group')\r\n                    this.hasOnlyGroupPanels = false;\r\n            }\r\n        }\r\n    }\r\n    reload(source) {\r\n        //console.log('rl', this);\r\n        for (var subPanel of source.subPanels) {\r\n            this.reload(subPanel);\r\n        }\r\n        for (var sourceComponent of source.components) {\r\n            var found = false;\r\n            for (var component of this.components) {\r\n                if (component.componentId == sourceComponent.componentId) {\r\n                    found = true;\r\n                }\r\n            }\r\n            if (!found) {\r\n                this.components.push(sourceComponent);\r\n            }\r\n        }\r\n        var deleteComponents = [];\r\n        for (var component of this.components) {\r\n            var found = false;\r\n            for (var sourceComponent of source.components) {\r\n                if (sourceComponent.componentId == component.componentId) {\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!found)\r\n                deleteComponents.push(component);\r\n        }\r\n        //console.log('dsc',deleteComponents);\r\n        for (var component of deleteComponents) {\r\n            this.components.splice(this.components.indexOf(component), 1);\r\n        }\r\n    }\r\n}\r\nclass DashboardBackgroundModel {\r\n    constructor(message) {\r\n        this.type = message.type;\r\n        this.cameraId = message.cameraId;\r\n    }\r\n}\r\nclass Dashboard {\r\n    constructor(message) {\r\n        this.headerPanel = null;\r\n        this.footerCenterPanel = null;\r\n        this.footerLeftPanel = null;\r\n        this.footerRightPanel = null;\r\n        this.sysPanel = null;\r\n        this.backgroundPanel = null;\r\n        this.controllerPanel = null;\r\n        this.LeftPadXPanel = null;\r\n        this.LeftPadYPanel = null;\r\n        this.RightPadXPanel = null;\r\n        this.RightPadYPanel = null;\r\n        this.dashboards = [];\r\n        this.currentPanel = null;\r\n        this.id = message.id;\r\n        this.name = message.name;\r\n        this.componentType = 'dashboard';\r\n        this.type = message.type;\r\n        this.isDefault = message.isDefault;\r\n        this.template = message.template;\r\n        this.unitSize = message.unitSize;\r\n        //this.background=new DashboardBackgroundModel(message.background);\r\n        this.panels = [];\r\n        this.sysPanels = [];\r\n        if (!this.template) {\r\n            for (let messagePanel of message.sections) {\r\n                if (!messagePanel) {\r\n                    console.log('dashboard with null panel', this.id);\r\n                    continue;\r\n                }\r\n                var panel = new DashboardPanel(this, messagePanel);\r\n                var sysPanel = true;\r\n                if (panel.id == 'header_center')\r\n                    this.headerPanel = panel;\r\n                else if (panel.id == 'footer_left')\r\n                    this.footerLeftPanel = panel;\r\n                else if (panel.id == 'footer_center')\r\n                    this.footerCenterPanel = panel;\r\n                else if (panel.id == 'footer_right')\r\n                    this.footerRightPanel = panel;\r\n                else if (panel.id == 'header_right')\r\n                    this.sysPanel = panel;\r\n                else if (panel.id == 'controllers')\r\n                    this.controllerPanel = panel;\r\n                else if (panel.id == 'background')\r\n                    this.backgroundPanel = panel;\r\n                else if (panel.id == 'left_pad_x')\r\n                    this.LeftPadXPanel = panel;\r\n                else if (panel.id == 'left_pad_y')\r\n                    this.LeftPadYPanel = panel;\r\n                else if (panel.id == 'right_pad_x')\r\n                    this.RightPadXPanel = panel;\r\n                else if (panel.id == 'right_pad_y')\r\n                    this.RightPadYPanel = panel;\r\n                else {\r\n                    sysPanel = false;\r\n                    if (panel.type != 'group') {\r\n                        if (this.currentPanel == null) {\r\n                            this.currentPanel = new DashboardPanel(this, {\r\n                                'id': null,\r\n                                'name': '',\r\n                                'type': 'group',\r\n                                'components': [],\r\n                                'panels': [],\r\n                                'uiParameters': {\r\n                                    'title': '',\r\n                                    'width': 100,\r\n                                    'height': 0,\r\n                                    'userLog': false,\r\n                                    'logLength': 0\r\n                                }\r\n                            });\r\n                            this.currentPanel.subPanels.push(panel);\r\n                            this.panels.push(this.currentPanel);\r\n                        }\r\n                        else {\r\n                            this.currentPanel.subPanels.push(panel);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.panels.push(panel);\r\n                        this.currentPanel = null;\r\n                    }\r\n                }\r\n                if (sysPanel)\r\n                    this.sysPanels.push(panel);\r\n            }\r\n            if (!this.currentPanel) {\r\n                this.currentPanel = new DashboardPanel(this, {\r\n                    'id': null,\r\n                    'name': '',\r\n                    'type': 'group',\r\n                    'components': [],\r\n                    'panels': [],\r\n                    'uiParameters': {\r\n                        'title': '',\r\n                        'width': 100,\r\n                        'height': 0,\r\n                        'userLog': false,\r\n                        'logLength': 0\r\n                    }\r\n                });\r\n                //this.currentPanel.subPanels.push(panel);\r\n                this.panels.push(this.currentPanel);\r\n            }\r\n        }\r\n    }\r\n    isEmpty() {\r\n        return this.panels.length == 0;\r\n    }\r\n    removeReferences(deleteComponents) { }\r\n    ;\r\n    updateReferences() { }\r\n    ;\r\n    reload(component) {\r\n        var source = component;\r\n        if (!this.backgroundPanel && source.backgroundPanel)\r\n            this.backgroundPanel = source.backgroundPanel;\r\n        else if (this.backgroundPanel && !source.backgroundPanel)\r\n            this.backgroundPanel = null;\r\n        else if (this.backgroundPanel)\r\n            this.backgroundPanel.reload(source.backgroundPanel);\r\n        if (!this.footerLeftPanel && source.footerLeftPanel)\r\n            this.footerLeftPanel = source.footerLeftPanel;\r\n        else if (this.footerLeftPanel && !source.footerLeftPanel)\r\n            this.footerLeftPanel = null;\r\n        else if (this.footerLeftPanel)\r\n            this.footerLeftPanel.reload(source.footerLeftPanel);\r\n        if (!this.footerRightPanel && source.footerRightPanel)\r\n            this.footerRightPanel = source.footerRightPanel;\r\n        else if (this.footerRightPanel && !source.footerRightPanel)\r\n            this.footerRightPanel = null;\r\n        else if (this.footerRightPanel)\r\n            this.footerRightPanel.reload(source.footerRightPanel);\r\n        if (!this.footerCenterPanel && source.footerCenterPanel)\r\n            this.footerCenterPanel = source.footerCenterPanel;\r\n        else if (this.footerCenterPanel && !source.footerCenterPanel)\r\n            this.footerCenterPanel = null;\r\n        else if (this.footerCenterPanel)\r\n            this.footerCenterPanel.reload(source.footerCenterPanel);\r\n        /*if (!this.headerPanel && source.headerPanel)\r\n            this.headerPanel=source.headerPanel;\r\n        else if (this.headerPanel && !source.headerPanel)\r\n            this.headerPanel = null\r\n        else if (this.headerPanel)\r\n            this.headerPanel.reload(source.headerPanel)*/\r\n        if (!this.sysPanel && source.sysPanel)\r\n            this.sysPanel = source.sysPanel;\r\n        else if (this.sysPanel && !source.sysPanel)\r\n            this.sysPanel = null;\r\n        else if (this.sysPanel)\r\n            this.sysPanel.reload(source.sysPanel);\r\n        if (!this.LeftPadXPanel && source.LeftPadXPanel)\r\n            this.LeftPadXPanel = source.LeftPadXPanel;\r\n        else if (this.LeftPadXPanel && !source.LeftPadXPanel)\r\n            this.LeftPadXPanel = null;\r\n        else if (this.LeftPadXPanel)\r\n            this.LeftPadXPanel.reload(source.LeftPadXPanel);\r\n        if (!this.LeftPadYPanel && source.LeftPadYPanel)\r\n            this.LeftPadYPanel = source.LeftPadYPanel;\r\n        else if (this.LeftPadYPanel && !source.LeftPadYPanel)\r\n            this.LeftPadYPanel = null;\r\n        else if (this.LeftPadYPanel)\r\n            this.LeftPadYPanel.reload(source.LeftPadYPanel);\r\n        if (!this.RightPadXPanel && source.RightPadXPanel)\r\n            this.RightPadXPanel = source.RightPadXPanel;\r\n        else if (this.RightPadXPanel && !source.RightPadXPanel)\r\n            this.RightPadXPanel = null;\r\n        else if (this.RightPadXPanel)\r\n            this.RightPadXPanel.reload(source.RightPadXPanel);\r\n        if (!this.RightPadYPanel && source.RightPadYPanel)\r\n            this.RightPadYPanel = source.RightPadYPanel;\r\n        else if (this.RightPadYPanel && !source.RightPadYPanel)\r\n            this.RightPadYPanel = null;\r\n        else if (this.RightPadYPanel)\r\n            this.RightPadYPanel.reload(source.RightPadYPanel);\r\n        if (!this.controllerPanel && source.controllerPanel)\r\n            this.controllerPanel = source.controllerPanel;\r\n        else if (this.controllerPanel && !source.controllerPanel)\r\n            this.controllerPanel = null;\r\n        else if (this.controllerPanel)\r\n            this.controllerPanel.reload(source.controllerPanel);\r\n    }\r\n    ;\r\n    getDashboardPanelById(id, panels) {\r\n        for (let panel of panels) {\r\n            if (panel.id == id)\r\n                return panel;\r\n            else {\r\n                var res = this.getDashboardPanelById(id, panel.subPanels);\r\n                if (res)\r\n                    return res;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    addDashboardLink(link) {\r\n        if (link.dashboardId == '*' || link.dashboardId == this.id || (link.dashboardId == '**default**' && this.isDefault)) {\r\n            var panelFound = false;\r\n            var panel = this.getDashboardPanelById(link.panelId, this.panels);\r\n            if (!panel)\r\n                panel = this.getDashboardPanelById(link.panelId, this.sysPanels);\r\n            if (panel) {\r\n                panel.components.push(new DashboardPanelComponent(link));\r\n            }\r\n            else {\r\n                // console.log('adh',link);\r\n                var messagePanel = {\r\n                    id: link.panelId,\r\n                    name: link.panelName,\r\n                    type: 'panel',\r\n                    uiParameters: {\r\n                        'title': '',\r\n                        'width': 0,\r\n                        'height': 0,\r\n                        'userLog': false,\r\n                        'logLength': 0\r\n                    }\r\n                };\r\n                var newPanel = new DashboardPanel(this, messagePanel);\r\n                this.currentPanel.subPanels.push(newPanel);\r\n                newPanel.components.push(new DashboardPanelComponent(link));\r\n            }\r\n        }\r\n    }\r\n}\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass Action {\r\n    constructor(message, kerviService) {\r\n        this.kerviService = null;\r\n        this.id = null;\r\n        this.name = null;\r\n        this.componentType = 'action';\r\n        this.runCommand = '';\r\n        this.interruptCommand = '';\r\n        this.ui = {\r\n            type: '',\r\n            orientation: '',\r\n            visible: true\r\n        };\r\n        this.dashboards = [];\r\n        this.running$ = new BehaviorSubject(false);\r\n        this.kerviService = kerviService;\r\n        this.id = message.id;\r\n        this.name = message.name;\r\n        this.ui = message.ui;\r\n        this.ui.visible = message.visible;\r\n        this.ui.type = message.type;\r\n        this.runCommand = message.runCommand;\r\n        this.interruptCommand = message.interruptCommand;\r\n        this.running$.next(message.running);\r\n        for (let dashboardLink of message.dashboardLinks) {\r\n            this.dashboards.push(new DashboardLink(this, dashboardLink));\r\n        }\r\n    }\r\n    run(parameters) {\r\n        //if (!this.running$.value){\r\n        if (parameters && parameters.length > 0)\r\n            this.kerviService.spine.sendCommand(this.runCommand, ...parameters);\r\n        else\r\n            this.kerviService.spine.sendCommand(this.runCommand);\r\n        //}\r\n    }\r\n    interrupt(parameters) {\r\n        if (parameters && parameters.length > 0)\r\n            this.kerviService.spine.sendCommand(this.interruptCommand, ...parameters);\r\n        else\r\n            this.kerviService.spine.sendCommand(this.interruptCommand);\r\n    }\r\n}\n\nclass ComponentFactory {\r\n    static createComponents(message, kerviService) {\r\n        const foundComponents = this.createComponentsRec(message, kerviService);\r\n        this.linkToDashboards(foundComponents[0], foundComponents[1]);\r\n        return foundComponents[0];\r\n    }\r\n    static createComponentsRec(message, kerviService) {\r\n        let result = [];\r\n        let dashboards = [];\r\n        if (Array.isArray(message)) {\r\n            for (let i = 0; (i < message.length); i++) {\r\n                const subComponents = this.createComponentsRec(message[i], kerviService);\r\n                result = result.concat(subComponents[0]);\r\n                dashboards = dashboards.concat(subComponents[1]);\r\n            }\r\n        }\r\n        else {\r\n            let component = null;\r\n            const subComponents = [];\r\n            if (message.componentType === 'KerviAction') {\r\n                component = new Action(message, kerviService);\r\n            }\r\n            else if (message.componentType === 'dashboard') {\r\n                component = new Dashboard(message);\r\n                dashboards.push(component);\r\n            }\r\n            else if (message.componentType === 'controller') {\r\n                component = new Controller(message, kerviService);\r\n            }\r\n            else if (message.componentType === 'boolean-value') {\r\n                component = new BooleanValue(message, kerviService);\r\n            }\r\n            else if (message.componentType === 'number-value') {\r\n                component = new NumberValue(message, kerviService);\r\n            }\r\n            else if (message.componentType === 'string-value') {\r\n                component = new StringValue(message, kerviService);\r\n            }\r\n            else if (message.componentType === 'enum-value') {\r\n                component = new SelectValue(message, kerviService);\r\n            }\r\n            else if (message.componentType === 'datetime-value') {\r\n                component = new DateTimeValue(message, kerviService);\r\n            }\r\n            else if (message.componentType === 'color-value') {\r\n                component = new ColorValue(message, kerviService);\r\n            }\r\n            if (component) {\r\n                result.push(component);\r\n            }\r\n            if (subComponents) {\r\n                for (let subComponent of subComponents) {\r\n                    result.push(subComponent);\r\n                }\r\n            }\r\n        }\r\n        return [result, dashboards];\r\n    }\r\n    static FixControllerReferences(components) {\r\n        for (let component of components) {\r\n            const controller = component;\r\n            if (controller && controller.componentType === 'controller') {\r\n                controller.updateReferences();\r\n            }\r\n        }\r\n    }\r\n    static linkToDashboards(components, dashboards) {\r\n        console.log('ltd', components, dashboards);\r\n        for (let component of components) {\r\n            if (!(component instanceof Dashboard)) {\r\n                for (let link of component.dashboards) {\r\n                    for (let dashboard of dashboards) {\r\n                        dashboard.addDashboardLink(link);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\n\nclass FileBase {\r\n    constructor() {\r\n        this.isFile = true;\r\n    }\r\n}\r\nclass File extends FileBase {\r\n}\r\nclass Directory extends FileBase {\r\n    constructor(path) {\r\n        super();\r\n        this.files$ = new BehaviorSubject([]);\r\n        this.path = path;\r\n    }\r\n    updateFiles(files) {\r\n        let result = [];\r\n        for (let file of files) {\r\n            if (file.is_file) {\r\n                const fileEntry = new File();\r\n                fileEntry.name = file.name;\r\n                const p = this.path !== '/' ? this.path : '';\r\n                fileEntry.path = p + '/' + file.name;\r\n                result.push(fileEntry);\r\n            }\r\n            else {\r\n                const p = this.path !== '/' ? this.path : '';\r\n                const directory = new Directory(p + '/' + file.name);\r\n                directory.name = file.name;\r\n                directory.isFile = false;\r\n                result.push(directory);\r\n            }\r\n        }\r\n        this.files$.next(result);\r\n    }\r\n}\n\nclass StreamEvent {\r\n    constructor(streamId, streamEvent, data) {\r\n        this.streamId = streamId;\r\n        this.event = streamEvent;\r\n        this.data = data;\r\n    }\r\n}\r\nclass Stream {\r\n    constructor(streamId, events, kerviService) {\r\n        this.streamId = streamId;\r\n        this.events = events;\r\n        this.kerviService = kerviService;\r\n        this.events$ = new BehaviorSubject(null);\r\n        const self = this;\r\n        kerviService.spine.addStreamHandler(streamId, events, function (e_streamId, e_streamEvent, e_data) {\r\n            const event = new StreamEvent(e_streamId, e_streamEvent, e_data);\r\n            let notify = false;\r\n            if (events === null || events.length === 0 || events.indexOf(e_streamEvent) >= 0) {\r\n                notify = true;\r\n            }\r\n            if (notify) {\r\n                self.events$.next(event);\r\n            }\r\n        });\r\n    }\r\n    close() {\r\n        this.kerviService.spine.removeStreamHandler(this.streamId, this.events, null);\r\n    }\r\n}\n\n// Copyright (c) 2016, Tim Wentzlau\r\nvar ConnectionState;\r\n(function (ConnectionState) {\r\n    ConnectionState[ConnectionState[\"disconnected\"] = 0] = \"disconnected\";\r\n    ConnectionState[ConnectionState[\"loading\"] = 1] = \"loading\";\r\n    ConnectionState[ConnectionState[\"authenticate\"] = 2] = \"authenticate\";\r\n    ConnectionState[ConnectionState[\"connected\"] = 3] = \"connected\";\r\n})(ConnectionState || (ConnectionState = {}));\r\nvar UserLogStateType;\r\n(function (UserLogStateType) {\r\n    UserLogStateType[UserLogStateType[\"normal\"] = 0] = \"normal\";\r\n    UserLogStateType[UserLogStateType[\"warning\"] = 1] = \"warning\";\r\n    UserLogStateType[UserLogStateType[\"error\"] = 2] = \"error\";\r\n})(UserLogStateType || (UserLogStateType = {}));\r\nclass KerviBaseService {\r\n    constructor() {\r\n        this.spine = null;\r\n        this.lastAppPingTime = null;\r\n        this.lastPingDiff = 0;\r\n        this.appPingDiff$ = new BehaviorSubject(0);\r\n        this.appPingDelay$ = new BehaviorSubject(0);\r\n        this.mps$ = new BehaviorSubject(0);\r\n        this.appInfo = null;\r\n        this.texts = null;\r\n        this.components = [];\r\n        this.components$ = new BehaviorSubject([]);\r\n        this.connectionState$ = new BehaviorSubject(ConnectionState.disconnected);\r\n        this.doAuthenticate = false;\r\n        this.componentsChanged$ = new BehaviorSubject(false);\r\n        this.logMessages = [];\r\n        this.logMessages$ = new BehaviorSubject([]);\r\n        this.lastLogMessage$ = new BehaviorSubject(null);\r\n        this.LogMessageCount$ = new BehaviorSubject(0);\r\n        this.LogMessageState$ = new BehaviorSubject(UserLogStateType.normal);\r\n        this.streams = {};\r\n        this.IPCReady$ = new BehaviorSubject(false);\r\n        this.authPromise = null;\r\n        console.log('kervi service constructor');\r\n        const self = this;\r\n        this.application$ = new BehaviorSubject(null);\r\n        this.IPCReady$.subscribe(function (connected) {\r\n            if (connected) {\r\n                console.log('kervi service ipc ready (connected)');\r\n                self.spine.addEventHandler('valueChanged', '', function (id, value) {\r\n                    for (const component of self.components) {\r\n                        if (component.id === value.id) {\r\n                            const dynamicValue = component;\r\n                            dynamicValue.valueTS = new Date(this.timestamp);\r\n                            dynamicValue.set(value.value, false);\r\n                        }\r\n                    }\r\n                });\r\n                self.spine.addEventHandler('appPing', null, function (id, data) {\r\n                    // console.log('appPing', self.lastAppPingTime, id, data);\r\n                    if (self.lastAppPingTime === null) {\r\n                        self.lastAppPingTime = new Date();\r\n                    }\r\n                    else {\r\n                        const now = new Date();\r\n                        const pingDiff = now.getTime() - self.lastAppPingTime.getTime() - 1000;\r\n                        const pingDelay = now.getTime() - data.ts * 1000;\r\n                        self.appPingDelay$.next(pingDelay);\r\n                        self.lastAppPingTime = now;\r\n                        if (pingDiff !== self.lastPingDiff) {\r\n                            self.lastPingDiff = pingDiff;\r\n                            self.appPingDiff$.next(self.lastPingDiff);\r\n                        }\r\n                    }\r\n                });\r\n                self.spine.addEventHandler('actionStarted', '', function (id) {\r\n                    console.log('as', id);\r\n                    for (const component of self.components) {\r\n                        if (component.id === id) {\r\n                            const action = component;\r\n                            action.running$.next(true);\r\n                        }\r\n                    }\r\n                });\r\n                self.spine.addEventHandler('actionDone', '', function (id) {\r\n                    console.log('ad', id);\r\n                    for (const component of self.components) {\r\n                        if (component.id === id) {\r\n                            const action = component;\r\n                            action.running$.next(false);\r\n                        }\r\n                    }\r\n                });\r\n                self.spine.addEventHandler('userLogMessage', null, function (v) {\r\n                    const messages = self.logMessages$.value;\r\n                    const newMessage = new DashboardMessageModel(this);\r\n                    messages.unshift(newMessage);\r\n                    if (messages.length > 10) {\r\n                        messages.pop();\r\n                    }\r\n                    let hasErrors = 0;\r\n                    let hasWarnings = 0;\r\n                    for (const message of messages) {\r\n                        if (message.level === 1) {\r\n                            hasErrors++;\r\n                        }\r\n                        if (message.level === 2) {\r\n                            hasWarnings++;\r\n                        }\r\n                    }\r\n                    if (hasErrors) {\r\n                        self.LogMessageState$.next(UserLogStateType.error);\r\n                    }\r\n                    else if (hasWarnings) {\r\n                        self.LogMessageState$.next(UserLogStateType.warning);\r\n                    }\r\n                    else {\r\n                        self.LogMessageState$.next(UserLogStateType.normal);\r\n                    }\r\n                    self.LogMessageCount$.next(messages.length);\r\n                    self.lastLogMessage$.next(newMessage);\r\n                    self.logMessages$.next(messages);\r\n                });\r\n            }\r\n        });\r\n    }\r\n    GetDirectory(path) {\r\n        const promise = new Promise((resolve, reject) => {\r\n            const directory = new Directory(path);\r\n            this.spine.sendQuery('files_get_dir', path, function (directoryFiles) {\r\n                directory.updateFiles(directoryFiles);\r\n                resolve(directory);\r\n            });\r\n        });\r\n        return promise;\r\n    }\r\n    GetThumbnail(path) {\r\n        const promise = new Promise((resolve, reject) => {\r\n            this.spine.sendQuery('files_get_thumbnail', path, function (thumbnail) {\r\n                resolve(thumbnail);\r\n            });\r\n        });\r\n        return promise;\r\n    }\r\n    GetFile(path) {\r\n        const promise = new Promise((resolve, reject) => {\r\n            this.spine.sendQuery('files_get_file', path, function (file) {\r\n                resolve(file);\r\n            });\r\n        });\r\n        return promise;\r\n    }\r\n    GetStream(streamId, events = []) {\r\n        return new Stream(streamId, events, this);\r\n    }\r\n    text(key, defaultValue = '') {\r\n        if (this.texts && key in this.texts) {\r\n            return this.texts[key];\r\n        }\r\n        else {\r\n            return defaultValue;\r\n        }\r\n    }\r\n    getLogMessages$() {\r\n        return this.logMessages$.asObservable();\r\n    }\r\n    getLastLogMessage$() {\r\n        return this.lastLogMessage$.asObservable();\r\n    }\r\n    getLogState$() {\r\n        return this.LogMessageState$.asObservable();\r\n    }\r\n    getLogMessageCount$() {\r\n        return this.LogMessageCount$.asObservable();\r\n    }\r\n    isAppEmpty() {\r\n        const defaultDashboard = this.getDefaultDashboard();\r\n        if (defaultDashboard) {\r\n            return defaultDashboard.isEmpty();\r\n        }\r\n        return true;\r\n    }\r\n    getComponent(id, componentType = null) {\r\n        for (const component of this.components) {\r\n            if (component.id === id && (componentType == null || component.componentType === componentType)) {\r\n                return component;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    getComponentsByType(type) {\r\n        const result = [];\r\n        for (const component of this.components) {\r\n            if (component.componentType === type) {\r\n                result.push(component);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    getDefaultDashboard() {\r\n        const dashboards = this.getComponentsByType('dashboard');\r\n        for (const dashboard of dashboards) {\r\n            if (dashboard.isDefault) {\r\n                return dashboard;\r\n            }\r\n        }\r\n        if (dashboards.length > 0) {\r\n            return dashboards[0];\r\n        }\r\n        return null;\r\n    }\r\n    connect() {\r\n        let address = null;\r\n        let protocol = 'ws';\r\n        try {\r\n            if (kerviSocketAddress) {\r\n                address = kerviSocketAddress;\r\n            }\r\n            if (socketProtocol) {\r\n                protocol = socketProtocol;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // for testing with ng serve\r\n            const httpProtocol = location.protocol;\r\n            if (httpProtocol === 'https') {\r\n                protocol = 'wss';\r\n            }\r\n            const httpHost = window.location.hostname;\r\n            address = httpHost + ':9000';\r\n        }\r\n        console.log('ks', address);\r\n        this.spine = new KerviWSSpine({\r\n            address: address,\r\n            protocol: protocol,\r\n            onOpen: this.onOpen,\r\n            onClose: this.onClose,\r\n            onAuthenticate: this.onAuthenticate,\r\n            onAuthenticateFailed: this.onAuthenticateFailed,\r\n            onLogOff: this.onLogoff,\r\n            onAuthenticateStart: this.onAuthenticateStart,\r\n            onMPS: this.onMPS,\r\n            targetScope: this\r\n        });\r\n    }\r\n    connectMQ() {\r\n        console.log('ks', sessionStorage.getItem('mqc'));\r\n        if (sessionStorage.getItem('mqc')) {\r\n            this.spine = new KerviRMQSpine({\r\n                onOpen: this.onOpen,\r\n                onClose: this.onClose,\r\n                onAuthenticate: this.onAuthenticate,\r\n                onAuthenticateFailed: this.onAuthenticateFailed,\r\n                onLogOff: this.onLogoff,\r\n                onAuthenticateStart: this.onAuthenticateStart,\r\n                targetScope: this,\r\n                apiToken: JSON.parse(sessionStorage.getItem('mqc'))\r\n            });\r\n        }\r\n        else {\r\n            console.log('qmc not found in storage');\r\n        }\r\n    }\r\n    isAnonymous() {\r\n        return this.spine.options.userName === 'anonymous';\r\n    }\r\n    authenticate(userName, password) {\r\n        console.log('sa', userName, password);\r\n        this.authPromise = new Promise((resolve, reject) => {\r\n            this._resolveSelf = resolve;\r\n            this._rejectSelf = reject;\r\n        });\r\n        this.spine.authenticate(userName, password);\r\n        return this.authPromise;\r\n    }\r\n    logoff() {\r\n        this.spine.logoff();\r\n    }\r\n    onAuthenticateStart() {\r\n    }\r\n    onAuthenticate() {\r\n        this.doAuthenticate = true;\r\n        this.reset();\r\n        this._resolveSelf('ok');\r\n    }\r\n    onAuthenticateFailed() {\r\n        this._rejectSelf('error');\r\n    }\r\n    onLogoff() {\r\n        this.doAuthenticate = true;\r\n        if (this.spine.firstOnOpen) {\r\n            this.IPCReady$.next(true);\r\n        }\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.components = [];\r\n        this.components$.next(this.components);\r\n        const messages = [];\r\n        this.LogMessageState$.next(UserLogStateType.normal);\r\n        this.LogMessageCount$.next(messages.length);\r\n        this.logMessages$.next(messages);\r\n        if (this.IPCReady$.value) {\r\n            this.connectionState$.next(ConnectionState.authenticate);\r\n        }\r\n        else {\r\n            this.connectionState$.next(ConnectionState.disconnected);\r\n        }\r\n    }\r\n    getComponentInfo(retryCount, module_load) {\r\n        const self = this;\r\n        this.spine.sendQuery('GetApplicationInfo', function (appInfo) {\r\n            console.log('app info', appInfo);\r\n            this.spine.sendQuery('getComponentInfo', function (message) {\r\n                console.log('component info', message);\r\n                self.application$.next(appInfo);\r\n                self.texts = appInfo.display.texts;\r\n                self.components = ComponentFactory.createComponents(message, self);\r\n                ComponentFactory.FixControllerReferences(self.getComponentsByType('controller'));\r\n                self.components$.next(self.components);\r\n                self.connectionState$.next(ConnectionState.connected);\r\n                if (module_load) {\r\n                    self.componentsChanged$.next(true);\r\n                }\r\n                console.log('components', self.components);\r\n            }, function () {\r\n                console.error('get component info timeout');\r\n                if (retryCount > 0) {\r\n                    self.getComponentInfo(retryCount - 1, module_load);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    onOpen(first) {\r\n        console.log('kervi service on open', this.spine.firstOnOpen, first, this);\r\n        const self = this;\r\n        this.connectionState$.next(ConnectionState.loading);\r\n        this.doAuthenticate = this.spine.doAuthenticate;\r\n        this.getComponentInfo(2, false);\r\n        if (self.spine.firstOnOpen) {\r\n            this.IPCReady$.next(true);\r\n            this.spine.addEventHandler('moduleStarted', '', function () {\r\n                console.log('module loaded', self.components);\r\n                setTimeout(function () {\r\n                    self.getComponentInfo(2, true);\r\n                }, 2000);\r\n            });\r\n            this.spine.addEventHandler('moduleStopped', '', function () {\r\n                console.log('module unloaded');\r\n                setTimeout(function () {\r\n                    console.log('module unloaded, refresh');\r\n                    self.getComponentInfo(2, true);\r\n                }, 5000);\r\n            });\r\n        }\r\n    }\r\n    onClose() {\r\n        this.reset();\r\n        console.log('ks on close');\r\n        this.IPCReady$.next(false);\r\n    }\r\n    onMPS(mps) {\r\n        this.mps$.next(mps);\r\n    }\r\n    onHeartbeat() {\r\n    }\r\n    onConnect() {\r\n    }\r\n}\r\nKerviBaseService.ɵfac = function KerviBaseService_Factory(t) { return new (t || KerviBaseService)(); };\r\nKerviBaseService.ɵprov = ɵɵdefineInjectable({ token: KerviBaseService, factory: KerviBaseService.ɵfac });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviBaseService, [{\r\n        type: Injectable\r\n    }], function () { return []; }, null); })();\n\nclass KerviJsComponent {\r\n    constructor() { }\r\n    ngOnInit() {\r\n    }\r\n}\r\nKerviJsComponent.ɵfac = function KerviJsComponent_Factory(t) { return new (t || KerviJsComponent)(); };\r\nKerviJsComponent.ɵcmp = ɵɵdefineComponent({ type: KerviJsComponent, selectors: [[\"lib-kervi-js\"]], decls: 2, vars: 0, template: function KerviJsComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵelementStart(0, \"p\");\r\n        ɵɵtext(1, \" kervi-js works! \");\r\n        ɵɵelementEnd();\r\n    } }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviJsComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'lib-kervi-js',\r\n                template: `\r\n    <p>\r\n      kervi-js works!\r\n    </p>\r\n  `,\r\n                styles: []\r\n            }]\r\n    }], function () { return []; }, null); })();\n\nclass KerviJsModule {\r\n}\r\nKerviJsModule.ɵmod = ɵɵdefineNgModule({ type: KerviJsModule });\r\nKerviJsModule.ɵinj = ɵɵdefineInjector({ factory: function KerviJsModule_Factory(t) { return new (t || KerviJsModule)(); }, imports: [[]] });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵɵsetNgModuleScope(KerviJsModule, { declarations: [KerviJsComponent], exports: [KerviJsComponent] }); })();\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviJsModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [],\r\n                declarations: [KerviJsComponent],\r\n                exports: [KerviJsComponent]\r\n            }]\r\n    }], null, null); })();\n\n/*\r\n * Public API Surface of kervi-js\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { Action, BooleanValue, ColorValue, ConnectionState, Controller, Dashboard, DashboardBackgroundModel, DashboardLink, DashboardMessageModel, DashboardPanel, DashboardPanelComponent, DashboardPanelParameters, DashboardSizes, DateTimeValue, Directory, File, FileBase, KerviBaseService, KerviEnumOptionModel, KerviJsComponent, KerviJsModule, KerviValue, KerviValueType, NumberValue, SelectValue, Stream, StreamEvent, StringValue, UserLogStateType, ValueRange, ValueRangeType };\n//# sourceMappingURL=kervi-js.js.map\n","import { ɵɵdefineInjectable, ɵsetClassMetadata, Injectable, ɵɵdirectiveInject, ɵɵdefineComponent, ɵɵviewQuery, ɵɵqueryRefresh, ɵɵloadQuery, ɵɵelement, Component, Input, ViewChild, ɵɵgetCurrentView, ɵɵelementContainerStart, ɵɵelementStart, ɵɵlistener, ɵɵrestoreView, ɵɵnextContext, ɵɵelementEnd, ɵɵelementContainerEnd, ɵɵadvance, ɵɵproperty, ɵɵpropertyInterpolate, ɵɵclassMapInterpolate1, ɵɵtext, ɵɵtextInterpolate, ɵɵtemplate, ɵɵpipe, ɵɵstyleProp, ɵɵtextInterpolate1, ɵɵpipeBind2, ɵɵpipeBind1, ElementRef, ɵɵInheritDefinitionFeature, EventEmitter, ɵɵtemplateRefExtractor, ɵɵreference, Output, ɵɵelementContainer, ɵɵattribute, ɵɵsanitizeUrl, ɵɵdefineNgModule, ɵɵdefineInjector, ɵɵsetNgModuleScope, NgModule, TemplateRef } from '@angular/core';\nimport { DomSanitizer, BrowserModule } from '@angular/platform-browser';\nimport { NgZorroAntdModule, NzNotificationService } from 'ng-zorro-antd';\nimport { NGXKerviService, KerviTemplateService, KerviNumberComponent, KerviBooleanComponent, KerviStringComponent, KerviColorComponent, KerviDateTimeComponent, KerviActionComponent, KerviCameraComponent, TranslatePipe, KerviWidgetComponent, KerviUserLogComponent, KerviAppHealthComponent, KerviDashboardPanelComponent, NGXKerviPipesModule, NgxKerviModule } from 'ngx-kervi';\nimport { NgIf, DecimalPipe, AsyncPipe, NgTemplateOutlet, NgForOf, DatePipe, CommonModule } from '@angular/common';\nimport { DefaultLayoutDirective, DefaultFlexDirective, DefaultLayoutGapDirective } from '@angular/flex-layout/flex';\nimport { NzCardComponent } from 'ng-zorro-antd/card';\nimport { DashboardSizes } from 'kervi-js';\nimport { NzColDirective } from 'ng-zorro-antd/grid';\nimport { NzFormControlComponent } from 'ng-zorro-antd/form';\nimport { NzSliderComponent } from 'ng-zorro-antd/slider';\nimport { NgControlStatus, NgModel, DefaultValueAccessor, FormsModule } from '@angular/forms';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { asapScheduler } from 'rxjs';\nimport { NzSwitchComponent } from 'ng-zorro-antd/switch';\nimport { ɵNzTransitionPatchDirective } from 'ng-zorro-antd/core/transition-patch';\nimport { NzIconDirective } from 'ng-zorro-antd/icon';\nimport { NzButtonComponent } from 'ng-zorro-antd/button';\nimport { NzWaveDirective } from 'ng-zorro-antd/core/wave';\nimport { NzPopconfirmDirective } from 'ng-zorro-antd/popconfirm';\nimport { NzInputDirective } from 'ng-zorro-antd/input';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzTimePickerComponent } from 'ng-zorro-antd/time-picker';\nimport { create } from 'nipplejs';\nimport { NzTimelineComponent, NzTimelineItemComponent } from 'ng-zorro-antd/timeline';\nimport { NzDividerComponent } from 'ng-zorro-antd/divider';\nimport { NgxGaugeModule } from 'ngx-gauge';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { NzBadgeComponent } from 'ng-zorro-antd/badge';\nimport { NzDrawerComponent } from 'ng-zorro-antd/drawer';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nclass KerviZorroService {\r\n    constructor() { }\r\n}\r\nKerviZorroService.ɵfac = function KerviZorroService_Factory(t) { return new (t || KerviZorroService)(); };\r\nKerviZorroService.ɵprov = ɵɵdefineInjectable({ token: KerviZorroService, factory: KerviZorroService.ɵfac, providedIn: 'root' });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviZorroService, [{\r\n        type: Injectable,\r\n        args: [{\r\n                providedIn: 'root'\r\n            }]\r\n    }], function () { return []; }, null); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nconst _c0 = [\"chart\"];\r\nclass SparklineComponent {\r\n    constructor(kerviService, templateService) {\r\n        this.kerviService = kerviService;\r\n        this.templateService = templateService;\r\n        this.value = null;\r\n        this.linkParameters = null;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.series = [];\r\n    }\r\n    createElement() {\r\n        this.series = [this.value.value];\r\n        this.options = {\r\n            chart: {\r\n                height: 14,\r\n                width: 60,\r\n                type: 'area',\r\n                sparkline: {\r\n                    enabled: true\r\n                }\r\n            },\r\n            stroke: {\r\n                curve: 'straight',\r\n                width: 1\r\n            },\r\n            fill: {\r\n                opacity: 0.3,\r\n            },\r\n            series: [{\r\n                    data: this.value.sparkline$.value\r\n                }],\r\n            yaxis: {\r\n                min: 0\r\n            },\r\n            colors: [this.color(\"color\", \".kervi-sparkline\")],\r\n        };\r\n        if (this.chartObj) {\r\n            this.chartObj.destroy();\r\n        }\r\n        console.log(\"create sparkline\", this.value.id);\r\n        this.chartObj = new ApexCharts(this.chartElement.nativeElement, this.options);\r\n        this.chartObj.render();\r\n    }\r\n    color(style, selector) {\r\n        return this.templateService.getColor(style, selector);\r\n    }\r\n    ngOnInit() {\r\n        var self = this;\r\n        asapScheduler.schedule(() => {\r\n            this.createElement();\r\n        });\r\n        this.value.sparkline$.subscribe(function (v) {\r\n            if (self.chartObj && v) {\r\n                self.chartObj.updateSeries([{\r\n                        data: v\r\n                    }]);\r\n            }\r\n        });\r\n    }\r\n}\r\nSparklineComponent.ɵfac = function SparklineComponent_Factory(t) { return new (t || SparklineComponent)(ɵɵdirectiveInject(NGXKerviService), ɵɵdirectiveInject(KerviTemplateService)); };\r\nSparklineComponent.ɵcmp = ɵɵdefineComponent({ type: SparklineComponent, selectors: [[\"value-sparkline\"]], viewQuery: function SparklineComponent_Query(rf, ctx) { if (rf & 1) {\r\n        ɵɵviewQuery(_c0, true);\r\n    } if (rf & 2) {\r\n        var _t;\r\n        ɵɵqueryRefresh(_t = ɵɵloadQuery()) && (ctx.chartElement = _t.first);\r\n    } }, inputs: { value: \"value\", linkParameters: \"linkParameters\", type: \"type\", size: \"size\", dashboardSizes: \"dashboardSizes\" }, decls: 2, vars: 0, consts: [[\"chart\", \"\"]], template: function SparklineComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵelement(0, \"div\", null, 0);\r\n    } }, styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(SparklineComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'value-sparkline',\r\n                templateUrl: './sparkline.component.html',\r\n                styleUrls: ['./sparkline.component.scss'],\r\n            }]\r\n    }], function () { return [{ type: NGXKerviService }, { type: KerviTemplateService }]; }, { value: [{\r\n            type: Input\r\n        }], linkParameters: [{\r\n            type: Input\r\n        }], type: [{\r\n            type: Input\r\n        }], size: [{\r\n            type: Input\r\n        }], dashboardSizes: [{\r\n            type: Input\r\n        }], chartElement: [{\r\n            type: ViewChild,\r\n            args: ['chart']\r\n        }] }); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nfunction NumberComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\r\n    const _r3 = ɵɵgetCurrentView();\r\n    ɵɵelementContainerStart(0);\r\n    ɵɵelementStart(1, \"nz-form-control\");\r\n    ɵɵelementStart(2, \"nz-slider\", 1);\r\n    ɵɵlistener(\"ngModelChange\", function NumberComponent_ng_container_0_Template_nz_slider_ngModelChange_2_listener($event) { ɵɵrestoreView(_r3); const ctx_r2 = ɵɵnextContext(); return ctx_r2.value.value = $event; });\r\n    ɵɵelementEnd();\r\n    ɵɵelementStart(3, \"nz-input-number\", 2);\r\n    ɵɵlistener(\"ngModelChange\", function NumberComponent_ng_container_0_Template_nz_input_number_ngModelChange_3_listener($event) { ɵɵrestoreView(_r3); const ctx_r4 = ɵɵnextContext(); return ctx_r4.value.value = $event; });\r\n    ɵɵelementEnd();\r\n    ɵɵelementEnd();\r\n    ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = ɵɵnextContext();\r\n    ɵɵadvance(2);\r\n    ɵɵproperty(\"nzMin\", ctx_r0.value.minValue)(\"nzMax\", ctx_r0.value.maxValue)(\"nzStep\", 1)(\"ngModel\", ctx_r0.value.value);\r\n    ɵɵadvance(1);\r\n    ɵɵpropertyInterpolate(\"id\", ctx_r0.value.id);\r\n    ɵɵproperty(\"nzMin\", ctx_r0.value.minValue)(\"nzMax\", ctx_r0.value.maxValue)(\"nzStep\", 1)(\"ngModel\", ctx_r0.value.value);\r\n} }\r\nfunction NumberComponent_ng_container_1_i_2_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelement(0, \"i\");\r\n} if (rf & 2) {\r\n    const ctx_r5 = ɵɵnextContext(2);\r\n    ɵɵclassMapInterpolate1(\"fa fa-\", ctx_r5.currentIcon, \"\");\r\n} }\r\nfunction NumberComponent_ng_container_1_value_sparkline_3_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelement(0, \"value-sparkline\", 6);\r\n} if (rf & 2) {\r\n    const ctx_r6 = ɵɵnextContext(2);\r\n    ɵɵproperty(\"value\", ctx_r6.value);\r\n} }\r\nfunction NumberComponent_ng_container_1_span_7_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementStart(0, \"span\");\r\n    ɵɵtext(1);\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r7 = ɵɵnextContext(2);\r\n    ɵɵadvance(1);\r\n    ɵɵtextInterpolate(ctx_r7.value.unit);\r\n} }\r\nfunction NumberComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementContainerStart(0);\r\n    ɵɵelementStart(1, \"span\", 3);\r\n    ɵɵtemplate(2, NumberComponent_ng_container_1_i_2_Template, 1, 3, \"i\", 4);\r\n    ɵɵtemplate(3, NumberComponent_ng_container_1_value_sparkline_3_Template, 1, 1, \"value-sparkline\", 5);\r\n    ɵɵtext(4);\r\n    ɵɵpipe(5, \"number\");\r\n    ɵɵpipe(6, \"async\");\r\n    ɵɵtemplate(7, NumberComponent_ng_container_1_span_7_Template, 2, 1, \"span\", 0);\r\n    ɵɵelementEnd();\r\n    ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = ɵɵnextContext();\r\n    ɵɵadvance(1);\r\n    ɵɵstyleProp(\"min-width\", ctx_r1.linkParameters.valueSize, \"rem\");\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngIf\", ctx_r1.currentIcon);\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngIf\", ctx_r1.linkParameters.showSparkline && !ctx_r1.linkParameters.isInput);\r\n    ɵɵadvance(1);\r\n    ɵɵtextInterpolate1(\" \", ɵɵpipeBind2(5, 6, ɵɵpipeBind1(6, 9, ctx_r1.value.value$), ctx_r1.numberFormat), \" \");\r\n    ɵɵadvance(3);\r\n    ɵɵproperty(\"ngIf\", ctx_r1.linkParameters.displayUnit);\r\n} }\r\nclass NumberComponent extends KerviNumberComponent {\r\n    constructor(elementRef) {\r\n        super();\r\n        this.elementRef = elementRef;\r\n    }\r\n    ngOnInit() {\r\n        this.ngOnInitNumber();\r\n    }\r\n}\r\nNumberComponent.ɵfac = function NumberComponent_Factory(t) { return new (t || NumberComponent)(ɵɵdirectiveInject(ElementRef)); };\r\nNumberComponent.ɵcmp = ɵɵdefineComponent({ type: NumberComponent, selectors: [[\"kervi-value-number\"]], features: [ɵɵInheritDefinitionFeature], decls: 2, vars: 2, consts: [[4, \"ngIf\"], [3, \"nzMin\", \"nzMax\", \"nzStep\", \"ngModel\", \"ngModelChange\"], [3, \"id\", \"nzMin\", \"nzMax\", \"nzStep\", \"ngModel\", \"ngModelChange\"], [1, \"value-value\"], [3, \"class\", 4, \"ngIf\"], [3, \"value\", 4, \"ngIf\"], [3, \"value\"]], template: function NumberComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵtemplate(0, NumberComponent_ng_container_0_Template, 4, 9, \"ng-container\", 0);\r\n        ɵɵtemplate(1, NumberComponent_ng_container_1_Template, 8, 11, \"ng-container\", 0);\r\n    } if (rf & 2) {\r\n        ɵɵproperty(\"ngIf\", ctx.linkParameters.isInput);\r\n        ɵɵadvance(1);\r\n        ɵɵproperty(\"ngIf\", !ctx.linkParameters.isInput);\r\n    } }, directives: [NgIf, NzColDirective, NzFormControlComponent, NzSliderComponent, NgControlStatus, NgModel, NzInputNumberComponent, SparklineComponent], pipes: [DecimalPipe, AsyncPipe], styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(NumberComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-value-number',\r\n                templateUrl: './number-value.component.html',\r\n                styleUrls: ['./number-value.component.scss']\r\n            }]\r\n    }], function () { return [{ type: ElementRef }]; }, null); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nfunction SwitchButtonComponent_ng_template_1_i_0_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelement(0, \"i\", 4);\r\n} if (rf & 2) {\r\n    const ctx_r4 = ɵɵnextContext(2);\r\n    ɵɵproperty(\"type\", ctx_r4.linkParameters.onIcon);\r\n} }\r\nfunction SwitchButtonComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵtemplate(0, SwitchButtonComponent_ng_template_1_i_0_Template, 1, 1, \"i\", 3);\r\n    ɵɵelementStart(1, \"span\");\r\n    ɵɵtext(2);\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = ɵɵnextContext();\r\n    ɵɵproperty(\"ngIf\", ctx_r1.linkParameters.onIcon);\r\n    ɵɵadvance(2);\r\n    ɵɵtextInterpolate(ctx_r1.linkParameters.onText);\r\n} }\r\nfunction SwitchButtonComponent_ng_template_3_i_0_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelement(0, \"i\", 4);\r\n} if (rf & 2) {\r\n    const ctx_r5 = ɵɵnextContext(2);\r\n    ɵɵproperty(\"type\", ctx_r5.linkParameters.offIcon);\r\n} }\r\nfunction SwitchButtonComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵtemplate(0, SwitchButtonComponent_ng_template_3_i_0_Template, 1, 1, \"i\", 3);\r\n    ɵɵelementStart(1, \"span\");\r\n    ɵɵtext(2);\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r3 = ɵɵnextContext();\r\n    ɵɵproperty(\"ngIf\", ctx_r3.linkParameters.offIcon);\r\n    ɵɵadvance(2);\r\n    ɵɵtextInterpolate(ctx_r3.linkParameters.offText);\r\n} }\r\nclass SwitchButtonComponent {\r\n    constructor() {\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.buttonState = new EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n        console.log(\"sb\", this.value);\r\n        if (this.linkParameters) {\r\n            if (!this.linkParameters.buttonWidth)\r\n                this.width = this.dashboardSizes.switchWidth;\r\n            else\r\n                this.width = this.linkParameters.buttonWidth;\r\n            if (!this.linkParameters.buttonHeight)\r\n                this.height = this.dashboardSizes.switchHeight;\r\n            else\r\n                this.height = this.linkParameters.buttonHeight;\r\n        }\r\n        else {\r\n            this.width = this.dashboardSizes.switchWidth;\r\n            this.height = this.dashboardSizes.switchHeight;\r\n        }\r\n    }\r\n    modelChange(state) {\r\n        this.buttonState.emit(state);\r\n    }\r\n}\r\nSwitchButtonComponent.ɵfac = function SwitchButtonComponent_Factory(t) { return new (t || SwitchButtonComponent)(); };\r\nSwitchButtonComponent.ɵcmp = ɵɵdefineComponent({ type: SwitchButtonComponent, selectors: [[\"kervi-switchbutton\"]], inputs: { value: \"value\", linkParameters: \"linkParameters\", inline: \"inline\", dashboardSizes: \"dashboardSizes\" }, outputs: { buttonState: \"buttonState\" }, decls: 5, vars: 3, consts: [[3, \"ngModel\", \"nzCheckedChildren\", \"nzUnCheckedChildren\", \"ngModelChange\"], [\"checkedTemplate\", \"\"], [\"unCheckedTemplate\", \"\"], [\"nz-icon\", \"\", 3, \"type\", 4, \"ngIf\"], [\"nz-icon\", \"\", 3, \"type\"]], template: function SwitchButtonComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵelementStart(0, \"nz-switch\", 0);\r\n        ɵɵlistener(\"ngModelChange\", function SwitchButtonComponent_Template_nz_switch_ngModelChange_0_listener($event) { return ctx.value = $event; })(\"ngModelChange\", function SwitchButtonComponent_Template_nz_switch_ngModelChange_0_listener($event) { return ctx.modelChange($event); });\r\n        ɵɵelementEnd();\r\n        ɵɵtemplate(1, SwitchButtonComponent_ng_template_1_Template, 3, 2, \"ng-template\", null, 1, ɵɵtemplateRefExtractor);\r\n        ɵɵtemplate(3, SwitchButtonComponent_ng_template_3_Template, 3, 2, \"ng-template\", null, 2, ɵɵtemplateRefExtractor);\r\n    } if (rf & 2) {\r\n        const _r0 = ɵɵreference(2);\r\n        const _r2 = ɵɵreference(4);\r\n        ɵɵproperty(\"ngModel\", ctx.value)(\"nzCheckedChildren\", _r0)(\"nzUnCheckedChildren\", _r2);\r\n    } }, directives: [NzSwitchComponent, NgControlStatus, NgModel, NgIf, ɵNzTransitionPatchDirective, NzIconDirective], styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(SwitchButtonComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-switchbutton',\r\n                templateUrl: './switch-button.component.html',\r\n                styleUrls: ['./switch-button.component.scss'],\r\n            }]\r\n    }], function () { return []; }, { value: [{\r\n            type: Input\r\n        }], linkParameters: [{\r\n            type: Input\r\n        }], inline: [{\r\n            type: Input\r\n        }], dashboardSizes: [{\r\n            type: Input\r\n        }], buttonState: [{\r\n            type: Output\r\n        }] }); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nfunction ButtonComponent_ng_template_0_i_0_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelement(0, \"i\", 4);\r\n} if (rf & 2) {\r\n    const ctx_r4 = ɵɵnextContext(2);\r\n    ɵɵproperty(\"type\", ctx_r4.linkParameters.buttonIcon);\r\n} }\r\nfunction ButtonComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵtemplate(0, ButtonComponent_ng_template_0_i_0_Template, 1, 1, \"i\", 3);\r\n    ɵɵtext(1);\r\n} if (rf & 2) {\r\n    const ctx_r1 = ɵɵnextContext();\r\n    ɵɵproperty(\"ngIf\", ctx_r1.linkParameters.buttonIcon);\r\n    ɵɵadvance(1);\r\n    ɵɵtextInterpolate1(\" \", ctx_r1.linkParameters.buttonText, \"\\n\");\r\n} }\r\nfunction ButtonComponent_button_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementContainer(0);\r\n} }\r\nfunction ButtonComponent_button_2_Template(rf, ctx) { if (rf & 1) {\r\n    const _r7 = ɵɵgetCurrentView();\r\n    ɵɵelementStart(0, \"button\", 5);\r\n    ɵɵlistener(\"nzOnConfirm\", function ButtonComponent_button_2_Template_button_nzOnConfirm_0_listener() { ɵɵrestoreView(_r7); const ctx_r6 = ɵɵnextContext(); return ctx_r6.confirm(); });\r\n    ɵɵtemplate(1, ButtonComponent_button_2_ng_container_1_Template, 1, 0, \"ng-container\", 6);\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r2 = ɵɵnextContext();\r\n    const _r0 = ɵɵreference(1);\r\n    ɵɵproperty(\"nzTitle\", ctx_r2.linkParameters.confirmMessage);\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngTemplateOutlet\", _r0);\r\n} }\r\nfunction ButtonComponent_button_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementContainer(0);\r\n} }\r\nfunction ButtonComponent_button_3_Template(rf, ctx) { if (rf & 1) {\r\n    const _r10 = ɵɵgetCurrentView();\r\n    ɵɵelementStart(0, \"button\", 7);\r\n    ɵɵlistener(\"mousedown\", function ButtonComponent_button_3_Template_button_mousedown_0_listener() { ɵɵrestoreView(_r10); const ctx_r9 = ɵɵnextContext(); return ctx_r9.press(); })(\"mouseup\", function ButtonComponent_button_3_Template_button_mouseup_0_listener() { ɵɵrestoreView(_r10); const ctx_r11 = ɵɵnextContext(); return ctx_r11.release(); });\r\n    ɵɵtemplate(1, ButtonComponent_button_3_ng_container_1_Template, 1, 0, \"ng-container\", 6);\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    ɵɵnextContext();\r\n    const _r0 = ɵɵreference(1);\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngTemplateOutlet\", _r0);\r\n} }\r\nclass ButtonComponent {\r\n    constructor() {\r\n        this.linkParameters = null;\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.buttonState = new EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n        var self = this;\r\n        if (self.linkParameters) {\r\n            if (!self.linkParameters.buttonWidth)\r\n                this.width = this.dashboardSizes.buttonWidth;\r\n            else\r\n                this.width = self.linkParameters.buttonWidth;\r\n            if (!self.linkParameters.buttonHeight)\r\n                this.height = this.dashboardSizes.buttonHeight;\r\n            else\r\n                this.height = self.linkParameters.buttonHeight;\r\n        }\r\n        else {\r\n            this.width = this.dashboardSizes.buttonWidth;\r\n            this.height = this.dashboardSizes.buttonHeight;\r\n        }\r\n    }\r\n    confirm() {\r\n        console.log(\"c\", this.value);\r\n        this.buttonState.emit(true);\r\n        this.buttonState.emit(false);\r\n    }\r\n    press() {\r\n        console.log(\"p\", this.value);\r\n        this.buttonState.emit(true);\r\n    }\r\n    release() {\r\n        this.buttonState.emit(false);\r\n    }\r\n}\r\nButtonComponent.ɵfac = function ButtonComponent_Factory(t) { return new (t || ButtonComponent)(); };\r\nButtonComponent.ɵcmp = ɵɵdefineComponent({ type: ButtonComponent, selectors: [[\"kervi-button\"]], inputs: { value: \"value\", linkParameters: \"linkParameters\", type: \"type\", inline: \"inline\", dashboardSizes: \"dashboardSizes\", title: \"title\" }, outputs: { buttonState: \"buttonState\" }, decls: 4, vars: 2, consts: [[\"buttonContentTemplate\", \"\"], [\"nz-button\", \"\", \"nzType\", \"primary\", \"nz-popconfirm\", \"\", 3, \"nzTitle\", \"nzOnConfirm\", 4, \"ngIf\"], [\"nz-button\", \"\", \"nzType\", \"primary\", 3, \"mousedown\", \"mouseup\", 4, \"ngIf\"], [\"nz-icon\", \"\", 3, \"type\", 4, \"ngIf\"], [\"nz-icon\", \"\", 3, \"type\"], [\"nz-button\", \"\", \"nzType\", \"primary\", \"nz-popconfirm\", \"\", 3, \"nzTitle\", \"nzOnConfirm\"], [4, \"ngTemplateOutlet\"], [\"nz-button\", \"\", \"nzType\", \"primary\", 3, \"mousedown\", \"mouseup\"]], template: function ButtonComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵtemplate(0, ButtonComponent_ng_template_0_Template, 2, 2, \"ng-template\", null, 0, ɵɵtemplateRefExtractor);\r\n        ɵɵtemplate(2, ButtonComponent_button_2_Template, 2, 2, \"button\", 1);\r\n        ɵɵtemplate(3, ButtonComponent_button_3_Template, 2, 1, \"button\", 2);\r\n    } if (rf & 2) {\r\n        ɵɵadvance(2);\r\n        ɵɵproperty(\"ngIf\", ctx.linkParameters.confirm);\r\n        ɵɵadvance(1);\r\n        ɵɵproperty(\"ngIf\", !ctx.linkParameters.confirm);\r\n    } }, directives: [NgIf, ɵNzTransitionPatchDirective, NzIconDirective, NzButtonComponent, NzWaveDirective, NzPopconfirmDirective, NgTemplateOutlet], styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(ButtonComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-button',\r\n                templateUrl: './button.component.html',\r\n                styleUrls: ['./button.component.scss'],\r\n            }]\r\n    }], function () { return []; }, { value: [{\r\n            type: Input\r\n        }], linkParameters: [{\r\n            type: Input\r\n        }], type: [{\r\n            type: Input\r\n        }], inline: [{\r\n            type: Input\r\n        }], dashboardSizes: [{\r\n            type: Input\r\n        }], title: [{\r\n            type: Input\r\n        }], buttonState: [{\r\n            type: Output\r\n        }] }); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nfunction BooleanComponent_kervi_switchbutton_0_Template(rf, ctx) { if (rf & 1) {\r\n    const _r3 = ɵɵgetCurrentView();\r\n    ɵɵelementStart(0, \"kervi-switchbutton\", 2);\r\n    ɵɵlistener(\"buttonState\", function BooleanComponent_kervi_switchbutton_0_Template_kervi_switchbutton_buttonState_0_listener($event) { ɵɵrestoreView(_r3); const ctx_r2 = ɵɵnextContext(); return ctx_r2.changeState($event); });\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = ɵɵnextContext();\r\n    ɵɵproperty(\"dashboardSizes\", ctx_r0.dashboardSizes)(\"inline\", ctx_r0.inline)(\"value\", ctx_r0.value.value)(\"linkParameters\", ctx_r0.linkParameters);\r\n} }\r\nfunction BooleanComponent_kervi_button_1_Template(rf, ctx) { if (rf & 1) {\r\n    const _r5 = ɵɵgetCurrentView();\r\n    ɵɵelementStart(0, \"kervi-button\", 3);\r\n    ɵɵlistener(\"buttonState\", function BooleanComponent_kervi_button_1_Template_kervi_button_buttonState_0_listener($event) { ɵɵrestoreView(_r5); const ctx_r4 = ɵɵnextContext(); return ctx_r4.changeState($event); });\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = ɵɵnextContext();\r\n    ɵɵproperty(\"dashboardSizes\", ctx_r1.dashboardSizes)(\"value\", ctx_r1.value)(\"inline\", ctx_r1.inline)(\"linkParameters\", ctx_r1.linkParameters);\r\n} }\r\nclass BooleanComponent extends KerviBooleanComponent {\r\n    constructor() {\r\n        super();\r\n    }\r\n    changeState(event) {\r\n        this.value.set(event);\r\n    }\r\n    ngOnInit() {\r\n        this.ngOnInitBoolean();\r\n    }\r\n}\r\nBooleanComponent.ɵfac = function BooleanComponent_Factory(t) { return new (t || BooleanComponent)(); };\r\nBooleanComponent.ɵcmp = ɵɵdefineComponent({ type: BooleanComponent, selectors: [[\"kervi-value-boolean\"]], features: [ɵɵInheritDefinitionFeature], decls: 2, vars: 2, consts: [[3, \"dashboardSizes\", \"inline\", \"value\", \"linkParameters\", \"buttonState\", 4, \"ngIf\"], [3, \"dashboardSizes\", \"value\", \"inline\", \"linkParameters\", \"buttonState\", 4, \"ngIf\"], [3, \"dashboardSizes\", \"inline\", \"value\", \"linkParameters\", \"buttonState\"], [3, \"dashboardSizes\", \"value\", \"inline\", \"linkParameters\", \"buttonState\"]], template: function BooleanComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵtemplate(0, BooleanComponent_kervi_switchbutton_0_Template, 1, 4, \"kervi-switchbutton\", 0);\r\n        ɵɵtemplate(1, BooleanComponent_kervi_button_1_Template, 1, 4, \"kervi-button\", 1);\r\n    } if (rf & 2) {\r\n        ɵɵproperty(\"ngIf\", ctx.displayType != \"button\");\r\n        ɵɵadvance(1);\r\n        ɵɵproperty(\"ngIf\", ctx.displayType == \"button\");\r\n    } }, directives: [NgIf, SwitchButtonComponent, ButtonComponent], styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(BooleanComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-value-boolean',\r\n                templateUrl: './boolean-value.component.html',\r\n                styleUrls: ['./boolean-value.component.scss']\r\n            }]\r\n    }], function () { return []; }, null); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nfunction StringComponent_input_0_Template(rf, ctx) { if (rf & 1) {\r\n    const _r3 = ɵɵgetCurrentView();\r\n    ɵɵelementStart(0, \"input\", 2);\r\n    ɵɵlistener(\"ngModelChange\", function StringComponent_input_0_Template_input_ngModelChange_0_listener($event) { ɵɵrestoreView(_r3); const ctx_r2 = ɵɵnextContext(); return ctx_r2.value.value = $event; });\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = ɵɵnextContext();\r\n    ɵɵproperty(\"ngModel\", ctx_r0.value.value);\r\n} }\r\nfunction StringComponent_span_1_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementStart(0, \"span\", 3);\r\n    ɵɵtext(1);\r\n    ɵɵpipe(2, \"async\");\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = ɵɵnextContext();\r\n    ɵɵadvance(1);\r\n    ɵɵtextInterpolate(ɵɵpipeBind1(2, 1, ctx_r1.value.value$));\r\n} }\r\nclass StringComponent extends KerviStringComponent {\r\n    constructor(elementRef) {\r\n        super();\r\n        this.elementRef = elementRef;\r\n    }\r\n    ngOnInit() {\r\n        var self = this;\r\n        this.ngOnInitString();\r\n        this.value.value$.subscribe(function (v) {\r\n            jQuery(\"input\", self.elementRef.nativeElement).val(v).change();\r\n        });\r\n    }\r\n    onChange(event) {\r\n        var v = jQuery(\"input\", this.elementRef.nativeElement).val();\r\n        console.log(\"evv\", v, event);\r\n        this.value.set(v);\r\n    }\r\n}\r\nStringComponent.ɵfac = function StringComponent_Factory(t) { return new (t || StringComponent)(ɵɵdirectiveInject(ElementRef)); };\r\nStringComponent.ɵcmp = ɵɵdefineComponent({ type: StringComponent, selectors: [[\"kervi-value-string\"]], features: [ɵɵInheritDefinitionFeature], decls: 2, vars: 2, consts: [[\"nz-input\", \"\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"class\", \"form-control pull-right\", 4, \"ngIf\"], [\"nz-input\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-control\", \"pull-right\"]], template: function StringComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵtemplate(0, StringComponent_input_0_Template, 1, 1, \"input\", 0);\r\n        ɵɵtemplate(1, StringComponent_span_1_Template, 3, 3, \"span\", 1);\r\n    } if (rf & 2) {\r\n        ɵɵproperty(\"ngIf\", ctx.linkParameters.isInput);\r\n        ɵɵadvance(1);\r\n        ɵɵproperty(\"ngIf\", !ctx.linkParameters.isInput);\r\n    } }, directives: [NgIf, NzInputDirective, DefaultValueAccessor, NgControlStatus, NgModel], pipes: [AsyncPipe], styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(StringComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-value-string',\r\n                templateUrl: './string-value.component.html',\r\n                styleUrls: ['./string-value.component.scss']\r\n            }]\r\n    }], function () { return [{ type: ElementRef }]; }, null); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass ColorComponent {\r\n    constructor(elementRef) {\r\n        this.elementRef = elementRef;\r\n        this.colorChange = new EventEmitter();\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.picker = null;\r\n    }\r\n    set color(v) {\r\n        console.log(\"cc\", v, this.picker);\r\n        this.colorValue = v;\r\n        if (v) {\r\n            //    jQuery('.color', this.elementRef.nativeElement).css(\"background-color\", v)\r\n            //else\r\n            jQuery('.color', this.elementRef.nativeElement).attr(\"style\", \"background-color:\" + v);\r\n        }\r\n    }\r\n    ;\r\n    ngOnInit() {\r\n        var self = this;\r\n        if (!self.linkParameters.buttonWidth)\r\n            this.width = this.dashboardSizes.switchWidth;\r\n        else\r\n            this.width = self.linkParameters.buttonWidth;\r\n        if (this.linkParameters.isInput) {\r\n            setTimeout(() => {\r\n                self.picker = jQuery('.color', self.elementRef.nativeElement).colorPicker({\r\n                    //color: 'rgba(255,12,14,1)',\r\n                    cssAddon: '.cp-color-picker {z-index:2000}',\r\n                    buildCallback: function (b) {\r\n                    },\r\n                    positionCallback: function (p) {\r\n                    },\r\n                    renderCallback: function (v) {\r\n                        var value = v.text;\r\n                        if (value.indexOf(\"rgb\") == 0) {\r\n                            var rgb = v.text.split(',');\r\n                            var r = parseInt(rgb[0].substring(4));\r\n                            var g = parseInt(rgb[1]);\r\n                            var b = parseInt(rgb[2]);\r\n                            value = \"#\" + r.toString(16) + g.toString(16) + b.toString(16);\r\n                        }\r\n                        console.log(\"cc\", value);\r\n                        self.colorChange.emit(value);\r\n                    },\r\n                    actionCallback: function (v, x) {\r\n                        console.log(\"c\", v, x);\r\n                    }\r\n                });\r\n            }, 0);\r\n        }\r\n    }\r\n}\r\nColorComponent.ɵfac = function ColorComponent_Factory(t) { return new (t || ColorComponent)(ɵɵdirectiveInject(ElementRef)); };\r\nColorComponent.ɵcmp = ɵɵdefineComponent({ type: ColorComponent, selectors: [[\"kervi-color\"]], inputs: { color: \"color\", linkParameters: \"linkParameters\", inline: \"inline\", dashboardSizes: \"dashboardSizes\" }, outputs: { colorChange: \"colorChange\" }, decls: 2, vars: 1, consts: [[1, \"input-group\", 2, \"max-width\", \"90px\"], [1, \"form-control\", \"color\"]], template: function ColorComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵelementStart(0, \"div\", 0);\r\n        ɵɵelement(1, \"div\", 1);\r\n        ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        ɵɵadvance(1);\r\n        ɵɵattribute(\"background.value\", ctx.colorValue);\r\n    } }, styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(ColorComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-color',\r\n                templateUrl: './color.component.html',\r\n                styleUrls: ['./color.component.scss'],\r\n            }]\r\n    }], function () { return [{ type: ElementRef }]; }, { color: [{\r\n            type: Input\r\n        }], colorChange: [{\r\n            type: Output\r\n        }], linkParameters: [{\r\n            type: Input\r\n        }], inline: [{\r\n            type: Input\r\n        }], dashboardSizes: [{\r\n            type: Input\r\n        }] }); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass ColorComponent$1 extends KerviColorComponent {\r\n    constructor() {\r\n        super();\r\n        //console.log(\"cnio\",this);\r\n    }\r\n    setValue(v) {\r\n        console.log(v);\r\n    }\r\n    ngOnInit() {\r\n        this.ngOnInitColor();\r\n    }\r\n}\r\nColorComponent$1.ɵfac = function ColorComponent_Factory(t) { return new (t || ColorComponent$1)(); };\r\nColorComponent$1.ɵcmp = ɵɵdefineComponent({ type: ColorComponent$1, selectors: [[\"kervi-value-color\"]], features: [ɵɵInheritDefinitionFeature], decls: 2, vars: 4, consts: [[3, \"color\", \"linkParameters\", \"colorChange\"]], template: function ColorComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵelementStart(0, \"kervi-color\", 0);\r\n        ɵɵlistener(\"colorChange\", function ColorComponent_Template_kervi_color_colorChange_0_listener($event) { return ctx.setKerviValue($event); });\r\n        ɵɵpipe(1, \"async\");\r\n        ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        ɵɵproperty(\"color\", ɵɵpipeBind1(1, 2, ctx.value.value$))(\"linkParameters\", ctx.linkParameters);\r\n    } }, directives: [ColorComponent], pipes: [AsyncPipe], styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(ColorComponent$1, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-value-color',\r\n                templateUrl: './color-value.component.html',\r\n                styleUrls: ['./color-value.component.scss']\r\n            }]\r\n    }], function () { return []; }, null); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nfunction DateTimeComponent_nz_date_picker_0_Template(rf, ctx) { if (rf & 1) {\r\n    const _r4 = ɵɵgetCurrentView();\r\n    ɵɵelementStart(0, \"nz-date-picker\", 2);\r\n    ɵɵlistener(\"ngModelChange\", function DateTimeComponent_nz_date_picker_0_Template_nz_date_picker_ngModelChange_0_listener($event) { ɵɵrestoreView(_r4); const ctx_r3 = ɵɵnextContext(); return ctx_r3.dateTime.value = $event; });\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = ɵɵnextContext();\r\n    ɵɵproperty(\"ngModel\", ctx_r0.dateTime.value)(\"nzFormat\", ctx_r0.format);\r\n} }\r\nfunction DateTimeComponent_nz_date_picker_1_Template(rf, ctx) { if (rf & 1) {\r\n    const _r6 = ɵɵgetCurrentView();\r\n    ɵɵelementStart(0, \"nz-date-picker\", 3);\r\n    ɵɵlistener(\"ngModelChange\", function DateTimeComponent_nz_date_picker_1_Template_nz_date_picker_ngModelChange_0_listener($event) { ɵɵrestoreView(_r6); const ctx_r5 = ɵɵnextContext(); return ctx_r5.dateTime.value = $event; });\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = ɵɵnextContext();\r\n    ɵɵproperty(\"ngModel\", ctx_r1.dateTime.value)(\"nzFormat\", ctx_r1.format);\r\n} }\r\nfunction DateTimeComponent_nz_time_picker_2_Template(rf, ctx) { if (rf & 1) {\r\n    const _r8 = ɵɵgetCurrentView();\r\n    ɵɵelementStart(0, \"nz-time-picker\", 3);\r\n    ɵɵlistener(\"ngModelChange\", function DateTimeComponent_nz_time_picker_2_Template_nz_time_picker_ngModelChange_0_listener($event) { ɵɵrestoreView(_r8); const ctx_r7 = ɵɵnextContext(); return ctx_r7.dateTime.value = $event; });\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r2 = ɵɵnextContext();\r\n    ɵɵproperty(\"ngModel\", ctx_r2.dateTime.value)(\"nzFormat\", ctx_r2.format);\r\n} }\r\nclass DateTimeComponent {\r\n    constructor(elementRef) {\r\n        this.elementRef = elementRef;\r\n        this.dateTimeChanged = new EventEmitter;\r\n        this.isReady = false;\r\n    }\r\n    ngOnInit() {\r\n    }\r\n}\r\nDateTimeComponent.ɵfac = function DateTimeComponent_Factory(t) { return new (t || DateTimeComponent)(ɵɵdirectiveInject(ElementRef)); };\r\nDateTimeComponent.ɵcmp = ɵɵdefineComponent({ type: DateTimeComponent, selectors: [[\"kervi-datetime\"]], inputs: { dateTime: \"dateTime\", type: \"type\", format: \"format\" }, outputs: { dateTimeChanged: \"dateTimeChanged\" }, decls: 3, vars: 3, consts: [[\"nzShowTime\", \"\", 3, \"ngModel\", \"nzFormat\", \"ngModelChange\", 4, \"ngIf\"], [3, \"ngModel\", \"nzFormat\", \"ngModelChange\", 4, \"ngIf\"], [\"nzShowTime\", \"\", 3, \"ngModel\", \"nzFormat\", \"ngModelChange\"], [3, \"ngModel\", \"nzFormat\", \"ngModelChange\"]], template: function DateTimeComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵtemplate(0, DateTimeComponent_nz_date_picker_0_Template, 1, 2, \"nz-date-picker\", 0);\r\n        ɵɵtemplate(1, DateTimeComponent_nz_date_picker_1_Template, 1, 2, \"nz-date-picker\", 1);\r\n        ɵɵtemplate(2, DateTimeComponent_nz_time_picker_2_Template, 1, 2, \"nz-time-picker\", 1);\r\n    } if (rf & 2) {\r\n        ɵɵproperty(\"ngIf\", ctx.type == \"datetime\");\r\n        ɵɵadvance(1);\r\n        ɵɵproperty(\"ngIf\", ctx.type == \"date\");\r\n        ɵɵadvance(1);\r\n        ɵɵproperty(\"ngIf\", ctx.type == \"time\");\r\n    } }, directives: [NgIf, NzDatePickerComponent, NgControlStatus, NgModel, NzTimePickerComponent], styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(DateTimeComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-datetime',\r\n                templateUrl: './datetimepicker.component.html',\r\n                styleUrls: ['./datetimepicker.component.scss']\r\n            }]\r\n    }], function () { return [{ type: ElementRef }]; }, { dateTime: [{\r\n            type: Input\r\n        }], type: [{\r\n            type: Input\r\n        }], format: [{\r\n            type: Input\r\n        }], dateTimeChanged: [{\r\n            type: Output\r\n        }] }); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass DateTimeComponent$1 extends KerviDateTimeComponent {\r\n    constructor() {\r\n        super();\r\n    }\r\n    ngOnInit() {\r\n        this.ngOnInitDateTime();\r\n    }\r\n}\r\nDateTimeComponent$1.ɵfac = function DateTimeComponent_Factory(t) { return new (t || DateTimeComponent$1)(); };\r\nDateTimeComponent$1.ɵcmp = ɵɵdefineComponent({ type: DateTimeComponent$1, selectors: [[\"kervi-value-datetime\"]], features: [ɵɵInheritDefinitionFeature], decls: 1, vars: 3, consts: [[3, \"type\", \"format\", \"dateTime\"]], template: function DateTimeComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵelement(0, \"kervi-datetime\", 0);\r\n    } if (rf & 2) {\r\n        ɵɵproperty(\"type\", ctx.displayType)(\"format\", ctx.dateTimeFormat)(\"dateTime\", ctx.value);\r\n    } }, directives: [DateTimeComponent], styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(DateTimeComponent$1, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-value-datetime',\r\n                templateUrl: './datetime-value.component.html',\r\n                styleUrls: ['./datetime-value.component.scss']\r\n            }]\r\n    }], function () { return []; }, null); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nfunction KerviValueComponent_kervi_value_number_0_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelement(0, \"kervi-value-number\", 2);\r\n} if (rf & 2) {\r\n    const ctx_r0 = ɵɵnextContext();\r\n    ɵɵproperty(\"value\", ctx_r0.value)(\"dashboardSizes\", ctx_r0.dashboardSizes)(\"linkParameters\", ctx_r0.linkParameters)(\"inline\", ctx_r0.inline);\r\n} }\r\nfunction KerviValueComponent_kervi_value_boolean_1_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelement(0, \"kervi-value-boolean\", 3);\r\n} if (rf & 2) {\r\n    const ctx_r1 = ɵɵnextContext();\r\n    ɵɵproperty(\"dashboardSizes\", ctx_r1.dashboardSizes)(\"linkParameters\", ctx_r1.linkParameters)(\"inline\", ctx_r1.inline)(\"value\", ctx_r1.value);\r\n} }\r\nfunction KerviValueComponent_kervi_value_string_2_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelement(0, \"kervi-value-string\", 3);\r\n} if (rf & 2) {\r\n    const ctx_r2 = ɵɵnextContext();\r\n    ɵɵproperty(\"dashboardSizes\", ctx_r2.dashboardSizes)(\"linkParameters\", ctx_r2.linkParameters)(\"inline\", ctx_r2.inline)(\"value\", ctx_r2.value);\r\n} }\r\nfunction KerviValueComponent_kervi_value_color_3_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelement(0, \"kervi-value-color\", 3);\r\n} if (rf & 2) {\r\n    const ctx_r3 = ɵɵnextContext();\r\n    ɵɵproperty(\"dashboardSizes\", ctx_r3.dashboardSizes)(\"linkParameters\", ctx_r3.linkParameters)(\"inline\", ctx_r3.inline)(\"value\", ctx_r3.value);\r\n} }\r\nfunction KerviValueComponent_kervi_value_datetime_4_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelement(0, \"kervi-value-datetime\", 3);\r\n} if (rf & 2) {\r\n    const ctx_r4 = ɵɵnextContext();\r\n    ɵɵproperty(\"dashboardSizes\", ctx_r4.dashboardSizes)(\"linkParameters\", ctx_r4.linkParameters)(\"inline\", ctx_r4.inline)(\"value\", ctx_r4.value);\r\n} }\r\nclass KerviValueComponent {\r\n    constructor() {\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n    }\r\n}\r\nKerviValueComponent.ɵfac = function KerviValueComponent_Factory(t) { return new (t || KerviValueComponent)(); };\r\nKerviValueComponent.ɵcmp = ɵɵdefineComponent({ type: KerviValueComponent, selectors: [[\"kervi-value\"]], inputs: { value: \"value\", dashboardPanel: \"dashboardPanel\", linkParameters: \"linkParameters\", inline: \"inline\", dashboardSizes: \"dashboardSizes\" }, decls: 5, vars: 5, consts: [[3, \"value\", \"dashboardSizes\", \"linkParameters\", \"inline\", 4, \"ngIf\"], [3, \"dashboardSizes\", \"linkParameters\", \"inline\", \"value\", 4, \"ngIf\"], [3, \"value\", \"dashboardSizes\", \"linkParameters\", \"inline\"], [3, \"dashboardSizes\", \"linkParameters\", \"inline\", \"value\"]], template: function KerviValueComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵtemplate(0, KerviValueComponent_kervi_value_number_0_Template, 1, 4, \"kervi-value-number\", 0);\r\n        ɵɵtemplate(1, KerviValueComponent_kervi_value_boolean_1_Template, 1, 4, \"kervi-value-boolean\", 1);\r\n        ɵɵtemplate(2, KerviValueComponent_kervi_value_string_2_Template, 1, 4, \"kervi-value-string\", 1);\r\n        ɵɵtemplate(3, KerviValueComponent_kervi_value_color_3_Template, 1, 4, \"kervi-value-color\", 1);\r\n        ɵɵtemplate(4, KerviValueComponent_kervi_value_datetime_4_Template, 1, 4, \"kervi-value-datetime\", 1);\r\n    } if (rf & 2) {\r\n        ɵɵproperty(\"ngIf\", ctx.value.typeName == \"Number\");\r\n        ɵɵadvance(1);\r\n        ɵɵproperty(\"ngIf\", ctx.value.typeName == \"Boolean\");\r\n        ɵɵadvance(1);\r\n        ɵɵproperty(\"ngIf\", ctx.value.typeName == \"String\");\r\n        ɵɵadvance(1);\r\n        ɵɵproperty(\"ngIf\", ctx.value.typeName == \"Color\");\r\n        ɵɵadvance(1);\r\n        ɵɵproperty(\"ngIf\", ctx.value.typeName == \"DateTime\");\r\n    } }, directives: [NgIf, NumberComponent, BooleanComponent, StringComponent, ColorComponent$1, DateTimeComponent$1], styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviValueComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-value',\r\n                templateUrl: './kervi-value.component.html',\r\n                styleUrls: ['./kervi-value.component.scss']\r\n                //directives: [ CommonModule  ],\r\n            }]\r\n    }], function () { return []; }, { value: [{\r\n            type: Input\r\n        }], dashboardPanel: [{\r\n            type: Input\r\n        }], linkParameters: [{\r\n            type: Input\r\n        }], inline: [{\r\n            type: Input\r\n        }], dashboardSizes: [{\r\n            type: Input\r\n        }] }); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nfunction ActionComponent_kervi_switchbutton_0_Template(rf, ctx) { if (rf & 1) {\r\n    const _r3 = ɵɵgetCurrentView();\r\n    ɵɵelementStart(0, \"kervi-switchbutton\", 2);\r\n    ɵɵlistener(\"buttonState\", function ActionComponent_kervi_switchbutton_0_Template_kervi_switchbutton_buttonState_0_listener($event) { ɵɵrestoreView(_r3); const ctx_r2 = ɵɵnextContext(); return ctx_r2.setActionState($event); });\r\n    ɵɵpipe(1, \"async\");\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = ɵɵnextContext();\r\n    ɵɵproperty(\"dashboardSizes\", ctx_r0.dashboardSizes)(\"inline\", ctx_r0.inline)(\"value\", ɵɵpipeBind1(1, 4, ctx_r0.state))(\"linkParameters\", ctx_r0.linkParameters);\r\n} }\r\nfunction ActionComponent_kervi_button_1_Template(rf, ctx) { if (rf & 1) {\r\n    const _r5 = ɵɵgetCurrentView();\r\n    ɵɵelementStart(0, \"kervi-button\", 3);\r\n    ɵɵlistener(\"buttonState\", function ActionComponent_kervi_button_1_Template_kervi_button_buttonState_0_listener($event) { ɵɵrestoreView(_r5); const ctx_r4 = ɵɵnextContext(); return ctx_r4.setActionState($event); });\r\n    ɵɵpipe(1, \"async\");\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = ɵɵnextContext();\r\n    ɵɵproperty(\"title\", ctx_r1.action.name)(\"dashboardSizes\", ctx_r1.dashboardSizes)(\"value\", ɵɵpipeBind1(1, 5, ctx_r1.state))(\"inline\", ctx_r1.inline)(\"linkParameters\", ctx_r1.linkParameters);\r\n} }\r\n//import { TemplateService } from '../../template.service';\r\nclass ActionComponent extends KerviActionComponent {\r\n    constructor() {\r\n        super();\r\n    }\r\n    ngOnInit() {\r\n        this.ngOnInitAction();\r\n    }\r\n}\r\nActionComponent.ɵfac = function ActionComponent_Factory(t) { return new (t || ActionComponent)(); };\r\nActionComponent.ɵcmp = ɵɵdefineComponent({ type: ActionComponent, selectors: [[\"kervi-action\"]], features: [ɵɵInheritDefinitionFeature], decls: 2, vars: 2, consts: [[3, \"dashboardSizes\", \"inline\", \"value\", \"linkParameters\", \"buttonState\", 4, \"ngIf\"], [3, \"title\", \"dashboardSizes\", \"value\", \"inline\", \"linkParameters\", \"buttonState\", 4, \"ngIf\"], [3, \"dashboardSizes\", \"inline\", \"value\", \"linkParameters\", \"buttonState\"], [3, \"title\", \"dashboardSizes\", \"value\", \"inline\", \"linkParameters\", \"buttonState\"]], template: function ActionComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵtemplate(0, ActionComponent_kervi_switchbutton_0_Template, 2, 6, \"kervi-switchbutton\", 0);\r\n        ɵɵtemplate(1, ActionComponent_kervi_button_1_Template, 2, 7, \"kervi-button\", 1);\r\n    } if (rf & 2) {\r\n        ɵɵproperty(\"ngIf\", ctx.displayType != \"button\");\r\n        ɵɵadvance(1);\r\n        ɵɵproperty(\"ngIf\", ctx.displayType == \"button\");\r\n    } }, directives: [NgIf, SwitchButtonComponent, ButtonComponent], pipes: [AsyncPipe], styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(ActionComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-action',\r\n                templateUrl: './action.component.html',\r\n                styleUrls: ['./action.component.scss'],\r\n            }]\r\n    }], function () { return []; }, null); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass MPEGViewerComponent {\r\n    constructor(kerviService, domSanitizer) {\r\n        this.kerviService = kerviService;\r\n        this.domSanitizer = domSanitizer;\r\n        this.width = null;\r\n        this.height = null;\r\n        this.imageLoaded = new EventEmitter();\r\n        this.stream = null;\r\n        this.firstLoad = true;\r\n        this.fpsCounter = 0;\r\n        this.fpsTime = new Date();\r\n        this.streamSubscription = null;\r\n        this.fps = 0;\r\n    }\r\n    set cameraSource(id) {\r\n        console.log('set cam source', id);\r\n        this.setSource(id);\r\n    }\r\n    ;\r\n    ngOnInit() {\r\n        const self = this;\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.stream) {\r\n            this.streamSubscription.unsubscribe();\r\n            this.stream.close();\r\n        }\r\n    }\r\n    setSource(source) {\r\n        console.log(\"sc\", source);\r\n        const self = this;\r\n        if (this.stream) {\r\n            this.streamSubscription.unsubscribe();\r\n            this.stream.close();\r\n        }\r\n        this.stream = this.kerviService.GetStream(source, ['IMAGE_FRAME']);\r\n        console.log(\"scx\", this.stream);\r\n        this.streamSubscription = this.stream.events$.subscribe(function (event) {\r\n            //console.log('ce', event);\r\n            if (event) {\r\n                var blob = new Blob([event.data], { type: \"image/jpeg\" });\r\n                self.streamData = self.domSanitizer.bypassSecurityTrustUrl(URL.createObjectURL(blob));\r\n                self.fpsCounter += 1;\r\n                const now = new Date();\r\n                const fpsDiff = now.getTime() - self.fpsTime.getTime();\r\n                const seconds = fpsDiff / 1000;\r\n                if (seconds > 1) {\r\n                    self.fps = self.fpsCounter / seconds;\r\n                    //console.log('fps', self.fpsCounter, seconds, source, self.fps);\r\n                    self.fpsCounter = 0;\r\n                    self.fpsTime = now;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    imageReady() {\r\n        if (this.firstLoad) {\r\n            this.firstLoad = false;\r\n            this.imageLoaded.emit(true);\r\n        }\r\n    }\r\n}\r\nMPEGViewerComponent.ɵfac = function MPEGViewerComponent_Factory(t) { return new (t || MPEGViewerComponent)(ɵɵdirectiveInject(NGXKerviService), ɵɵdirectiveInject(DomSanitizer)); };\r\nMPEGViewerComponent.ɵcmp = ɵɵdefineComponent({ type: MPEGViewerComponent, selectors: [[\"kervi-mpeg-viewer\"]], inputs: { cameraSource: \"cameraSource\", width: \"width\", height: \"height\", streamData: \"streamData\", fps: \"fps\" }, outputs: { imageLoaded: \"imageLoaded\" }, decls: 1, vars: 5, consts: [[1, \"camImage\", 3, \"load\"]], template: function MPEGViewerComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵelementStart(0, \"img\", 0);\r\n        ɵɵlistener(\"load\", function MPEGViewerComponent_Template_img_load_0_listener() { return ctx.imageReady(); });\r\n        ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        ɵɵstyleProp(\"height\", ctx.height, \"%\")(\"width\", ctx.width, \"%\");\r\n        ɵɵattribute(\"src\", ctx.streamData, ɵɵsanitizeUrl);\r\n    } }, styles: [\"#video-viewer[_ngcontent-%COMP%]{margin-top:-20px}.cam-pad-area[_ngcontent-%COMP%]{color:#fff;display:inline-block;left:389px;position:absolute;top:132px;vertical-align:middle;width:200px;z-index:1200}\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(MPEGViewerComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-mpeg-viewer',\r\n                templateUrl: './mpeg-viewer.component.html',\r\n                styleUrls: ['./mpeg-viewer.component.scss']\r\n            }]\r\n    }], function () { return [{ type: NGXKerviService }, { type: DomSanitizer }]; }, { cameraSource: [{\r\n            type: Input\r\n        }], width: [{\r\n            type: Input\r\n        }], height: [{\r\n            type: Input\r\n        }], imageLoaded: [{\r\n            type: Output\r\n        }], streamData: [{\r\n            type: Input\r\n        }], fps: [{\r\n            type: Input\r\n        }] }); })();\n\nconst _c0$1 = [\"nipplePad\"];\r\n//declare var nipplejs: any;\r\nclass NipplePadComponent {\r\n    constructor() {\r\n        this.mode = 'semi';\r\n        this.XMin = 0;\r\n        this.XMax = 0;\r\n        this.YMin = 0;\r\n        this.YMax = 0;\r\n        this.moveDelayTimer = null;\r\n    }\r\n    ngOnInit() {\r\n    }\r\n    ngAfterViewInit() {\r\n        const self = this;\r\n        this.XMax = this.XValue != null ? this.XValue.maxValue : 0;\r\n        this.XMin = this.XValue != null ? this.XValue.minValue : 0;\r\n        this.YMax = this.YValue != null ? this.YValue.maxValue : 0;\r\n        this.YMin = this.XValue != null ? this.YValue.minValue : 0;\r\n        console.log('np', this.nipplePad, this.nipplePad.nativeElement);\r\n        this.manager = create({\r\n            zone: this.nipplePad.nativeElement,\r\n            position: { left: '50%', top: '50%' },\r\n            mode: 'semi',\r\n            restJoystick: this.autoCenter\r\n        });\r\n        this.manager.on('start', (evt, nipple) => {\r\n            console.log('np start', nipple);\r\n        });\r\n        this.manager.on('move', (evt, nipple) => {\r\n            console.log('np move', nipple);\r\n            const x = nipple.vector.x;\r\n            const y = nipple.vector.y;\r\n            if (self.moveDelayTimer) {\r\n                clearTimeout(self.moveDelayTimer);\r\n            }\r\n            self.moveDelayTimer = setTimeout(function () {\r\n                if (self.XValue) {\r\n                    let valueX = 0;\r\n                    if (x < 0) {\r\n                        valueX = self.XMin * x;\r\n                    }\r\n                    else if (x > 0) {\r\n                        valueX = self.XMax * x;\r\n                    }\r\n                    self.XValue.set(valueX);\r\n                }\r\n                if (self.YValue) {\r\n                    let valueY = 0;\r\n                    if (y < 0) {\r\n                        valueY = self.YMin * y;\r\n                    }\r\n                    else if (y > 0) {\r\n                        valueY = self.YMax * y;\r\n                    }\r\n                    self.YValue.set(valueY);\r\n                }\r\n            }, 0);\r\n        });\r\n        this.manager.on('end', (evt, nipple) => {\r\n            console.log('np end', nipple);\r\n            if (self.autoCenter) {\r\n                if (self.XValue) {\r\n                    self.XValue.set(0);\r\n                }\r\n                if (self.YValue) {\r\n                    self.YValue.set(0);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nNipplePadComponent.ɵfac = function NipplePadComponent_Factory(t) { return new (t || NipplePadComponent)(); };\r\nNipplePadComponent.ɵcmp = ɵɵdefineComponent({ type: NipplePadComponent, selectors: [[\"kervi-nipple-pad\"]], viewQuery: function NipplePadComponent_Query(rf, ctx) { if (rf & 1) {\r\n        ɵɵviewQuery(_c0$1, true);\r\n    } if (rf & 2) {\r\n        var _t;\r\n        ɵɵqueryRefresh(_t = ɵɵloadQuery()) && (ctx.nipplePad = _t.first);\r\n    } }, inputs: { XValue: \"XValue\", YValue: \"YValue\", autoCenter: \"autoCenter\", mode: \"mode\" }, decls: 2, vars: 0, consts: [[1, \"nipple-pad\", 2, \"width\", \"100%\", \"height\", \"100%\", \"position\", \"relative\"], [\"nipplePad\", \"\"]], template: function NipplePadComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵelement(0, \"div\", 0, 1);\r\n    } }, styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(NipplePadComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-nipple-pad',\r\n                templateUrl: './nipple-pad.component.html',\r\n                styleUrls: ['./nipple-pad.component.css']\r\n            }]\r\n    }], function () { return []; }, { XValue: [{\r\n            type: Input\r\n        }], YValue: [{\r\n            type: Input\r\n        }], autoCenter: [{\r\n            type: Input\r\n        }], mode: [{\r\n            type: Input\r\n        }], nipplePad: [{\r\n            type: ViewChild,\r\n            args: ['nipplePad']\r\n        }] }); })();\n\nconst _c0$2 = [\"videoViewer\"];\r\nfunction CamViewerComponent_ng_container_0_div_3_button_3_Template(rf, ctx) { if (rf & 1) {\r\n    const _r9 = ɵɵgetCurrentView();\r\n    ɵɵelementStart(0, \"button\", 12);\r\n    ɵɵlistener(\"click\", function CamViewerComponent_ng_container_0_div_3_button_3_Template_button_click_0_listener() { ɵɵrestoreView(_r9); const observer_r7 = ctx.$implicit; const ctx_r8 = ɵɵnextContext(3); return ctx_r8.changeSource(observer_r7.ui.stream); });\r\n    ɵɵtext(1);\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const observer_r7 = ctx.$implicit;\r\n    ɵɵadvance(1);\r\n    ɵɵtextInterpolate1(\" \", observer_r7.name, \"\");\r\n} }\r\nfunction CamViewerComponent_ng_container_0_div_3_Template(rf, ctx) { if (rf & 1) {\r\n    const _r11 = ɵɵgetCurrentView();\r\n    ɵɵelementStart(0, \"div\", 11);\r\n    ɵɵelementStart(1, \"button\", 12);\r\n    ɵɵlistener(\"click\", function CamViewerComponent_ng_container_0_div_3_Template_button_click_1_listener() { ɵɵrestoreView(_r11); const ctx_r10 = ɵɵnextContext(2); return ctx_r10.changeSource(ctx_r10.cameraSource); });\r\n    ɵɵtext(2, \"base\");\r\n    ɵɵelementEnd();\r\n    ɵɵtemplate(3, CamViewerComponent_ng_container_0_div_3_button_3_Template, 2, 1, \"button\", 13);\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r3 = ɵɵnextContext(2);\r\n    ɵɵadvance(3);\r\n    ɵɵproperty(\"ngForOf\", ctx_r3.streamObservers);\r\n} }\r\nfunction CamViewerComponent_ng_container_0_div_8_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementStart(0, \"div\", 14);\r\n    ɵɵelement(1, \"kervi-nipple-pad\", 15);\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r4 = ɵɵnextContext(2);\r\n    ɵɵstyleProp(\"left\", 33, \"%\")(\"top\", 0, \"px\")(\"bottom\", 0, \"px\")(\"right\", 33, \"%\");\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"XValue\", ctx_r4.pan)(\"YValue\", ctx_r4.tilt);\r\n} }\r\nfunction CamViewerComponent_ng_container_0_ng_container_10_kervi_action_1_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelement(0, \"kervi-action\", 17);\r\n    ɵɵpipe(1, \"translate\");\r\n} if (rf & 2) {\r\n    const action_r12 = ɵɵnextContext().$implicit;\r\n    ɵɵpropertyInterpolate(\"title\", ɵɵpipeBind1(1, 2, action_r12.name));\r\n    ɵɵproperty(\"action\", action_r12);\r\n} }\r\nfunction CamViewerComponent_ng_container_0_ng_container_10_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementContainerStart(0);\r\n    ɵɵtemplate(1, CamViewerComponent_ng_container_0_ng_container_10_kervi_action_1_Template, 2, 4, \"kervi-action\", 16);\r\n    ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const action_r12 = ctx.$implicit;\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngIf\", action_r12.visible);\r\n} }\r\nfunction CamViewerComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\r\n    const _r16 = ɵɵgetCurrentView();\r\n    ɵɵelementContainerStart(0);\r\n    ɵɵelementStart(1, \"div\", 1, 2);\r\n    ɵɵtemplate(3, CamViewerComponent_ng_container_0_div_3_Template, 4, 1, \"div\", 3);\r\n    ɵɵelementStart(4, \"span\", 4);\r\n    ɵɵelementStart(5, \"kervi-mpeg-viewer\", 5);\r\n    ɵɵlistener(\"imageLoaded\", function CamViewerComponent_ng_container_0_Template_kervi_mpeg_viewer_imageLoaded_5_listener() { ɵɵrestoreView(_r16); const ctx_r15 = ɵɵnextContext(); return ctx_r15.imageLoaded(); });\r\n    ɵɵelementEnd();\r\n    ɵɵelementEnd();\r\n    ɵɵelement(6, \"canvas\", 6);\r\n    ɵɵelement(7, \"canvas\", 7);\r\n    ɵɵtemplate(8, CamViewerComponent_ng_container_0_div_8_Template, 2, 10, \"div\", 8);\r\n    ɵɵelementStart(9, \"div\", 9);\r\n    ɵɵtemplate(10, CamViewerComponent_ng_container_0_ng_container_10_Template, 2, 1, \"ng-container\", 10);\r\n    ɵɵelementEnd();\r\n    ɵɵelementEnd();\r\n    ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = ɵɵnextContext();\r\n    ɵɵadvance(1);\r\n    ɵɵstyleProp(\"height\", ctx_r0.camHeight, \"px\")(\"width\", ctx_r0.camWidth, \"px\");\r\n    ɵɵadvance(2);\r\n    ɵɵproperty(\"ngIf\", ctx_r0.streamObservers.length > 0);\r\n    ɵɵadvance(2);\r\n    ɵɵproperty(\"height\", 100)(\"cameraSource\", ctx_r0.selectedSource);\r\n    ɵɵadvance(1);\r\n    ɵɵstyleProp(\"height\", ctx_r0.camHeight, \"px\")(\"width\", ctx_r0.camWidth, \"px\");\r\n    ɵɵadvance(2);\r\n    ɵɵproperty(\"ngIf\", ctx_r0.showCamPad);\r\n    ɵɵadvance(2);\r\n    ɵɵproperty(\"ngForOf\", ctx_r0.camera.actions);\r\n} }\r\nfunction CamViewerComponent_ng_container_1_div_7_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementStart(0, \"div\", 23);\r\n    ɵɵelement(1, \"kervi-nipple-pad\", 24);\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r18 = ɵɵnextContext(2);\r\n    ɵɵstyleProp(\"left\", 0, \"px\")(\"top\", 0, \"px\")(\"bottom\", 0, \"px\")(\"right\", 0, \"px\");\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"XValue\", ctx_r18.pan)(\"YValue\", ctx_r18.tilt)(\"mode\", \"static\");\r\n} }\r\nfunction CamViewerComponent_ng_container_1_ng_container_9_kervi_action_1_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelement(0, \"kervi-action\", 17);\r\n    ɵɵpipe(1, \"translate\");\r\n} if (rf & 2) {\r\n    const action_r20 = ɵɵnextContext().$implicit;\r\n    ɵɵpropertyInterpolate(\"title\", ɵɵpipeBind1(1, 2, action_r20.name));\r\n    ɵɵproperty(\"action\", action_r20);\r\n} }\r\nfunction CamViewerComponent_ng_container_1_ng_container_9_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementContainerStart(0);\r\n    ɵɵtemplate(1, CamViewerComponent_ng_container_1_ng_container_9_kervi_action_1_Template, 2, 4, \"kervi-action\", 16);\r\n    ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const action_r20 = ctx.$implicit;\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngIf\", action_r20.ui.visible);\r\n} }\r\nfunction CamViewerComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {\r\n    const _r24 = ɵɵgetCurrentView();\r\n    ɵɵelementContainerStart(0);\r\n    ɵɵelementStart(1, \"div\", 18, 2);\r\n    ɵɵelementStart(3, \"span\", 19);\r\n    ɵɵelementStart(4, \"kervi-mpeg-viewer\", 20);\r\n    ɵɵlistener(\"imageLoaded\", function CamViewerComponent_ng_container_1_Template_kervi_mpeg_viewer_imageLoaded_4_listener() { ɵɵrestoreView(_r24); const ctx_r23 = ɵɵnextContext(); return ctx_r23.imageLoaded(); });\r\n    ɵɵelementEnd();\r\n    ɵɵelementEnd();\r\n    ɵɵelement(5, \"canvas\", 21);\r\n    ɵɵelement(6, \"canvas\", 7);\r\n    ɵɵtemplate(7, CamViewerComponent_ng_container_1_div_7_Template, 2, 11, \"div\", 22);\r\n    ɵɵelementEnd();\r\n    ɵɵelementStart(8, \"div\");\r\n    ɵɵtemplate(9, CamViewerComponent_ng_container_1_ng_container_9_Template, 2, 1, \"ng-container\", 10);\r\n    ɵɵelementEnd();\r\n    ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = ɵɵnextContext();\r\n    ɵɵadvance(4);\r\n    ɵɵproperty(\"width\", 100)(\"cameraSource\", ctx_r1.cameraSource);\r\n    ɵɵadvance(3);\r\n    ɵɵproperty(\"ngIf\", ctx_r1.showCamPad);\r\n    ɵɵadvance(2);\r\n    ɵɵproperty(\"ngForOf\", ctx_r1.camera.actions);\r\n} }\r\nclass CamViewerComponent extends KerviCameraComponent {\r\n    constructor(elementRef) {\r\n        super();\r\n        this.elementRef = elementRef;\r\n        this.showCamPad = false;\r\n        this.padSize = 180;\r\n    }\r\n    imageLoaded() {\r\n    }\r\n    ngAfterViewInit() {\r\n        const self = this;\r\n        if (this.camera !== null) {\r\n            const element = self.videoViewer.nativeElement;\r\n            const viewPortHeight = window.innerHeight;\r\n            const viewPortWidth = window.innerWidth;\r\n            this.camHeight = viewPortHeight - 65;\r\n            this.camWidth = viewPortWidth;\r\n            console.log('avic', this.camHeight, this.camWidth);\r\n            setTimeout(() => {\r\n                const h = element.offsetHeight;\r\n                const w = element.offsetWidth;\r\n                if (w < self.padSize) {\r\n                    self.padSize = w - 10;\r\n                }\r\n                console.log('cami', h, w, self.padSize, element);\r\n                self.camPadTop = h / 2 - (self.padSize / 2);\r\n                self.camPadLeft = w / 2 - (self.padSize / 2);\r\n                self.showCamPad = true;\r\n            }, 0);\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.ngOnInitCamera();\r\n    }\r\n}\r\nCamViewerComponent.ɵfac = function CamViewerComponent_Factory(t) { return new (t || CamViewerComponent)(ɵɵdirectiveInject(ElementRef)); };\r\nCamViewerComponent.ɵcmp = ɵɵdefineComponent({ type: CamViewerComponent, selectors: [[\"kervi-cam-viewer\"]], viewQuery: function CamViewerComponent_Query(rf, ctx) { if (rf & 1) {\r\n        ɵɵviewQuery(_c0$2, true);\r\n    } if (rf & 2) {\r\n        var _t;\r\n        ɵɵqueryRefresh(_t = ɵɵloadQuery()) && (ctx.videoViewer = _t.first);\r\n    } }, features: [ɵɵInheritDefinitionFeature], decls: 2, vars: 2, consts: [[4, \"ngIf\"], [\"id\", \"video-viewer\", 1, \"video\", \"video-background\", 2, \"text-align\", \"center\", \"position\", \"fixed\", \"top\", \"60px\", \"left\", \"0px\", \"height\", \"100%\"], [\"videoViewer\", \"\"], [\"style\", \"position:fixed;z-index:3000\", 4, \"ngIf\"], [1, \"camImage\", 2, \"top\", \"0px\", \"left\", \"0px\"], [3, \"height\", \"cameraSource\", \"imageLoaded\"], [\"id\", \"camCanvas\", 2, \"position\", \"absolute\", \"top\", \"0px\", \"left\", \"0px\"], [\"id\", \"poiCanvas\", 2, \"position\", \"absolute\", \"top\", \"0px\", \"left\", \"0px\", \"width\", \"100%\", \"height\", \"100%\"], [\"class\", \"cam-pad-area\", \"style\", \"position:absolute;z-index: 2000\", 3, \"left\", \"top\", \"bottom\", \"right\", 4, \"ngIf\"], [2, \"position\", \"absolute\", \"top\", \"30px\", \"left\", \"0px\", \"width\", \"100%\", \"height\", \"50px\"], [4, \"ngFor\", \"ngForOf\"], [2, \"position\", \"fixed\", \"z-index\", \"3000\"], [3, \"click\"], [3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"cam-pad-area\", 2, \"position\", \"absolute\", \"z-index\", \"2000\"], [3, \"XValue\", \"YValue\"], [3, \"title\", \"action\", 4, \"ngIf\"], [3, \"title\", \"action\"], [\"id\", \"video-viewer\", 1, \"video\", 2, \"overflow\", \"hidden\", \"position\", \"relative\", \"width\", \"100%\"], [1, \"camImage\", 2, \"top\", \"0px\", \"left\", \"0px\", \"height\", \"100%\", \"width\", \"100%\"], [3, \"width\", \"cameraSource\", \"imageLoaded\"], [\"id\", \"camCanvas\", 2, \"position\", \"absolute\", \"top\", \"0px\", \"left\", \"0px\", \"width\", \"100%\", \"height\", \"100%\"], [\"class\", \"cam-pad-area\", \"style\", \"position:absolute\", 3, \"left\", \"top\", \"bottom\", \"right\", 4, \"ngIf\"], [1, \"cam-pad-area\", 2, \"position\", \"absolute\"], [3, \"XValue\", \"YValue\", \"mode\"]], template: function CamViewerComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵtemplate(0, CamViewerComponent_ng_container_0_Template, 11, 13, \"ng-container\", 0);\r\n        ɵɵtemplate(1, CamViewerComponent_ng_container_1_Template, 10, 4, \"ng-container\", 0);\r\n    } if (rf & 2) {\r\n        ɵɵproperty(\"ngIf\", ctx.isBackground && ctx.camera !== null);\r\n        ɵɵadvance(1);\r\n        ɵɵproperty(\"ngIf\", !ctx.isBackground && ctx.camera !== null);\r\n    } }, directives: [NgIf, MPEGViewerComponent, NgForOf, NipplePadComponent, ActionComponent], pipes: [TranslatePipe], styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(CamViewerComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-cam-viewer',\r\n                templateUrl: './cam-viewer.component.html',\r\n                styleUrls: ['./cam-viewer.component.css']\r\n            }]\r\n    }], function () { return [{ type: ElementRef }]; }, { videoViewer: [{\r\n            type: ViewChild,\r\n            args: ['videoViewer']\r\n        }] }); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nconst _c0$3 = [\"chart\"];\r\nclass GaugeComponent {\r\n    constructor(kerviService, templateService) {\r\n        this.kerviService = kerviService;\r\n        this.templateService = templateService;\r\n        this.value = null;\r\n        this.linkParameters = null;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.series = [];\r\n    }\r\n    createElement() {\r\n        this.series = [this.value.value];\r\n        this.options = {\r\n            chart: {\r\n                type: 'radialBar',\r\n                height: this.linkParameters.gaugeSize\r\n            },\r\n            plotOptions: {\r\n                radialBar: {\r\n                    startAngle: -135,\r\n                    endAngle: 135,\r\n                    hollow: {\r\n                        size: '70%',\r\n                    },\r\n                    track: {\r\n                        startAngle: -135,\r\n                        endAngle: 135,\r\n                    },\r\n                    dataLabels: {\r\n                        name: {\r\n                            show: true,\r\n                            color: this.color(\"color\", \".kervi-gauge-text\"),\r\n                            fontSize: \"14px\"\r\n                        },\r\n                        value: {\r\n                            fontSize: \"24px\",\r\n                            color: this.color(\"color\", \".kervi-gauge-text\"),\r\n                            show: true\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            colors: [this.color(\"color\", \".kervi-gauge\")],\r\n            series: this.series,\r\n            stroke: {\r\n                lineCap: \"round\"\r\n            },\r\n            labels: [this.value.name],\r\n        };\r\n        if (this.chartObj) {\r\n            this.chartObj.destroy();\r\n        }\r\n        console.log(\"create gauge\", this.value.id);\r\n        this.chartObj = new ApexCharts(this.chartElement.nativeElement, this.options);\r\n        this.chartObj.render();\r\n    }\r\n    render() {\r\n        return this.chartObj.render();\r\n    }\r\n    color(style, selector) {\r\n        return this.templateService.getColor(style, selector);\r\n    }\r\n    ngOnInit() {\r\n        var self = this;\r\n        asapScheduler.schedule(() => {\r\n            this.createElement();\r\n        });\r\n        this.value.value$.subscribe(function (v) {\r\n            if (self.chartObj && v) {\r\n                // console.log(\"gv\", v);\r\n                self.chartObj.updateSeries([v]);\r\n            }\r\n        });\r\n    }\r\n    loadPeriod() {\r\n        var self = this;\r\n        //console.log(\"lp\", this.periodStart, this.periodEnd);\r\n        //this.kerviService.spine.sendQuery(\"getSensorData\", this.value.id, this.periodStart.toISOString(), this.periodEnd.toISOString(), function (results) {\r\n        //console.log(\"gsd\", results);\r\n        //var sensorData = results;\r\n        //self.chartData.length = 0;\r\n        //for (var i = 0; (i < sensorData.length); i++) {\r\n        //var dataItem = sensorData[i]\r\n        //self.chartData.push({ x: new Date(dataItem.ts + \" utc\"), y: dataItem.value });\r\n        //}\r\n        //self.chart.render();\r\n        //self.chart.update();\r\n        //});\r\n    }\r\n    cleanData() {\r\n        // if(this.updateChart){\r\n        //   var doClean = true;\r\n        //   var limitTS = this.getPeriodLimit();\r\n        //   var ds = this.chart.data.datasets[0].data\r\n        //   while ( ds.length>0 && doClean){\r\n        //     if (ds[0].x < limitTS)\r\n        //       ds.shift();\r\n        //     else\r\n        //       doClean = false\r\n        //   }\r\n        // }\r\n    }\r\n}\r\nGaugeComponent.ɵfac = function GaugeComponent_Factory(t) { return new (t || GaugeComponent)(ɵɵdirectiveInject(NGXKerviService), ɵɵdirectiveInject(KerviTemplateService)); };\r\nGaugeComponent.ɵcmp = ɵɵdefineComponent({ type: GaugeComponent, selectors: [[\"kervi-gauge\"]], viewQuery: function GaugeComponent_Query(rf, ctx) { if (rf & 1) {\r\n        ɵɵviewQuery(_c0$3, true);\r\n    } if (rf & 2) {\r\n        var _t;\r\n        ɵɵqueryRefresh(_t = ɵɵloadQuery()) && (ctx.chartElement = _t.first);\r\n    } }, inputs: { value: \"value\", linkParameters: \"linkParameters\", type: \"type\", size: \"size\", dashboardSizes: \"dashboardSizes\" }, decls: 2, vars: 0, consts: [[\"chart\", \"\"]], template: function GaugeComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵelement(0, \"div\", null, 0);\r\n    } }, styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(GaugeComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-gauge',\r\n                templateUrl: './gauge.component.html',\r\n                styleUrls: ['./gauge.component.scss'],\r\n            }]\r\n    }], function () { return [{ type: NGXKerviService }, { type: KerviTemplateService }]; }, { value: [{\r\n            type: Input\r\n        }], linkParameters: [{\r\n            type: Input\r\n        }], type: [{\r\n            type: Input\r\n        }], size: [{\r\n            type: Input\r\n        }], dashboardSizes: [{\r\n            type: Input\r\n        }], chartElement: [{\r\n            type: ViewChild,\r\n            args: ['chart']\r\n        }] }); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nconst _c0$4 = [\"chart\"];\r\nclass KerviChartComponent {\r\n    constructor(kerviService, templateService) {\r\n        this.kerviService = kerviService;\r\n        this.templateService = templateService;\r\n        this.value = null;\r\n        this.linkParameters = null;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.series = [];\r\n    }\r\n    createElement() {\r\n        this.series = [\r\n            {\r\n                name: this.value.name,\r\n                data: []\r\n            }\r\n        ];\r\n        this.options = {\r\n            chart: {\r\n                id: \"chart_\" + this.value.id,\r\n                width: \"100%\",\r\n                height: 300,\r\n                type: this.linkParameters.chartType,\r\n                animations: {\r\n                    enabled: true,\r\n                    easing: 'linear',\r\n                    dynamicAnimation: {\r\n                        speed: 100\r\n                    }\r\n                },\r\n                toolbar: {\r\n                    show: false,\r\n                    tools: {\r\n                        download: true,\r\n                        selection: true,\r\n                        zoom: true,\r\n                        zoomin: true,\r\n                        zoomout: true,\r\n                        pan: true,\r\n                        reset: true,\r\n                        customIcons: []\r\n                    },\r\n                    autoSelected: 'zoom'\r\n                },\r\n                zoom: {\r\n                    enabled: true\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                curve: 'smooth',\r\n                width: 1\r\n            },\r\n            title: {\r\n                text: this.linkParameters.chartTitle,\r\n                align: 'left',\r\n                style: {\r\n                    color: this.color(\"color\", \".kervi-chart-axis\") //\"#6c757d \",\r\n                }\r\n            },\r\n            markers: {\r\n                size: 0\r\n            },\r\n            xaxis: {\r\n                type: 'datetime',\r\n                labels: {\r\n                    style: {\r\n                        colors: this.color(\"color\", \".kervi-chart-axis\") //\"#6c757d \",\r\n                    }\r\n                },\r\n                axisBorder: {\r\n                    show: true,\r\n                    color: this.color(\"color\", \".kervi-chart-axis\"),\r\n                    height: 1,\r\n                    width: '100%',\r\n                    offsetX: 0,\r\n                    offsetY: 0\r\n                }\r\n                //range: 1552983230 - 300,\r\n            },\r\n            yaxis: {\r\n                max: this.value.maxValue,\r\n                min: this.value.minValue,\r\n                labels: {\r\n                    style: {\r\n                        colors: this.color(\"color\", \".kervi-chart-axis\"),\r\n                    }\r\n                },\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            grid: {\r\n                show: this.linkParameters.chartGrid,\r\n                borderColor: this.color(\"color\", \".kervi-chart-grid\"),\r\n                xaxis: {\r\n                    lines: {\r\n                        show: true,\r\n                        animate: true\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true,\r\n                        animate: true\r\n                    }\r\n                }\r\n            },\r\n            colors: [this.color(\"color\", \".kervi-chart-line\")],\r\n            series: this.series\r\n        };\r\n        if (this.chartObj) {\r\n            this.chartObj.destroy();\r\n        }\r\n        if (!this.linkParameters.chartTitle)\r\n            delete (this.options[\"title\"]);\r\n        console.log(\"create chart\", this.value.id);\r\n        this.chartObj = new ApexCharts(this.chartElement.nativeElement, this.options);\r\n        this.chartObj.render();\r\n    }\r\n    color(style, selector) {\r\n        return this.templateService.getColor(style, selector);\r\n    }\r\n    ngOnInit() {\r\n        var self = this;\r\n        asapScheduler.schedule(() => {\r\n            this.createElement();\r\n        });\r\n        this.value.value$.subscribe(function (v) {\r\n            if (self.chartObj) {\r\n                self.series[0].data.push([self.value.valueTS.getTime(), v]);\r\n                self.chartObj.updateSeries(self.series);\r\n            }\r\n        });\r\n    }\r\n    loadPeriod() {\r\n        var self = this;\r\n        //console.log(\"lp\", this.periodStart, this.periodEnd);\r\n        //this.kerviService.spine.sendQuery(\"getSensorData\", this.value.id, this.periodStart.toISOString(), this.periodEnd.toISOString(), function (results) {\r\n        //console.log(\"gsd\", results);\r\n        //var sensorData = results;\r\n        //self.chartData.length = 0;\r\n        //for (var i = 0; (i < sensorData.length); i++) {\r\n        //var dataItem = sensorData[i]\r\n        //self.chartData.push({ x: new Date(dataItem.ts + \" utc\"), y: dataItem.value });\r\n        //}\r\n        //self.chart.render();\r\n        //self.chart.update();\r\n        //});\r\n    }\r\n    cleanData() {\r\n        // if(this.updateChart){\r\n        //   var doClean = true;\r\n        //   var limitTS = this.getPeriodLimit();\r\n        //   var ds = this.chart.data.datasets[0].data\r\n        //   while ( ds.length>0 && doClean){\r\n        //     if (ds[0].x < limitTS)\r\n        //       ds.shift();\r\n        //     else\r\n        //       doClean = false\r\n        //   }\r\n        // }\r\n    }\r\n}\r\nKerviChartComponent.ɵfac = function KerviChartComponent_Factory(t) { return new (t || KerviChartComponent)(ɵɵdirectiveInject(NGXKerviService), ɵɵdirectiveInject(KerviTemplateService)); };\r\nKerviChartComponent.ɵcmp = ɵɵdefineComponent({ type: KerviChartComponent, selectors: [[\"kervi-chart\"]], viewQuery: function KerviChartComponent_Query(rf, ctx) { if (rf & 1) {\r\n        ɵɵviewQuery(_c0$4, true);\r\n    } if (rf & 2) {\r\n        var _t;\r\n        ɵɵqueryRefresh(_t = ɵɵloadQuery()) && (ctx.chartElement = _t.first);\r\n    } }, inputs: { value: \"value\", linkParameters: \"linkParameters\", type: \"type\", size: \"size\", dashboardSizes: \"dashboardSizes\" }, decls: 2, vars: 0, consts: [[\"chart\", \"\"]], template: function KerviChartComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵelement(0, \"div\", null, 0);\r\n    } }, styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviChartComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-chart',\r\n                templateUrl: './chart.component.html',\r\n                styleUrls: ['./chart.component.scss'],\r\n            }]\r\n    }], function () { return [{ type: NGXKerviService }, { type: KerviTemplateService }]; }, { value: [{\r\n            type: Input\r\n        }], linkParameters: [{\r\n            type: Input\r\n        }], type: [{\r\n            type: Input\r\n        }], size: [{\r\n            type: Input\r\n        }], dashboardSizes: [{\r\n            type: Input\r\n        }], chartElement: [{\r\n            type: ViewChild,\r\n            args: ['chart']\r\n        }] }); })();\n\nfunction WidgetComponent_ng_container_0_div_1_span_2_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelement(0, \"span\");\r\n} if (rf & 2) {\r\n    const ctx_r6 = ɵɵnextContext(3);\r\n    ɵɵclassMapInterpolate1(\"pi pi-\", ctx_r6.linkParameters.labelIcon, \"\");\r\n} }\r\nfunction WidgetComponent_ng_container_0_div_1_span_3_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementStart(0, \"span\");\r\n    ɵɵtext(1);\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r7 = ɵɵnextContext(3);\r\n    ɵɵadvance(1);\r\n    ɵɵtextInterpolate(ctx_r7.linkParameters.label);\r\n} }\r\nfunction WidgetComponent_ng_container_0_div_1_kervi_value_5_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelement(0, \"kervi-value\", 11);\r\n} if (rf & 2) {\r\n    const ctx_r8 = ɵɵnextContext(3);\r\n    ɵɵproperty(\"value\", ctx_r8.component)(\"inline\", false)(\"dashboardSizes\", ctx_r8.dashboardSizes)(\"linkParameters\", ctx_r8.linkParameters);\r\n} }\r\nfunction WidgetComponent_ng_container_0_div_1_kervi_action_6_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelement(0, \"kervi-action\", 12);\r\n} if (rf & 2) {\r\n    const ctx_r9 = ɵɵnextContext(3);\r\n    ɵɵproperty(\"action\", ctx_r9.component)(\"inline\", false)(\"dashboardSizes\", ctx_r9.dashboardSizes)(\"linkParameters\", ctx_r9.linkParameters);\r\n} }\r\nfunction WidgetComponent_ng_container_0_div_1_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementStart(0, \"div\", 5);\r\n    ɵɵelementStart(1, \"div\", 6);\r\n    ɵɵtemplate(2, WidgetComponent_ng_container_0_div_1_span_2_Template, 1, 3, \"span\", 7);\r\n    ɵɵtemplate(3, WidgetComponent_ng_container_0_div_1_span_3_Template, 2, 1, \"span\", 0);\r\n    ɵɵelementEnd();\r\n    ɵɵelementStart(4, \"div\", 8);\r\n    ɵɵtemplate(5, WidgetComponent_ng_container_0_div_1_kervi_value_5_Template, 1, 4, \"kervi-value\", 9);\r\n    ɵɵtemplate(6, WidgetComponent_ng_container_0_div_1_kervi_action_6_Template, 1, 4, \"kervi-action\", 10);\r\n    ɵɵelementEnd();\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r4 = ɵɵnextContext(2);\r\n    ɵɵadvance(2);\r\n    ɵɵproperty(\"ngIf\", ctx_r4.linkParameters.labelIcon);\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngIf\", ctx_r4.linkParameters.label);\r\n    ɵɵadvance(2);\r\n    ɵɵproperty(\"ngIf\", ctx_r4.component.componentType == \"KerviValue\");\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngIf\", ctx_r4.component.componentType == \"action\");\r\n} }\r\nfunction WidgetComponent_ng_container_0_div_2_span_2_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelement(0, \"span\", 18);\r\n} if (rf & 2) {\r\n    const ctx_r10 = ɵɵnextContext(3);\r\n    ɵɵclassMapInterpolate1(\"fa fa-\", ctx_r10.linkParameters.labelIcon, \"\");\r\n} }\r\nfunction WidgetComponent_ng_container_0_div_2_span_3_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementStart(0, \"span\", 18);\r\n    ɵɵtext(1);\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r11 = ɵɵnextContext(3);\r\n    ɵɵadvance(1);\r\n    ɵɵtextInterpolate(ctx_r11.linkParameters.label);\r\n} }\r\nfunction WidgetComponent_ng_container_0_div_2_kervi_value_5_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelement(0, \"kervi-value\", 11);\r\n} if (rf & 2) {\r\n    const ctx_r12 = ɵɵnextContext(3);\r\n    ɵɵproperty(\"value\", ctx_r12.component)(\"inline\", false)(\"dashboardSizes\", ctx_r12.dashboardSizes)(\"linkParameters\", ctx_r12.linkParameters);\r\n} }\r\nfunction WidgetComponent_ng_container_0_div_2_kervi_action_6_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelement(0, \"kervi-action\", 12);\r\n} if (rf & 2) {\r\n    const ctx_r13 = ɵɵnextContext(3);\r\n    ɵɵproperty(\"action\", ctx_r13.component)(\"inline\", false)(\"dashboardSizes\", ctx_r13.dashboardSizes)(\"linkParameters\", ctx_r13.linkParameters);\r\n} }\r\nfunction WidgetComponent_ng_container_0_div_2_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementStart(0, \"div\", 13);\r\n    ɵɵelementStart(1, \"div\", 14);\r\n    ɵɵtemplate(2, WidgetComponent_ng_container_0_div_2_span_2_Template, 1, 3, \"span\", 15);\r\n    ɵɵtemplate(3, WidgetComponent_ng_container_0_div_2_span_3_Template, 2, 1, \"span\", 16);\r\n    ɵɵelementEnd();\r\n    ɵɵelementStart(4, \"div\", 17);\r\n    ɵɵtemplate(5, WidgetComponent_ng_container_0_div_2_kervi_value_5_Template, 1, 4, \"kervi-value\", 9);\r\n    ɵɵtemplate(6, WidgetComponent_ng_container_0_div_2_kervi_action_6_Template, 1, 4, \"kervi-action\", 10);\r\n    ɵɵelementEnd();\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r5 = ɵɵnextContext(2);\r\n    ɵɵadvance(2);\r\n    ɵɵproperty(\"ngIf\", ctx_r5.linkParameters.labelIcon);\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngIf\", ctx_r5.linkParameters.label);\r\n    ɵɵadvance(2);\r\n    ɵɵproperty(\"ngIf\", ctx_r5.component.componentType == \"KerviValue\");\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngIf\", ctx_r5.component.componentType == \"action\");\r\n} }\r\nfunction WidgetComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementContainerStart(0);\r\n    ɵɵtemplate(1, WidgetComponent_ng_container_0_div_1_Template, 7, 4, \"div\", 3);\r\n    ɵɵtemplate(2, WidgetComponent_ng_container_0_div_2_Template, 7, 4, \"div\", 4);\r\n    ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = ɵɵnextContext();\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngIf\", !ctx_r0.inline);\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngIf\", ctx_r0.inline);\r\n} }\r\nfunction WidgetComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementContainerStart(0, 19);\r\n    ɵɵelement(1, \"kervi-cam-viewer\", 20);\r\n    ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = ɵɵnextContext();\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"isBackground\", false)(\"camera\", ctx_r1.component)(\"linkParameters\", ctx_r1.linkParameters);\r\n} }\r\nfunction WidgetComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementContainerStart(0, 19);\r\n    ɵɵelement(1, \"kervi-gauge\", 21);\r\n    ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const ctx_r2 = ɵɵnextContext();\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"dashboardSizes\", ctx_r2.dashboardSizes)(\"value\", ctx_r2.component)(\"linkParameters\", ctx_r2.linkParameters);\r\n} }\r\nfunction WidgetComponent_ng_container_3_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementContainerStart(0, 22);\r\n    ɵɵelement(1, \"kervi-chart\", 21);\r\n    ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const ctx_r3 = ɵɵnextContext();\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"dashboardSizes\", ctx_r3.dashboardSizes)(\"value\", ctx_r3.component)(\"linkParameters\", ctx_r3.linkParameters);\r\n} }\r\nclass WidgetComponent extends KerviWidgetComponent {\r\n    constructor() {\r\n        super();\r\n    }\r\n    ngOnInit() {\r\n        this.ngOnInitWidget();\r\n    }\r\n}\r\nWidgetComponent.ɵfac = function WidgetComponent_Factory(t) { return new (t || WidgetComponent)(); };\r\nWidgetComponent.ɵcmp = ɵɵdefineComponent({ type: WidgetComponent, selectors: [[\"kervi-widget\"]], features: [ɵɵInheritDefinitionFeature], decls: 4, vars: 4, consts: [[4, \"ngIf\"], [\"class\", \"block-component\", 4, \"ngIf\"], [\"class\", \"\", 4, \"ngIf\"], [\"fxLayout\", \"row\", \"class\", \"kervi-block-widget\", 4, \"ngIf\"], [\"class\", \"kervi-inline-widget\", 4, \"ngIf\"], [\"fxLayout\", \"row\", 1, \"kervi-block-widget\"], [\"fxFlex\", \"60\", 1, \"kervi-value-label\"], [3, \"class\", 4, \"ngIf\"], [\"fxFlex\", \"\", 1, \"kervi-value-section\"], [3, \"value\", \"inline\", \"dashboardSizes\", \"linkParameters\", 4, \"ngIf\"], [3, \"action\", \"inline\", \"dashboardSizes\", \"linkParameters\", 4, \"ngIf\"], [3, \"value\", \"inline\", \"dashboardSizes\", \"linkParameters\"], [3, \"action\", \"inline\", \"dashboardSizes\", \"linkParameters\"], [1, \"kervi-inline-widget\"], [1, \"kervi-value-label\"], [\"style\", \"display:inline\", 3, \"class\", 4, \"ngIf\"], [\"style\", \"display:inline\", 4, \"ngIf\"], [1, \"kervi-value-section\"], [2, \"display\", \"inline\"], [1, \"block-component\"], [3, \"isBackground\", \"camera\", \"linkParameters\"], [3, \"dashboardSizes\", \"value\", \"linkParameters\"], [1, \"\"]], template: function WidgetComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵtemplate(0, WidgetComponent_ng_container_0_Template, 3, 2, \"ng-container\", 0);\r\n        ɵɵtemplate(1, WidgetComponent_ng_container_1_Template, 2, 3, \"ng-container\", 1);\r\n        ɵɵtemplate(2, WidgetComponent_ng_container_2_Template, 2, 3, \"ng-container\", 1);\r\n        ɵɵtemplate(3, WidgetComponent_ng_container_3_Template, 2, 3, \"ng-container\", 2);\r\n    } if (rf & 2) {\r\n        ɵɵproperty(\"ngIf\", ctx.widgetType == \"value\");\r\n        ɵɵadvance(1);\r\n        ɵɵproperty(\"ngIf\", ctx.widgetType == \"camera\");\r\n        ɵɵadvance(1);\r\n        ɵɵproperty(\"ngIf\", ctx.widgetType == \"gauge\");\r\n        ɵɵadvance(1);\r\n        ɵɵproperty(\"ngIf\", ctx.widgetType == \"chart\");\r\n    } }, directives: [NgIf, DefaultLayoutDirective, DefaultFlexDirective, KerviValueComponent, ActionComponent, CamViewerComponent, GaugeComponent, KerviChartComponent], encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(WidgetComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-widget',\r\n                templateUrl: \"./widget.component.html\",\r\n                styles: []\r\n            }]\r\n    }], function () { return []; }, null); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nfunction UserLogComponent_nz_timeline_item_1_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementStart(0, \"nz-timeline-item\", 4);\r\n    ɵɵelementStart(1, \"strong\");\r\n    ɵɵtext(2);\r\n    ɵɵelementEnd();\r\n    ɵɵelement(3, \"br\");\r\n    ɵɵelementStart(4, \"span\", 5);\r\n    ɵɵtext(5);\r\n    ɵɵpipe(6, \"date\");\r\n    ɵɵelementEnd();\r\n    ɵɵelement(7, \"br\");\r\n    ɵɵtext(8);\r\n    ɵɵelement(9, \"nz-divider\");\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const message_r7 = ctx.$implicit;\r\n    ɵɵnextContext();\r\n    const _r1 = ɵɵreference(4);\r\n    const _r3 = ɵɵreference(6);\r\n    const _r5 = ɵɵreference(8);\r\n    ɵɵproperty(\"nzDot\", message_r7.level == 1 ? _r1 : message_r7.level == 2 ? _r3 : _r5);\r\n    ɵɵadvance(2);\r\n    ɵɵtextInterpolate(message_r7.sourceName);\r\n    ɵɵadvance(3);\r\n    ɵɵtextInterpolate(ɵɵpipeBind2(6, 4, message_r7.timestamp, \"HH:mm:ss\"));\r\n    ɵɵadvance(3);\r\n    ɵɵtextInterpolate1(\" \", message_r7.topic, \" \");\r\n} }\r\nfunction UserLogComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelement(0, \"i\", 6);\r\n} if (rf & 2) {\r\n    ɵɵproperty(\"nzTheme\", \"twotone\")(\"nzTwotoneColor\", \"#f5222d\");\r\n} }\r\nfunction UserLogComponent_ng_template_5_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelement(0, \"i\", 7);\r\n} if (rf & 2) {\r\n    ɵɵproperty(\"nzTheme\", \"twotone\")(\"nzTwotoneColor\", \"#faad14\");\r\n} }\r\nfunction UserLogComponent_ng_template_7_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelement(0, \"i\", 8);\r\n} if (rf & 2) {\r\n    ɵɵproperty(\"nzTheme\", \"twotone\")(\"nzTwotoneColor\", \"#52c41a\");\r\n} }\r\n//import { TemplateService } from '../../template.service';\r\nclass UserLogComponent extends KerviUserLogComponent {\r\n    constructor() {\r\n        super();\r\n    }\r\n    ngOnInit() {\r\n        this.ngOnInitUserLog();\r\n    }\r\n}\r\nUserLogComponent.ɵfac = function UserLogComponent_Factory(t) { return new (t || UserLogComponent)(); };\r\nUserLogComponent.ɵcmp = ɵɵdefineComponent({ type: UserLogComponent, selectors: [[\"kervi-user-log\"]], features: [ɵɵInheritDefinitionFeature], decls: 9, vars: 3, consts: [[3, \"nzDot\", 4, \"ngFor\", \"ngForOf\"], [\"dotTemplate1\", \"\"], [\"dotTemplate2\", \"\"], [\"dotTemplate3\", \"\"], [3, \"nzDot\"], [2, \"font-size\", \"80%\"], [\"nz-icon\", \"\", \"type\", \"close-circle\", 2, \"font-size\", \"16px\", 3, \"nzTheme\", \"nzTwotoneColor\"], [\"nz-icon\", \"\", \"type\", \"warning\", 2, \"font-size\", \"16px\", 3, \"nzTheme\", \"nzTwotoneColor\"], [\"nz-icon\", \"\", \"nz-icon\", \"\", \"type\", \"check-circle\", 2, \"font-size\", \"16px\", 3, \"nzTheme\", \"nzTwotoneColor\"]], template: function UserLogComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵelementStart(0, \"nz-timeline\");\r\n        ɵɵtemplate(1, UserLogComponent_nz_timeline_item_1_Template, 10, 7, \"nz-timeline-item\", 0);\r\n        ɵɵpipe(2, \"async\");\r\n        ɵɵelementEnd();\r\n        ɵɵtemplate(3, UserLogComponent_ng_template_3_Template, 1, 2, \"ng-template\", null, 1, ɵɵtemplateRefExtractor);\r\n        ɵɵtemplate(5, UserLogComponent_ng_template_5_Template, 1, 2, \"ng-template\", null, 2, ɵɵtemplateRefExtractor);\r\n        ɵɵtemplate(7, UserLogComponent_ng_template_7_Template, 1, 2, \"ng-template\", null, 3, ɵɵtemplateRefExtractor);\r\n    } if (rf & 2) {\r\n        ɵɵadvance(1);\r\n        ɵɵproperty(\"ngForOf\", ɵɵpipeBind1(2, 1, ctx.messages$));\r\n    } }, directives: [NzTimelineComponent, NgForOf, NzTimelineItemComponent, NzDividerComponent, ɵNzTransitionPatchDirective, NzIconDirective], pipes: [AsyncPipe, DatePipe], styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(UserLogComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-user-log',\r\n                templateUrl: './user-log.component.html',\r\n                styleUrls: ['./user-log.component.scss'],\r\n            }]\r\n    }], function () { return []; }, null); })();\n\n// Copyright (c) 2019, Tim Wentzlau\r\nfunction AppHealthComponent_div_0_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementStart(0, \"div\", 1);\r\n    ɵɵelementStart(1, \"div\", 2);\r\n    ɵɵtext(2, \" web socket messages \");\r\n    ɵɵelementEnd();\r\n    ɵɵelementStart(3, \"div\", 3);\r\n    ɵɵelementStart(4, \"span\", 4);\r\n    ɵɵtext(5);\r\n    ɵɵelementEnd();\r\n    ɵɵelementEnd();\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = ɵɵnextContext();\r\n    ɵɵadvance(5);\r\n    ɵɵtextInterpolate1(\" \", ctx_r0.mps, \" \");\r\n} }\r\nfunction AppHealthComponent_div_1_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementStart(0, \"div\", 1);\r\n    ɵɵelementStart(1, \"div\", 2);\r\n    ɵɵtext(2, \" Ping diff \");\r\n    ɵɵelementEnd();\r\n    ɵɵelementStart(3, \"div\", 3);\r\n    ɵɵelementStart(4, \"span\", 4);\r\n    ɵɵtext(5);\r\n    ɵɵelementEnd();\r\n    ɵɵelementEnd();\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = ɵɵnextContext();\r\n    ɵɵadvance(5);\r\n    ɵɵtextInterpolate1(\" \", ctx_r1.pingDiff, \" \");\r\n} }\r\nfunction AppHealthComponent_div_2_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementStart(0, \"div\", 1);\r\n    ɵɵelementStart(1, \"div\", 2);\r\n    ɵɵtext(2, \" Ping delay \");\r\n    ɵɵelementEnd();\r\n    ɵɵelementStart(3, \"div\", 3);\r\n    ɵɵelementStart(4, \"span\", 4);\r\n    ɵɵtext(5);\r\n    ɵɵelementEnd();\r\n    ɵɵelementEnd();\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r2 = ɵɵnextContext();\r\n    ɵɵadvance(5);\r\n    ɵɵtextInterpolate1(\" \", ctx_r2.pingDelay, \" \");\r\n} }\r\n//import { TemplateService } from '../../template.service';\r\nclass AppHealthComponent extends KerviAppHealthComponent {\r\n    constructor() {\r\n        super();\r\n    }\r\n    ngOnInit() {\r\n        this.ngOnInitAppHealth();\r\n    }\r\n}\r\nAppHealthComponent.ɵfac = function AppHealthComponent_Factory(t) { return new (t || AppHealthComponent)(); };\r\nAppHealthComponent.ɵcmp = ɵɵdefineComponent({ type: AppHealthComponent, selectors: [[\"kervi-app-health\"]], features: [ɵɵInheritDefinitionFeature], decls: 3, vars: 3, consts: [[\"fxLayout\", \"row\", \"class\", \"kervi-block-widget\", 4, \"ngIf\"], [\"fxLayout\", \"row\", 1, \"kervi-block-widget\"], [\"fxFlex\", \"60\", 1, \"kervi-value-label\"], [\"fxFlex\", \"\", 1, \"kervi-value-section\"], [1, \"value-value\"]], template: function AppHealthComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵtemplate(0, AppHealthComponent_div_0_Template, 6, 1, \"div\", 0);\r\n        ɵɵtemplate(1, AppHealthComponent_div_1_Template, 6, 1, \"div\", 0);\r\n        ɵɵtemplate(2, AppHealthComponent_div_2_Template, 6, 1, \"div\", 0);\r\n    } if (rf & 2) {\r\n        ɵɵproperty(\"ngIf\", !ctx.inline);\r\n        ɵɵadvance(1);\r\n        ɵɵproperty(\"ngIf\", !ctx.inline);\r\n        ɵɵadvance(1);\r\n        ɵɵproperty(\"ngIf\", !ctx.inline);\r\n    } }, directives: [NgIf, DefaultLayoutDirective, DefaultFlexDirective], styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(AppHealthComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-app-health',\r\n                templateUrl: './app-health.component.html',\r\n                styleUrls: ['./app-health.component.scss'],\r\n            }]\r\n    }], function () { return []; }, null); })();\n\nfunction DashboardPanelComponent_ng_container_0_ng_container_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementContainerStart(0);\r\n    ɵɵelement(1, \"kervi-dashboard-panel\", 4);\r\n    ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const subPanel_r4 = ɵɵnextContext().$implicit;\r\n    const ctx_r5 = ɵɵnextContext(2);\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"fxFlex\", subPanel_r4.parameters.width)(\"bodyOnly\", true)(\"inGroup\", true)(\"dashboardSizes\", ctx_r5.dashboardSizes)(\"panel\", subPanel_r4);\r\n} }\r\nfunction DashboardPanelComponent_ng_container_0_ng_container_2_ng_container_2_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementContainerStart(0);\r\n    ɵɵelement(1, \"kervi-dashboard-panel\", 5);\r\n    ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const subPanel_r4 = ɵɵnextContext().$implicit;\r\n    const ctx_r6 = ɵɵnextContext(2);\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"fxFlex\", subPanel_r4.parameters.width)(\"inGroup\", true)(\"dashboardSizes\", ctx_r6.dashboardSizes)(\"panel\", subPanel_r4);\r\n} }\r\nfunction DashboardPanelComponent_ng_container_0_ng_container_2_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementContainerStart(0);\r\n    ɵɵtemplate(1, DashboardPanelComponent_ng_container_0_ng_container_2_ng_container_1_Template, 2, 5, \"ng-container\", 0);\r\n    ɵɵtemplate(2, DashboardPanelComponent_ng_container_0_ng_container_2_ng_container_2_Template, 2, 4, \"ng-container\", 0);\r\n    ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const subPanel_r4 = ctx.$implicit;\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngIf\", subPanel_r4.type != \"group\");\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngIf\", subPanel_r4.type == \"group\");\r\n} }\r\nfunction DashboardPanelComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementContainerStart(0);\r\n    ɵɵelementStart(1, \"div\", 2);\r\n    ɵɵtemplate(2, DashboardPanelComponent_ng_container_0_ng_container_2_Template, 3, 2, \"ng-container\", 3);\r\n    ɵɵelementEnd();\r\n    ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = ɵɵnextContext();\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"fxLayout\", ctx_r0.panel.parameters.layout);\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngForOf\", ctx_r0.panel.subPanels);\r\n} }\r\nfunction DashboardPanelComponent_ng_container_1_ng_template_2_ng_container_0_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementContainerStart(0);\r\n    ɵɵelement(1, \"kervi-widget\", 8);\r\n    ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const panelComponent_r15 = ctx.$implicit;\r\n    const ctx_r14 = ɵɵnextContext(3);\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"component\", panelComponent_r15.component)(\"dashboardPanel\", ctx_r14.panel)(\"inline\", ctx_r14.inline)(\"linkParameters\", panelComponent_r15.parameters);\r\n} }\r\nfunction DashboardPanelComponent_ng_container_1_ng_template_2_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵtemplate(0, DashboardPanelComponent_ng_container_1_ng_template_2_ng_container_0_Template, 2, 4, \"ng-container\", 3);\r\n} if (rf & 2) {\r\n    const ctx_r10 = ɵɵnextContext(2);\r\n    ɵɵproperty(\"ngForOf\", ctx_r10.headerComponents);\r\n} }\r\nfunction DashboardPanelComponent_ng_container_1_ng_container_4_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementContainerStart(0);\r\n    ɵɵelement(1, \"kervi-widget\", 8);\r\n    ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const panelComponent_r16 = ctx.$implicit;\r\n    const ctx_r11 = ɵɵnextContext(2);\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"component\", panelComponent_r16.component)(\"dashboardPanel\", ctx_r11.panel)(\"inline\", ctx_r11.inline)(\"linkParameters\", panelComponent_r16.parameters);\r\n} }\r\nfunction DashboardPanelComponent_ng_container_1_div_5_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementStart(0, \"div\");\r\n    ɵɵelement(1, \"kervi-user-log\");\r\n    ɵɵelementEnd();\r\n} }\r\nfunction DashboardPanelComponent_ng_container_1_div_6_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementStart(0, \"div\");\r\n    ɵɵelement(1, \"kervi-app-health\");\r\n    ɵɵelementEnd();\r\n} }\r\nfunction DashboardPanelComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementContainerStart(0);\r\n    ɵɵelementStart(1, \"nz-card\", 6);\r\n    ɵɵtemplate(2, DashboardPanelComponent_ng_container_1_ng_template_2_Template, 1, 1, \"ng-template\", null, 7, ɵɵtemplateRefExtractor);\r\n    ɵɵtemplate(4, DashboardPanelComponent_ng_container_1_ng_container_4_Template, 2, 4, \"ng-container\", 3);\r\n    ɵɵtemplate(5, DashboardPanelComponent_ng_container_1_div_5_Template, 2, 0, \"div\", 0);\r\n    ɵɵtemplate(6, DashboardPanelComponent_ng_container_1_div_6_Template, 2, 0, \"div\", 0);\r\n    ɵɵelementEnd();\r\n    ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const _r9 = ɵɵreference(3);\r\n    const ctx_r1 = ɵɵnextContext();\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"nzTitle\", ctx_r1.showHeader ? ctx_r1.title : null)(\"nzExtra\", ctx_r1.headerComponents.length > 0 ? _r9 : null);\r\n    ɵɵadvance(3);\r\n    ɵɵproperty(\"ngForOf\", ctx_r1.bodyComponents);\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngIf\", ctx_r1.panel.parameters.userLog);\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngIf\", ctx_r1.panel.parameters.appHealth);\r\n} }\r\nfunction DashboardPanelComponent_ng_template_2_ng_container_0_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementContainerStart(0);\r\n    ɵɵelement(1, \"kervi-widget\", 9);\r\n    ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const panelComponent_r18 = ctx.$implicit;\r\n    const ctx_r17 = ɵɵnextContext(2);\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"component\", panelComponent_r18.component)(\"inline\", ctx_r17.inline)(\"dashboardPanel\", ctx_r17.panel)(\"linkParameters\", panelComponent_r18.parameters);\r\n} }\r\nfunction DashboardPanelComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵtemplate(0, DashboardPanelComponent_ng_template_2_ng_container_0_Template, 2, 4, \"ng-container\", 3);\r\n} if (rf & 2) {\r\n    const ctx_r2 = ɵɵnextContext();\r\n    ɵɵproperty(\"ngForOf\", ctx_r2.panel.components);\r\n} }\r\nclass DashboardPanelComponent extends KerviDashboardPanelComponent {\r\n    constructor() {\r\n        super();\r\n        this.groupLayout = \"row\";\r\n    }\r\n    ngOnInit() {\r\n        this.ngOnInitPanel();\r\n        if (this.panel.hasOnlyGroupPanels)\r\n            this.groupLayout = \"row\";\r\n    }\r\n}\r\nDashboardPanelComponent.ɵfac = function DashboardPanelComponent_Factory(t) { return new (t || DashboardPanelComponent)(); };\r\nDashboardPanelComponent.ɵcmp = ɵɵdefineComponent({ type: DashboardPanelComponent, selectors: [[\"kervi-dashboard-panel\"]], features: [ɵɵInheritDefinitionFeature], decls: 3, vars: 3, consts: [[4, \"ngIf\"], [3, \"ngIf\"], [\"fxLayout.xs\", \"column\", \"fxLayoutGap\", \"0.5%\", 1, \"kervi-panel-deck\", 3, \"fxLayout\"], [4, \"ngFor\", \"ngForOf\"], [\"fxFlex.xs\", \"100\", 3, \"fxFlex\", \"bodyOnly\", \"inGroup\", \"dashboardSizes\", \"panel\"], [\"fxFlex.xs\", \"100\", 3, \"fxFlex\", \"inGroup\", \"dashboardSizes\", \"panel\"], [3, \"nzTitle\", \"nzExtra\"], [\"extraTemplate\", \"\"], [3, \"component\", \"dashboardPanel\", \"inline\", \"linkParameters\"], [3, \"component\", \"inline\", \"dashboardPanel\", \"linkParameters\"]], template: function DashboardPanelComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵtemplate(0, DashboardPanelComponent_ng_container_0_Template, 3, 2, \"ng-container\", 0);\r\n        ɵɵtemplate(1, DashboardPanelComponent_ng_container_1_Template, 7, 5, \"ng-container\", 0);\r\n        ɵɵtemplate(2, DashboardPanelComponent_ng_template_2_Template, 1, 1, \"ng-template\", 1);\r\n    } if (rf & 2) {\r\n        ɵɵproperty(\"ngIf\", ctx.panel.type == \"group\");\r\n        ɵɵadvance(1);\r\n        ɵɵproperty(\"ngIf\", ctx.panel.type != \"group\" && !ctx.inline);\r\n        ɵɵadvance(1);\r\n        ɵɵproperty(\"ngIf\", ctx.inline && ctx.panel.components.length > 0);\r\n    } }, directives: [NgIf, DefaultLayoutDirective, DefaultLayoutGapDirective, NgForOf, DashboardPanelComponent, DefaultFlexDirective, NzCardComponent, WidgetComponent, UserLogComponent, AppHealthComponent], styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(DashboardPanelComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-dashboard-panel',\r\n                templateUrl: './dashboard-panel.component.html',\r\n                styleUrls: ['./dashboard-panel.component.css']\r\n            }]\r\n    }], function () { return []; }, null); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass SliderComponent {\r\n    constructor(elementRef, templateService) {\r\n        this.elementRef = elementRef;\r\n        this.templateService = templateService;\r\n        this.value = 0;\r\n        this.type = \"horizontal_slider\";\r\n        this.defaultSizes = new DashboardSizes();\r\n        this.sliderChanged = new EventEmitter();\r\n        this.marks = {};\r\n        //console.log(\"cnio\",this);\r\n    }\r\n    color(style, selector) {\r\n        return this.templateService.getColor(style, selector);\r\n    }\r\n    ngOnInit() {\r\n        var self = this;\r\n    }\r\n}\r\nSliderComponent.ɵfac = function SliderComponent_Factory(t) { return new (t || SliderComponent)(ɵɵdirectiveInject(ElementRef), ɵɵdirectiveInject(KerviTemplateService)); };\r\nSliderComponent.ɵcmp = ɵɵdefineComponent({ type: SliderComponent, selectors: [[\"ui-slider\"]], inputs: { value: \"value\", type: \"type\", tick: \"tick\", linkParameters: \"linkParameters\", defaultSizes: \"defaultSizes\", maxValue: \"maxValue\", minValue: \"minValue\" }, outputs: { sliderChanged: \"sliderChanged\" }, decls: 0, vars: 0, template: function SliderComponent_Template(rf, ctx) { }, styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(SliderComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'ui-slider',\r\n                templateUrl: './slider.component.html',\r\n                styleUrls: ['./slider.component.scss']\r\n            }]\r\n    }], function () { return [{ type: ElementRef }, { type: KerviTemplateService }]; }, { value: [{\r\n            type: Input\r\n        }], type: [{\r\n            type: Input\r\n        }], tick: [{\r\n            type: Input\r\n        }], linkParameters: [{\r\n            type: Input\r\n        }], defaultSizes: [{\r\n            type: Input\r\n        }], maxValue: [{\r\n            type: Input\r\n        }], minValue: [{\r\n            type: Input\r\n        }], sliderChanged: [{\r\n            type: Output\r\n        }] }); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass IconsComponent {\r\n    constructor() {\r\n        this.icon = null;\r\n    }\r\n    ngOnInit() {\r\n    }\r\n}\r\nIconsComponent.ɵfac = function IconsComponent_Factory(t) { return new (t || IconsComponent)(); };\r\nIconsComponent.ɵcmp = ɵɵdefineComponent({ type: IconsComponent, selectors: [[\"kervi-icon\"]], inputs: { icon: \"icon\" }, decls: 1, vars: 3, template: function IconsComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵelement(0, \"i\");\r\n    } if (rf & 2) {\r\n        ɵɵclassMapInterpolate1(\"pi pi-\", ctx.icon, \"\");\r\n    } }, styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(IconsComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-icon',\r\n                templateUrl: './icons.component.html',\r\n                styleUrls: ['./icons.component.scss'],\r\n            }]\r\n    }], function () { return []; }, { icon: [{\r\n            type: Input\r\n        }] }); })();\n\nclass UIComponentsModule {\r\n    constructor() { }\r\n}\r\nUIComponentsModule.ɵmod = ɵɵdefineNgModule({ type: UIComponentsModule });\r\nUIComponentsModule.ɵinj = ɵɵdefineInjector({ factory: function UIComponentsModule_Factory(t) { return new (t || UIComponentsModule)(); }, providers: [], imports: [[\r\n            BrowserModule,\r\n            NGXKerviPipesModule,\r\n            CommonModule,\r\n            NgxGaugeModule,\r\n            FormsModule,\r\n            NgZorroAntdModule,\r\n            NgApexchartsModule\r\n        ]] });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵɵsetNgModuleScope(UIComponentsModule, { declarations: [SparklineComponent,\r\n        SliderComponent,\r\n        IconsComponent,\r\n        GaugeComponent,\r\n        KerviChartComponent,\r\n        SwitchButtonComponent,\r\n        ButtonComponent,\r\n        MPEGViewerComponent,\r\n        DateTimeComponent,\r\n        ColorComponent], imports: [BrowserModule,\r\n        NGXKerviPipesModule,\r\n        CommonModule,\r\n        NgxGaugeModule,\r\n        FormsModule,\r\n        NgZorroAntdModule,\r\n        NgApexchartsModule], exports: [SparklineComponent,\r\n        SliderComponent,\r\n        IconsComponent,\r\n        MPEGViewerComponent,\r\n        GaugeComponent,\r\n        KerviChartComponent,\r\n        SwitchButtonComponent,\r\n        ButtonComponent,\r\n        DateTimeComponent,\r\n        ColorComponent] }); })();\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(UIComponentsModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    SparklineComponent,\r\n                    SliderComponent,\r\n                    IconsComponent,\r\n                    GaugeComponent,\r\n                    KerviChartComponent,\r\n                    SwitchButtonComponent,\r\n                    ButtonComponent,\r\n                    MPEGViewerComponent,\r\n                    DateTimeComponent,\r\n                    ColorComponent\r\n                ],\r\n                exports: [\r\n                    SparklineComponent,\r\n                    SliderComponent,\r\n                    IconsComponent,\r\n                    MPEGViewerComponent,\r\n                    GaugeComponent,\r\n                    KerviChartComponent,\r\n                    SwitchButtonComponent,\r\n                    ButtonComponent,\r\n                    DateTimeComponent,\r\n                    ColorComponent\r\n                ],\r\n                imports: [\r\n                    BrowserModule,\r\n                    NGXKerviPipesModule,\r\n                    CommonModule,\r\n                    NgxGaugeModule,\r\n                    FormsModule,\r\n                    NgZorroAntdModule,\r\n                    NgApexchartsModule\r\n                ],\r\n                providers: [],\r\n                bootstrap: []\r\n            }]\r\n    }], function () { return []; }, null); })();\n\nclass ValuesModule {\r\n    constructor() { }\r\n}\r\nValuesModule.ɵmod = ɵɵdefineNgModule({ type: ValuesModule });\r\nValuesModule.ɵinj = ɵɵdefineInjector({ factory: function ValuesModule_Factory(t) { return new (t || ValuesModule)(); }, providers: [], imports: [[\r\n            CommonModule,\r\n            NGXKerviPipesModule,\r\n            UIComponentsModule,\r\n            FormsModule,\r\n            NgZorroAntdModule\r\n        ]] });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵɵsetNgModuleScope(ValuesModule, { declarations: [NumberComponent,\r\n        BooleanComponent,\r\n        KerviValueComponent,\r\n        StringComponent,\r\n        //EnumComponent,\r\n        DateTimeComponent$1,\r\n        ColorComponent$1], imports: [CommonModule,\r\n        NGXKerviPipesModule,\r\n        UIComponentsModule,\r\n        FormsModule,\r\n        NgZorroAntdModule], exports: [NumberComponent,\r\n        BooleanComponent,\r\n        KerviValueComponent,\r\n        StringComponent,\r\n        //EnumComponent,\r\n        DateTimeComponent$1,\r\n        ColorComponent$1] }); })();\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(ValuesModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [\r\n                    NumberComponent,\r\n                    BooleanComponent,\r\n                    KerviValueComponent,\r\n                    StringComponent,\r\n                    //EnumComponent,\r\n                    DateTimeComponent$1,\r\n                    ColorComponent$1\r\n                ],\r\n                exports: [\r\n                    NumberComponent,\r\n                    BooleanComponent,\r\n                    KerviValueComponent,\r\n                    StringComponent,\r\n                    //EnumComponent,\r\n                    DateTimeComponent$1,\r\n                    ColorComponent$1\r\n                ],\r\n                imports: [\r\n                    CommonModule,\r\n                    NGXKerviPipesModule,\r\n                    UIComponentsModule,\r\n                    FormsModule,\r\n                    NgZorroAntdModule\r\n                ],\r\n                providers: [],\r\n                bootstrap: []\r\n            }]\r\n    }], function () { return []; }, null); })();\n\nclass ControllerPadComponent {\r\n    constructor(elementRef) {\r\n        this.elementRef = elementRef;\r\n        this.padSize = 180;\r\n        this.moveDelayTimer = null;\r\n        this.inDrag = false;\r\n    }\r\n    ngOnInit() {\r\n        var self = this;\r\n        if (this.XValue) {\r\n            jQuery(\"input[name='pad-x']\", self.elementRef.nativeElement).val(this.XValue.value$.value).change();\r\n            this.XValue.value$.subscribe(function (v) {\r\n                console.log(\"pad-x\", self.YValue.name, v);\r\n                jQuery(\"input[name='pad-x']\", self.elementRef.nativeElement).val(v).change();\r\n            });\r\n        }\r\n        if (this.YValue) {\r\n            jQuery(\"input[name='pad-y']\", self.elementRef.nativeElement).val(this.YValue.value$.value).change();\r\n            this.YValue.value$.subscribe(function (v) {\r\n                console.log(\"pad-y\", self.YValue.name, v);\r\n                jQuery(\"input[name='pad-y']\", self.elementRef.nativeElement).val(v).change();\r\n            });\r\n        }\r\n        var color = \"rgba(255,255,255,.5)\";\r\n        var p = jQuery('fieldset', self.elementRef.nativeElement).xy({\r\n            displayPrevious: false,\r\n            min: -100,\r\n            max: 100,\r\n            width: self.padSize,\r\n            height: self.padSize,\r\n            fgColor: color,\r\n            bgColor: color,\r\n            change: function (value) {\r\n                if (self.moveDelayTimer) {\r\n                    clearTimeout(self.moveDelayTimer);\r\n                }\r\n                self.moveDelayTimer = setTimeout(function () {\r\n                    if (self.XValue)\r\n                        self.XValue.set(value[0]);\r\n                    if (self.YValue)\r\n                        self.YValue.set(value[1]);\r\n                }, 0);\r\n            }\r\n        })\r\n            .css({ 'border': '2px solid ' + color });\r\n    }\r\n    padPress() {\r\n        this.inDrag = true;\r\n    }\r\n    padRelease() {\r\n        console.log(\"pr\", this.inDrag, this.autoCenter);\r\n        this.inDrag = false;\r\n        if (this.autoCenter && this.XValue) {\r\n            console.log(\"x-auto center\");\r\n            jQuery(\"input[name='pad-x']\", this.elementRef.nativeElement).val(0).change();\r\n            this.XValue.set(0);\r\n        }\r\n        if (this.autoCenter && this.YValue) {\r\n            console.log(\"y-auto center\");\r\n            jQuery(\"input[name='pad-y']\", this.elementRef.nativeElement).val(0).change();\r\n            this.YValue.set(0);\r\n        }\r\n    }\r\n}\r\nControllerPadComponent.ɵfac = function ControllerPadComponent_Factory(t) { return new (t || ControllerPadComponent)(ɵɵdirectiveInject(ElementRef)); };\r\nControllerPadComponent.ɵcmp = ɵɵdefineComponent({ type: ControllerPadComponent, selectors: [[\"kervi-controller-pad\"]], inputs: { XValue: \"XValue\", YValue: \"YValue\", autoCenter: \"autoCenter\" }, decls: 5, vars: 2, consts: [[3, \"mousedown\", \"mouseup\"], [\"id\", \"leftPad\", 1, \"pad\", 2, \"position\", \"absolute\"], [\"type\", \"hidden\", \"name\", \"pad-x\", \"value\", \"0\"], [\"type\", \"hidden\", \"name\", \"pad-y\", \"value\", \"0\"]], template: function ControllerPadComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵelementStart(0, \"div\", 0);\r\n        ɵɵlistener(\"mousedown\", function ControllerPadComponent_Template_div_mousedown_0_listener() { return ctx.padPress(); })(\"mouseup\", function ControllerPadComponent_Template_div_mouseup_0_listener() { return ctx.padRelease(); });\r\n        ɵɵelementStart(1, \"fieldset\", 1);\r\n        ɵɵelement(2, \"legend\");\r\n        ɵɵelement(3, \"input\", 2);\r\n        ɵɵelement(4, \"input\", 3);\r\n        ɵɵelementEnd();\r\n        ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        ɵɵadvance(1);\r\n        ɵɵattribute(\"data-width\", ctx.padSize)(\"data-height\", ctx.padSize);\r\n    } }, styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(ControllerPadComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-controller-pad',\r\n                templateUrl: './controller-pad.component.html',\r\n                styleUrls: ['./controller-pad.component.css']\r\n            }]\r\n    }], function () { return [{ type: ElementRef }]; }, { XValue: [{\r\n            type: Input\r\n        }], YValue: [{\r\n            type: Input\r\n        }], autoCenter: [{\r\n            type: Input\r\n        }] }); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nfunction UserMessagesComponent_ng_template_0_i_3_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelement(0, \"i\", 8);\r\n} if (rf & 2) {\r\n    ɵɵproperty(\"nzTheme\", \"twotone\")(\"nzTwotoneColor\", \"#52c41a\");\r\n} }\r\nfunction UserMessagesComponent_ng_template_0_i_4_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelement(0, \"i\", 9);\r\n} if (rf & 2) {\r\n    ɵɵproperty(\"nzTheme\", \"twotone\")(\"nzTwotoneColor\", \"#faad14\");\r\n} }\r\nfunction UserMessagesComponent_ng_template_0_i_5_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelement(0, \"i\", 10);\r\n} if (rf & 2) {\r\n    ɵɵproperty(\"nzTheme\", \"twotone\")(\"nzTwotoneColor\", \"#f5222d\");\r\n} }\r\nfunction UserMessagesComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementStart(0, \"div\", 0);\r\n    ɵɵelementStart(1, \"div\", 1);\r\n    ɵɵelementStart(2, \"span\", 2);\r\n    ɵɵtemplate(3, UserMessagesComponent_ng_template_0_i_3_Template, 1, 2, \"i\", 3);\r\n    ɵɵtemplate(4, UserMessagesComponent_ng_template_0_i_4_Template, 1, 2, \"i\", 4);\r\n    ɵɵtemplate(5, UserMessagesComponent_ng_template_0_i_5_Template, 1, 2, \"i\", 5);\r\n    ɵɵelementEnd();\r\n    ɵɵelementStart(6, \"div\", 6);\r\n    ɵɵtext(7);\r\n    ɵɵelementEnd();\r\n    ɵɵelementStart(8, \"div\", 7);\r\n    ɵɵtext(9);\r\n    ɵɵelementEnd();\r\n    ɵɵelementEnd();\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const message_r1 = ctx.data;\r\n    ɵɵadvance(3);\r\n    ɵɵproperty(\"ngIf\", message_r1.level == 3);\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngIf\", message_r1.level == 2);\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngIf\", message_r1.level == 1);\r\n    ɵɵadvance(2);\r\n    ɵɵtextInterpolate(message_r1.sourceName);\r\n    ɵɵadvance(2);\r\n    ɵɵtextInterpolate1(\" \", message_r1.topic, \" \");\r\n} }\r\nclass UserMessagesComponent extends KerviUserLogComponent {\r\n    constructor(notification) {\r\n        super();\r\n        this.notification = notification;\r\n        var self = this;\r\n        this.lastMessage$.subscribe(function (message) {\r\n            if (message) {\r\n                self.notification.template(self.messageTemplate, { nzData: message });\r\n            }\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        var self = this;\r\n        this.ngOnInitUserLog();\r\n    }\r\n}\r\nUserMessagesComponent.ɵfac = function UserMessagesComponent_Factory(t) { return new (t || UserMessagesComponent)(ɵɵdirectiveInject(NzNotificationService)); };\r\nUserMessagesComponent.ɵcmp = ɵɵdefineComponent({ type: UserMessagesComponent, selectors: [[\"kervi-user-messages\"]], viewQuery: function UserMessagesComponent_Query(rf, ctx) { if (rf & 1) {\r\n        ɵɵviewQuery(TemplateRef, true);\r\n    } if (rf & 2) {\r\n        var _t;\r\n        ɵɵqueryRefresh(_t = ɵɵloadQuery()) && (ctx.messageTemplate = _t.first);\r\n    } }, features: [ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[1, \"ant-notification-notice-content\"], [1, \"ant-notification-notice-with-icon\"], [1, \"ant-notification-notice-icon\"], [\"nz-icon\", \"\", \"type\", \"check-circle\", 3, \"nzTheme\", \"nzTwotoneColor\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"type\", \"warning\", 3, \"nzTheme\", \"nzTwotoneColor\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"type\", \"close-circle\", 3, \"nzTheme\", \"nzTwotoneColor\", 4, \"ngIf\"], [1, \"ant-notification-notice-message\"], [1, \"ant-notification-notice-description\"], [\"nz-icon\", \"\", \"type\", \"check-circle\", 3, \"nzTheme\", \"nzTwotoneColor\"], [\"nz-icon\", \"\", \"type\", \"warning\", 3, \"nzTheme\", \"nzTwotoneColor\"], [\"nz-icon\", \"\", \"type\", \"close-circle\", 3, \"nzTheme\", \"nzTwotoneColor\"]], template: function UserMessagesComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵtemplate(0, UserMessagesComponent_ng_template_0_Template, 10, 5, \"ng-template\");\r\n    } }, directives: [NgIf, ɵNzTransitionPatchDirective, NzIconDirective], styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(UserMessagesComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-user-messages',\r\n                templateUrl: './messages.component.html',\r\n                styleUrls: ['./messages.component.scss'],\r\n            }]\r\n    }], function () { return [{ type: NzNotificationService }]; }, { messageTemplate: [{\r\n            type: ViewChild,\r\n            args: [TemplateRef]\r\n        }] }); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nfunction UserMessageButtonComponent_button_2_Template(rf, ctx) { if (rf & 1) {\r\n    const _r2 = ɵɵgetCurrentView();\r\n    ɵɵelementStart(0, \"button\", 4);\r\n    ɵɵlistener(\"click\", function UserMessageButtonComponent_button_2_Template_button_click_0_listener() { ɵɵrestoreView(_r2); const ctx_r1 = ɵɵnextContext(); return ctx_r1.open(); });\r\n    ɵɵelement(1, \"i\", 5);\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"nzTwotoneColor\", \"#9fd037\");\r\n} }\r\nclass UserMessageButtonComponent extends KerviUserLogComponent {\r\n    constructor() {\r\n        super();\r\n        this.visible = false;\r\n    }\r\n    ngOnInit() {\r\n        var self = this;\r\n        this.ngOnInitUserLog();\r\n    }\r\n    open() {\r\n        this.visible = true;\r\n    }\r\n    close() {\r\n        this.visible = false;\r\n    }\r\n}\r\nUserMessageButtonComponent.ɵfac = function UserMessageButtonComponent_Factory(t) { return new (t || UserMessageButtonComponent)(); };\r\nUserMessageButtonComponent.ɵcmp = ɵɵdefineComponent({ type: UserMessageButtonComponent, selectors: [[\"kervi-message-button\"]], features: [ɵɵInheritDefinitionFeature], decls: 6, vars: 10, consts: [[3, \"nzCount\", \"nzOverflowCount\"], [\"nz-button\", \"\", \"nzGhost\", \"\", \"nzType\", \"default\", \"nzShape\", \"circle\", 3, \"click\", 4, \"ngIf\"], [\"nzPlacement\", \"right\", \"nzTitle\", \"Log\", 3, \"nzClosable\", \"nzVisible\", \"nzOnClose\"], [3, \"inline\"], [\"nz-button\", \"\", \"nzGhost\", \"\", \"nzType\", \"default\", \"nzShape\", \"circle\", 3, \"click\"], [\"nz-icon\", \"\", \"nzType\", \"notification\", \"nzTheme\", \"twotone\", 3, \"nzTwotoneColor\"]], template: function UserMessageButtonComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵelementStart(0, \"nz-badge\", 0);\r\n        ɵɵpipe(1, \"async\");\r\n        ɵɵtemplate(2, UserMessageButtonComponent_button_2_Template, 2, 1, \"button\", 1);\r\n        ɵɵpipe(3, \"async\");\r\n        ɵɵelementEnd();\r\n        ɵɵelementStart(4, \"nz-drawer\", 2);\r\n        ɵɵlistener(\"nzOnClose\", function UserMessageButtonComponent_Template_nz_drawer_nzOnClose_4_listener() { return ctx.close(); });\r\n        ɵɵelement(5, \"kervi-user-log\", 3);\r\n        ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        ɵɵproperty(\"nzCount\", ɵɵpipeBind1(1, 6, ctx.messageCount$))(\"nzOverflowCount\", 99);\r\n        ɵɵadvance(2);\r\n        ɵɵproperty(\"ngIf\", ɵɵpipeBind1(3, 8, ctx.messageCount$) > 0);\r\n        ɵɵadvance(2);\r\n        ɵɵproperty(\"nzClosable\", false)(\"nzVisible\", ctx.visible);\r\n        ɵɵadvance(1);\r\n        ɵɵproperty(\"inline\", false);\r\n    } }, directives: [NzBadgeComponent, NgIf, NzDrawerComponent, UserLogComponent, NzButtonComponent, NzWaveDirective, ɵNzTransitionPatchDirective, NzIconDirective], pipes: [AsyncPipe], styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(UserMessageButtonComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-message-button',\r\n                templateUrl: './message-button.component.html',\r\n                styleUrls: ['./message-button.component.scss'],\r\n            }]\r\n    }], function () { return []; }, null); })();\n\nclass KerviZorroModule {\r\n}\r\nKerviZorroModule.ɵmod = ɵɵdefineNgModule({ type: KerviZorroModule });\r\nKerviZorroModule.ɵinj = ɵɵdefineInjector({ factory: function KerviZorroModule_Factory(t) { return new (t || KerviZorroModule)(); }, imports: [[\r\n            BrowserModule,\r\n            NGXKerviPipesModule,\r\n            NgxKerviModule,\r\n            ValuesModule,\r\n            NgZorroAntdModule,\r\n            FlexLayoutModule,\r\n            UIComponentsModule\r\n        ]] });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵɵsetNgModuleScope(KerviZorroModule, { declarations: [DashboardPanelComponent,\r\n        WidgetComponent,\r\n        ControllerPadComponent,\r\n        CamViewerComponent,\r\n        ActionComponent,\r\n        UserLogComponent,\r\n        UserMessageButtonComponent,\r\n        UserMessagesComponent,\r\n        AppHealthComponent,\r\n        NipplePadComponent], imports: [BrowserModule,\r\n        NGXKerviPipesModule,\r\n        NgxKerviModule,\r\n        ValuesModule,\r\n        NgZorroAntdModule,\r\n        FlexLayoutModule,\r\n        UIComponentsModule], exports: [DashboardPanelComponent,\r\n        ControllerPadComponent,\r\n        CamViewerComponent,\r\n        UserLogComponent,\r\n        UserMessageButtonComponent,\r\n        UserMessagesComponent,\r\n        AppHealthComponent,\r\n        NipplePadComponent] }); })();\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviZorroModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [\r\n                    BrowserModule,\r\n                    NGXKerviPipesModule,\r\n                    NgxKerviModule,\r\n                    ValuesModule,\r\n                    NgZorroAntdModule,\r\n                    FlexLayoutModule,\r\n                    UIComponentsModule\r\n                ],\r\n                declarations: [\r\n                    DashboardPanelComponent,\r\n                    WidgetComponent,\r\n                    ControllerPadComponent,\r\n                    CamViewerComponent,\r\n                    ActionComponent,\r\n                    UserLogComponent,\r\n                    UserMessageButtonComponent,\r\n                    UserMessagesComponent,\r\n                    AppHealthComponent,\r\n                    NipplePadComponent\r\n                ],\r\n                exports: [\r\n                    DashboardPanelComponent,\r\n                    ControllerPadComponent,\r\n                    CamViewerComponent,\r\n                    UserLogComponent,\r\n                    UserMessageButtonComponent,\r\n                    UserMessagesComponent,\r\n                    AppHealthComponent,\r\n                    NipplePadComponent\r\n                ]\r\n            }]\r\n    }], null, null); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\n//import { TemplateService } from '../../template.service';\r\nclass ActionComponent$1 extends KerviActionComponent {\r\n    constructor() {\r\n        super();\r\n    }\r\n    ngOnInit() {\r\n        this.ngOnInitAction();\r\n    }\r\n}\r\nActionComponent$1.ɵfac = function ActionComponent_Factory(t) { return new (t || ActionComponent$1)(); };\r\nActionComponent$1.ɵcmp = ɵɵdefineComponent({ type: ActionComponent$1, selectors: [[\"kervi-action\"]], features: [ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function ActionComponent_Template(rf, ctx) { }, styles: [\"\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(ActionComponent$1, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-action',\r\n                templateUrl: './media.component.html',\r\n                styleUrls: ['./media.component.scss'],\r\n            }]\r\n    }], function () { return []; }, null); })();\n\n/*\r\n * Public API Surface of kervi-zorro\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { ActionComponent$1 as ActionComponent, AppHealthComponent, CamViewerComponent, ControllerPadComponent, DashboardPanelComponent, KerviZorroModule, KerviZorroService, NipplePadComponent, UserLogComponent, UserMessageButtonComponent, UserMessagesComponent };\n//# sourceMappingURL=kervi-zorro.js.map\n","import { ɵɵdefineInjectable, ɵɵgetInheritedFactory, ɵsetClassMetadata, Injectable, ɵɵdefineComponent, Component, Input, ɵɵInheritDefinitionFeature, ɵɵelementStart, ɵɵtext, ɵɵelementEnd, ɵɵdirectiveInject, ɵɵdefinePipe, Pipe, ɵɵdefineNgModule, ɵɵdefineInjector, ɵɵsetNgModuleScope, NgModule, ɵɵinject, Injector } from '@angular/core';\nimport { KerviBaseService, DashboardSizes, UserLogStateType } from 'kervi-js';\nexport { ConnectionState, DashboardSizes } from 'kervi-js';\nimport { BehaviorSubject } from 'rxjs';\n\nclass NGXKerviService extends KerviBaseService {\r\n}\r\nNGXKerviService.ɵfac = function NGXKerviService_Factory(t) { return ɵNGXKerviService_BaseFactory(t || NGXKerviService); };\r\nNGXKerviService.ɵprov = ɵɵdefineInjectable({ token: NGXKerviService, factory: NGXKerviService.ɵfac });\r\nconst ɵNGXKerviService_BaseFactory = ɵɵgetInheritedFactory(NGXKerviService);\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(NGXKerviService, [{\r\n        type: Injectable\r\n    }], null, null); })();\n\nclass KerviTemplateService {\r\n    constructor() {\r\n        this.remUnit = 20;\r\n        console.log(\"kervi service constructor\");\r\n        //console.log(\"ctemplate\");\r\n        this.remUnit = parseFloat(getComputedStyle(document.documentElement).fontSize);\r\n    }\r\n    convertRemToPixels(rem) {\r\n        return rem * this.remUnit;\r\n    }\r\n    getSizeValue(value) {\r\n        if (value == null)\r\n            return \"100%\";\r\n        else if (value === \"\")\r\n            return \"100%\";\r\n        else if (isNaN(value)) {\r\n            return value;\r\n        }\r\n        else if (value > 0)\r\n            return value + \"%\";\r\n        else\r\n            return \"100%\";\r\n    }\r\n    getPixels(value, containerSize) {\r\n        //console.log(\"gps\", value, isNaN(value));\r\n        if (isNaN(value)) {\r\n            if (value.lastIndexOf(\"px\") > -1) {\r\n                var px = parseFloat(value);\r\n                return px;\r\n            }\r\n            else if (value.lastIndexOf(\"rem\") > -1) {\r\n                var rem = parseFloat(value);\r\n                var px = this.convertRemToPixels(rem);\r\n                console.log(\"remx\", rem, px);\r\n                return px;\r\n            }\r\n            else if (value.lastIndexOf(\"%\") > -1) {\r\n                var percentage = parseFloat(value) / 100.0;\r\n                return containerSize * percentage;\r\n            }\r\n        }\r\n        else\r\n            return value;\r\n    }\r\n    getStyleRuleValue(style, selector, sheet) {\r\n        var sheets = sheet != null ? [sheet] : document.styleSheets;\r\n        for (var i = 0, l = sheets.length; i < l; i++) {\r\n            var sheet = sheets[i];\r\n            if (!sheet.cssRules) {\r\n                continue;\r\n            }\r\n            for (var j = 0, k = sheet.cssRules.length; j < k; j++) {\r\n                var rule = sheet.cssRules[j];\r\n                if (rule.selectorText && rule.selectorText.split(',').indexOf(selector) !== -1) {\r\n                    return rule.style[style];\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    makeId() {\r\n        var text = \"\";\r\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        for (var i = 0; i < 5; i++)\r\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n        return text;\r\n    }\r\n    getColor(colorName, cssClass) {\r\n        var styleValue = this.getStyleRuleValue(colorName, cssClass, null);\r\n        //console.log(\"sv\", cssClass,styleValue);\r\n        return styleValue;\r\n    }\r\n}\r\nKerviTemplateService.ɵfac = function KerviTemplateService_Factory(t) { return new (t || KerviTemplateService)(); };\r\nKerviTemplateService.ɵprov = ɵɵdefineInjectable({ token: KerviTemplateService, factory: KerviTemplateService.ɵfac });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviTemplateService, [{\r\n        type: Injectable\r\n    }], function () { return []; }, null); })();\n\nlet AppInjector;\r\nfunction setAppInjector(injector) {\r\n    if (AppInjector) {\r\n        // Should not happen\r\n        console.error('Programming error: AppInjector was already set');\r\n    }\r\n    else {\r\n        AppInjector = injector;\r\n    }\r\n}\n\nclass KerviDashboardComponent {\r\n    constructor() {\r\n        this.dashboardId = null;\r\n        this.dashboard = null;\r\n        this.dashboards = null;\r\n        this.dashboardSizes = null;\r\n        this.isAppEmpty = true;\r\n        this.showMenu = false;\r\n        this.dashboardPanelsHidden = false;\r\n        this.showPanelController = false;\r\n        this.cameraId = null;\r\n        this.cameraParameters = null;\r\n        this.cameraId$ = new BehaviorSubject(null);\r\n        this.authenticated = false;\r\n        this.anonymous = true;\r\n        this.showLeftPad = false;\r\n        this.leftPadXValue = null;\r\n        this.leftPadYValue = null;\r\n        this.autoCenterLeftPad = false;\r\n        this.showRightPad = false;\r\n        this.rightPadXValue = null;\r\n        this.rightPadYValue = null;\r\n        this.autoCenterRightPad = false;\r\n        this.inFullScreen = false;\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n        var self = this;\r\n        this.kerviService.componentsChanged$.subscribe(function () {\r\n            self.loadDashboard(self.dashboardId);\r\n        });\r\n    }\r\n    logoff(event) {\r\n        this.kerviService.logoff();\r\n        event.stopPropagation();\r\n    }\r\n    loadDashboard(dashboardId) {\r\n        this.dashboardId = dashboardId;\r\n        this.dashboard = this.kerviService.getComponent(dashboardId, 'dashboard');\r\n        this.anonymous = this.kerviService.isAnonymous();\r\n        this.isAppEmpty = this.kerviService.isAppEmpty();\r\n        this.authenticated = this.kerviService.doAuthenticate;\r\n        if (this.dashboard) {\r\n            this.dashboards = this.kerviService.getComponentsByType('dashboard');\r\n            this.showMenu = (this.dashboards.length > 1 || this.kerviService.doAuthenticate);\r\n            this.showPanelController = false;\r\n            this.cameraId = null;\r\n            this.cameraParameters = null;\r\n            this.showLeftPad = false;\r\n            this.showRightPad = false;\r\n            this.dashboardPanelsHidden = false;\r\n            if (this.dashboard.backgroundPanel) {\r\n                if (this.dashboard.backgroundPanel.components.length > 0) {\r\n                    this.dashboardPanelsHidden = true;\r\n                    this.showPanelController = true;\r\n                    this.cameraId = this.dashboard.backgroundPanel.components[0].component.id;\r\n                    this.cameraId$.next(this.cameraId);\r\n                    this.cameraParameters = this.dashboard.backgroundPanel.components[0].parameters;\r\n                    console.log(\"db set cam\", this.cameraId, this.cameraParameters);\r\n                }\r\n            }\r\n            if (this.dashboard.LeftPadXPanel && this.dashboard.LeftPadXPanel.components.length || this.dashboard.LeftPadYPanel && this.dashboard.LeftPadYPanel.components.length) {\r\n                this.showLeftPad = true;\r\n                if (this.dashboard.LeftPadXPanel.components.length) {\r\n                    this.leftPadXValue = this.dashboard.LeftPadXPanel.components[0].component;\r\n                    if (this.dashboard.LeftPadXPanel.components[0].parameters.padAutoCenter)\r\n                        this.autoCenterLeftPad = true;\r\n                }\r\n                if (this.dashboard.LeftPadYPanel.components.length) {\r\n                    this.leftPadYValue = this.dashboard.LeftPadYPanel.components[0].component;\r\n                    if (this.dashboard.LeftPadXPanel.components[0].parameters.padAutoCenter)\r\n                        this.autoCenterLeftPad = true;\r\n                }\r\n            }\r\n            if (this.dashboard.RightPadXPanel && this.dashboard.RightPadXPanel.components.length || this.dashboard.RightPadYPanel && this.dashboard.RightPadYPanel.components.length) {\r\n                this.showRightPad = true;\r\n                if (this.dashboard.RightPadXPanel.components.length) {\r\n                    this.rightPadXValue = this.dashboard.RightPadXPanel.components[0].component;\r\n                    if (this.dashboard.LeftPadXPanel.components[0].parameters.padAutoCenter)\r\n                        this.autoCenterRightPad = true;\r\n                }\r\n                if (this.dashboard.RightPadYPanel.components.length) {\r\n                    this.rightPadYValue = this.dashboard.RightPadYPanel.components[0].component;\r\n                    if (this.dashboard.RightPadXPanel.components[0].parameters.padAutoCenter)\r\n                        this.autoCenterRightPad = true;\r\n                }\r\n            }\r\n            console.log(\"load db\", dashboardId, this.dashboard, this);\r\n        }\r\n    }\r\n    toggleFullScreen() {\r\n        console.log(\"fs\", this.inFullScreen);\r\n        var doc;\r\n        doc = document;\r\n        if ((doc.fullScreenElement && doc.fullScreenElement !== null)) \r\n        /*(!doc.mozFullScreen && !document.webkitIsFullScreen))*/ {\r\n            this.inFullScreen = true;\r\n            if (doc.documentElement.requestFullScreen) {\r\n                doc.documentElement.requestFullScreen();\r\n            }\r\n            else if (doc.documentElement.mozRequestFullScreen) {\r\n                doc.documentElement.mozRequestFullScreen();\r\n            } // } else if (document.documentElement.webkitRequestFullScreen) {  \r\n            //   doc.documentElement.webkitRequestFullScreen();  \r\n            // }  \r\n        }\r\n        else {\r\n            this.inFullScreen = false;\r\n            if (doc.cancelFullScreen) {\r\n                doc.cancelFullScreen();\r\n            }\r\n            else if (doc.mozCancelFullScreen) {\r\n                doc.mozCancelFullScreen();\r\n            } // } else if (document.webkitCancelFullScreen) {  \r\n            //   doc.webkitCancelFullScreen();  \r\n            // }  \r\n        }\r\n    }\r\n}\r\nKerviDashboardComponent.ɵfac = function KerviDashboardComponent_Factory(t) { return new (t || KerviDashboardComponent)(); };\r\nKerviDashboardComponent.ɵcmp = ɵɵdefineComponent({ type: KerviDashboardComponent, selectors: [[\"kervi-dashboard\"]], inputs: { cameraId: \"cameraId\", cameraParameters: \"cameraParameters\" }, decls: 0, vars: 0, template: function KerviDashboardComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviDashboardComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-dashboard',\r\n                template: ''\r\n            }]\r\n    }], function () { return []; }, { cameraId: [{\r\n            type: Input\r\n        }], cameraParameters: [{\r\n            type: Input\r\n        }] }); })();\n\nclass KerviDashboardPanelComponent {\r\n    constructor() {\r\n        this.panel = null;\r\n        this.inline = false;\r\n        this.inGroup = false;\r\n        this.bodyOnly = false;\r\n        this.width = \"\";\r\n        this.showHeader = false;\r\n        this.expanded = false;\r\n        this.title = null;\r\n        this.bodyComponents = [];\r\n        this.headerComponents = [];\r\n        this.footerComponents = [];\r\n        //messages: DashboardMessageModel[] = [];\r\n        //panelComponents:IComponent[] = []\r\n        this.templateService = null;\r\n        this.kerviService = null;\r\n        this.templateService = AppInjector.get(KerviTemplateService);\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    calcWidth(panel, inGroup) {\r\n        if (panel.type == \"group\") {\r\n            if (panel.parameters.width == null || panel.parameters.width == \"0\")\r\n                return \"100%\";\r\n            else\r\n                return this.templateService.getSizeValue(panel.parameters.width);\r\n        }\r\n        else\r\n            return inGroup ? \"\" : this.templateService.getSizeValue(panel.parameters.width);\r\n    }\r\n    showPanelHeader(panel) {\r\n        var hasHeaderComponents = false;\r\n        for (let component of this.panel.components) {\r\n            if (component.parameters.linkToHeader)\r\n                hasHeaderComponents = true;\r\n        }\r\n        return (panel.parameters.title != null && panel.parameters.title.length > 0) || hasHeaderComponents;\r\n    }\r\n    ngOnInitPanel() {\r\n        var self = this;\r\n        this.title = this.panel.parameters.title;\r\n        for (let component of this.panel.components) {\r\n            if (component.parameters.linkToHeader)\r\n                this.headerComponents.push(component);\r\n            else\r\n                this.bodyComponents.push(component);\r\n        }\r\n        this.showHeader = (this.panel.parameters.title != null && this.panel.parameters.title.length > 0) || (this.headerComponents.length > 0);\r\n        if (this.panel.type == \"group\") {\r\n            if (this.panel.parameters.width == null || this.panel.parameters.width == \"0\" || this.panel.parameters.width == \"\")\r\n                this.width = \"100%\";\r\n            else\r\n                this.width = this.templateService.getSizeValue(this.panel.parameters.width);\r\n        }\r\n        else\r\n            //this.width = this.inGroup ? \"100%\" : this.templateService.getSizeValue(this.panel.parameters.width);\r\n            this.width = this.templateService.getSizeValue(this.panel.parameters.width);\r\n    }\r\n}\r\nKerviDashboardPanelComponent.ɵfac = function KerviDashboardPanelComponent_Factory(t) { return new (t || KerviDashboardPanelComponent)(); };\r\nKerviDashboardPanelComponent.ɵcmp = ɵɵdefineComponent({ type: KerviDashboardPanelComponent, selectors: [[\"kervi-dashboard-panel-base\"]], inputs: { dashboardSizes: \"dashboardSizes\", panel: \"panel\", inline: \"inline\", inGroup: \"inGroup\", bodyOnly: \"bodyOnly\" }, decls: 0, vars: 0, template: function KerviDashboardPanelComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviDashboardPanelComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-dashboard-panel-base',\r\n                template: ''\r\n            }]\r\n    }], function () { return []; }, { dashboardSizes: [{\r\n            type: Input\r\n        }], panel: [{\r\n            type: Input\r\n        }], inline: [{\r\n            type: Input\r\n        }], inGroup: [{\r\n            type: Input\r\n        }], bodyOnly: [{\r\n            type: Input\r\n        }] }); })();\n\nclass KerviControllerPadComponent {\r\n    constructor() { }\r\n    ngOnInit() {\r\n    }\r\n}\r\nKerviControllerPadComponent.ɵfac = function KerviControllerPadComponent_Factory(t) { return new (t || KerviControllerPadComponent)(); };\r\nKerviControllerPadComponent.ɵcmp = ɵɵdefineComponent({ type: KerviControllerPadComponent, selectors: [[\"kervi-controller-pad-base\"]], inputs: { dashboardSizes: \"dashboardSizes\" }, decls: 0, vars: 0, template: function KerviControllerPadComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviControllerPadComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-controller-pad-base',\r\n                template: ''\r\n            }]\r\n    }], function () { return []; }, { dashboardSizes: [{\r\n            type: Input\r\n        }] }); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviWidgetComponent {\r\n    constructor() {\r\n        this.component = null;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.widgetType = \"value\";\r\n        //console.log(\"cnio\",this);\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    set componentId(v) {\r\n        this.component = this.kerviService.getComponent(this.componentId);\r\n    }\r\n    ngOnInitWidget() {\r\n        if (!this.linkParameters)\r\n            this.linkParameters = this.component.ui;\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        //console.log(\"widget\", this.component, this.linkParameters);\r\n        if (this.component.componentType == \"controller\") {\r\n            var controller = this.component;\r\n            console.log(\"widget ctrl\", controller);\r\n            if (controller.type == \"camera\")\r\n                this.widgetType = \"camera\";\r\n        }\r\n        else if (this.linkParameters.type) {\r\n            if (this.linkParameters.type.indexOf(\"gauge\") > -1) {\r\n                this.widgetType = \"gauge\";\r\n            }\r\n            else if (this.linkParameters.type == \"chart\") {\r\n                this.widgetType = \"chart\";\r\n            }\r\n        }\r\n    }\r\n}\r\nKerviWidgetComponent.ɵfac = function KerviWidgetComponent_Factory(t) { return new (t || KerviWidgetComponent)(); };\r\nKerviWidgetComponent.ɵcmp = ɵɵdefineComponent({ type: KerviWidgetComponent, selectors: [[\"kervi-widget-base\"]], inputs: { componentId: \"componentId\", component: \"component\", dashboardPanel: \"dashboardPanel\", linkParameters: \"linkParameters\", dashboardSizes: \"dashboardSizes\", inline: \"inline\" }, decls: 0, vars: 0, template: function KerviWidgetComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviWidgetComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-widget-base',\r\n                template: ''\r\n            }]\r\n    }], function () { return []; }, { componentId: [{\r\n            type: Input\r\n        }], component: [{\r\n            type: Input\r\n        }], dashboardPanel: [{\r\n            type: Input\r\n        }], linkParameters: [{\r\n            type: Input\r\n        }], dashboardSizes: [{\r\n            type: Input\r\n        }], inline: [{\r\n            type: Input\r\n        }] }); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviValueComponent {\r\n    constructor() {\r\n        this.value = null;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    set valueId(v) {\r\n        this.value = this.kerviService.getComponent(this.valueId);\r\n    }\r\n    ngOnInitValue() {\r\n        if (!this.linkParameters)\r\n            this.linkParameters = this.value.ui;\r\n    }\r\n}\r\nKerviValueComponent.ɵfac = function KerviValueComponent_Factory(t) { return new (t || KerviValueComponent)(); };\r\nKerviValueComponent.ɵcmp = ɵɵdefineComponent({ type: KerviValueComponent, selectors: [[\"kervi-value-base\"]], inputs: { valueId: \"valueId\", value: \"value\", linkParameters: \"linkParameters\", dashboardSizes: \"dashboardSizes\", inline: \"inline\" }, decls: 0, vars: 0, template: function KerviValueComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviValueComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-value-base',\r\n                template: ''\r\n            }]\r\n    }], function () { return []; }, { valueId: [{\r\n            type: Input\r\n        }], value: [{\r\n            type: Input\r\n        }], linkParameters: [{\r\n            type: Input\r\n        }], dashboardSizes: [{\r\n            type: Input\r\n        }], inline: [{\r\n            type: Input\r\n        }] }); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviNumberComponent extends KerviValueComponent {\r\n    constructor() {\r\n        super();\r\n        this.numberFormat = \"1.2-2\";\r\n        this.displayValue = 0;\r\n        this.displayUnit = \"\";\r\n        this.displayType = \"\";\r\n        this.currentIcon = null;\r\n    }\r\n    setKerviValue(value) {\r\n        this.value.set(value);\r\n    }\r\n    ngOnInitNumber() {\r\n        this.ngOnInitValue();\r\n        var self = this;\r\n        this.numberFormat = this.linkParameters.minIntegerDigits + \".\" + this.linkParameters.minFractionDigits + \"-\" + this.linkParameters.maxFractionDigits;\r\n        if (!this.linkParameters.valueIcon)\r\n            this.currentIcon = null;\r\n        else if (typeof (this.linkParameters.valueIcon) == \"string\")\r\n            this.currentIcon = this.linkParameters.valueIcon;\r\n        else {\r\n            this.value.value$.subscribe(function (v) {\r\n                for (let iconSection of self.linkParameters.valueIcon) {\r\n                    if (v >= iconSection.range[0] && v <= iconSection.range[1]) {\r\n                        self.currentIcon = iconSection.icon;\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        else if (!this.inline && this.linkParameters.size > 0) {\r\n            this.inline = true;\r\n        }\r\n    }\r\n}\r\nKerviNumberComponent.ɵfac = function KerviNumberComponent_Factory(t) { return new (t || KerviNumberComponent)(); };\r\nKerviNumberComponent.ɵcmp = ɵɵdefineComponent({ type: KerviNumberComponent, selectors: [[\"kervi-value-number-base\"]], features: [ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function KerviNumberComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviNumberComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-value-number-base',\r\n                template: ''\r\n            }]\r\n    }], function () { return []; }, null); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviBooleanComponent extends KerviValueComponent {\r\n    constructor() {\r\n        super();\r\n        this.displayType = \"switch\";\r\n    }\r\n    setKerviValue(value) {\r\n        this.value.set(value);\r\n    }\r\n    ngOnInitBoolean() {\r\n        this.ngOnInitValue();\r\n        var self = this;\r\n        if (this.linkParameters.type) {\r\n            this.displayType = this.linkParameters.type;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        else if (!this.inline && this.linkParameters.size > 0) {\r\n            this.inline = true;\r\n        }\r\n    }\r\n}\r\nKerviBooleanComponent.ɵfac = function KerviBooleanComponent_Factory(t) { return new (t || KerviBooleanComponent)(); };\r\nKerviBooleanComponent.ɵcmp = ɵɵdefineComponent({ type: KerviBooleanComponent, selectors: [[\"kervi-value-boolean-base\"]], features: [ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function KerviBooleanComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviBooleanComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-value-boolean-base',\r\n                template: ''\r\n            }]\r\n    }], function () { return []; }, null); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviActionComponent {\r\n    constructor() {\r\n        this.action = null;\r\n        this.linkParameters = null;\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.state = new BehaviorSubject(false);\r\n        this.displayType = 'switch';\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    ngOnInitAction() {\r\n        var self = this;\r\n        if (!this.linkParameters)\r\n            this.linkParameters = this.action.ui;\r\n        if (this.linkParameters.displayType) {\r\n            this.displayType = this.linkParameters.displayType;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        self.state.next(this.action.running$.value);\r\n        this.action.running$.subscribe(function (v) {\r\n            console.log(\"ar\", self.action.id, v);\r\n            self.state.next(v);\r\n        });\r\n    }\r\n    setActionState(value) {\r\n        if (value)\r\n            this.action.run(this.linkParameters.actionParameters);\r\n        else\r\n            this.action.interrupt(this.linkParameters.interruptParameters);\r\n    }\r\n}\r\nKerviActionComponent.ɵfac = function KerviActionComponent_Factory(t) { return new (t || KerviActionComponent)(); };\r\nKerviActionComponent.ɵcmp = ɵɵdefineComponent({ type: KerviActionComponent, selectors: [[\"kervi-action-base\"]], inputs: { action: \"action\", linkParameters: \"linkParameters\", inline: \"inline\", dashboardSizes: \"dashboardSizes\" }, decls: 0, vars: 0, template: function KerviActionComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviActionComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-action-base',\r\n                template: '',\r\n                styleUrls: [],\r\n            }]\r\n    }], function () { return []; }, { action: [{\r\n            type: Input\r\n        }], linkParameters: [{\r\n            type: Input\r\n        }], inline: [{\r\n            type: Input\r\n        }], dashboardSizes: [{\r\n            type: Input\r\n        }] }); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviCameraComponent {\r\n    constructor() {\r\n        this.streamObservers = [];\r\n        this.linkParameters = null;\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.isBackground = false;\r\n        const self = this;\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    set cameraId(id) {\r\n        console.log('setcamid', id);\r\n        this.camera = this.kerviService.getComponent(id);\r\n    }\r\n    set camera(v) {\r\n        console.log('setcam', v);\r\n        this.cam = v;\r\n        if (v) {\r\n            for (let i of v.outputs) {\r\n                if (i.id.endsWith('.pan')) {\r\n                    this.pan = i;\r\n                }\r\n                else if (i.id.endsWith('.tilt')) {\r\n                    this.tilt = i;\r\n                }\r\n            }\r\n            this.cameraType = v.ui.type;\r\n            if (this.cameraType === 'frame') {\r\n                if (v.ui.source) {\r\n                    this.cameraSource = this.cam.id;\r\n                }\r\n                this.cameraSource = this.cam.id;\r\n            }\r\n            this.updateStreamObservers();\r\n        }\r\n    }\r\n    get camera() { return this.cam; }\r\n    updateStreamObservers() {\r\n        const streamObservers = [];\r\n        const controllers = this.kerviService.getComponentsByType('controller');\r\n        for (let controller of controllers) {\r\n            if (controller.type === 'stream_observer') {\r\n                if (controller.ui.sourceStream === this.cameraSource) {\r\n                    streamObservers.push(controller);\r\n                }\r\n            }\r\n        }\r\n        this.streamObservers = streamObservers;\r\n        if (this.selectedSource !== this.cameraSource) {\r\n            this.selectedSource = this.cameraSource;\r\n        }\r\n    }\r\n    setPan(v) {\r\n        this.pan.set(v);\r\n    }\r\n    setTilt(v) {\r\n        this.tilt.set(v);\r\n    }\r\n    ngOnInitCamera() {\r\n        console.log('ngi cam', this.camera.id);\r\n        const self = this;\r\n        if (!this.linkParameters) {\r\n            this.linkParameters = this.camera.ui;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        this.kerviService.componentsChanged$.subscribe(function () {\r\n            self.updateStreamObservers();\r\n        });\r\n        this.updateStreamObservers();\r\n        this.selectedSource = this.cameraSource;\r\n    }\r\n    changeSource(source) {\r\n        console.log('cs', source);\r\n        this.selectedSource = source;\r\n    }\r\n}\r\nKerviCameraComponent.ɵfac = function KerviCameraComponent_Factory(t) { return new (t || KerviCameraComponent)(); };\r\nKerviCameraComponent.ɵcmp = ɵɵdefineComponent({ type: KerviCameraComponent, selectors: [[\"kervi-camera-base\"]], inputs: { streamObservers: \"streamObservers\", selectedSource: \"selectedSource\", cameraId: \"cameraId\", camera: \"camera\", linkParameters: \"linkParameters\", inline: \"inline\", dashboardSizes: \"dashboardSizes\", isBackground: \"isBackground\" }, decls: 0, vars: 0, template: function KerviCameraComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviCameraComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-camera-base',\r\n                template: '',\r\n                styleUrls: [],\r\n            }]\r\n    }], function () { return []; }, { streamObservers: [{\r\n            type: Input\r\n        }], selectedSource: [{\r\n            type: Input\r\n        }], cameraId: [{\r\n            type: Input\r\n        }], camera: [{\r\n            type: Input\r\n        }], linkParameters: [{\r\n            type: Input\r\n        }], inline: [{\r\n            type: Input\r\n        }], dashboardSizes: [{\r\n            type: Input\r\n        }], isBackground: [{\r\n            type: Input\r\n        }] }); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviColorComponent extends KerviValueComponent {\r\n    constructor() {\r\n        super();\r\n        this.displayType = \"button\";\r\n    }\r\n    setKerviValue(value) {\r\n        this.value.set(value);\r\n    }\r\n    ngOnInitColor() {\r\n        this.ngOnInitValue();\r\n        var self = this;\r\n        if (this.linkParameters.type) {\r\n            this.displayType = this.linkParameters.type;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        else if (!this.inline && this.linkParameters.size > 0) {\r\n            this.inline = true;\r\n        }\r\n    }\r\n}\r\nKerviColorComponent.ɵfac = function KerviColorComponent_Factory(t) { return new (t || KerviColorComponent)(); };\r\nKerviColorComponent.ɵcmp = ɵɵdefineComponent({ type: KerviColorComponent, selectors: [[\"kervi-value-color-base\"]], features: [ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function KerviColorComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviColorComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-value-color-base',\r\n                template: ''\r\n            }]\r\n    }], function () { return []; }, null); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviDateTimeComponent extends KerviValueComponent {\r\n    constructor() {\r\n        super();\r\n        this.displayType = \"datetime\";\r\n    }\r\n    setKerviValue(value) {\r\n        this.value.set(value);\r\n    }\r\n    ngOnInitDateTime() {\r\n        this.ngOnInitValue();\r\n        var self = this;\r\n        if (this.linkParameters.type) {\r\n            this.displayType = this.linkParameters.type;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        if (self.linkParameters.type == \"time\")\r\n            this.dateTimeFormat = this.kerviService.application$.value.display.unit_system.datetime.time;\r\n        else if (self.linkParameters.type == \"date\")\r\n            this.dateTimeFormat = self.kerviService.application$.value.display.unit_system.datetime.date;\r\n        else\r\n            this.dateTimeFormat = this.kerviService.application$.value.display.unit_system.datetime.datetime;\r\n    }\r\n}\r\nKerviDateTimeComponent.ɵfac = function KerviDateTimeComponent_Factory(t) { return new (t || KerviDateTimeComponent)(); };\r\nKerviDateTimeComponent.ɵcmp = ɵɵdefineComponent({ type: KerviDateTimeComponent, selectors: [[\"kervi-value-datetime-base\"]], features: [ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function KerviDateTimeComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviDateTimeComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-value-datetime-base',\r\n                template: ''\r\n            }]\r\n    }], function () { return []; }, null); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviStringComponent extends KerviValueComponent {\r\n    constructor() {\r\n        super();\r\n        this.displayType = \"\";\r\n    }\r\n    setKerviValue(value) {\r\n        this.value.set(value);\r\n    }\r\n    ngOnInitString() {\r\n        this.ngOnInitValue();\r\n        var self = this;\r\n        if (this.linkParameters.type) {\r\n            this.displayType = this.linkParameters.type;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n    }\r\n}\r\nKerviStringComponent.ɵfac = function KerviStringComponent_Factory(t) { return new (t || KerviStringComponent)(); };\r\nKerviStringComponent.ɵcmp = ɵɵdefineComponent({ type: KerviStringComponent, selectors: [[\"kervi-value-string-base\"]], features: [ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function KerviStringComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviStringComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-value-string-base',\r\n                template: ''\r\n            }]\r\n    }], function () { return []; }, null); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviUserLogComponent {\r\n    constructor() {\r\n        this.logLength = 10;\r\n        this.linkParameters = null;\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.lastMessage$ = null;\r\n        this.messages$ = null;\r\n        this.messageCount$ = null;\r\n        this.logState$ = null;\r\n        this.messageCount = 0;\r\n        this.UserLogState = UserLogStateType.normal;\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n        this.messages$ = this.kerviService.getLogMessages$();\r\n        this.lastMessage$ = this.kerviService.getLastLogMessage$();\r\n        this.messageCount$ = this.kerviService.getLogMessageCount$();\r\n        this.logState$ = this.kerviService.getLogState$();\r\n        this.messageCount$.subscribe(function (v) {\r\n            this.messageCount = v;\r\n        });\r\n    }\r\n    ngOnInitUserLog() {\r\n    }\r\n}\r\nKerviUserLogComponent.ɵfac = function KerviUserLogComponent_Factory(t) { return new (t || KerviUserLogComponent)(); };\r\nKerviUserLogComponent.ɵcmp = ɵɵdefineComponent({ type: KerviUserLogComponent, selectors: [[\"kervi-user-log-base\"]], inputs: { logLength: \"logLength\", linkParameters: \"linkParameters\", inline: \"inline\", dashboardSizes: \"dashboardSizes\" }, decls: 0, vars: 0, template: function KerviUserLogComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviUserLogComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-user-log-base',\r\n                template: '',\r\n                styleUrls: [],\r\n            }]\r\n    }], function () { return []; }, { logLength: [{\r\n            type: Input\r\n        }], linkParameters: [{\r\n            type: Input\r\n        }], inline: [{\r\n            type: Input\r\n        }], dashboardSizes: [{\r\n            type: Input\r\n        }] }); })();\n\nclass KerviDirectoryComponent {\r\n    constructor() {\r\n        this.path = '/';\r\n        this.directory = null;\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    loadDirectory() {\r\n        //this.directory = this.kerviService.GetDirectory(this.path);\r\n    }\r\n}\r\nKerviDirectoryComponent.ɵfac = function KerviDirectoryComponent_Factory(t) { return new (t || KerviDirectoryComponent)(); };\r\nKerviDirectoryComponent.ɵcmp = ɵɵdefineComponent({ type: KerviDirectoryComponent, selectors: [[\"kervi-directory\"]], decls: 0, vars: 0, template: function KerviDirectoryComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviDirectoryComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-directory',\r\n                template: ''\r\n            }]\r\n    }], function () { return []; }, null); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviAppHealthComponent {\r\n    constructor() {\r\n        this.linkParameters = null;\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.mps = 0;\r\n        this.pingDiff = 0;\r\n        this.pingDelay = 0;\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    ngOnInitAppHealth() {\r\n        const self = this;\r\n        this.kerviService.mps$.subscribe(function (mps) {\r\n            self.mps = mps;\r\n        });\r\n        this.kerviService.appPingDiff$.subscribe(function (diff) {\r\n            self.pingDiff = diff;\r\n        });\r\n        this.kerviService.appPingDelay$.subscribe(function (diff) {\r\n            self.pingDelay = diff;\r\n        });\r\n    }\r\n}\r\nKerviAppHealthComponent.ɵfac = function KerviAppHealthComponent_Factory(t) { return new (t || KerviAppHealthComponent)(); };\r\nKerviAppHealthComponent.ɵcmp = ɵɵdefineComponent({ type: KerviAppHealthComponent, selectors: [[\"kervi-app-health-base\"]], inputs: { linkParameters: \"linkParameters\", inline: \"inline\", dashboardSizes: \"dashboardSizes\", mps: \"mps\", pingDiff: \"pingDiff\", pingDelay: \"pingDelay\" }, decls: 0, vars: 0, template: function KerviAppHealthComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviAppHealthComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-app-health-base',\r\n                template: '',\r\n                styleUrls: [],\r\n            }]\r\n    }], function () { return []; }, { linkParameters: [{\r\n            type: Input\r\n        }], inline: [{\r\n            type: Input\r\n        }], dashboardSizes: [{\r\n            type: Input\r\n        }], mps: [{\r\n            type: Input\r\n        }], pingDiff: [{\r\n            type: Input\r\n        }], pingDelay: [{\r\n            type: Input\r\n        }] }); })();\n\nclass NgxKerviComponent {\r\n    constructor() { }\r\n    ngOnInit() {\r\n    }\r\n}\r\nNgxKerviComponent.ɵfac = function NgxKerviComponent_Factory(t) { return new (t || NgxKerviComponent)(); };\r\nNgxKerviComponent.ɵcmp = ɵɵdefineComponent({ type: NgxKerviComponent, selectors: [[\"lib-ngx-kervi\"]], decls: 2, vars: 0, template: function NgxKerviComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵelementStart(0, \"p\");\r\n        ɵɵtext(1, \" ngx-kervi works! \");\r\n        ɵɵelementEnd();\r\n    } }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(NgxKerviComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'lib-ngx-kervi',\r\n                template: `\r\n    <p>\r\n      ngx-kervi works!\r\n    </p>\r\n  `,\r\n                styles: []\r\n            }]\r\n    }], function () { return []; }, null); })();\n\nclass TranslatePipe {\r\n    constructor(kerviService) {\r\n        this.kerviService = kerviService;\r\n    }\r\n    transform(value, args) {\r\n        return this.kerviService.text(value, value);\r\n    }\r\n}\r\nTranslatePipe.ɵfac = function TranslatePipe_Factory(t) { return new (t || TranslatePipe)(ɵɵdirectiveInject(NGXKerviService)); };\r\nTranslatePipe.ɵpipe = ɵɵdefinePipe({ name: \"translate\", type: TranslatePipe, pure: true });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(TranslatePipe, [{\r\n        type: Pipe,\r\n        args: [{\r\n                name: 'translate'\r\n            }]\r\n    }], function () { return [{ type: NGXKerviService }]; }, null); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass NGXKerviPipesModule {\r\n}\r\nNGXKerviPipesModule.ɵmod = ɵɵdefineNgModule({ type: NGXKerviPipesModule });\r\nNGXKerviPipesModule.ɵinj = ɵɵdefineInjector({ factory: function NGXKerviPipesModule_Factory(t) { return new (t || NGXKerviPipesModule)(); }, providers: [], imports: [[]] });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵɵsetNgModuleScope(NGXKerviPipesModule, { declarations: [TranslatePipe], exports: [TranslatePipe] }); })();\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(NGXKerviPipesModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [],\r\n                exports: [\r\n                    TranslatePipe\r\n                ],\r\n                providers: [],\r\n                declarations: [\r\n                    TranslatePipe\r\n                ]\r\n            }]\r\n    }], null, null); })();\n\nclass NgxKerviModule {\r\n    constructor(injector) {\r\n        this.injector = injector;\r\n        setAppInjector(injector);\r\n    }\r\n}\r\nNgxKerviModule.ɵmod = ɵɵdefineNgModule({ type: NgxKerviModule });\r\nNgxKerviModule.ɵinj = ɵɵdefineInjector({ factory: function NgxKerviModule_Factory(t) { return new (t || NgxKerviModule)(ɵɵinject(Injector)); }, providers: [NGXKerviService, KerviTemplateService], imports: [[],\r\n        NGXKerviPipesModule] });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵɵsetNgModuleScope(NgxKerviModule, { declarations: [NgxKerviComponent,\r\n        KerviDashboardComponent,\r\n        KerviDashboardPanelComponent,\r\n        KerviControllerPadComponent,\r\n        KerviNumberComponent,\r\n        KerviStringComponent,\r\n        KerviBooleanComponent,\r\n        KerviColorComponent,\r\n        KerviDateTimeComponent,\r\n        KerviActionComponent,\r\n        KerviValueComponent,\r\n        KerviWidgetComponent,\r\n        KerviCameraComponent,\r\n        KerviUserLogComponent,\r\n        KerviDirectoryComponent,\r\n        KerviAppHealthComponent], exports: [NgxKerviComponent,\r\n        KerviDashboardComponent,\r\n        KerviDashboardPanelComponent,\r\n        KerviControllerPadComponent,\r\n        KerviNumberComponent,\r\n        KerviWidgetComponent,\r\n        KerviStringComponent,\r\n        KerviBooleanComponent,\r\n        KerviColorComponent,\r\n        KerviDateTimeComponent,\r\n        KerviActionComponent,\r\n        KerviCameraComponent,\r\n        KerviUserLogComponent,\r\n        KerviActionComponent,\r\n        KerviAppHealthComponent,\r\n        NGXKerviPipesModule] }); })();\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(NgxKerviModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [],\r\n                declarations: [\r\n                    NgxKerviComponent,\r\n                    KerviDashboardComponent,\r\n                    KerviDashboardPanelComponent,\r\n                    KerviControllerPadComponent,\r\n                    KerviNumberComponent,\r\n                    KerviStringComponent,\r\n                    KerviBooleanComponent,\r\n                    KerviColorComponent,\r\n                    KerviDateTimeComponent,\r\n                    KerviActionComponent,\r\n                    KerviValueComponent,\r\n                    KerviWidgetComponent,\r\n                    KerviCameraComponent,\r\n                    KerviUserLogComponent,\r\n                    KerviDirectoryComponent,\r\n                    KerviAppHealthComponent\r\n                ],\r\n                providers: [NGXKerviService, KerviTemplateService],\r\n                exports: [\r\n                    NgxKerviComponent,\r\n                    KerviDashboardComponent,\r\n                    KerviDashboardPanelComponent,\r\n                    KerviControllerPadComponent,\r\n                    KerviNumberComponent,\r\n                    KerviWidgetComponent,\r\n                    KerviStringComponent,\r\n                    KerviBooleanComponent,\r\n                    KerviColorComponent,\r\n                    KerviDateTimeComponent,\r\n                    KerviActionComponent,\r\n                    KerviCameraComponent,\r\n                    KerviUserLogComponent,\r\n                    KerviActionComponent,\r\n                    KerviAppHealthComponent,\r\n                    NGXKerviPipesModule\r\n                ]\r\n            }]\r\n    }], function () { return [{ type: Injector }]; }, null); })();\n\n/*\r\n * Public API Surface of ngx-kervi\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AppInjector, KerviActionComponent, KerviAppHealthComponent, KerviBooleanComponent, KerviCameraComponent, KerviColorComponent, KerviControllerPadComponent, KerviDashboardComponent, KerviDashboardPanelComponent, KerviDateTimeComponent, KerviDirectoryComponent, KerviNumberComponent, KerviStringComponent, KerviTemplateService, KerviUserLogComponent, KerviWidgetComponent, NGXKerviPipesModule, NGXKerviService, NgxKerviComponent, NgxKerviModule, TranslatePipe };\n//# sourceMappingURL=ngx-kervi.js.map\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { NGXKerviService } from \"ngx-kervi\";\r\nimport { ConnectionState } from \"ngx-kervi\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  private currentPage=null;\r\n  \r\n  constructor (private kerviService:NGXKerviService, private router:Router, private route:ActivatedRoute){\r\n    var self = this;\r\n    \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n\r\n    this.kerviService.connectionState$.subscribe(function(connectedState){\r\n      console.log(\"connected service state\",connectedState, self);\r\n      if (connectedState == ConnectionState.disconnected){\r\n        self.router.navigate(['/connect']);\r\n      }\r\n      if (connectedState == ConnectionState.loading){\r\n      }\r\n      if (connectedState == ConnectionState.authenticate){\r\n        self.router.navigate(['/authenticate']);\r\n      }\r\n      if (connectedState == ConnectionState.connected){\r\n        if (self.currentPage)\r\n          self.router.navigate([self.currentPage]);\r\n        else {\r\n          var defaultDashboard = self.kerviService.getDefaultDashboard();\r\n          self.router.navigate(['/'+defaultDashboard.componentType+'/'+defaultDashboard.id])\r\n        }\r\n      }\r\n    });\r\n\r\n    setTimeout(function(){\r\n      self.kerviService.connect();\r\n    },0)\r\n    \r\n  }\r\n}\r\n","<router-outlet>\r\n              \r\n</router-outlet>\r\n<!-- <kervi-user-messages></kervi-user-messages> -->","\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\n\r\nimport { NgxKerviModule } from 'ngx-kervi';\r\nimport { NGXKerviPipesModule } from 'ngx-kervi'\r\nimport { KerviZorroModule  } from 'kervi-zorro'\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n\r\nimport { NgZorroAntdModule, NZ_I18N, NZ_ICONS, en_US } from 'ng-zorro-antd';\r\nimport { IconDefinition } from '@ant-design/icons-angular';\r\nimport * as AllIcons from '@ant-design/icons-angular/icons'\r\nimport { registerLocaleData } from '@angular/common';\r\nimport en from '@angular/common/locales/en';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ConnectComponent } from './connect/connect.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { MediaComponent } from './media/media.component' ;\r\nimport { ImgViewerComponent } from './image-viewer/image-viewer.component'\r\n\r\n\r\nregisterLocaleData(en);\r\n\r\nconst antDesignIcons = AllIcons as {\r\n  [key: string]: IconDefinition;\r\n};\r\nconst icons: IconDefinition[] = Object.keys(antDesignIcons).map(key => antDesignIcons[key])\r\n\r\n\r\nconst ROUTES: Routes = [\r\n\r\n  { path: 'connect', component: ConnectComponent },\r\n  { path: 'authenticate', component: LoginComponent },\r\n  { path: 'dashboard/:name', component: DashboardComponent },\r\n  { path: 'media', component: MediaComponent },\r\n  {\r\n    path: '',\r\n    redirectTo: '',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    ConnectComponent,\r\n    DashboardComponent,\r\n    MediaComponent,\r\n    ImgViewerComponent\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    NgxKerviModule,\r\n    NGXKerviPipesModule,\r\n    KerviZorroModule,\r\n    FlexLayoutModule,\r\n    NgZorroAntdModule,\r\n    //NgxKerviComponentsModule,\r\n    RouterModule.forRoot(ROUTES)\r\n  ],\r\n  providers:[\r\n    { provide: NZ_I18N, useValue: en_US },\r\n    { provide: NZ_ICONS, useValue: icons }\r\n  ],\r\n  \r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ConnectionState } from \"ngx-kervi\";\r\nimport { NGXKerviService } from \"ngx-kervi\";\r\n@Component({\r\n  selector: 'app-connect',\r\n  templateUrl: './connect.component.html',\r\n  styleUrls: ['./connect.component.css']\r\n})\r\nexport class ConnectComponent implements OnInit {\r\n\r\n  current = 1;\r\n\r\n  constructor(private kerviService:NGXKerviService,) { \r\n    \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    this.kerviService.connectionState$.subscribe(function(connectedState){\r\n      console.log(\"connected service state\",connectedState, self);\r\n      if (connectedState == ConnectionState.disconnected){\r\n        self.current=1\r\n      }\r\n      if (connectedState == ConnectionState.loading){\r\n        self.current=2\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<nz-layout>\r\n    <nz-content class=\"kervi-app-initializing\">\r\n      <div nz-row>\r\n        <div nz-col nzSpan=\"12\" nzOffset=\"9\">\r\n          <nz-steps [nzCurrent]=\"current\" nzDirection=\"vertical\">\r\n            <nz-step nzTitle=\"Initializing\" nzDescription=\"&nbsp;\" nzIcon=\"setting\" ></nz-step>\r\n            <nz-step nzTitle=\"Connecting\" nzDescription=\"&nbsp;\" nzIcon=\"wifi\"></nz-step>\r\n            <nz-step nzTitle=\"Loading dashboards\" nzDescription=\"&nbsp;\" nzIcon=\"download\"></nz-step>\r\n          </nz-steps>\r\n        </div>\r\n      </div>\r\n    </nz-content>\r\n</nz-layout>\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router} from '@angular/router';\r\nimport { KerviDashboardComponent, NGXKerviService, ConnectionState} from 'ngx-kervi'\r\nimport { DashboardPanelComponent } from 'kervi-zorro'\r\ndeclare var window:any;\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent extends KerviDashboardComponent implements OnInit {\r\n  @ViewChild(\"leftPad\") leftPad:ElementRef;\r\n  @ViewChild(\"rightPad\") rightPad:ElementRef;\r\n  private padSize=180;\r\n  private isConnected:false;\r\n  public leftPadTop:number;\r\n  public leftPadLeft:number;\r\n\r\n  public rightPadTop:number;\r\n  public rightPadLeft:number;\r\n  cameraIdx = \"\";\r\n  mediaHidden = true;\r\n\r\n  constructor(private router:Router, private activatedRoute:ActivatedRoute ) {\r\n    super();\r\n   }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    this.cameraId$.subscribe(function(camId){\r\n      console.log(\"db cid\", camId);\r\n      this.cameraIdx = camId;\r\n    })\r\n    this.kerviService.componentsChanged$.subscribe(function() {\r\n      console.log(\"adb changed\");\r\n      const id = self.dashboardId;\r\n      //self.loadDashboard(\"0\");\r\n      self.loadDashboard(id);\r\n      \r\n      \r\n    });\r\n\r\n    this.activatedRoute.params.subscribe(params => {\r\n      var dashboardId = params['name'];\r\n      console.log(\"dbi\", dashboardId);\r\n      this.loadDashboard(dashboardId);\r\n      \r\n      console.log(\"rid\", dashboardId);\r\n      setTimeout(() => {\r\n        var h = window.innerHeight;\r\n        var w = window.innerWidth;\r\n\r\n        self.leftPadTop = h / 2 - self.padSize/2\r\n        self.leftPadLeft = w / 4 - self.padSize/2 \r\n        \r\n        self.rightPadTop = h / 2 - self.padSize/2\r\n        self.rightPadLeft = w - w / 4 - self.padSize/2 \r\n        \r\n\r\n      }, 0);\r\n    });\r\n  }\r\n\r\n  handleMediaClose(): void {\r\n    console.log('click ok');\r\n    this.mediaHidden = true;\r\n  }\r\n\r\n}\r\n","<nz-layout *ngIf=\"dashboard\">\r\n\t<nz-header *ngIf='!isAppEmpty'>\r\n\t\t<div nz-row>\r\n\t\t\t<div nz-col nzSpan=\"6\">\t\t\r\n\t\t\t\t<ul nz-menu  nzMode=\"horizontal\" class=\"kervi-main-menu\">\r\n\t\t\t\t\t<li nz-submenu  *ngIf=\"showMenu\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<span title><i nz-icon nzTheme=\"twotone\" type=\"dashboard\" [nzTwotoneColor]=\"'#9fd037'\"></i> {{dashboard.name}}</span>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<ng-container *ngIf=\"dashboards.length > 1\">\r\n\t\t\t\t\t\t\t\t<li nz-menu-item *ngFor=\"let dashboard of dashboards\" [routerLink]=\"['/dashboard', dashboard.id]\">{{dashboard.name}}</li>\r\n\t\t\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\t\t<li *ngIf=\"authenticated && dashboards.length > 1\">\r\n\t\t\t\t\t\t\t\t<nz-divider></nz-divider>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li nz-menu-item *ngIf=\"authenticated && anonymous\" href=\"javascript: return false;\" (click)=\"logoff($event)\" ><i nz-icon type=\"login\"></i> {{('login' | translate)}}</li>\r\n\t\t\t\t\t\t\t<li nz-menu-item *ngIf=\"authenticated && !anonymous\" href=\"javascript: return false;\" (click)=\"logoff($event)\"><i nz-icon type=\"logout\"></i>{{('logout' | translate)}}</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li nz-menu-item *ngIf=\"showPanelController\">\r\n\t\t\t\t\t\t<a  (click)=\"dashboardPanelsHidden = !dashboardPanelsHidden;\">\r\n\t\t\t\t\t\t\t<i nz-icon type=\"sliders\" nzTheme=\"twotone\" [nzTwotoneColor]=\"'#9fd037'\"></i>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"kervi-sys-panel\" *ngIf=\"dashboard && dashboard.sysPanel\" nz-col nzSpan=\"18\">\r\n\t\t\t\t<kervi-dashboard-panel [dashboardSizes]=\"dashboardSizes\" [inline]=\"true\" [panel]=\"dashboard.sysPanel\" ></kervi-dashboard-panel>\r\n\t\t\t\t&nbsp;<a  (click)=\"mediaHidden = !mediaHidden;\">\r\n\t\t\t\t\t\t<i nz-icon nzType=\"folder-open\" nzTheme=\"twotone\" [nzTwotoneColor]=\"'#9fd037'\"> </i>\r\n\t\t\t\t</a>\r\n\t\t\t\t<kervi-message-button></kervi-message-button>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n\t</nz-header>\r\n\t\t\r\n\t<nz-content >\r\n<p>x</p>\r\n\t\t<ng-container *ngIf=\"isAppEmpty\">\r\n\t\t\t<div nz-row>\r\n\t\t\t\t<div nz-col nzSpan=\"12\" nzOffset=\"6\">\r\n\t\t\t\t\t<nz-alert\r\n\t\t\t\t\t\tnzType=\"error\"\r\n\t\t\t\t\t\t[nzMessage] =\"'hello_world' | translate\"\r\n\t\t\t\t\t\t[nzDescription]=\" 'empty_app' | translate\"\r\n\t\t\t\t\t\tnzShowIcon\t\r\n\t\t\t\t\t  >\r\n\t\t\t\t\t  </nz-alert>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</ng-container>\r\n\t\t<kervi-cam-viewer *ngIf=\"cameraId\" [isBackground]=\"true\" [cameraId]=\"(cameraId$| async)\" [linkParameters]=\"cameraParameters\"></kervi-cam-viewer>\r\n\t\t<div #leftPad class=\"kervi-controller-pad\" *ngIf=\"showLeftPad\" [style.left.px]=\"0\" [style.top.px]=\"65\" [style.bottom.px]=\"65\" [style.right.%]=\"66\" >\r\n\t\t\t<kervi-nipple-pad [autoCenter]=\"autoCenterLeftPad\" [XValue]=\"leftPadXValue\" [YValue]=\"leftPadYValue\" style=\"width: 100%; height: 100%;\"></kervi-nipple-pad>\r\n\t\t</div>\r\n\t\t<div #rightPad class=\"kervi-controller-pad\" *ngIf=\"showRightPad\" [style.left.%]=\"66\" [style.top.px]=\"65\" [style.bottom.px]=\"65\" [style.right.px]=\"0\" >\r\n\t\t\t<kervi-nipple-pad [autoCenter]=\"autoCenterRightPad\" [XValue]=\"rightPadXValue\" [YValue]=\"rightPadYValue\" style=\"width: 100%; height: 100%;\"></kervi-nipple-pad>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"kervi-panels\" fxLayout=\" column\" fxLayout.xs=\"column\" fxLayoutGap=\"0.5%\" fxLayoutAlign=\"\"  *ngIf=\"!dashboardPanelsHidden\" style=\"\">\r\n\t\t\t<ng-container *ngFor=\"let panel of dashboard.panels\">\r\n\t\t\t\t\t<kervi-dashboard-panel [fxFlex]=\"panel.parameters.width\" fxFlex.xs=\"100%\" [dashboardSizes]=\"defaultSizes\" [panel]=\"panel\"></kervi-dashboard-panel>\r\n\t\t\t\t\r\n\t\t\t</ng-container>\r\n\t\t</div>\r\n\t</nz-content>\r\n\t<nz-footer *ngIf='!isAppEmpty'>\r\n\t\t<div nz-col nzSpan=\"8\" style=\"text-align: left\">\r\n\t\t\t<kervi-dashboard-panel [inline]=\"true\" *ngIf=\"dashboard.footerLeftPanel\" [dashboardSizes]=\"defaultSizes\" [panel]=\"dashboard.footerLeftPanel\"></kervi-dashboard-panel>\r\n\t\t</div>\r\n\t\t<div nz-col nzSpan=\"8\" style=\"text-align:center\">\r\n\t\t\t<kervi-dashboard-panel [inline]=\"true\" *ngIf=\"dashboard.footerCenterPanel\" [dashboardSizes]=\"defaultSizes\" [panel]=\"dashboard.footerCenterPanel\"></kervi-dashboard-panel>\r\n\t\t</div>\r\n\t\t<div nz-col nzSpan=\"8\"  style=\"text-align: right\">\r\n\t\t\t<kervi-dashboard-panel [inline]=\"true\" *ngIf=\"dashboard.footerRightPanel\" [dashboardSizes]=\"defaultSizes\" [panel]=\"dashboard.footerRightPanel\"></kervi-dashboard-panel>\r\n\t\t\t<button nz-button nzShape=\"round\" (mousedown)=\"toggleFullScreen()\"><i nz-icon [nzType]=\"inFullScreen ? 'fullscreen' : 'fullscreen-exit'\" title=\"{{( 'toggle_screen' | translate)}}\"></i></button>\r\n\t\t</div>\r\n\t</nz-footer>\r\n</nz-layout>\r\n\r\n<nz-modal \r\n\tnzWrapClassName=\"vertical-center-modal\"\r\n\t[(nzVisible)]=\"!mediaHidden\"\r\n\tnzTitle=\"Media\"\r\n\t(nzOnCancel)=\"handleMediaClose()\"\r\n\t\r\n>\r\n<div style=\"display:inline-block;width:100%\"> <app-media ></app-media></div>\t\r\n\r\n</nz-modal>\r\n\r\n\r\n\r\n","\r\n//based on https://github.com/LZHD/ng-picture-viewer\r\n//Copyright 2019 Tim Wentzlau\r\n// Licensed under MIT\r\nimport {\r\n    AfterViewInit,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Inject,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Optional,\r\n    Output,\r\n    Renderer2\r\n  } from '@angular/core';\r\n  import {DOCUMENT} from '@angular/common';\r\n  import ImageViewer from 'iv-viewer';\r\n  import {FullScreenViewer} from 'iv-viewer';\r\n  import {ImgViewerConfig} from './image-viewer.config';\r\n  import {IvViewerType} from './interfaces/iv-viewer.type';\r\n  import {ImgViewerType} from './interfaces/img-viewer.type';\r\n\r\n  @Component({\r\n    selector: 'nz-picture-viewer',\r\n    templateUrl: './image-viewer.component.html',\r\n    styleUrls: ['./image-viewer.component.scss']\r\n  })\r\n  export class ImgViewerComponent implements OnInit, OnDestroy, AfterViewInit {\r\n    @Input() imgViewerClass: string;\r\n    @Input() images: string[] = [];\r\n    @Input() showOperate = true;\r\n    @Input() zoom = true;\r\n    @Input() rotate = true;\r\n    @Input() reset = true;\r\n    @Input() fullscreen = true;\r\n    @Input() download = true;\r\n    @Input() defaultName = 'download';\r\n    @Output() prevChange: EventEmitter<number> = new EventEmitter<number>();\r\n    @Output() nextChange: EventEmitter<number> = new EventEmitter<number>();\r\n    @Output() closeViewer: EventEmitter<number> = new EventEmitter();\r\n    ROTATE_ANGLE = 90;\r\n    imageViewer$: any;\r\n    fullScreenViewer$: any;\r\n    element: HTMLElement;\r\n    currentImgIndex = 1;\r\n    imgTotal = 0;\r\n    zoomValue = 100;\r\n    isVertical = false;\r\n    imgRotate = 0;\r\n    imgViewerConfig: ImgViewerConfig;\r\n    ivViewerType: IvViewerType;\r\n    imageViewerType: ImgViewerType;\r\n\r\n    constructor(\r\n      private el: ElementRef,\r\n      private renderer: Renderer2,\r\n      @Inject(DOCUMENT) private doc: Document,\r\n      @Optional() private config: ImgViewerConfig\r\n    ) {\r\n      this.element = this.el.nativeElement as HTMLElement;\r\n      this.imgViewerConfig = new ImgViewerConfig();\r\n      this.ivViewerType = this.imgViewerConfig.ivViewerType;\r\n      this.imageViewerType = this.imgViewerConfig.imageViewerType;\r\n      if (this.config && this.config.ivViewerType) {\r\n        this.ivViewerType = Object.assign(this.ivViewerType, this.config.ivViewerType);\r\n      }\r\n      if (this.config && this.config.imageViewerType) {\r\n        this.imageViewerType = Object.assign(this.imageViewerType, this.config.imageViewerType);\r\n      }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n      this.imgTotal = this.images.length;\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n      this.initImgViewer();\r\n    }\r\n\r\n    zoomInImg(): void {\r\n      this.zoomValue += 10;\r\n      this.imageViewer$.zoom(this.zoomValue);\r\n    }\r\n\r\n    zoomOutImg(): void {\r\n      if (this.zoomValue === 100) {\r\n        return;\r\n      }\r\n      this.zoomValue -= 10;\r\n      if (this.zoomValue < 0) {\r\n        this.zoomValue = 0;\r\n      }\r\n      this.imageViewer$.zoom(this.zoomValue);\r\n    }\r\n\r\n    rotateImg(isClockwise: boolean): void {\r\n      this.beforeRotateImg().then((time: number) => {\r\n        if (isClockwise) {\r\n          this.imgRotate += this.ROTATE_ANGLE;\r\n        } else {\r\n          this.imgRotate -= this.ROTATE_ANGLE;\r\n        }\r\n        this.isVertical = !this.isVertical;\r\n        time <= 0 ? this.addImgRotate() : setTimeout(() => this.addImgRotate(), time);\r\n      });\r\n    }\r\n\r\n    fullscreenImg(): void {\r\n      this.beforeRotateImg().then((time: number) => {\r\n        if (time <= 0) {\r\n          this.fullScreenViewer$.show(this.images[this.currentImgIndex - 1]);\r\n          this.addImgRotate(false);\r\n        } else {\r\n          setTimeout(() => {\r\n            this.fullScreenViewer$.show(this.images[this.currentImgIndex - 1]);\r\n            this.addImgRotate(false);\r\n          }, time);\r\n        }\r\n      });\r\n    }\r\n\r\n    downloadImg(): void {\r\n      const download = this.renderer.createElement('a');\r\n      this.renderer.setAttribute(download, 'download', `${this.defaultName}-${this.currentImgIndex}`);\r\n      this.renderer.setAttribute(download, 'display', 'none');\r\n      this.renderer.setAttribute(download, 'href', this.images[this.currentImgIndex - 1]);\r\n      this.renderer.setAttribute(download, 'target', '_blank');\r\n      this.renderer.appendChild(this.element, download);\r\n      download.click();\r\n      this.renderer.removeChild(this.renderer, download);\r\n    }\r\n\r\n    prevImg(): void {\r\n      this.isVertical = false;\r\n      this.currentImgIndex--;\r\n      if (this.currentImgIndex <= 0) {\r\n        this.currentImgIndex = this.imgTotal;\r\n      }\r\n      //this.showImg();\r\n      this.prevChange.emit(this.currentImgIndex);\r\n    }\r\n\r\n    nextImg(): void {\r\n      this.isVertical = false;\r\n      this.currentImgIndex++;\r\n      if (this.currentImgIndex > this.imgTotal) {\r\n        this.currentImgIndex = 1;\r\n      }\r\n      //this.showImg();\r\n      this.nextChange.emit(this.currentImgIndex);\r\n    }\r\n\r\n    closeImageViewer(){\r\n      this.closeViewer.emit();\r\n    }\r\n\r\n    private initImgViewer(): void {\r\n      this.imageViewer$ = new ImageViewer(this.element.querySelector('.img-viewer-panel-body-content'), this.ivViewerType);\r\n      this.fullScreenViewer$ = new FullScreenViewer(this.ivViewerType);\r\n      //this.showImg();\r\n    }\r\n\r\n    private addImgRotate(isAnimation = true): void {\r\n      let scale = '';\r\n      if (this.isVertical && this.isImgOverVertical()) {\r\n        scale = `scale(${this.getScale()})`;\r\n      }\r\n      const rotate = `rotate(${this.imgRotate}deg)`;\r\n      if (isAnimation) {\r\n        this.addTransition('iv-snap-image');\r\n        this.addTransition('iv-small-image');\r\n      }\r\n      this.setImgRotate('iv-snap-image', rotate, scale);\r\n      this.setImgRotate('iv-small-image', rotate, scale);\r\n      setTimeout(() => {\r\n        if (isAnimation) {\r\n          this.removeAnimation('iv-snap-image');\r\n          this.removeAnimation('iv-small-image');\r\n        }\r\n      }, 500);\r\n    }\r\n\r\n    private async beforeRotateImg(): Promise<any> {\r\n      this.zoomValue = 100;\r\n      const time: number = this.imageViewer$._state.zoomValue - this.zoomValue;\r\n      await this.imageViewer$.resetZoom();\r\n      await this.imageViewer$.refresh();\r\n      return time === 0 ? 0 : 500;\r\n    }\r\n\r\n    private beforeShowImg(): void {\r\n      this.imgRotate = 0;\r\n      this.isVertical = false;\r\n      const currentImg = this.element.querySelector('.iv-small-image');\r\n      if (!!currentImg) {\r\n        this.renderer.removeChild(this.element, currentImg);\r\n      }\r\n      this.setStyle('iv-loader', 'visibility', 'auto');\r\n      this.setStyle('options-image-viewer', 'visibility', 'inherit');\r\n    }\r\n\r\n    showImg(): void {\r\n      this.beforeShowImg();\r\n      \r\n      this.imageViewer$.load(this.images[0]);\r\n    }\r\n\r\n    private isImgOverVertical(): boolean {\r\n      const imgViewerHeight = this.element.clientHeight;\r\n      const currentImgWidth = this.element.querySelector('.iv-small-image').clientWidth;\r\n      return imgViewerHeight < currentImgWidth + 10;\r\n    }\r\n\r\n    private getScale(): number {\r\n      const imgViewerHeight = this.element.querySelector('.img-viewer-panel-body-content').clientHeight;\r\n      const currentImgWidth = this.element.querySelector('.iv-small-image').clientWidth;\r\n      const differenceWidth = currentImgWidth - imgViewerHeight;\r\n      if (differenceWidth >= 250 && differenceWidth < 300) {\r\n        return differenceWidth / imgViewerHeight - 0.1;\r\n      } else if (differenceWidth >= 300 && differenceWidth < 400) {\r\n        return differenceWidth / imgViewerHeight - 0.15;\r\n      } else if (differenceWidth >= 400) {\r\n        return differenceWidth / imgViewerHeight - 0.32;\r\n      } else if (differenceWidth < 0) {\r\n        return 1;\r\n      }\r\n      return 0.6;\r\n    }\r\n\r\n    private addTransition(node): void {\r\n      this.setStyle(node, 'transition', '0.5s linear');\r\n    }\r\n\r\n    private removeAnimation(node): void {\r\n      this.setStyle(node, 'transition', 'auto');\r\n    }\r\n\r\n    private setImgRotate(node, roate, scale): void {\r\n      this.setStyle(node, 'transform', `${roate} ${scale}`);\r\n    }\r\n\r\n    private setStyle(node, name, value): void {\r\n      const elements = this.doc.querySelectorAll(`.${node}`);\r\n      elements.forEach(ele => this.renderer.setStyle(ele, name, value));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n      if (!!this.imageViewer$) {\r\n        this.imageViewer$ = this.imageViewer$.destroy();\r\n      }\r\n      if (!!this.fullScreenViewer$) {\r\n        this.fullScreenViewer$ = this.fullScreenViewer$.destroy();\r\n      }\r\n    }\r\n  }\r\n","<div class=\"img-viewer {{imgViewerClass}}\">\r\n    <div class=\"img-viewer-panel\">\r\n      <div class=\"img-viewer-panel-header\">\r\n        <div nz-row>\r\n          <div nz-col nzSpan=\"3\">\r\n              <i nz-icon (click)=\"closeImageViewer()\" nzType=\"rollback\" nzTheme=\"outline\"></i>\r\n          </div>\r\n        <div nz-col nzSpan=\"21\">\r\n          <div *ngIf=\"showOperate\" class=\"img-viewer-panel-header-operation\">\r\n            <span nz-tooltip nzTooltipPlacement=\"bottom\" [nzTooltipTitle]=\"imageViewerType.zoomInToolTip\" *ngIf=\"zoom\" (click)=\"zoomInImg()\"><i nz-icon nzType=\"zoom-in\"></i></span>\r\n            <span nz-tooltip nzTooltipPlacement=\"bottom\" [nzTooltipTitle]=\"imageViewerType.zoomOutToolTip\" *ngIf=\"zoom\" (click)=\"zoomOutImg()\"><i nz-icon nzType=\"zoom-out\"></i></span>\r\n            <span nz-tooltip nzTooltipPlacement=\"bottom\" [nzTooltipTitle]=\"imageViewerType.rotateLeftToolTip\" *ngIf=\"rotate\" (click)=\"rotateImg(false)\"><i nz-icon nzType=\"undo\"></i></span>\r\n            <span nz-tooltip nzTooltipPlacement=\"bottom\" [nzTooltipTitle]=\"imageViewerType.rotateRightToolTip\" *ngIf=\"rotate\" (click)=\"rotateImg(true)\"><i nz-icon nzType=\"redo\"></i></span>\r\n            <span nz-tooltip nzTooltipPlacement=\"bottom\" [nzTooltipTitle]=\"imageViewerType.resetToolTip\" *ngIf=\"reset\" (click)=\"showImg()\"><i nz-icon nzType=\"sync\"></i></span>\r\n            <span nz-tooltip nzTooltipPlacement=\"bottom\" [nzTooltipTitle]=\"imageViewerType.fullScreenToolTip\" *ngIf=\"fullscreen\" (click)=\"fullscreenImg()\"><i nz-icon nzType=\"fullscreen\"></i></span>\r\n            <span nz-tooltip nzTooltipPlacement=\"bottom\" [nzTooltipTitle]=\"imageViewerType.downloadToolTip\" *ngIf=\"download\" (click)=\"downloadImg()\"><i nz-icon nzType=\"download\"></i></span>\r\n          </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      <div class=\"img-viewer-panel-body\" [class.img-viewer-panel-body-has-footer]=\"images.length > 1\">\r\n        <div class=\"img-viewer-panel-body-content\">\r\n  \r\n        </div>\r\n        <span *ngIf=\"imgTotal > 1\" class=\"img-viewer-panel-body-prev\" (click)=\"prevImg()\"><i nz-icon nzType=\"left\"></i></span>\r\n        <span *ngIf=\"imgTotal > 1\" class=\"img-viewer-panel-body-next\" (click)=\"nextImg()\"><i nz-icon nzType=\"right\"></i></span>\r\n      </div>\r\n      <div *ngIf=\"imgTotal > 1\" class=\"img-viewer-panel-footer\">\r\n      {{currentImgIndex}} / {{imgTotal}}\r\n      </div>\r\n    </div>\r\n  </div>","import {IvViewerType} from './interfaces/iv-viewer.type';\r\nimport {ImgViewerType} from './interfaces/img-viewer.type';\r\n\r\nexport class ImgViewerConfig {\r\n  ivViewerType?: IvViewerType = {\r\n    zoomValue: 100,\r\n    maxZoom: 500,\r\n    snapView: false,\r\n    refreshOnResize: true,\r\n    zoomOnMouseWheel: true,\r\n  };\r\n  imageViewerType?: ImgViewerType = {\r\n    zoomInToolTip: 'Zoom in',\r\n    zoomOutToolTip: 'Zoom put',\r\n    rotateLeftToolTip: 'Rotate left',\r\n    rotateRightToolTip: 'Rotate right',\r\n    resetToolTip: 'Reset tools',\r\n    fullScreenToolTip: 'Full screen',\r\n    downloadToolTip: 'Download',\r\n  };\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { NGXKerviService } from 'ngx-kervi'\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  userName: AbstractControl;\r\n  password: AbstractControl;\r\n  invalidCredentials:boolean = false;\r\n  \r\n  \r\n  constructor(fb: FormBuilder, private kerviService:NGXKerviService) {\r\n    var self = this;\r\n    this.loginForm = fb.group({  \r\n    'userName':  ['', Validators.required],\r\n    'password':  ['', Validators.required]  \r\n    });\r\n    \r\n    this.userName = this.loginForm.controls['userName'];\r\n    this.password = this.loginForm.controls['password']; \r\n   }\r\n\r\n   submitForm(): void {\r\n     var self = this;\r\n     if (this.loginForm.valid){\r\n      console.log(\"fv\");\r\n      this.kerviService.authenticate(this.userName.value, this.password.value)\r\n      .then(function(){\r\n         console.log(\"login ok\");\r\n       }).catch(function(){\r\n         console.log(\"login error\");\r\n         self.invalidCredentials=true;\r\n       });\r\n     } else {\r\n       console.log(\"fve\");\r\n    //   // for (const i in this.loginForm.controls) {\r\n    //   //   this.loginForm.controls[i].markAsDirty();\r\n    //   //   this.loginForm.controls[i].updateValueAndValidity();\r\n    //   // }\r\n     }\r\n    \r\n  } \r\n  ngOnInit() {\r\n  }\r\n}\r\n","<nz-layout>\r\n  <nz-content class=\"kervi-app-initializing\">\r\n    <div nz-row>\r\n      <div nz-col nzSpan=\"12\" nzOffset=\"6\">\r\n        <form nz-form \r\n          [formGroup]=\"loginForm\" \r\n          (ngSubmit)=\"submitForm()\"\r\n        >\r\n            <nz-form-item>\r\n              <nz-form-control>\r\n                <nz-input-group [nzPrefix]=\"prefixUser\">\r\n                  <input formControlName=\"userName\" nz-input placeholder=\"Username\" />\r\n                </nz-input-group>\r\n                <nz-form-explain *ngIf=\"loginForm.get('userName')?.dirty && loginForm.get('userName')?.errors\"\r\n                  >Please input your username!</nz-form-explain\r\n                >\r\n              </nz-form-control>\r\n            </nz-form-item>\r\n            <nz-form-item>\r\n              <nz-form-control>\r\n                <nz-input-group [nzPrefix]=\"prefixLock\">\r\n                  <input formControlName=\"password\" nz-input type=\"password\" placeholder=\"Password\" />\r\n                </nz-input-group>\r\n                <nz-form-explain *ngIf=\"loginForm.get('password')?.dirty && loginForm.get('password')?.errors\"\r\n                  >Please input your Password!</nz-form-explain\r\n                >\r\n              </nz-form-control>\r\n            </nz-form-item>\r\n            <nz-form-item>\r\n              <nz-form-control>\r\n                <button nz-button nzType=\"primary\" [disabled]=\"!loginForm.valid\">Log in</button>\r\n                <nz-form-explain *ngIf=\"invalidCredentials\"\r\n                  >Invalid user name or password</nz-form-explain\r\n                >\r\n              </nz-form-control>\r\n            </nz-form-item>\r\n          </form>\r\n          <ng-template #prefixUser><i nz-icon type=\"user\"></i></ng-template>\r\n          <ng-template #prefixLock><i nz-icon type=\"lock\"></i></ng-template>\r\n      </div>\r\n    </div>\r\n  </nz-content>\r\n</nz-layout>","// Copyright (c) 2019, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\r\nimport { KerviDirectoryComponent } from 'ngx-kervi';\r\nimport { NzFormatEmitEvent, NzTreeNodeOptions, NzTreeComponent } from 'ng-zorro-antd';\r\nimport { ImgViewerComponent } from '../image-viewer/image-viewer.component';\r\n\r\n@Component({\r\n  selector: 'app-media',\r\n  templateUrl: './media.component.html',\r\n  styleUrls: ['./media.component.css']\r\n})\r\nexport class MediaComponent extends KerviDirectoryComponent implements OnInit {\r\n  @ViewChild('nzTreeComponent') nzTreeComponent: NzTreeComponent;\r\n  @ViewChild('imageViewer', { static: true }) imageViewer: ImgViewerComponent;\r\n  @Input() files = [\r\n\r\n  ];\r\n  showImageViewer = false;\r\n  directoryFiles = {};\r\n\r\n\r\n  @Input() nodes: NzTreeNodeOptions[] = [\r\n    { title: 'root', key: '/' }\r\n  ];\r\n\r\n  defaultExpandedKeys = [];\r\n\r\n  constructor( ) {\r\n    super();\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  nzEvent(event: Required<NzFormatEmitEvent>): void {\r\n    console.log('trev', event);\r\n    const node = event.node;\r\n    if (event.eventName === 'click') {\r\n      this.files = [];\r\n      this.kerviService.GetDirectory(node.key).then( d => {\r\n        const files = d.files$.getValue();\r\n        for(const file of files) {\r\n          if (file.isFile){\r\n            this.kerviService.GetThumbnail(file.path).then( t =>{\r\n              this.files.push( { title: file.name, key: file.path, thumb: t});\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n    if (event.eventName === 'expand') {\r\n      if (node && node.getChildren().length === 0 && node.isExpanded) {\r\n        this.kerviService.GetDirectory(node.key).then( d => {\r\n          const files = d.files$.getValue();\r\n          const dirs = [];\r\n          for(const file of files) {\r\n            if (!file.isFile) {\r\n              dirs.push({ title: file.name, key: file.path, isLeaf: false});\r\n            }\r\n          }\r\n          node.addChildren(dirs);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  showImage(filePath) {\r\n    this.showImageViewer = true;\r\n    this.imageViewer.imgTotal = this.files.length;\r\n    this.kerviService.GetFile(filePath).then( f => {\r\n      this.imageViewer.images = ['data:image/png;base64,' + f];\r\n      this.imageViewer.showImg();\r\n    });\r\n  }\r\n\r\n  nextImage(event){\r\n    console.log(\"ni\", event);\r\n    const filePath = this.files[this.imageViewer.currentImgIndex-1].key;\r\n    this.kerviService.GetFile(filePath).then( f => {\r\n      this.imageViewer.images = ['data:image/png;base64,' + f];\r\n      this.imageViewer.showImg();\r\n    });\r\n  }\r\n\r\n  closeViewer(){\r\n    this.showImageViewer = false;\r\n  }\r\n}\r\n","<div [hidden]=\"!showImageViewer\">\r\n\t<nz-picture-viewer (closeViewer)=\"closeViewer()\" (prevChange)='nextImage($event)' (nextChange)='nextImage($event)' #imageViewer></nz-picture-viewer>\r\n</div>\r\n<div [hidden]=\"showImageViewer\">\r\n\t<div style=\"max-height: 80%;overflow-y: auto; \" nz-col nzSpan=\"8\">\r\n\t\t<nz-tree [nzData]=\"nodes\" [nzExpandedKeys]=\"defaultExpandedKeys\" nzAsyncData (nzClick)=\"nzEvent($event)\" (nzExpandChange)=\"nzEvent($event)\"> </nz-tree>\r\n\t</div>\r\n\t<div style=\"min-height:40px;max-height: 300px;overflow-y: auto; border-left: 1px solid black;\" nz-col nzSpan=\"16\">\r\n\t\t\r\n\t\t<nz-empty *ngIf=\"files.length==0\" nzNotFoundContent=\"No files in folder\"></nz-empty>\r\n\t\t<div (dblclick)=\"showImage(file.key)\"  style=\"display: inline-block;margin-left:5px; margin-bottom:5px;\" *ngFor=\"let file of files\" nzHoverable >\r\n\t\t\t<img alt=\"example\" [attr.src]=\"'data:image/png;base64,' + file.thumb\" />\r\n\t\t</div>\r\n\t\t<!-- <nz-card style=\"display: inline-block;\" *ngFor=\"let file of files\" nzHoverable style=\"width:140px\" >\r\n\t\t\t<img alt=\"example\" [attr.src]=\"'data:image/png;base64,' + file.data\" />\r\n\t\t\t<ng-template #coverTemplate>\r\n\t\t\t\t\r\n\t\t\t</ng-template>\r\n\t\t</nz-card> -->\r\n\t\t\r\n\t</div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":"webpack:///"}