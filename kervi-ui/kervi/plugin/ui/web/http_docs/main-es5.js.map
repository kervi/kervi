{"version":3,"sources":["webpack:///D:/dev/kervi/kervi/kervi-ui/kervi/ui/web/dist/kervi-js/fesm2015/kervi-js.js","webpack:///D:/dev/kervi/kervi/kervi-ui/kervi/ui/web/dist/ngx-kervi/fesm2015/ngx-kervi.js","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/connect/connect.component.ts","webpack:///src/app/connect/connect.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/image-viewer/image-viewer.component.ts","webpack:///src/app/image-viewer/image-viewer.component.html","webpack:///src/app/image-viewer/image-viewer.config.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/media/media.component.ts","webpack:///src/app/media/media.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["KerviSpineBase","constructorOptions","isConnected","doAuthenticate","sessionId","queryHandlers","commandHandlers","eventHandlers","streamHandlers","rpcQueue","ready","messageId","sensors","controllers","sensorTypes","controllerTypes","visionRegions","application","allowAnonymous","firstOnOpen","messageCount","mpsTime","Date","mps","websocket","options","userName","password","address","onOpen","onClose","onAuthenticate","onAuthenticateFailed","onAuthenticateStart","onLogOff","onMPS","autoConnect","targetScope","protocol","apiToken","addEventHandler","eventName","id","callback","addStreamHandler","streamId","streamEvent","removeStreamHandler","console","log","extend","connect","self","setInterval","hangingNodes","query","now","push","call","p","i","length","key","hasOwnProperty","callbackTimeout","timeout","message","response","event","eventPath","value","args","n","h","streamBlob","streamTag","command","c","evt","setTimeout","stream_id","data","KerviWSSpine","cmd","send","JSON","stringify","streamEvents","WebSocket","binaryType","onopen","onclose","onmessage","parse","onMessage","jsonLen","Int32Array","slice","jsonBlob","utf8decoder","TextDecoder","j","decode","onerror","onError","fpsDiff","getTime","seconds","Math","round","messageType","authenticate","date","setTime","expires","toUTCString","session","document","cookie","handleRPCResponse","handleEvent","handleStream","handleCommand","arguments","Function","addRPCCallback","toString","e","KerviRMQSpine","exchange","topic","router_id","socketSession","frame","mqUrl","Stomp","client","heartbeat","incoming","app_id","api_token","headers","subscribe","replace","RegExp","onPing","onMQError","api_channel","appId","session_id","body","topic_tag","split","kwargs","qts","query_id","response_address","DashboardLink","component","dashboardId","panelId","sectionId","panelName","sectionName","parameters","KerviValue","componentType","typeName","dashboards","ui","type","orientation","visible","KerviValueType","kerviService","value$","name","isInput","prop","undefined","dashboardLinks","dashboardLink","v","notify","next","spine","sendCommand","ValueRangeType","ValueRange","range","start","end","warning","error","normal","KerviEnumOptionModel","messageOption","selected$","text","selected","components","SelectValue","lastSelected$","option","selectOptions","selectedOptions","selectedOption","NumberValue","qtyUnitTo","sparkline$","ranges","unit","qtyUnitFrom","application$","q","Qty","to","scalar","maxValue","minValue","spl","sparkline","spv","set","newValue","shift","StringValue","BooleanValue","DateTimeValue","subType","inputType","ColorValue","ComponentRef","Controller","inputs","outputs","actions","inputReferences","outputReferences","actionsReferences","template","ref","getComponent","DashboardSizes","valueWidth","buttonWidth","buttonHeight","switchWidth","switchHeight","gaugeWidth","gaugeHeight","DashboardMessageModel","timestamp","sourceId","source_id","sourceName","source_name","area","level","DashboardPanelComponent","linkId","componentId","DashboardPanelParameters","messageParameters","title","width","height","userLog","appHealth","logLength","layout","label","calcSize","app_health","isNaN","DashboardPanel","dashboard","messagePanel","subPanels","hasOnlyGroupPanels","uiParameters","panels","subMessagePanel","panel","source","subPanel","reload","sourceComponent","found","deleteComponents","splice","indexOf","DashboardBackgroundModel","cameraId","Dashboard","headerPanel","footerCenterPanel","footerLeftPanel","footerRightPanel","sysPanel","backgroundPanel","controllerPanel","LeftPadXPanel","LeftPadYPanel","RightPadXPanel","RightPadYPanel","currentPanel","isDefault","unitSize","sysPanels","sections","res","getDashboardPanelById","link","panelFound","newPanel","Action","runCommand","interruptCommand","running$","running","ComponentFactory","foundComponents","createComponentsRec","linkToDashboards","result","Array","isArray","subComponents","concat","subComponent","controller","updateReferences","addDashboardLink","FileBase","isFile","File","Directory","path","files$","files","file","is_file","fileEntry","directory","StreamEvent","Stream","events","events$","e_streamId","e_streamEvent","e_data","ConnectionState","UserLogStateType","KerviBaseService","lastAppPingTime","lastPingDiff","appPingDiff$","appPingDelay$","mps$","appInfo","texts","components$","connectionState$","disconnected","componentsChanged$","logMessages","logMessages$","lastLogMessage$","LogMessageCount$","LogMessageState$","streams","IPCReady$","authPromise","connected","dynamicValue","valueTS","pingDiff","pingDelay","ts","action","messages","newMessage","unshift","pop","hasErrors","hasWarnings","promise","Promise","resolve","reject","sendQuery","directoryFiles","updateFiles","thumbnail","defaultValue","asObservable","defaultDashboard","getDefaultDashboard","isEmpty","getComponentsByType","kerviSocketAddress","socketProtocol","httpProtocol","location","httpHost","window","hostname","onLogoff","sessionStorage","getItem","_resolveSelf","_rejectSelf","logoff","reset","retryCount","module_load","display","createComponents","FixControllerReferences","getComponentInfo","first","loading","ɵfac","KerviBaseService_Factory","t","ɵprov","token","factory","KerviJsComponent","KerviJsComponent_Factory","ɵcmp","selectors","decls","vars","KerviJsComponent_Template","rf","ctx","encapsulation","selector","styles","KerviJsModule","ɵmod","ɵinj","KerviJsModule_Factory","imports","ngJitMode","declarations","exports","NGXKerviService","NGXKerviService_Factory","ɵNGXKerviService_BaseFactory","KerviTemplateService","remUnit","parseFloat","getComputedStyle","documentElement","fontSize","rem","containerSize","lastIndexOf","px","convertRemToPixels","percentage","style","sheet","sheets","styleSheets","l","cssRules","k","rule","selectorText","possible","charAt","floor","random","colorName","cssClass","styleValue","getStyleRuleValue","KerviTemplateService_Factory","AppInjector","setAppInjector","injector","KerviDashboardComponent","dashboardSizes","isAppEmpty","showMenu","dashboardPanelsHidden","showPanelController","cameraParameters","cameraId$","authenticated","anonymous","showLeftPad","leftPadXValue","leftPadYValue","autoCenterLeftPad","showRightPad","rightPadXValue","rightPadYValue","autoCenterRightPad","inFullScreen","get","loadDashboard","stopPropagation","isAnonymous","padAutoCenter","doc","fullScreenElement","requestFullScreen","mozRequestFullScreen","cancelFullScreen","mozCancelFullScreen","KerviDashboardComponent_Factory","KerviDashboardComponent_Template","KerviDashboardPanelComponent","inline","inGroup","bodyOnly","showHeader","expanded","bodyComponents","headerComponents","footerComponents","templateService","getSizeValue","hasHeaderComponents","linkToHeader","KerviDashboardPanelComponent_Factory","KerviDashboardPanelComponent_Template","KerviControllerPadComponent","KerviControllerPadComponent_Factory","KerviControllerPadComponent_Template","KerviWidgetComponent","widgetType","linkParameters","KerviWidgetComponent_Factory","dashboardPanel","KerviWidgetComponent_Template","KerviValueComponent","valueId","KerviValueComponent_Factory","KerviValueComponent_Template","KerviNumberComponent","numberFormat","displayValue","displayUnit","displayType","currentIcon","ngOnInitValue","minIntegerDigits","minFractionDigits","maxFractionDigits","valueIcon","iconSection","icon","size","KerviNumberComponent_Factory","features","KerviNumberComponent_Template","KerviBooleanComponent","KerviBooleanComponent_Factory","KerviBooleanComponent_Template","KerviActionComponent","state","run","actionParameters","interrupt","interruptParameters","KerviActionComponent_Factory","KerviActionComponent_Template","styleUrls","KerviCameraComponent","streamObservers","isBackground","sourceStream","cameraSource","selectedSource","pan","tilt","camera","updateStreamObservers","cam","endsWith","cameraType","KerviCameraComponent_Factory","KerviCameraComponent_Template","KerviColorComponent","KerviColorComponent_Factory","KerviColorComponent_Template","KerviDateTimeComponent","dateTimeFormat","unit_system","datetime","time","KerviDateTimeComponent_Factory","KerviDateTimeComponent_Template","KerviStringComponent","KerviStringComponent_Factory","KerviStringComponent_Template","KerviUserLogComponent","lastMessage$","messages$","messageCount$","logState$","UserLogState","getLogMessages$","getLastLogMessage$","getLogMessageCount$","getLogState$","KerviUserLogComponent_Factory","KerviUserLogComponent_Template","KerviDirectoryComponent","KerviDirectoryComponent_Factory","KerviDirectoryComponent_Template","KerviAppHealthComponent","diff","KerviAppHealthComponent_Factory","KerviAppHealthComponent_Template","NgxKerviComponent","NgxKerviComponent_Factory","NgxKerviComponent_Template","TranslatePipe","TranslatePipe_Factory","ɵpipe","pure","NGXKerviPipesModule","NGXKerviPipesModule_Factory","providers","NgxKerviModule","NgxKerviModule_Factory","webpackEmptyAsyncContext","req","then","Error","code","keys","module","AppComponent","router","route","currentPage","connectedState","navigate","templateUrl","antDesignIcons","icons","Object","map","ROUTES","redirectTo","pathMatch","AppModule","provide","useValue","forRoot","bootstrap","ConnectComponent","current","DashboardComponent","activatedRoute","padSize","cameraIdx","mediaHidden","camId","params","innerHeight","w","innerWidth","leftPadTop","leftPadLeft","rightPadTop","rightPadLeft","handleMediaClose","ImgViewerComponent","el","renderer","config","images","showOperate","zoom","rotate","fullscreen","download","defaultName","prevChange","nextChange","closeViewer","ROTATE_ANGLE","currentImgIndex","imgTotal","zoomValue","isVertical","imgRotate","element","nativeElement","imgViewerConfig","ivViewerType","imageViewerType","assign","initImgViewer","imageViewer$","isClockwise","beforeRotateImg","addImgRotate","fullScreenViewer$","show","createElement","setAttribute","appendChild","click","removeChild","emit","querySelector","isAnimation","scale","isImgOverVertical","getScale","addTransition","setImgRotate","removeAnimation","_state","resetZoom","refresh","currentImg","setStyle","beforeShowImg","load","imgViewerHeight","clientHeight","currentImgWidth","clientWidth","differenceWidth","node","roate","elements","querySelectorAll","forEach","ele","destroy","closeImageViewer","Document","ImgViewerConfig","maxZoom","snapView","refreshOnResize","zoomOnMouseWheel","zoomInToolTip","zoomOutToolTip","rotateLeftToolTip","rotateRightToolTip","resetToolTip","fullScreenToolTip","downloadToolTip","LoginComponent","fb","invalidCredentials","loginForm","group","required","controls","valid","submitForm","MediaComponent","showImageViewer","nodes","defaultExpandedKeys","GetDirectory","d","getValue","GetThumbnail","thumb","getChildren","isExpanded","dirs","isLeaf","addChildren","filePath","imageViewer","GetFile","f","showImg","nextImage","nzEvent","environment","production","bootstrapModule","err"],"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","file":"main-es5.js","sourcesContent":["import { ɵɵdefineInjectable, ɵsetClassMetadata, Injectable, ɵɵdefineComponent, ɵɵelementStart, ɵɵtext, ɵɵelementEnd, Component, ɵɵdefineNgModule, ɵɵdefineInjector, ɵɵsetNgModuleScope, NgModule } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\nclass KerviSpineBase {\r\n    constructor(constructorOptions) {\r\n        this.constructorOptions = constructorOptions;\r\n        this.isConnected = false;\r\n        this.doAuthenticate = false;\r\n        this.sessionId = null;\r\n        this.queryHandlers = [];\r\n        this.commandHandlers = [];\r\n        this.eventHandlers = [];\r\n        this.streamHandlers = [];\r\n        this.rpcQueue = {};\r\n        this.ready = false;\r\n        this.messageId = 0;\r\n        this.sensors = {};\r\n        this.controllers = {};\r\n        this.sensorTypes = [];\r\n        this.controllerTypes = [];\r\n        this.visionRegions = [];\r\n        this.application = null;\r\n        this.allowAnonymous = true;\r\n        this.firstOnOpen = true;\r\n        this.messageCount = 0;\r\n        this.mpsTime = new Date;\r\n        this.mps = 0;\r\n        this.websocket = null;\r\n        this.options = {\r\n            userName: 'anonymous',\r\n            password: null,\r\n            address: null,\r\n            onOpen: null,\r\n            onClose: null,\r\n            onAuthenticate: null,\r\n            onAuthenticateFailed: null,\r\n            onAuthenticateStart: null,\r\n            onLogOff: null,\r\n            onMPS: null,\r\n            autoConnect: true,\r\n            targetScope: null,\r\n            protocol: 'ws',\r\n            apiToken: null\r\n        };\r\n        this.addEventHandler = function (eventName, id, callback) {\r\n        };\r\n        this.addStreamHandler = function (streamId, streamEvent, callback) {\r\n        };\r\n        this.removeStreamHandler = function (streamId, streamEvent, callback) {\r\n        };\r\n        console.log('Kervi base spine init', this.options, constructorOptions);\r\n        this.options = this.extend(this.options, constructorOptions);\r\n        console.log('kbo', this.options);\r\n        this.connect();\r\n        const self = this;\r\n        setInterval(function () {\r\n            var hangingNodes = [];\r\n            for (let id in self.rpcQueue) {\r\n                var query = self.rpcQueue[id];\r\n                if (query['callbackTimeout']) {\r\n                    if (Date.now() - query['ts'] > query['timeout']) {\r\n                        var callback = query['callbackTimeout'];\r\n                        hangingNodes.push(id);\r\n                        callback.call(self.options.targetScope);\r\n                    }\r\n                }\r\n            }\r\n            for (let id of hangingNodes) {\r\n                delete self.rpcQueue[id];\r\n            }\r\n        }, 1);\r\n    }\r\n    extend(...p) {\r\n        for (let i = 1; i < p.length; i++) {\r\n            for (let key in p[i]) {\r\n                if (p[i].hasOwnProperty(key)) {\r\n                    p[0][key] = p[i][key];\r\n                }\r\n            }\r\n        }\r\n        return p[0];\r\n    }\r\n    addRPCCallback(id, callback, callbackTimeout, timeout) {\r\n        if (callback) {\r\n            this.rpcQueue[id] = {\r\n                'callback': callback,\r\n                'callbackTimeout': callbackTimeout,\r\n                'timeout': timeout,\r\n                'ts': Date.now(),\r\n            };\r\n        }\r\n    }\r\n    handleRPCResponse(message) {\r\n        if (message.id in this.rpcQueue) {\r\n            var callback = this.rpcQueue[message.id]['callback'];\r\n            if (callback) {\r\n                delete this.rpcQueue[message.id];\r\n                callback.call(this.options.targetScope, message.response, message.response);\r\n            }\r\n        }\r\n    }\r\n    handleEvent(message) {\r\n        // console.log('ev', message)\r\n        const eventName = message.event;\r\n        const id = message.id;\r\n        let eventPath = eventName;\r\n        if (id) {\r\n            eventPath += '/' + id;\r\n        }\r\n        let value = null;\r\n        if (message.args && message.args.length) {\r\n            value = message.args[0];\r\n        }\r\n        for (var n = 0; (n < this.eventHandlers.length); n++) {\r\n            let h = this.eventHandlers[n];\r\n            if (h.eventName === eventPath)\r\n                h.callback.call(value, id, value);\r\n            else if (h.eventName === eventName)\r\n                h.callback.call(value, id, value);\r\n        }\r\n    }\r\n    handleStream(message, streamBlob) {\r\n        const streamTag = message.streamId + '/' + message.streamEvent;\r\n        for (let n = 0; (n < this.streamHandlers.length); n++) {\r\n            const h = this.streamHandlers[n];\r\n            if (h.streamTag === streamTag) {\r\n                h.callback.call(message.streamId, message.streamId, message.streamEvent, streamBlob);\r\n            }\r\n            else if (h.streamTag === message.streamId) {\r\n                h.callback.call(message.streamId, message.streamId, message.streamEvent, streamBlob);\r\n            }\r\n        }\r\n    }\r\n    handleCommand(message) {\r\n        console.log('cmd', this, message);\r\n        var command = message.command;\r\n        var args = null;\r\n        if (message.args && message.args.length) {\r\n            args = message.args[0];\r\n        }\r\n        for (var n = 0; (n < this.commandHandlers.length); n++) {\r\n            var c = this.commandHandlers[n];\r\n            if (c.command == command)\r\n                c.callback.call(this, args);\r\n        }\r\n    }\r\n    connect() {\r\n    }\r\n    onOpen(evt) {\r\n        console.log('Kervi open', this, evt);\r\n        this.isConnected = true;\r\n        this.eventHandlers = [];\r\n        this.streamHandlers = [];\r\n        this.commandHandlers = [];\r\n        this.queryHandlers = [];\r\n        console.log('Kervi spine ready');\r\n    }\r\n    onClose(evt) {\r\n        console.log('Kervi spine on close', evt);\r\n        this.isConnected = false;\r\n        const self = this;\r\n        if (this.options.onClose)\r\n            this.options.onClose.call(this.options.targetScope, evt);\r\n        this.firstOnOpen = true;\r\n        if (this.options.autoConnect) {\r\n            setTimeout(function () {\r\n                self.connect();\r\n            }, 1000);\r\n        }\r\n    }\r\n    authenticate(userName, password) {\r\n    }\r\n    logoff() {\r\n    }\r\n    onMessage(evt) {\r\n    }\r\n    onError(evt) {\r\n        console.log('Kervi on error', evt);\r\n    }\r\n    addCommandHandler(command, callback) {\r\n    }\r\n    addQueryHandler(query, callback) {\r\n    }\r\n    sendCommand(command, ...p) {\r\n    }\r\n    sendQuery(query, ...p) {\r\n    }\r\n    triggerEvent(eventName, id) {\r\n    }\r\n    streamData(stream_id, event, data) {\r\n    }\r\n}\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviWSSpine extends KerviSpineBase {\r\n    constructor(constructorOptions) {\r\n        super(constructorOptions);\r\n        this.constructorOptions = constructorOptions;\r\n        this.addEventHandler = function (eventName, id, callback) {\r\n            if (id)\r\n                this.eventHandlers.push({ 'eventName': eventName + '/' + id, callback: callback });\r\n            else\r\n                this.eventHandlers.push({ 'eventName': eventName, callback: callback });\r\n            var cmd = { id: this.messageId++, 'messageType': 'registerEventHandler', 'event': eventName, 'eventId': id };\r\n            //console.log('add event handler',cmd);\r\n            this.websocket.send(JSON.stringify(cmd));\r\n        };\r\n        this.addStreamHandler = function (streamId, streamEvents, callback) {\r\n            if (streamEvents && streamEvents.length > 0) {\r\n                for (let event of streamEvents) {\r\n                    this.streamHandlers.push({ 'streamTag': streamId + '/' + event, callback: callback });\r\n                    const cmd = {\r\n                        id: this.messageId++,\r\n                        'messageType': 'registerStreamHandler',\r\n                        'streamId': streamId,\r\n                        'streamEvent': event\r\n                    };\r\n                    console.log('as', cmd);\r\n                    this.websocket.send(JSON.stringify(cmd));\r\n                }\r\n            }\r\n            else {\r\n                this.streamHandlers.push({ 'streamTag': streamId, callback: callback });\r\n                const cmd = {\r\n                    id: this.messageId++,\r\n                    'messageType': 'registerStreamHandler',\r\n                    'streamId': streamId,\r\n                    'streamEvent': event\r\n                };\r\n                console.log('as', cmd);\r\n                this.websocket.send(JSON.stringify(cmd));\r\n            }\r\n        };\r\n        this.removeStreamHandler = function (streamId, streamEvents) {\r\n            if (streamEvents && streamEvents.length > 0) {\r\n                for (let event of streamEvents) {\r\n                    //this.streamHandlers.push({'streamTag': streamId + '/' + event, callback: callback});\r\n                    const cmd = {\r\n                        id: this.messageId++,\r\n                        'messageType': 'removeStreamHandler',\r\n                        'streamId': streamId,\r\n                        'streamEvent': event\r\n                    };\r\n                    console.log('as', cmd);\r\n                    this.websocket.send(JSON.stringify(cmd));\r\n                }\r\n            }\r\n            else {\r\n                //this.streamHandlers.push({'streamTag': streamId, callback: callback});\r\n                const cmd = {\r\n                    id: this.messageId++,\r\n                    'messageType': 'removeStreamHandler',\r\n                    'streamId': streamId,\r\n                    'streamEvent': event\r\n                };\r\n                console.log('as', cmd);\r\n                this.websocket.send(JSON.stringify(cmd));\r\n            }\r\n        };\r\n        console.log('kervi spine constructor');\r\n    }\r\n    connect() {\r\n        if (this.isConnected) {\r\n            console.log('Kervi is connected');\r\n            return;\r\n        }\r\n        const self = this;\r\n        this.websocket = new WebSocket(this.options.protocol + '://' + this.options.address);\r\n        this.websocket.binaryType = 'arraybuffer';\r\n        this.websocket.onopen = function (evt) {\r\n            console.log('kervi spine on open');\r\n            self.onOpen(evt);\r\n        };\r\n        this.websocket.onclose = function (evt) {\r\n            self.onClose(evt);\r\n        };\r\n        this.websocket.onmessage = function (evt) {\r\n            if (typeof evt.data === 'string') {\r\n                const message = JSON.parse(evt.data);\r\n                self.onMessage(message);\r\n            }\r\n            else {\r\n                const jsonLen = new Int32Array(evt.data.slice(0, 4))[0];\r\n                const jsonBlob = evt.data.slice(4, jsonLen + 4);\r\n                const streamBlob = evt.data.slice(4 + jsonLen);\r\n                const utf8decoder = new TextDecoder();\r\n                const j = utf8decoder.decode(jsonBlob);\r\n                self.onMessage(JSON.parse(j), streamBlob);\r\n            }\r\n        };\r\n        this.websocket.onerror = function (evt) {\r\n            self.onError(evt);\r\n        };\r\n    }\r\n    authenticate(userName, password) {\r\n        this.options.userName = userName;\r\n        this.options.password = password;\r\n        const cmd = { id: this.messageId++, 'messageType': 'authenticate', 'userName': userName, 'password': password };\r\n        console.log('swa', cmd);\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    }\r\n    logoff() {\r\n        const cmd = { id: this.messageId++, 'messageType': 'logoff', 'session': this.sessionId };\r\n        this.sessionId = null;\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    }\r\n    onMessage(message, streamBlob = null) {\r\n        // if (message.messageType !== 'stream') {\r\n        //     console.log('on m', message);\r\n        // }\r\n        const self = this;\r\n        const now = new Date();\r\n        const fpsDiff = now.getTime() - this.mpsTime.getTime();\r\n        const seconds = fpsDiff / 1000;\r\n        this.messageCount++;\r\n        if (seconds > 1) {\r\n            this.mps = Math.round(this.messageCount / seconds);\r\n            this.messageCount = 0;\r\n            this.mpsTime = now;\r\n            if (this.options.onMPS) {\r\n                this.options.onMPS.call(this.options.targetScope, this.mps);\r\n            }\r\n        }\r\n        if (message.messageType === 'authenticate') {\r\n            console.log('authenticate');\r\n            this.doAuthenticate = true;\r\n            if (this.options.userName)\r\n                this.authenticate(this.options.userName, this.options.password);\r\n            else\r\n                this.options.onAuthenticate.call(this.options.targetScope, message);\r\n        }\r\n        else if (message.messageType === 'authentication_failed') {\r\n            console.log('authentication failed', this.options.userName);\r\n            if (this.options.userName == 'anonymous') {\r\n                this.allowAnonymous = false;\r\n                this.options.userName = null;\r\n                this.options.password = null;\r\n                this.sessionId = null;\r\n                if (self.options.onLogOff) {\r\n                    self.options.onLogOff.call(self.options.targetScope, message);\r\n                }\r\n            }\r\n            else\r\n                this.options.onAuthenticateFailed.call(this.options.targetScope, message);\r\n        }\r\n        else if (message.messageType === 'session_authenticated') {\r\n            const date = new Date();\r\n            date.setTime(date.getTime() + (2 * 60 * 60 * 1000));\r\n            const expires = '; expires=' + date.toUTCString();\r\n            this.sessionId = message.session;\r\n            document.cookie = 'kervisession' + '=' + message.session + expires + '; path=/';\r\n            setTimeout(function () {\r\n                console.log('to', self.options);\r\n                if (self.options.onOpen)\r\n                    self.options.onOpen.call(self.options.targetScope, self.firstOnOpen, message);\r\n                self.firstOnOpen = false;\r\n            }, 100);\r\n        }\r\n        else if (message.messageType == 'session_logoff') {\r\n            if (self.options.onLogOff)\r\n                self.options.onLogOff.call(self.options.targetScope, message);\r\n            if (this.allowAnonymous && this.options.userName != 'anonymous') {\r\n                this.authenticate('anonymous', null);\r\n            }\r\n            else {\r\n                self.options.userName = null;\r\n                self.options.password = null;\r\n                self.sessionId = null;\r\n            }\r\n        }\r\n        else if (message.messageType == 'response')\r\n            this.handleRPCResponse(message);\r\n        else if (message.messageType == 'event')\r\n            this.handleEvent(message);\r\n        else if (message.messageType == 'stream')\r\n            this.handleStream(message, streamBlob);\r\n        else if (message.messageType == 'command')\r\n            this.handleCommand(message);\r\n        else\r\n            console.log('Kervi spine message unknown', this.rpcQueue, message);\r\n    }\r\n    onError(evt) {\r\n        console.log('Kervi on error', evt);\r\n    }\r\n    addCommandHandler(command, callback) {\r\n        this.commandHandlers.push({ command: command, callback: callback });\r\n        var cmd = { id: this.messageId++, 'messageType': 'registerCommandHandler', 'command': command };\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    }\r\n    ;\r\n    addQueryHandler(query, callback) {\r\n        this.queryHandlers.push({ query: query, callback: callback });\r\n        var cmd = { id: this.messageId++, 'messageType': 'registerQueryHandler', 'query': query };\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    }\r\n    ;\r\n    sendCommand(command, ...p) {\r\n        console.log('sec', arguments);\r\n        var args = [];\r\n        var callback = null;\r\n        for (var i = 0; (i < p.length); i++) {\r\n            if (p[i] instanceof Function)\r\n                callback = p[i];\r\n            else\r\n                args.push(p[i]);\r\n        }\r\n        var cmd = { id: this.messageId++, 'messageType': 'command', 'command': command, 'args': args };\r\n        if (callback && callback instanceof Function)\r\n            this.addRPCCallback(cmd.id.toString(), callback, null, 0);\r\n        console.log('sendCommand', this, cmd);\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    }\r\n    ;\r\n    sendQuery(query, ...p) {\r\n        var args = [];\r\n        var callback = null;\r\n        var callbackTimeout = null;\r\n        var timeout = 10000;\r\n        for (var i = 0; (i < p.length); i++) {\r\n            if (p[i] instanceof Function)\r\n                if (!callback)\r\n                    callback = p[i];\r\n                else\r\n                    callbackTimeout = p[i];\r\n            else {\r\n                if (callbackTimeout)\r\n                    timeout = p[i];\r\n                else\r\n                    args.push(p[i]);\r\n            }\r\n        }\r\n        var cmd = { id: this.messageId++, 'messageType': 'query', 'query': query, 'args': args };\r\n        this.addRPCCallback(cmd.id.toString(), callback, callbackTimeout, timeout);\r\n        console.log('sendQuery', callback, cmd);\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    }\r\n    ;\r\n    triggerEvent(eventName, id) {\r\n        var e = { id: this.messageId++, 'messageType': 'event', 'event': eventName, 'args': arguments };\r\n        this.websocket.send(JSON.stringify(e));\r\n    }\r\n    ;\r\n}\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviRMQSpine extends KerviSpineBase {\r\n    constructor(constructorOptions) {\r\n        super(constructorOptions);\r\n        this.constructorOptions = constructorOptions;\r\n        this.exchange = \"/exchange/\";\r\n        this.addEventHandler = function (eventName, id, callback) {\r\n            if (id)\r\n                this.eventHandlers.push({ \"eventName\": eventName + \"/\" + id, callback: callback });\r\n            else\r\n                this.eventHandlers.push({ \"eventName\": eventName, callback: callback });\r\n            var cmd = { id: this.messageId++, \"messageType\": \"registerEventHandler\", \"event\": eventName, \"eventId\": id };\r\n            this.websocket.send(this.exchange, { topic: \"registerEventHandler\", router_id: this.socketSession }, JSON.stringify(cmd));\r\n        };\r\n        console.log(\"Kervi io spine init y\", this.options, constructorOptions);\r\n    }\r\n    onMQError(frame) {\r\n        console.log(\"MQ error\", frame);\r\n    }\r\n    connect() {\r\n        if (this.isConnected) {\r\n            console.log(\"Kervi is connected\");\r\n            return;\r\n        }\r\n        var self = this;\r\n        //var mqUrl= this.options.protocol + \"://\" + this.options.address\r\n        var mqUrl = \"wss://mq.kervi.io:15673/ws\";\r\n        this.websocket = Stomp.client(mqUrl);\r\n        this.websocket.heartbeat.incoming = 0;\r\n        self.exchange = \"/exchange/\" + self.options.apiToken.app_id;\r\n        console.log(\"exchange\", self.exchange);\r\n        this.websocket.connect(self.options.apiToken.api_token, \"ui\", function (frame) {\r\n            console.log(\"MQ connect\", frame, self.websocket, this, self);\r\n            self.socketSession = frame.headers.session;\r\n            self.exchange = \"/exchange/\" + self.options.apiToken.app_id;\r\n            self.websocket.subscribe(self.exchange, function (message) {\r\n                console.log(\"mq \", message);\r\n                if (message.headers[\"topic\"])\r\n                    message.headers[\"topic\"] = message.headers[\"topic\"].replace(new RegExp(\"\\\\c\", \"g\"), \":\");\r\n                if (message.command == \"CONNECTED\") {\r\n                }\r\n                else if (message.headers[\"topic\"] == \"ping\")\r\n                    self.onPing(message);\r\n                else\r\n                    self.onMessage(message);\r\n            }, {});\r\n        }, self.onMQError, self.options.apiToken.api_channel);\r\n    }\r\n    onPing(message) {\r\n        console.log(\"onping\", this.options.appId, message);\r\n        var self = this;\r\n        if (!this.isConnected && message.headers[\"connection_id\"] == self.options.apiToken.app_id) {\r\n            this.onOpen(message);\r\n            this.websocket.send(self.exchange, { topic: \"session:new\", router_id: message.headers[\"router_id\"], session_id: this.socketSession }, \"{}\");\r\n        }\r\n    }\r\n    authenticate(userName, password) {\r\n        this.options.userName = userName;\r\n        this.options.password = password;\r\n        if (this.options.onAuthenticateStart)\r\n            this.options.onAuthenticateStart.call(this.options.targetScope);\r\n        var cmd = { id: this.messageId++, \"messageType\": \"authenticate\", \"userName\": this.options.userName, \"password\": this.options.password };\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    }\r\n    logoff() {\r\n        //this.options.userName = this.allowAnonymous ? \"anonymous\" : null;\r\n        //this.options.password = null;\r\n        var cmd = { id: this.messageId++, \"messageType\": \"logoff\", \"session\": this.sessionId };\r\n        this.sessionId = null;\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    }\r\n    onMessage(evt) {\r\n        console.log(\"on m\", evt);\r\n        var message = JSON.parse(evt.body);\r\n        var self = this;\r\n        var topic = evt.headers[\"topic\"];\r\n        if (topic == \"authenticate\") {\r\n            console.log(\"authenticate\");\r\n            this.doAuthenticate = true;\r\n            if (this.options.userName)\r\n                this.authenticate(this.options.userName, this.options.password);\r\n            else\r\n                this.options.onAuthenticate.call(this.options.targetScope, evt);\r\n        }\r\n        else if (topic == \"authentication_failed\") {\r\n            console.log(\"authentication failed\", this.options.userName);\r\n            if (this.options.userName == \"anonymous\") {\r\n                this.allowAnonymous = false;\r\n                this.options.userName = null;\r\n                this.options.password = null;\r\n                this.sessionId = null;\r\n                console.log(\"x\", self.options);\r\n                if (self.options.onLogOff) {\r\n                    console.log(\"x1\");\r\n                    self.options.onLogOff.call(self.options.targetScope, evt);\r\n                }\r\n            }\r\n            else\r\n                this.options.onAuthenticateFailed.call(this.options.targetScope, evt);\r\n        }\r\n        else if (topic == \"session_authenticated\") {\r\n            var date = new Date();\r\n            date.setTime(date.getTime() + (2 * 60 * 60 * 1000));\r\n            var expires = \"; expires=\" + date.toUTCString();\r\n            this.sessionId = message.session;\r\n            document.cookie = \"kervisession\" + \"=\" + message.session + expires + \"; path=/\";\r\n            setTimeout(function () {\r\n                if (self.options.onOpen)\r\n                    self.options.onOpen.call(self.options.targetScope, self.firstOnOpen, evt);\r\n                self.firstOnOpen = false;\r\n            }, 100);\r\n        }\r\n        else if (topic == \"session_logoff\") {\r\n            if (self.options.onLogOff)\r\n                self.options.onLogOff.call(self.options.targetScope, evt);\r\n            if (this.allowAnonymous && this.options.userName != \"anonymous\") {\r\n                this.authenticate(\"anonymous\", null);\r\n            }\r\n            else {\r\n                self.options.userName = null;\r\n                self.options.password = null;\r\n                self.sessionId = null;\r\n            }\r\n        }\r\n        else if (evt.headers[\"type\"] == \"query_response\") {\r\n            this.handleRPCResponse({ id: evt.headers[\"query_id\"], response: message });\r\n        }\r\n        else if (evt.headers[\"type\"] == \"event\") {\r\n            console.log(\"e\", evt);\r\n            var topic_tag = evt.headers[\"topic\"].split(\":\");\r\n            this.handleEvent({ event: topic_tag[1], id: topic_tag[2], args: message.args });\r\n        }\r\n        else if (message.messageType == \"command\")\r\n            this.handleCommand(message);\r\n        else\r\n            console.log(\"Kervi spine message unknown\", this.rpcQueue, evt);\r\n    }\r\n    onError(evt) {\r\n        console.log(\"Kervi on error\", evt);\r\n    }\r\n    addCommandHandler(command, callback) {\r\n        this.commandHandlers.push({ command: command, callback: callback });\r\n        var cmd = { id: this.messageId++, \"messageType\": \"registerCommandHandler\", \"command\": command };\r\n        //this.websocket.send(JSON.stringify(cmd));\r\n        this.websocket.send(this.exchange, { topic: \"registerCommandHandler\", router_id: this.socketSession }, JSON.stringify(cmd));\r\n    }\r\n    ;\r\n    addQueryHandler(query, callback) {\r\n        this.queryHandlers.push({ query: query, callback: callback });\r\n        var cmd = { id: this.messageId++, \"messageType\": \"registerQueryHandler\", \"query\": query };\r\n        this.websocket.send(this.exchange, { topic: \"registerQueryHandler\", router_id: this.socketSession }, JSON.stringify(cmd));\r\n    }\r\n    ;\r\n    sendCommand(command, ...p) {\r\n        console.log(\"sec\", arguments);\r\n        var args = [];\r\n        var callback = null;\r\n        for (var i = 0; (i < p.length); i++) {\r\n            if (p[i] instanceof Function)\r\n                callback = p[i];\r\n            else\r\n                args.push(p[i]);\r\n        }\r\n        /*if (p.length>1){\r\n            var argOffset=1;\r\n            if ( callback && callback instanceof Function )\r\n                argOffset+=1;\r\n            for (var i=argOffset;(i<arguments.length);i++){\r\n                args.push(arguments[i]);\r\n            }\r\n        }*/\r\n        var cmd = { id: this.messageId++, \"args\": args, kwargs: {} };\r\n        if (callback && callback instanceof Function)\r\n            this.addRPCCallback(cmd.id.toString(), callback, null, 0);\r\n        console.log(\"sendCommand\", this, cmd);\r\n        this.websocket.send(this.exchange, { topic: \"command:\" + command, router_id: this.socketSession }, JSON.stringify(cmd));\r\n    }\r\n    ;\r\n    sendQuery(query, ...p) {\r\n        var args = [];\r\n        var callback = null;\r\n        var callbackTimeout = null;\r\n        var timeout = 10000;\r\n        for (var i = 0; (i < p.length); i++) {\r\n            if (p[i] instanceof Function)\r\n                if (!callback)\r\n                    callback = p[i];\r\n                else\r\n                    callbackTimeout = p[i];\r\n            else {\r\n                if (callbackTimeout)\r\n                    timeout = p[i];\r\n                else\r\n                    args.push(p[i]);\r\n            }\r\n        }\r\n        var cmd = { id: this.messageId++, \"messageType\": \"query\", \"query\": query, \"args\": args, kwargs: [], qts: 0 };\r\n        this.addRPCCallback(cmd.id.toString(), callback, callbackTimeout, timeout);\r\n        console.log(\"sendQuery\", callback, cmd);\r\n        //this.websocket.send(JSON.stringify(cmd));\r\n        this.websocket.send(this.exchange, { topic: \"query:\" + query, qts: 0, query_id: cmd.id.toString(), router_id: this.socketSession, response_address: this.socketSession }, JSON.stringify(cmd));\r\n    }\r\n    ;\r\n    triggerEvent(eventName, id) {\r\n        var e = { id: this.messageId++, \"messageType\": \"event\", \"event\": eventName, \"args\": arguments };\r\n        this.websocket.send(JSON.stringify(e));\r\n    }\r\n    ;\r\n}\n\nclass DashboardLink {\r\n    /*constructor(dashboardId:string, sectionId:string, sectionName:string){\r\n        this.dashboardId = dashboardId;\r\n        this.sectionId = sectionId;\r\n        this.sectionName = sectionName;\r\n    }*/\r\n    constructor(component, message) {\r\n        this.dashboardId = message.dashboardId;\r\n        this.panelId = message.sectionId;\r\n        this.panelName = message.sectionName;\r\n        this.component = component;\r\n        this.parameters = message.parameters;\r\n    }\r\n}\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviValue {\r\n    constructor() {\r\n        this.componentType = \"KerviValue\";\r\n        this.typeName = null;\r\n        this.dashboards = [];\r\n        this.ui = {\r\n            type: \"\",\r\n            orientation: \"\",\r\n            visible: true\r\n        };\r\n    }\r\n}\r\nclass KerviValueType extends KerviValue {\r\n    constructor(message, kerviService) {\r\n        super();\r\n        this.kerviService = null;\r\n        this.kerviService = kerviService;\r\n        this.value$ = new BehaviorSubject(message.value);\r\n        this.name = message.name;\r\n        this.isInput = message.isInput;\r\n        this.ui = message.ui;\r\n        this.command = message.command;\r\n        this.id = message.id;\r\n        this.ui[\"type\"] = message.componentType;\r\n        this.ui[\"orientation\"] = message.orientation;\r\n        this.ui[\"visible\"] = message.visible;\r\n        for (var prop in message.ui) {\r\n            if (this.ui[prop] != undefined)\r\n                this.ui[prop] = message.ui[prop];\r\n        }\r\n        for (let dashboardLink of message.dashboardLinks) {\r\n            this.dashboards.push(new DashboardLink(this, dashboardLink));\r\n        }\r\n    }\r\n    get value() {\r\n        //console.log(\"gv\", this.id, this.value$.value)\r\n        return this.value$.value;\r\n    }\r\n    set value(value) {\r\n        console.log(\"sv\", this.id);\r\n        this.value$.next(value);\r\n        this.kerviService.spine.sendCommand(this.command, value);\r\n    }\r\n    set(v, notify = true) {\r\n        this.value$.next(v);\r\n        if (notify)\r\n            this.kerviService.spine.sendCommand(this.command, v);\r\n    }\r\n}\r\nvar ValueRangeType;\r\n(function (ValueRangeType) {\r\n    ValueRangeType[ValueRangeType[\"normal\"] = 0] = \"normal\";\r\n    ValueRangeType[ValueRangeType[\"warning\"] = 1] = \"warning\";\r\n    ValueRangeType[ValueRangeType[\"error\"] = 2] = \"error\";\r\n})(ValueRangeType || (ValueRangeType = {}));\r\n;\r\nclass ValueRange {\r\n    constructor(range) {\r\n        this.start = null;\r\n        this.end = null;\r\n        this.type = null;\r\n        this.start = range[\"start\"];\r\n        this.end = range[\"end\"];\r\n        if (range[\"type\"] == \"warning\")\r\n            this.type = ValueRangeType.warning;\r\n        else if (range[\"type\"] == \"error\")\r\n            this.type = ValueRangeType.error;\r\n        else\r\n            this.type = ValueRangeType.normal;\r\n    }\r\n}\r\nclass KerviEnumOptionModel {\r\n    constructor(messageOption) {\r\n        this.selected$ = new BehaviorSubject(false);\r\n        this.value = messageOption.value;\r\n        this.text = messageOption.text;\r\n        this.selected$.next(messageOption.selected);\r\n    }\r\n    updateReferences() { }\r\n    ;\r\n    reload(component) { }\r\n    ;\r\n    removeReferences(components) { }\r\n    ;\r\n}\r\nclass SelectValue extends KerviValueType {\r\n    constructor(message, kerviService) {\r\n        super(message, kerviService);\r\n        this.options = [];\r\n        this.lastSelected$ = new BehaviorSubject(null);\r\n        var self = this;\r\n        this.options = [];\r\n        for (let option of message.options) {\r\n            this.options.push(new KerviEnumOptionModel(option));\r\n        }\r\n        this.selectOptions(this.value$.value);\r\n        this.value$.subscribe(function (v) {\r\n            self.selectOptions(v);\r\n        });\r\n    }\r\n    getDefaultValue() {\r\n        return [];\r\n    }\r\n    selectOptions(selectedOptions) {\r\n        console.log(\"soc\");\r\n        if (!selectedOptions)\r\n            return;\r\n        for (let option of this.options) {\r\n            option.selected$.next(false);\r\n        }\r\n        for (let selectedOption of selectedOptions) {\r\n            console.log(\"so\", selectedOption);\r\n            for (let option of this.options) {\r\n                console.log(\"sox\", option);\r\n                if (option.value == selectedOption) {\r\n                    option.selected$.next(true);\r\n                    this.lastSelected$.next(option);\r\n                    console.log(\"os\", option.text, option.selected$.value);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nclass NumberValue extends KerviValueType {\r\n    constructor(message, kerviService) {\r\n        super(message, kerviService);\r\n        this.qtyUnitTo = null;\r\n        this.sparkline$ = new BehaviorSubject([]);\r\n        this.ranges = [];\r\n        this.unit = message.unit;\r\n        this.typeName = \"Number\";\r\n        this.qtyUnitFrom = message.unit;\r\n        if (this.unit == \"c\" && kerviService.application$.value[\"display\"][\"unit_system\"][\"temperature\"] == \"F\") {\r\n            this.qtyUnitFrom = \"tempC\";\r\n            this.qtyUnitTo = \"tempF\";\r\n            this.unit = \"F\";\r\n        }\r\n        for (var range of message.ranges) {\r\n            if (this.qtyUnitTo) {\r\n                var q = new Qty(range[\"start\"], this.qtyUnitFrom);\r\n                range[\"start\"] = q.to(this.qtyUnitTo).scalar;\r\n                var q = new Qty(range[\"end\"], this.qtyUnitFrom);\r\n                range[\"end\"] = q.to(this.qtyUnitTo).scalar;\r\n                this.ranges.push(new ValueRange(range));\r\n            }\r\n            else\r\n                this.ranges.push(new ValueRange(range));\r\n        }\r\n        if (this.qtyUnitTo && message.maxValue) {\r\n            var q = new Qty(message.maxValue, this.qtyUnitFrom);\r\n            this.maxValue = q.to(this.qtyUnitTo).scalar;\r\n        }\r\n        else\r\n            this.maxValue = message.maxValue;\r\n        if (this.qtyUnitTo && message.minValue) {\r\n            var q = new Qty(message.minValue, this.qtyUnitFrom);\r\n            this.minValue = q.to(this.qtyUnitTo).scalar;\r\n        }\r\n        else\r\n            this.minValue = message.minValue;\r\n        var spl = [];\r\n        for (var spv of message.sparkline) {\r\n            if (this.qtyUnitTo) {\r\n                console.log(\"spv\", spv);\r\n                var q = new Qty(spv.value, this.qtyUnitFrom);\r\n                //spv.value = q.to(this.qtyUnitTo).scalar;\r\n            }\r\n            spl.push(spv);\r\n        }\r\n        this.sparkline$.next(spl);\r\n        this.set(message.value, false);\r\n    }\r\n    getDefaultValue() {\r\n        return 0;\r\n    }\r\n    set(v, notify = true) {\r\n        var newValue = v;\r\n        if (this.qtyUnitTo) {\r\n            var q = new Qty(v, this.qtyUnitFrom);\r\n            newValue = q.to(this.qtyUnitTo).scalar;\r\n        }\r\n        this.value$.next(newValue);\r\n        if (notify)\r\n            this.kerviService.spine.sendCommand(this.command, v);\r\n        var spl = this.sparkline$.value;\r\n        spl.push(newValue);\r\n        if (spl.length > 10)\r\n            spl.shift();\r\n        this.sparkline$.next(spl);\r\n    }\r\n}\r\nclass StringValue extends KerviValueType {\r\n    getDefaultValue() {\r\n        return \"\";\r\n    }\r\n    constructor(message, kerviService) {\r\n        super(message, kerviService);\r\n        this.typeName = \"String\";\r\n    }\r\n}\r\nclass BooleanValue extends KerviValueType {\r\n    constructor(message, kerviService) {\r\n        super(message, kerviService);\r\n        this.typeName = \"Boolean\";\r\n    }\r\n    getDefaultValue() {\r\n        return false;\r\n    }\r\n}\r\nclass DateTimeValue extends KerviValueType {\r\n    constructor(message, kerviService) {\r\n        super(message, kerviService);\r\n        this.subType = message.inputType;\r\n        this.typeName = \"DateTime\";\r\n    }\r\n    getDefaultValue() {\r\n        return new Date();\r\n    }\r\n}\r\nclass ColorValue extends KerviValueType {\r\n    constructor(message, kerviService) {\r\n        super(message, kerviService);\r\n        this.typeName = \"Color\";\r\n    }\r\n    getDefaultValue() {\r\n        return \"#ffffff\";\r\n    }\r\n}\n\nclass ComponentRef {\r\n    constructor(message) {\r\n        this.id = message.id;\r\n    }\r\n}\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass Controller {\r\n    constructor(message, kerviService) {\r\n        this.componentType = \"controller\";\r\n        this.ui = {};\r\n        this.inputs = [];\r\n        this.outputs = [];\r\n        this.actions = [];\r\n        this.inputReferences = [];\r\n        this.outputReferences = [];\r\n        this.actionsReferences = [];\r\n        this.dashboards = [];\r\n        this.kerviService = kerviService;\r\n        this.id = message.id;\r\n        this.name = message.name;\r\n        this.type = message.type;\r\n        this.ui = message.ui;\r\n        this.visible = message.visible;\r\n        this.parameters = message.parameters;\r\n        this.template = message.template;\r\n        for (var ref of message.inputs) {\r\n            this.inputReferences.push(new ComponentRef(ref));\r\n        }\r\n        for (var ref of message.outputs) {\r\n            this.outputReferences.push(new ComponentRef(ref));\r\n        }\r\n        for (var ref of message.actions) {\r\n            this.actionsReferences.push(new ComponentRef(ref));\r\n        }\r\n        for (let dashboardLink of message.dashboardLinks) {\r\n            this.dashboards.push(new DashboardLink(this, dashboardLink));\r\n        }\r\n    }\r\n    updateReferences() {\r\n        if (this.inputs.length == 0) {\r\n            for (var ref of this.inputReferences) {\r\n                var component = this.kerviService.getComponent(ref.id);\r\n                if (component)\r\n                    this.inputs.push(component);\r\n            }\r\n        }\r\n        if (this.outputs.length == 0) {\r\n            for (var ref of this.outputReferences) {\r\n                var component = this.kerviService.getComponent(ref.id);\r\n                if (component)\r\n                    this.outputs.push(component);\r\n            }\r\n        }\r\n        if (this.actions.length == 0) {\r\n            for (var ref of this.actionsReferences) {\r\n                var component = this.kerviService.getComponent(ref.id);\r\n                if (component)\r\n                    this.actions.push(component);\r\n            }\r\n        }\r\n    }\r\n    ;\r\n    removeReferences(components) { }\r\n    ;\r\n    reload(component) { }\r\n    ;\r\n}\n\n// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\nclass DashboardSizes {\r\n    constructor() {\r\n        this.valueWidth = '3rem';\r\n        this.buttonWidth = '25px';\r\n        this.buttonHeight = '';\r\n        this.switchWidth = '25px';\r\n        this.switchHeight = '25px';\r\n        this.gaugeWidth = '100px';\r\n        this.gaugeHeight = '200px';\r\n    }\r\n}\r\nclass DashboardMessageModel {\r\n    constructor(message) {\r\n        this.timestamp = new Date(message.timestamp * 1000);\r\n        this.topic = message.topic;\r\n        this.body = message.body;\r\n        this.type = message.type;\r\n        this.sourceId = message.source_id;\r\n        this.sourceName = message.source_name;\r\n        this.area = message.area;\r\n        this.level = message.level;\r\n    }\r\n}\r\nclass DashboardPanelComponent {\r\n    constructor(message) {\r\n        this.message = message;\r\n        this.linkId = message.linkId;\r\n        this.componentId = message.componentId;\r\n        this.component = message.component;\r\n        this.parameters = message.parameters;\r\n    }\r\n}\r\nclass DashboardPanelParameters {\r\n    constructor(messageParameters) {\r\n        this.title = null;\r\n        this.width = null;\r\n        this.height = null;\r\n        this.type = null;\r\n        this.userLog = null;\r\n        this.appHealth = null;\r\n        this.logLength = 5;\r\n        this.layout = 'row';\r\n        this.title = messageParameters.label;\r\n        this.height = this.calcSize(messageParameters.height);\r\n        this.width = this.calcSize(messageParameters.width);\r\n        this.userLog = messageParameters.userLog;\r\n        this.logLength = messageParameters.logLength;\r\n        this.appHealth = messageParameters.app_health;\r\n        if (messageParameters.type) {\r\n            this.type = messageParameters.type;\r\n        }\r\n        if (messageParameters.layout) {\r\n            this.layout = messageParameters.layout;\r\n        }\r\n    }\r\n    calcSize(value) {\r\n        if (value == null)\r\n            return '';\r\n        else if (value === '')\r\n            return '';\r\n        else if (isNaN(value)) {\r\n            return value;\r\n        }\r\n        else if (value > 0)\r\n            return value + '%';\r\n        else\r\n            return '';\r\n    }\r\n}\r\nclass DashboardPanel {\r\n    constructor(dashboard, messagePanel) {\r\n        this.components = [];\r\n        this.subPanels = [];\r\n        this.hasOnlyGroupPanels = true;\r\n        this.dashboard = dashboard;\r\n        this.id = messagePanel.id;\r\n        this.name = messagePanel.name;\r\n        this.type = messagePanel.type;\r\n        this.parameters = new DashboardPanelParameters(messagePanel.uiParameters);\r\n        /*if (messagePanel.components)\r\n            for(var componentRef of messagePanel.components){\r\n                this.components.push(new DashboardPanelComponentModel(componentRef))\r\n            }*/\r\n        if (messagePanel.panels) {\r\n            //console.log('spa',messagePanel.panels);\r\n            for (var subMessagePanel of messagePanel.panels) {\r\n                var panel = new DashboardPanel(this, subMessagePanel);\r\n                this.subPanels.push(panel);\r\n                if (panel.type !== 'group')\r\n                    this.hasOnlyGroupPanels = false;\r\n            }\r\n        }\r\n    }\r\n    reload(source) {\r\n        //console.log('rl', this);\r\n        for (var subPanel of source.subPanels) {\r\n            this.reload(subPanel);\r\n        }\r\n        for (var sourceComponent of source.components) {\r\n            var found = false;\r\n            for (var component of this.components) {\r\n                if (component.componentId == sourceComponent.componentId) {\r\n                    found = true;\r\n                }\r\n            }\r\n            if (!found) {\r\n                this.components.push(sourceComponent);\r\n            }\r\n        }\r\n        var deleteComponents = [];\r\n        for (var component of this.components) {\r\n            var found = false;\r\n            for (var sourceComponent of source.components) {\r\n                if (sourceComponent.componentId == component.componentId) {\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!found)\r\n                deleteComponents.push(component);\r\n        }\r\n        //console.log('dsc',deleteComponents);\r\n        for (var component of deleteComponents) {\r\n            this.components.splice(this.components.indexOf(component), 1);\r\n        }\r\n    }\r\n}\r\nclass DashboardBackgroundModel {\r\n    constructor(message) {\r\n        this.type = message.type;\r\n        this.cameraId = message.cameraId;\r\n    }\r\n}\r\nclass Dashboard {\r\n    constructor(message) {\r\n        this.headerPanel = null;\r\n        this.footerCenterPanel = null;\r\n        this.footerLeftPanel = null;\r\n        this.footerRightPanel = null;\r\n        this.sysPanel = null;\r\n        this.backgroundPanel = null;\r\n        this.controllerPanel = null;\r\n        this.LeftPadXPanel = null;\r\n        this.LeftPadYPanel = null;\r\n        this.RightPadXPanel = null;\r\n        this.RightPadYPanel = null;\r\n        this.dashboards = [];\r\n        this.currentPanel = null;\r\n        this.id = message.id;\r\n        this.name = message.name;\r\n        this.componentType = 'dashboard';\r\n        this.type = message.type;\r\n        this.isDefault = message.isDefault;\r\n        this.template = message.template;\r\n        this.unitSize = message.unitSize;\r\n        //this.background=new DashboardBackgroundModel(message.background);\r\n        this.panels = [];\r\n        this.sysPanels = [];\r\n        if (!this.template) {\r\n            for (let messagePanel of message.sections) {\r\n                if (!messagePanel) {\r\n                    console.log('dashboard with null panel', this.id);\r\n                    continue;\r\n                }\r\n                var panel = new DashboardPanel(this, messagePanel);\r\n                var sysPanel = true;\r\n                if (panel.id == 'header_center')\r\n                    this.headerPanel = panel;\r\n                else if (panel.id == 'footer_left')\r\n                    this.footerLeftPanel = panel;\r\n                else if (panel.id == 'footer_center')\r\n                    this.footerCenterPanel = panel;\r\n                else if (panel.id == 'footer_right')\r\n                    this.footerRightPanel = panel;\r\n                else if (panel.id == 'header_right')\r\n                    this.sysPanel = panel;\r\n                else if (panel.id == 'controllers')\r\n                    this.controllerPanel = panel;\r\n                else if (panel.id == 'background')\r\n                    this.backgroundPanel = panel;\r\n                else if (panel.id == 'left_pad_x')\r\n                    this.LeftPadXPanel = panel;\r\n                else if (panel.id == 'left_pad_y')\r\n                    this.LeftPadYPanel = panel;\r\n                else if (panel.id == 'right_pad_x')\r\n                    this.RightPadXPanel = panel;\r\n                else if (panel.id == 'right_pad_y')\r\n                    this.RightPadYPanel = panel;\r\n                else {\r\n                    sysPanel = false;\r\n                    if (panel.type != 'group') {\r\n                        if (this.currentPanel == null) {\r\n                            this.currentPanel = new DashboardPanel(this, {\r\n                                'id': null,\r\n                                'name': '',\r\n                                'type': 'group',\r\n                                'components': [],\r\n                                'panels': [],\r\n                                'uiParameters': {\r\n                                    'title': '',\r\n                                    'width': 100,\r\n                                    'height': 0,\r\n                                    'userLog': false,\r\n                                    'logLength': 0\r\n                                }\r\n                            });\r\n                            this.currentPanel.subPanels.push(panel);\r\n                            this.panels.push(this.currentPanel);\r\n                        }\r\n                        else {\r\n                            this.currentPanel.subPanels.push(panel);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.panels.push(panel);\r\n                        this.currentPanel = null;\r\n                    }\r\n                }\r\n                if (sysPanel)\r\n                    this.sysPanels.push(panel);\r\n            }\r\n            if (!this.currentPanel) {\r\n                this.currentPanel = new DashboardPanel(this, {\r\n                    'id': null,\r\n                    'name': '',\r\n                    'type': 'group',\r\n                    'components': [],\r\n                    'panels': [],\r\n                    'uiParameters': {\r\n                        'title': '',\r\n                        'width': 100,\r\n                        'height': 0,\r\n                        'userLog': false,\r\n                        'logLength': 0\r\n                    }\r\n                });\r\n                //this.currentPanel.subPanels.push(panel);\r\n                this.panels.push(this.currentPanel);\r\n            }\r\n        }\r\n    }\r\n    isEmpty() {\r\n        return this.panels.length == 0;\r\n    }\r\n    removeReferences(deleteComponents) { }\r\n    ;\r\n    updateReferences() { }\r\n    ;\r\n    reload(component) {\r\n        var source = component;\r\n        if (!this.backgroundPanel && source.backgroundPanel)\r\n            this.backgroundPanel = source.backgroundPanel;\r\n        else if (this.backgroundPanel && !source.backgroundPanel)\r\n            this.backgroundPanel = null;\r\n        else if (this.backgroundPanel)\r\n            this.backgroundPanel.reload(source.backgroundPanel);\r\n        if (!this.footerLeftPanel && source.footerLeftPanel)\r\n            this.footerLeftPanel = source.footerLeftPanel;\r\n        else if (this.footerLeftPanel && !source.footerLeftPanel)\r\n            this.footerLeftPanel = null;\r\n        else if (this.footerLeftPanel)\r\n            this.footerLeftPanel.reload(source.footerLeftPanel);\r\n        if (!this.footerRightPanel && source.footerRightPanel)\r\n            this.footerRightPanel = source.footerRightPanel;\r\n        else if (this.footerRightPanel && !source.footerRightPanel)\r\n            this.footerRightPanel = null;\r\n        else if (this.footerRightPanel)\r\n            this.footerRightPanel.reload(source.footerRightPanel);\r\n        if (!this.footerCenterPanel && source.footerCenterPanel)\r\n            this.footerCenterPanel = source.footerCenterPanel;\r\n        else if (this.footerCenterPanel && !source.footerCenterPanel)\r\n            this.footerCenterPanel = null;\r\n        else if (this.footerCenterPanel)\r\n            this.footerCenterPanel.reload(source.footerCenterPanel);\r\n        /*if (!this.headerPanel && source.headerPanel)\r\n            this.headerPanel=source.headerPanel;\r\n        else if (this.headerPanel && !source.headerPanel)\r\n            this.headerPanel = null\r\n        else if (this.headerPanel)\r\n            this.headerPanel.reload(source.headerPanel)*/\r\n        if (!this.sysPanel && source.sysPanel)\r\n            this.sysPanel = source.sysPanel;\r\n        else if (this.sysPanel && !source.sysPanel)\r\n            this.sysPanel = null;\r\n        else if (this.sysPanel)\r\n            this.sysPanel.reload(source.sysPanel);\r\n        if (!this.LeftPadXPanel && source.LeftPadXPanel)\r\n            this.LeftPadXPanel = source.LeftPadXPanel;\r\n        else if (this.LeftPadXPanel && !source.LeftPadXPanel)\r\n            this.LeftPadXPanel = null;\r\n        else if (this.LeftPadXPanel)\r\n            this.LeftPadXPanel.reload(source.LeftPadXPanel);\r\n        if (!this.LeftPadYPanel && source.LeftPadYPanel)\r\n            this.LeftPadYPanel = source.LeftPadYPanel;\r\n        else if (this.LeftPadYPanel && !source.LeftPadYPanel)\r\n            this.LeftPadYPanel = null;\r\n        else if (this.LeftPadYPanel)\r\n            this.LeftPadYPanel.reload(source.LeftPadYPanel);\r\n        if (!this.RightPadXPanel && source.RightPadXPanel)\r\n            this.RightPadXPanel = source.RightPadXPanel;\r\n        else if (this.RightPadXPanel && !source.RightPadXPanel)\r\n            this.RightPadXPanel = null;\r\n        else if (this.RightPadXPanel)\r\n            this.RightPadXPanel.reload(source.RightPadXPanel);\r\n        if (!this.RightPadYPanel && source.RightPadYPanel)\r\n            this.RightPadYPanel = source.RightPadYPanel;\r\n        else if (this.RightPadYPanel && !source.RightPadYPanel)\r\n            this.RightPadYPanel = null;\r\n        else if (this.RightPadYPanel)\r\n            this.RightPadYPanel.reload(source.RightPadYPanel);\r\n        if (!this.controllerPanel && source.controllerPanel)\r\n            this.controllerPanel = source.controllerPanel;\r\n        else if (this.controllerPanel && !source.controllerPanel)\r\n            this.controllerPanel = null;\r\n        else if (this.controllerPanel)\r\n            this.controllerPanel.reload(source.controllerPanel);\r\n    }\r\n    ;\r\n    getDashboardPanelById(id, panels) {\r\n        for (let panel of panels) {\r\n            if (panel.id == id)\r\n                return panel;\r\n            else {\r\n                var res = this.getDashboardPanelById(id, panel.subPanels);\r\n                if (res)\r\n                    return res;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    addDashboardLink(link) {\r\n        if (link.dashboardId == '*' || link.dashboardId == this.id || (link.dashboardId == '**default**' && this.isDefault)) {\r\n            var panelFound = false;\r\n            var panel = this.getDashboardPanelById(link.panelId, this.panels);\r\n            if (!panel)\r\n                panel = this.getDashboardPanelById(link.panelId, this.sysPanels);\r\n            if (panel) {\r\n                panel.components.push(new DashboardPanelComponent(link));\r\n            }\r\n            else {\r\n                // console.log('adh',link);\r\n                var messagePanel = {\r\n                    id: link.panelId,\r\n                    name: link.panelName,\r\n                    type: 'panel',\r\n                    uiParameters: {\r\n                        'title': '',\r\n                        'width': 0,\r\n                        'height': 0,\r\n                        'userLog': false,\r\n                        'logLength': 0\r\n                    }\r\n                };\r\n                var newPanel = new DashboardPanel(this, messagePanel);\r\n                this.currentPanel.subPanels.push(newPanel);\r\n                newPanel.components.push(new DashboardPanelComponent(link));\r\n            }\r\n        }\r\n    }\r\n}\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass Action {\r\n    constructor(message, kerviService) {\r\n        this.kerviService = null;\r\n        this.id = null;\r\n        this.name = null;\r\n        this.componentType = 'action';\r\n        this.runCommand = '';\r\n        this.interruptCommand = '';\r\n        this.ui = {\r\n            type: '',\r\n            orientation: '',\r\n            visible: true\r\n        };\r\n        this.dashboards = [];\r\n        this.running$ = new BehaviorSubject(false);\r\n        this.kerviService = kerviService;\r\n        this.id = message.id;\r\n        this.name = message.name;\r\n        this.ui = message.ui;\r\n        this.ui.visible = message.visible;\r\n        this.ui.type = message.type;\r\n        this.runCommand = message.runCommand;\r\n        this.interruptCommand = message.interruptCommand;\r\n        this.running$.next(message.running);\r\n        for (let dashboardLink of message.dashboardLinks) {\r\n            this.dashboards.push(new DashboardLink(this, dashboardLink));\r\n        }\r\n    }\r\n    run(parameters) {\r\n        //if (!this.running$.value){\r\n        if (parameters && parameters.length > 0)\r\n            this.kerviService.spine.sendCommand(this.runCommand, ...parameters);\r\n        else\r\n            this.kerviService.spine.sendCommand(this.runCommand);\r\n        //}\r\n    }\r\n    interrupt(parameters) {\r\n        if (parameters && parameters.length > 0)\r\n            this.kerviService.spine.sendCommand(this.interruptCommand, ...parameters);\r\n        else\r\n            this.kerviService.spine.sendCommand(this.interruptCommand);\r\n    }\r\n}\n\nclass ComponentFactory {\r\n    static createComponents(message, kerviService) {\r\n        const foundComponents = this.createComponentsRec(message, kerviService);\r\n        this.linkToDashboards(foundComponents[0], foundComponents[1]);\r\n        return foundComponents[0];\r\n    }\r\n    static createComponentsRec(message, kerviService) {\r\n        let result = [];\r\n        let dashboards = [];\r\n        if (Array.isArray(message)) {\r\n            for (let i = 0; (i < message.length); i++) {\r\n                const subComponents = this.createComponentsRec(message[i], kerviService);\r\n                result = result.concat(subComponents[0]);\r\n                dashboards = dashboards.concat(subComponents[1]);\r\n            }\r\n        }\r\n        else {\r\n            let component = null;\r\n            const subComponents = [];\r\n            if (message.componentType === 'KerviAction') {\r\n                component = new Action(message, kerviService);\r\n            }\r\n            else if (message.componentType === 'dashboard') {\r\n                component = new Dashboard(message);\r\n                dashboards.push(component);\r\n            }\r\n            else if (message.componentType === 'controller') {\r\n                component = new Controller(message, kerviService);\r\n            }\r\n            else if (message.componentType === 'boolean-value') {\r\n                component = new BooleanValue(message, kerviService);\r\n            }\r\n            else if (message.componentType === 'number-value') {\r\n                component = new NumberValue(message, kerviService);\r\n            }\r\n            else if (message.componentType === 'string-value') {\r\n                component = new StringValue(message, kerviService);\r\n            }\r\n            else if (message.componentType === 'enum-value') {\r\n                component = new SelectValue(message, kerviService);\r\n            }\r\n            else if (message.componentType === 'datetime-value') {\r\n                component = new DateTimeValue(message, kerviService);\r\n            }\r\n            else if (message.componentType === 'color-value') {\r\n                component = new ColorValue(message, kerviService);\r\n            }\r\n            if (component) {\r\n                result.push(component);\r\n            }\r\n            if (subComponents) {\r\n                for (let subComponent of subComponents) {\r\n                    result.push(subComponent);\r\n                }\r\n            }\r\n        }\r\n        return [result, dashboards];\r\n    }\r\n    static FixControllerReferences(components) {\r\n        for (let component of components) {\r\n            const controller = component;\r\n            if (controller && controller.componentType === 'controller') {\r\n                controller.updateReferences();\r\n            }\r\n        }\r\n    }\r\n    static linkToDashboards(components, dashboards) {\r\n        console.log('ltd', components, dashboards);\r\n        for (let component of components) {\r\n            if (!(component instanceof Dashboard)) {\r\n                for (let link of component.dashboards) {\r\n                    for (let dashboard of dashboards) {\r\n                        dashboard.addDashboardLink(link);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\n\nclass FileBase {\r\n    constructor() {\r\n        this.isFile = true;\r\n    }\r\n}\r\nclass File extends FileBase {\r\n}\r\nclass Directory extends FileBase {\r\n    constructor(path) {\r\n        super();\r\n        this.files$ = new BehaviorSubject([]);\r\n        this.path = path;\r\n    }\r\n    updateFiles(files) {\r\n        let result = [];\r\n        for (let file of files) {\r\n            if (file.is_file) {\r\n                const fileEntry = new File();\r\n                fileEntry.name = file.name;\r\n                const p = this.path !== '/' ? this.path : '';\r\n                fileEntry.path = p + '/' + file.name;\r\n                result.push(fileEntry);\r\n            }\r\n            else {\r\n                const p = this.path !== '/' ? this.path : '';\r\n                const directory = new Directory(p + '/' + file.name);\r\n                directory.name = file.name;\r\n                directory.isFile = false;\r\n                result.push(directory);\r\n            }\r\n        }\r\n        this.files$.next(result);\r\n    }\r\n}\n\nclass StreamEvent {\r\n    constructor(streamId, streamEvent, data) {\r\n        this.streamId = streamId;\r\n        this.event = streamEvent;\r\n        this.data = data;\r\n    }\r\n}\r\nclass Stream {\r\n    constructor(streamId, events, kerviService) {\r\n        this.streamId = streamId;\r\n        this.events = events;\r\n        this.kerviService = kerviService;\r\n        this.events$ = new BehaviorSubject(null);\r\n        const self = this;\r\n        kerviService.spine.addStreamHandler(streamId, events, function (e_streamId, e_streamEvent, e_data) {\r\n            const event = new StreamEvent(e_streamId, e_streamEvent, e_data);\r\n            let notify = false;\r\n            if (events === null || events.length === 0 || events.indexOf(e_streamEvent) >= 0) {\r\n                notify = true;\r\n            }\r\n            if (notify) {\r\n                self.events$.next(event);\r\n            }\r\n        });\r\n    }\r\n    close() {\r\n        this.kerviService.spine.removeStreamHandler(this.streamId, this.events, null);\r\n    }\r\n}\n\n// Copyright (c) 2016, Tim Wentzlau\r\nvar ConnectionState;\r\n(function (ConnectionState) {\r\n    ConnectionState[ConnectionState[\"disconnected\"] = 0] = \"disconnected\";\r\n    ConnectionState[ConnectionState[\"loading\"] = 1] = \"loading\";\r\n    ConnectionState[ConnectionState[\"authenticate\"] = 2] = \"authenticate\";\r\n    ConnectionState[ConnectionState[\"connected\"] = 3] = \"connected\";\r\n})(ConnectionState || (ConnectionState = {}));\r\nvar UserLogStateType;\r\n(function (UserLogStateType) {\r\n    UserLogStateType[UserLogStateType[\"normal\"] = 0] = \"normal\";\r\n    UserLogStateType[UserLogStateType[\"warning\"] = 1] = \"warning\";\r\n    UserLogStateType[UserLogStateType[\"error\"] = 2] = \"error\";\r\n})(UserLogStateType || (UserLogStateType = {}));\r\nclass KerviBaseService {\r\n    constructor() {\r\n        this.spine = null;\r\n        this.lastAppPingTime = null;\r\n        this.lastPingDiff = 0;\r\n        this.appPingDiff$ = new BehaviorSubject(0);\r\n        this.appPingDelay$ = new BehaviorSubject(0);\r\n        this.mps$ = new BehaviorSubject(0);\r\n        this.appInfo = null;\r\n        this.texts = null;\r\n        this.components = [];\r\n        this.components$ = new BehaviorSubject([]);\r\n        this.connectionState$ = new BehaviorSubject(ConnectionState.disconnected);\r\n        this.doAuthenticate = false;\r\n        this.componentsChanged$ = new BehaviorSubject(false);\r\n        this.logMessages = [];\r\n        this.logMessages$ = new BehaviorSubject([]);\r\n        this.lastLogMessage$ = new BehaviorSubject(null);\r\n        this.LogMessageCount$ = new BehaviorSubject(0);\r\n        this.LogMessageState$ = new BehaviorSubject(UserLogStateType.normal);\r\n        this.streams = {};\r\n        this.IPCReady$ = new BehaviorSubject(false);\r\n        this.authPromise = null;\r\n        console.log('kervi service constructor');\r\n        const self = this;\r\n        this.application$ = new BehaviorSubject(null);\r\n        this.IPCReady$.subscribe(function (connected) {\r\n            if (connected) {\r\n                console.log('kervi service ipc ready (connected)');\r\n                self.spine.addEventHandler('valueChanged', '', function (id, value) {\r\n                    for (const component of self.components) {\r\n                        if (component.id === value.id) {\r\n                            const dynamicValue = component;\r\n                            dynamicValue.valueTS = new Date(this.timestamp);\r\n                            dynamicValue.set(value.value, false);\r\n                        }\r\n                    }\r\n                });\r\n                self.spine.addEventHandler('appPing', null, function (id, data) {\r\n                    // console.log('appPing', self.lastAppPingTime, id, data);\r\n                    if (self.lastAppPingTime === null) {\r\n                        self.lastAppPingTime = new Date();\r\n                    }\r\n                    else {\r\n                        const now = new Date();\r\n                        const pingDiff = now.getTime() - self.lastAppPingTime.getTime() - 1000;\r\n                        const pingDelay = now.getTime() - data.ts * 1000;\r\n                        self.appPingDelay$.next(pingDelay);\r\n                        self.lastAppPingTime = now;\r\n                        if (pingDiff !== self.lastPingDiff) {\r\n                            self.lastPingDiff = pingDiff;\r\n                            self.appPingDiff$.next(self.lastPingDiff);\r\n                        }\r\n                    }\r\n                });\r\n                self.spine.addEventHandler('actionStarted', '', function (id) {\r\n                    console.log('as', id);\r\n                    for (const component of self.components) {\r\n                        if (component.id === id) {\r\n                            const action = component;\r\n                            action.running$.next(true);\r\n                        }\r\n                    }\r\n                });\r\n                self.spine.addEventHandler('actionDone', '', function (id) {\r\n                    console.log('ad', id);\r\n                    for (const component of self.components) {\r\n                        if (component.id === id) {\r\n                            const action = component;\r\n                            action.running$.next(false);\r\n                        }\r\n                    }\r\n                });\r\n                self.spine.addEventHandler('userLogMessage', null, function (v) {\r\n                    const messages = self.logMessages$.value;\r\n                    const newMessage = new DashboardMessageModel(this);\r\n                    messages.unshift(newMessage);\r\n                    if (messages.length > 10) {\r\n                        messages.pop();\r\n                    }\r\n                    let hasErrors = 0;\r\n                    let hasWarnings = 0;\r\n                    for (const message of messages) {\r\n                        if (message.level === 1) {\r\n                            hasErrors++;\r\n                        }\r\n                        if (message.level === 2) {\r\n                            hasWarnings++;\r\n                        }\r\n                    }\r\n                    if (hasErrors) {\r\n                        self.LogMessageState$.next(UserLogStateType.error);\r\n                    }\r\n                    else if (hasWarnings) {\r\n                        self.LogMessageState$.next(UserLogStateType.warning);\r\n                    }\r\n                    else {\r\n                        self.LogMessageState$.next(UserLogStateType.normal);\r\n                    }\r\n                    self.LogMessageCount$.next(messages.length);\r\n                    self.lastLogMessage$.next(newMessage);\r\n                    self.logMessages$.next(messages);\r\n                });\r\n            }\r\n        });\r\n    }\r\n    GetDirectory(path) {\r\n        const promise = new Promise((resolve, reject) => {\r\n            const directory = new Directory(path);\r\n            this.spine.sendQuery('files_get_dir', path, function (directoryFiles) {\r\n                directory.updateFiles(directoryFiles);\r\n                resolve(directory);\r\n            });\r\n        });\r\n        return promise;\r\n    }\r\n    GetThumbnail(path) {\r\n        const promise = new Promise((resolve, reject) => {\r\n            this.spine.sendQuery('files_get_thumbnail', path, function (thumbnail) {\r\n                resolve(thumbnail);\r\n            });\r\n        });\r\n        return promise;\r\n    }\r\n    GetFile(path) {\r\n        const promise = new Promise((resolve, reject) => {\r\n            this.spine.sendQuery('files_get_file', path, function (file) {\r\n                resolve(file);\r\n            });\r\n        });\r\n        return promise;\r\n    }\r\n    GetStream(streamId, events = []) {\r\n        return new Stream(streamId, events, this);\r\n    }\r\n    text(key, defaultValue = '') {\r\n        if (this.texts && key in this.texts) {\r\n            return this.texts[key];\r\n        }\r\n        else {\r\n            return defaultValue;\r\n        }\r\n    }\r\n    getLogMessages$() {\r\n        return this.logMessages$.asObservable();\r\n    }\r\n    getLastLogMessage$() {\r\n        return this.lastLogMessage$.asObservable();\r\n    }\r\n    getLogState$() {\r\n        return this.LogMessageState$.asObservable();\r\n    }\r\n    getLogMessageCount$() {\r\n        return this.LogMessageCount$.asObservable();\r\n    }\r\n    isAppEmpty() {\r\n        const defaultDashboard = this.getDefaultDashboard();\r\n        if (defaultDashboard) {\r\n            return defaultDashboard.isEmpty();\r\n        }\r\n        return true;\r\n    }\r\n    getComponent(id, componentType = null) {\r\n        for (const component of this.components) {\r\n            if (component.id === id && (componentType == null || component.componentType === componentType)) {\r\n                return component;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    getComponentsByType(type) {\r\n        const result = [];\r\n        for (const component of this.components) {\r\n            if (component.componentType === type) {\r\n                result.push(component);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    getDefaultDashboard() {\r\n        const dashboards = this.getComponentsByType('dashboard');\r\n        for (const dashboard of dashboards) {\r\n            if (dashboard.isDefault) {\r\n                return dashboard;\r\n            }\r\n        }\r\n        if (dashboards.length > 0) {\r\n            return dashboards[0];\r\n        }\r\n        return null;\r\n    }\r\n    connect() {\r\n        let address = null;\r\n        let protocol = 'ws';\r\n        try {\r\n            if (kerviSocketAddress) {\r\n                address = kerviSocketAddress;\r\n            }\r\n            if (socketProtocol) {\r\n                protocol = socketProtocol;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // for testing with ng serve\r\n            const httpProtocol = location.protocol;\r\n            if (httpProtocol === 'https') {\r\n                protocol = 'wss';\r\n            }\r\n            const httpHost = window.location.hostname;\r\n            address = httpHost + ':9000';\r\n        }\r\n        console.log('ks', address);\r\n        this.spine = new KerviWSSpine({\r\n            address: address,\r\n            protocol: protocol,\r\n            onOpen: this.onOpen,\r\n            onClose: this.onClose,\r\n            onAuthenticate: this.onAuthenticate,\r\n            onAuthenticateFailed: this.onAuthenticateFailed,\r\n            onLogOff: this.onLogoff,\r\n            onAuthenticateStart: this.onAuthenticateStart,\r\n            onMPS: this.onMPS,\r\n            targetScope: this\r\n        });\r\n    }\r\n    connectMQ() {\r\n        console.log('ks', sessionStorage.getItem('mqc'));\r\n        if (sessionStorage.getItem('mqc')) {\r\n            this.spine = new KerviRMQSpine({\r\n                onOpen: this.onOpen,\r\n                onClose: this.onClose,\r\n                onAuthenticate: this.onAuthenticate,\r\n                onAuthenticateFailed: this.onAuthenticateFailed,\r\n                onLogOff: this.onLogoff,\r\n                onAuthenticateStart: this.onAuthenticateStart,\r\n                targetScope: this,\r\n                apiToken: JSON.parse(sessionStorage.getItem('mqc'))\r\n            });\r\n        }\r\n        else {\r\n            console.log('qmc not found in storage');\r\n        }\r\n    }\r\n    isAnonymous() {\r\n        return this.spine.options.userName === 'anonymous';\r\n    }\r\n    authenticate(userName, password) {\r\n        console.log('sa', userName, password);\r\n        this.authPromise = new Promise((resolve, reject) => {\r\n            this._resolveSelf = resolve;\r\n            this._rejectSelf = reject;\r\n        });\r\n        this.spine.authenticate(userName, password);\r\n        return this.authPromise;\r\n    }\r\n    logoff() {\r\n        this.spine.logoff();\r\n    }\r\n    onAuthenticateStart() {\r\n    }\r\n    onAuthenticate() {\r\n        this.doAuthenticate = true;\r\n        this.reset();\r\n        this._resolveSelf('ok');\r\n    }\r\n    onAuthenticateFailed() {\r\n        this._rejectSelf('error');\r\n    }\r\n    onLogoff() {\r\n        this.doAuthenticate = true;\r\n        if (this.spine.firstOnOpen) {\r\n            this.IPCReady$.next(true);\r\n        }\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.components = [];\r\n        this.components$.next(this.components);\r\n        const messages = [];\r\n        this.LogMessageState$.next(UserLogStateType.normal);\r\n        this.LogMessageCount$.next(messages.length);\r\n        this.logMessages$.next(messages);\r\n        if (this.IPCReady$.value) {\r\n            this.connectionState$.next(ConnectionState.authenticate);\r\n        }\r\n        else {\r\n            this.connectionState$.next(ConnectionState.disconnected);\r\n        }\r\n    }\r\n    getComponentInfo(retryCount, module_load) {\r\n        const self = this;\r\n        this.spine.sendQuery('GetApplicationInfo', function (appInfo) {\r\n            console.log('app info', appInfo);\r\n            this.spine.sendQuery('getComponentInfo', function (message) {\r\n                console.log('component info', message);\r\n                self.application$.next(appInfo);\r\n                self.texts = appInfo.display.texts;\r\n                self.components = ComponentFactory.createComponents(message, self);\r\n                ComponentFactory.FixControllerReferences(self.getComponentsByType('controller'));\r\n                self.components$.next(self.components);\r\n                self.connectionState$.next(ConnectionState.connected);\r\n                if (module_load) {\r\n                    self.componentsChanged$.next(true);\r\n                }\r\n                console.log('components', self.components);\r\n            }, function () {\r\n                console.error('get component info timeout');\r\n                if (retryCount > 0) {\r\n                    self.getComponentInfo(retryCount - 1, module_load);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    onOpen(first) {\r\n        console.log('kervi service on open', this.spine.firstOnOpen, first, this);\r\n        const self = this;\r\n        this.connectionState$.next(ConnectionState.loading);\r\n        this.doAuthenticate = this.spine.doAuthenticate;\r\n        this.getComponentInfo(2, false);\r\n        if (self.spine.firstOnOpen) {\r\n            this.IPCReady$.next(true);\r\n            this.spine.addEventHandler('moduleStarted', '', function () {\r\n                console.log('module loaded', self.components);\r\n                setTimeout(function () {\r\n                    self.getComponentInfo(2, true);\r\n                }, 2000);\r\n            });\r\n            this.spine.addEventHandler('moduleStopped', '', function () {\r\n                console.log('module unloaded');\r\n                setTimeout(function () {\r\n                    console.log('module unloaded, refresh');\r\n                    self.getComponentInfo(2, true);\r\n                }, 5000);\r\n            });\r\n        }\r\n    }\r\n    onClose() {\r\n        this.reset();\r\n        console.log('ks on close');\r\n        this.IPCReady$.next(false);\r\n    }\r\n    onMPS(mps) {\r\n        this.mps$.next(mps);\r\n    }\r\n    onHeartbeat() {\r\n    }\r\n    onConnect() {\r\n    }\r\n}\r\nKerviBaseService.ɵfac = function KerviBaseService_Factory(t) { return new (t || KerviBaseService)(); };\r\nKerviBaseService.ɵprov = ɵɵdefineInjectable({ token: KerviBaseService, factory: KerviBaseService.ɵfac });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviBaseService, [{\r\n        type: Injectable\r\n    }], function () { return []; }, null); })();\n\nclass KerviJsComponent {\r\n    constructor() { }\r\n    ngOnInit() {\r\n    }\r\n}\r\nKerviJsComponent.ɵfac = function KerviJsComponent_Factory(t) { return new (t || KerviJsComponent)(); };\r\nKerviJsComponent.ɵcmp = ɵɵdefineComponent({ type: KerviJsComponent, selectors: [[\"lib-kervi-js\"]], decls: 2, vars: 0, template: function KerviJsComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵelementStart(0, \"p\");\r\n        ɵɵtext(1, \" kervi-js works! \");\r\n        ɵɵelementEnd();\r\n    } }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviJsComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'lib-kervi-js',\r\n                template: `\r\n    <p>\r\n      kervi-js works!\r\n    </p>\r\n  `,\r\n                styles: []\r\n            }]\r\n    }], function () { return []; }, null); })();\n\nclass KerviJsModule {\r\n}\r\nKerviJsModule.ɵmod = ɵɵdefineNgModule({ type: KerviJsModule });\r\nKerviJsModule.ɵinj = ɵɵdefineInjector({ factory: function KerviJsModule_Factory(t) { return new (t || KerviJsModule)(); }, imports: [[]] });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵɵsetNgModuleScope(KerviJsModule, { declarations: [KerviJsComponent], exports: [KerviJsComponent] }); })();\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviJsModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [],\r\n                declarations: [KerviJsComponent],\r\n                exports: [KerviJsComponent]\r\n            }]\r\n    }], null, null); })();\n\n/*\r\n * Public API Surface of kervi-js\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { Action, BooleanValue, ColorValue, ConnectionState, Controller, Dashboard, DashboardBackgroundModel, DashboardLink, DashboardMessageModel, DashboardPanel, DashboardPanelComponent, DashboardPanelParameters, DashboardSizes, DateTimeValue, Directory, File, FileBase, KerviBaseService, KerviEnumOptionModel, KerviJsComponent, KerviJsModule, KerviValue, KerviValueType, NumberValue, SelectValue, Stream, StreamEvent, StringValue, UserLogStateType, ValueRange, ValueRangeType };\n//# sourceMappingURL=kervi-js.js.map\n","import { ɵɵdefineInjectable, ɵɵgetInheritedFactory, ɵsetClassMetadata, Injectable, ɵɵdefineComponent, Component, Input, ɵɵInheritDefinitionFeature, ɵɵelementStart, ɵɵtext, ɵɵelementEnd, ɵɵdirectiveInject, ɵɵdefinePipe, Pipe, ɵɵdefineNgModule, ɵɵdefineInjector, ɵɵsetNgModuleScope, NgModule, ɵɵinject, Injector } from '@angular/core';\nimport { KerviBaseService, DashboardSizes, UserLogStateType } from 'kervi-js';\nexport { ConnectionState, DashboardSizes } from 'kervi-js';\nimport { BehaviorSubject } from 'rxjs';\n\nclass NGXKerviService extends KerviBaseService {\r\n}\r\nNGXKerviService.ɵfac = function NGXKerviService_Factory(t) { return ɵNGXKerviService_BaseFactory(t || NGXKerviService); };\r\nNGXKerviService.ɵprov = ɵɵdefineInjectable({ token: NGXKerviService, factory: NGXKerviService.ɵfac });\r\nconst ɵNGXKerviService_BaseFactory = ɵɵgetInheritedFactory(NGXKerviService);\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(NGXKerviService, [{\r\n        type: Injectable\r\n    }], null, null); })();\n\nclass KerviTemplateService {\r\n    constructor() {\r\n        this.remUnit = 20;\r\n        console.log(\"kervi service constructor\");\r\n        //console.log(\"ctemplate\");\r\n        this.remUnit = parseFloat(getComputedStyle(document.documentElement).fontSize);\r\n    }\r\n    convertRemToPixels(rem) {\r\n        return rem * this.remUnit;\r\n    }\r\n    getSizeValue(value) {\r\n        if (value == null)\r\n            return \"100%\";\r\n        else if (value === \"\")\r\n            return \"100%\";\r\n        else if (isNaN(value)) {\r\n            return value;\r\n        }\r\n        else if (value > 0)\r\n            return value + \"%\";\r\n        else\r\n            return \"100%\";\r\n    }\r\n    getPixels(value, containerSize) {\r\n        //console.log(\"gps\", value, isNaN(value));\r\n        if (isNaN(value)) {\r\n            if (value.lastIndexOf(\"px\") > -1) {\r\n                var px = parseFloat(value);\r\n                return px;\r\n            }\r\n            else if (value.lastIndexOf(\"rem\") > -1) {\r\n                var rem = parseFloat(value);\r\n                var px = this.convertRemToPixels(rem);\r\n                console.log(\"remx\", rem, px);\r\n                return px;\r\n            }\r\n            else if (value.lastIndexOf(\"%\") > -1) {\r\n                var percentage = parseFloat(value) / 100.0;\r\n                return containerSize * percentage;\r\n            }\r\n        }\r\n        else\r\n            return value;\r\n    }\r\n    getStyleRuleValue(style, selector, sheet) {\r\n        var sheets = sheet != null ? [sheet] : document.styleSheets;\r\n        for (var i = 0, l = sheets.length; i < l; i++) {\r\n            var sheet = sheets[i];\r\n            if (!sheet.cssRules) {\r\n                continue;\r\n            }\r\n            for (var j = 0, k = sheet.cssRules.length; j < k; j++) {\r\n                var rule = sheet.cssRules[j];\r\n                if (rule.selectorText && rule.selectorText.split(',').indexOf(selector) !== -1) {\r\n                    return rule.style[style];\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    makeId() {\r\n        var text = \"\";\r\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        for (var i = 0; i < 5; i++)\r\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n        return text;\r\n    }\r\n    getColor(colorName, cssClass) {\r\n        var styleValue = this.getStyleRuleValue(colorName, cssClass, null);\r\n        //console.log(\"sv\", cssClass,styleValue);\r\n        return styleValue;\r\n    }\r\n}\r\nKerviTemplateService.ɵfac = function KerviTemplateService_Factory(t) { return new (t || KerviTemplateService)(); };\r\nKerviTemplateService.ɵprov = ɵɵdefineInjectable({ token: KerviTemplateService, factory: KerviTemplateService.ɵfac });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviTemplateService, [{\r\n        type: Injectable\r\n    }], function () { return []; }, null); })();\n\nlet AppInjector;\r\nfunction setAppInjector(injector) {\r\n    if (AppInjector) {\r\n        // Should not happen\r\n        console.error('Programming error: AppInjector was already set');\r\n    }\r\n    else {\r\n        AppInjector = injector;\r\n    }\r\n}\n\nclass KerviDashboardComponent {\r\n    constructor() {\r\n        this.dashboardId = null;\r\n        this.dashboard = null;\r\n        this.dashboards = null;\r\n        this.dashboardSizes = null;\r\n        this.isAppEmpty = true;\r\n        this.showMenu = false;\r\n        this.dashboardPanelsHidden = false;\r\n        this.showPanelController = false;\r\n        this.cameraId = null;\r\n        this.cameraParameters = null;\r\n        this.cameraId$ = new BehaviorSubject(null);\r\n        this.authenticated = false;\r\n        this.anonymous = true;\r\n        this.showLeftPad = false;\r\n        this.leftPadXValue = null;\r\n        this.leftPadYValue = null;\r\n        this.autoCenterLeftPad = false;\r\n        this.showRightPad = false;\r\n        this.rightPadXValue = null;\r\n        this.rightPadYValue = null;\r\n        this.autoCenterRightPad = false;\r\n        this.inFullScreen = false;\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n        var self = this;\r\n        this.kerviService.componentsChanged$.subscribe(function () {\r\n            self.loadDashboard(self.dashboardId);\r\n        });\r\n    }\r\n    logoff(event) {\r\n        this.kerviService.logoff();\r\n        event.stopPropagation();\r\n    }\r\n    loadDashboard(dashboardId) {\r\n        this.dashboardId = dashboardId;\r\n        this.dashboard = this.kerviService.getComponent(dashboardId, 'dashboard');\r\n        this.anonymous = this.kerviService.isAnonymous();\r\n        this.isAppEmpty = this.kerviService.isAppEmpty();\r\n        this.authenticated = this.kerviService.doAuthenticate;\r\n        if (this.dashboard) {\r\n            this.dashboards = this.kerviService.getComponentsByType('dashboard');\r\n            this.showMenu = (this.dashboards.length > 1 || this.kerviService.doAuthenticate);\r\n            this.showPanelController = false;\r\n            this.cameraId = null;\r\n            this.cameraParameters = null;\r\n            this.showLeftPad = false;\r\n            this.showRightPad = false;\r\n            this.dashboardPanelsHidden = false;\r\n            if (this.dashboard.backgroundPanel) {\r\n                if (this.dashboard.backgroundPanel.components.length > 0) {\r\n                    this.dashboardPanelsHidden = true;\r\n                    this.showPanelController = true;\r\n                    this.cameraId = this.dashboard.backgroundPanel.components[0].component.id;\r\n                    this.cameraId$.next(this.cameraId);\r\n                    this.cameraParameters = this.dashboard.backgroundPanel.components[0].parameters;\r\n                    console.log(\"db set cam\", this.cameraId, this.cameraParameters);\r\n                }\r\n            }\r\n            if (this.dashboard.LeftPadXPanel && this.dashboard.LeftPadXPanel.components.length || this.dashboard.LeftPadYPanel && this.dashboard.LeftPadYPanel.components.length) {\r\n                this.showLeftPad = true;\r\n                if (this.dashboard.LeftPadXPanel.components.length) {\r\n                    this.leftPadXValue = this.dashboard.LeftPadXPanel.components[0].component;\r\n                    if (this.dashboard.LeftPadXPanel.components[0].parameters.padAutoCenter)\r\n                        this.autoCenterLeftPad = true;\r\n                }\r\n                if (this.dashboard.LeftPadYPanel.components.length) {\r\n                    this.leftPadYValue = this.dashboard.LeftPadYPanel.components[0].component;\r\n                    if (this.dashboard.LeftPadXPanel.components[0].parameters.padAutoCenter)\r\n                        this.autoCenterLeftPad = true;\r\n                }\r\n            }\r\n            if (this.dashboard.RightPadXPanel && this.dashboard.RightPadXPanel.components.length || this.dashboard.RightPadYPanel && this.dashboard.RightPadYPanel.components.length) {\r\n                this.showRightPad = true;\r\n                if (this.dashboard.RightPadXPanel.components.length) {\r\n                    this.rightPadXValue = this.dashboard.RightPadXPanel.components[0].component;\r\n                    if (this.dashboard.LeftPadXPanel.components[0].parameters.padAutoCenter)\r\n                        this.autoCenterRightPad = true;\r\n                }\r\n                if (this.dashboard.RightPadYPanel.components.length) {\r\n                    this.rightPadYValue = this.dashboard.RightPadYPanel.components[0].component;\r\n                    if (this.dashboard.RightPadXPanel.components[0].parameters.padAutoCenter)\r\n                        this.autoCenterRightPad = true;\r\n                }\r\n            }\r\n            console.log(\"load db\", dashboardId, this.dashboard, this);\r\n        }\r\n    }\r\n    toggleFullScreen() {\r\n        console.log(\"fs\", this.inFullScreen);\r\n        var doc;\r\n        doc = document;\r\n        if ((doc.fullScreenElement && doc.fullScreenElement !== null)) \r\n        /*(!doc.mozFullScreen && !document.webkitIsFullScreen))*/ {\r\n            this.inFullScreen = true;\r\n            if (doc.documentElement.requestFullScreen) {\r\n                doc.documentElement.requestFullScreen();\r\n            }\r\n            else if (doc.documentElement.mozRequestFullScreen) {\r\n                doc.documentElement.mozRequestFullScreen();\r\n            } // } else if (document.documentElement.webkitRequestFullScreen) {  \r\n            //   doc.documentElement.webkitRequestFullScreen();  \r\n            // }  \r\n        }\r\n        else {\r\n            this.inFullScreen = false;\r\n            if (doc.cancelFullScreen) {\r\n                doc.cancelFullScreen();\r\n            }\r\n            else if (doc.mozCancelFullScreen) {\r\n                doc.mozCancelFullScreen();\r\n            } // } else if (document.webkitCancelFullScreen) {  \r\n            //   doc.webkitCancelFullScreen();  \r\n            // }  \r\n        }\r\n    }\r\n}\r\nKerviDashboardComponent.ɵfac = function KerviDashboardComponent_Factory(t) { return new (t || KerviDashboardComponent)(); };\r\nKerviDashboardComponent.ɵcmp = ɵɵdefineComponent({ type: KerviDashboardComponent, selectors: [[\"kervi-dashboard\"]], inputs: { cameraId: \"cameraId\", cameraParameters: \"cameraParameters\" }, decls: 0, vars: 0, template: function KerviDashboardComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviDashboardComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-dashboard',\r\n                template: ''\r\n            }]\r\n    }], function () { return []; }, { cameraId: [{\r\n            type: Input\r\n        }], cameraParameters: [{\r\n            type: Input\r\n        }] }); })();\n\nclass KerviDashboardPanelComponent {\r\n    constructor() {\r\n        this.panel = null;\r\n        this.inline = false;\r\n        this.inGroup = false;\r\n        this.bodyOnly = false;\r\n        this.width = \"\";\r\n        this.showHeader = false;\r\n        this.expanded = false;\r\n        this.title = null;\r\n        this.bodyComponents = [];\r\n        this.headerComponents = [];\r\n        this.footerComponents = [];\r\n        //messages: DashboardMessageModel[] = [];\r\n        //panelComponents:IComponent[] = []\r\n        this.templateService = null;\r\n        this.kerviService = null;\r\n        this.templateService = AppInjector.get(KerviTemplateService);\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    calcWidth(panel, inGroup) {\r\n        if (panel.type == \"group\") {\r\n            if (panel.parameters.width == null || panel.parameters.width == \"0\")\r\n                return \"100%\";\r\n            else\r\n                return this.templateService.getSizeValue(panel.parameters.width);\r\n        }\r\n        else\r\n            return inGroup ? \"\" : this.templateService.getSizeValue(panel.parameters.width);\r\n    }\r\n    showPanelHeader(panel) {\r\n        var hasHeaderComponents = false;\r\n        for (let component of this.panel.components) {\r\n            if (component.parameters.linkToHeader)\r\n                hasHeaderComponents = true;\r\n        }\r\n        return (panel.parameters.title != null && panel.parameters.title.length > 0) || hasHeaderComponents;\r\n    }\r\n    ngOnInitPanel() {\r\n        var self = this;\r\n        this.title = this.panel.parameters.title;\r\n        for (let component of this.panel.components) {\r\n            if (component.parameters.linkToHeader)\r\n                this.headerComponents.push(component);\r\n            else\r\n                this.bodyComponents.push(component);\r\n        }\r\n        this.showHeader = (this.panel.parameters.title != null && this.panel.parameters.title.length > 0) || (this.headerComponents.length > 0);\r\n        if (this.panel.type == \"group\") {\r\n            if (this.panel.parameters.width == null || this.panel.parameters.width == \"0\" || this.panel.parameters.width == \"\")\r\n                this.width = \"100%\";\r\n            else\r\n                this.width = this.templateService.getSizeValue(this.panel.parameters.width);\r\n        }\r\n        else\r\n            //this.width = this.inGroup ? \"100%\" : this.templateService.getSizeValue(this.panel.parameters.width);\r\n            this.width = this.templateService.getSizeValue(this.panel.parameters.width);\r\n    }\r\n}\r\nKerviDashboardPanelComponent.ɵfac = function KerviDashboardPanelComponent_Factory(t) { return new (t || KerviDashboardPanelComponent)(); };\r\nKerviDashboardPanelComponent.ɵcmp = ɵɵdefineComponent({ type: KerviDashboardPanelComponent, selectors: [[\"kervi-dashboard-panel-base\"]], inputs: { dashboardSizes: \"dashboardSizes\", panel: \"panel\", inline: \"inline\", inGroup: \"inGroup\", bodyOnly: \"bodyOnly\" }, decls: 0, vars: 0, template: function KerviDashboardPanelComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviDashboardPanelComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-dashboard-panel-base',\r\n                template: ''\r\n            }]\r\n    }], function () { return []; }, { dashboardSizes: [{\r\n            type: Input\r\n        }], panel: [{\r\n            type: Input\r\n        }], inline: [{\r\n            type: Input\r\n        }], inGroup: [{\r\n            type: Input\r\n        }], bodyOnly: [{\r\n            type: Input\r\n        }] }); })();\n\nclass KerviControllerPadComponent {\r\n    constructor() { }\r\n    ngOnInit() {\r\n    }\r\n}\r\nKerviControllerPadComponent.ɵfac = function KerviControllerPadComponent_Factory(t) { return new (t || KerviControllerPadComponent)(); };\r\nKerviControllerPadComponent.ɵcmp = ɵɵdefineComponent({ type: KerviControllerPadComponent, selectors: [[\"kervi-controller-pad-base\"]], inputs: { dashboardSizes: \"dashboardSizes\" }, decls: 0, vars: 0, template: function KerviControllerPadComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviControllerPadComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-controller-pad-base',\r\n                template: ''\r\n            }]\r\n    }], function () { return []; }, { dashboardSizes: [{\r\n            type: Input\r\n        }] }); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviWidgetComponent {\r\n    constructor() {\r\n        this.component = null;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.widgetType = \"value\";\r\n        //console.log(\"cnio\",this);\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    set componentId(v) {\r\n        this.component = this.kerviService.getComponent(this.componentId);\r\n    }\r\n    ngOnInitWidget() {\r\n        if (!this.linkParameters)\r\n            this.linkParameters = this.component.ui;\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        //console.log(\"widget\", this.component, this.linkParameters);\r\n        if (this.component.componentType == \"controller\") {\r\n            var controller = this.component;\r\n            console.log(\"widget ctrl\", controller);\r\n            if (controller.type == \"camera\")\r\n                this.widgetType = \"camera\";\r\n        }\r\n        else if (this.linkParameters.type) {\r\n            if (this.linkParameters.type.indexOf(\"gauge\") > -1) {\r\n                this.widgetType = \"gauge\";\r\n            }\r\n            else if (this.linkParameters.type == \"chart\") {\r\n                this.widgetType = \"chart\";\r\n            }\r\n        }\r\n    }\r\n}\r\nKerviWidgetComponent.ɵfac = function KerviWidgetComponent_Factory(t) { return new (t || KerviWidgetComponent)(); };\r\nKerviWidgetComponent.ɵcmp = ɵɵdefineComponent({ type: KerviWidgetComponent, selectors: [[\"kervi-widget-base\"]], inputs: { componentId: \"componentId\", component: \"component\", dashboardPanel: \"dashboardPanel\", linkParameters: \"linkParameters\", dashboardSizes: \"dashboardSizes\", inline: \"inline\" }, decls: 0, vars: 0, template: function KerviWidgetComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviWidgetComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-widget-base',\r\n                template: ''\r\n            }]\r\n    }], function () { return []; }, { componentId: [{\r\n            type: Input\r\n        }], component: [{\r\n            type: Input\r\n        }], dashboardPanel: [{\r\n            type: Input\r\n        }], linkParameters: [{\r\n            type: Input\r\n        }], dashboardSizes: [{\r\n            type: Input\r\n        }], inline: [{\r\n            type: Input\r\n        }] }); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviValueComponent {\r\n    constructor() {\r\n        this.value = null;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    set valueId(v) {\r\n        this.value = this.kerviService.getComponent(this.valueId);\r\n    }\r\n    ngOnInitValue() {\r\n        if (!this.linkParameters)\r\n            this.linkParameters = this.value.ui;\r\n    }\r\n}\r\nKerviValueComponent.ɵfac = function KerviValueComponent_Factory(t) { return new (t || KerviValueComponent)(); };\r\nKerviValueComponent.ɵcmp = ɵɵdefineComponent({ type: KerviValueComponent, selectors: [[\"kervi-value-base\"]], inputs: { valueId: \"valueId\", value: \"value\", linkParameters: \"linkParameters\", dashboardSizes: \"dashboardSizes\", inline: \"inline\" }, decls: 0, vars: 0, template: function KerviValueComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviValueComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-value-base',\r\n                template: ''\r\n            }]\r\n    }], function () { return []; }, { valueId: [{\r\n            type: Input\r\n        }], value: [{\r\n            type: Input\r\n        }], linkParameters: [{\r\n            type: Input\r\n        }], dashboardSizes: [{\r\n            type: Input\r\n        }], inline: [{\r\n            type: Input\r\n        }] }); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviNumberComponent extends KerviValueComponent {\r\n    constructor() {\r\n        super();\r\n        this.numberFormat = \"1.2-2\";\r\n        this.displayValue = 0;\r\n        this.displayUnit = \"\";\r\n        this.displayType = \"\";\r\n        this.currentIcon = null;\r\n    }\r\n    setKerviValue(value) {\r\n        this.value.set(value);\r\n    }\r\n    ngOnInitNumber() {\r\n        this.ngOnInitValue();\r\n        var self = this;\r\n        this.numberFormat = this.linkParameters.minIntegerDigits + \".\" + this.linkParameters.minFractionDigits + \"-\" + this.linkParameters.maxFractionDigits;\r\n        if (!this.linkParameters.valueIcon)\r\n            this.currentIcon = null;\r\n        else if (typeof (this.linkParameters.valueIcon) == \"string\")\r\n            this.currentIcon = this.linkParameters.valueIcon;\r\n        else {\r\n            this.value.value$.subscribe(function (v) {\r\n                for (let iconSection of self.linkParameters.valueIcon) {\r\n                    if (v >= iconSection.range[0] && v <= iconSection.range[1]) {\r\n                        self.currentIcon = iconSection.icon;\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        else if (!this.inline && this.linkParameters.size > 0) {\r\n            this.inline = true;\r\n        }\r\n    }\r\n}\r\nKerviNumberComponent.ɵfac = function KerviNumberComponent_Factory(t) { return new (t || KerviNumberComponent)(); };\r\nKerviNumberComponent.ɵcmp = ɵɵdefineComponent({ type: KerviNumberComponent, selectors: [[\"kervi-value-number-base\"]], features: [ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function KerviNumberComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviNumberComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-value-number-base',\r\n                template: ''\r\n            }]\r\n    }], function () { return []; }, null); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviBooleanComponent extends KerviValueComponent {\r\n    constructor() {\r\n        super();\r\n        this.displayType = \"switch\";\r\n    }\r\n    setKerviValue(value) {\r\n        this.value.set(value);\r\n    }\r\n    ngOnInitBoolean() {\r\n        this.ngOnInitValue();\r\n        var self = this;\r\n        if (this.linkParameters.type) {\r\n            this.displayType = this.linkParameters.type;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        else if (!this.inline && this.linkParameters.size > 0) {\r\n            this.inline = true;\r\n        }\r\n    }\r\n}\r\nKerviBooleanComponent.ɵfac = function KerviBooleanComponent_Factory(t) { return new (t || KerviBooleanComponent)(); };\r\nKerviBooleanComponent.ɵcmp = ɵɵdefineComponent({ type: KerviBooleanComponent, selectors: [[\"kervi-value-boolean-base\"]], features: [ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function KerviBooleanComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviBooleanComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-value-boolean-base',\r\n                template: ''\r\n            }]\r\n    }], function () { return []; }, null); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviActionComponent {\r\n    constructor() {\r\n        this.action = null;\r\n        this.linkParameters = null;\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.state = new BehaviorSubject(false);\r\n        this.displayType = 'switch';\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    ngOnInitAction() {\r\n        var self = this;\r\n        if (!this.linkParameters)\r\n            this.linkParameters = this.action.ui;\r\n        if (this.linkParameters.displayType) {\r\n            this.displayType = this.linkParameters.displayType;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        self.state.next(this.action.running$.value);\r\n        this.action.running$.subscribe(function (v) {\r\n            console.log(\"ar\", self.action.id, v);\r\n            self.state.next(v);\r\n        });\r\n    }\r\n    setActionState(value) {\r\n        if (value)\r\n            this.action.run(this.linkParameters.actionParameters);\r\n        else\r\n            this.action.interrupt(this.linkParameters.interruptParameters);\r\n    }\r\n}\r\nKerviActionComponent.ɵfac = function KerviActionComponent_Factory(t) { return new (t || KerviActionComponent)(); };\r\nKerviActionComponent.ɵcmp = ɵɵdefineComponent({ type: KerviActionComponent, selectors: [[\"kervi-action-base\"]], inputs: { action: \"action\", linkParameters: \"linkParameters\", inline: \"inline\", dashboardSizes: \"dashboardSizes\" }, decls: 0, vars: 0, template: function KerviActionComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviActionComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-action-base',\r\n                template: '',\r\n                styleUrls: [],\r\n            }]\r\n    }], function () { return []; }, { action: [{\r\n            type: Input\r\n        }], linkParameters: [{\r\n            type: Input\r\n        }], inline: [{\r\n            type: Input\r\n        }], dashboardSizes: [{\r\n            type: Input\r\n        }] }); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviCameraComponent {\r\n    constructor() {\r\n        this.streamObservers = [];\r\n        this.linkParameters = null;\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.isBackground = false;\r\n        const self = this;\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    set cameraId(id) {\r\n        console.log('setcamid', id);\r\n        this.camera = this.kerviService.getComponent(id);\r\n    }\r\n    set camera(v) {\r\n        console.log('setcam', v);\r\n        this.cam = v;\r\n        if (v) {\r\n            for (let i of v.outputs) {\r\n                if (i.id.endsWith('.pan')) {\r\n                    this.pan = i;\r\n                }\r\n                else if (i.id.endsWith('.tilt')) {\r\n                    this.tilt = i;\r\n                }\r\n            }\r\n            this.cameraType = v.ui.type;\r\n            if (this.cameraType === 'frame') {\r\n                if (v.ui.source) {\r\n                    this.cameraSource = this.cam.id;\r\n                }\r\n                this.cameraSource = this.cam.id;\r\n            }\r\n            this.updateStreamObservers();\r\n        }\r\n    }\r\n    get camera() { return this.cam; }\r\n    updateStreamObservers() {\r\n        const streamObservers = [];\r\n        const controllers = this.kerviService.getComponentsByType('controller');\r\n        for (let controller of controllers) {\r\n            if (controller.type === 'stream_observer') {\r\n                if (controller.ui.sourceStream === this.cameraSource) {\r\n                    streamObservers.push(controller);\r\n                }\r\n            }\r\n        }\r\n        this.streamObservers = streamObservers;\r\n        if (this.selectedSource !== this.cameraSource) {\r\n            this.selectedSource = this.cameraSource;\r\n        }\r\n    }\r\n    setPan(v) {\r\n        this.pan.set(v);\r\n    }\r\n    setTilt(v) {\r\n        this.tilt.set(v);\r\n    }\r\n    ngOnInitCamera() {\r\n        console.log('ngi cam', this.camera.id);\r\n        const self = this;\r\n        if (!this.linkParameters) {\r\n            this.linkParameters = this.camera.ui;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        this.kerviService.componentsChanged$.subscribe(function () {\r\n            self.updateStreamObservers();\r\n        });\r\n        this.updateStreamObservers();\r\n        this.selectedSource = this.cameraSource;\r\n    }\r\n    changeSource(source) {\r\n        console.log('cs', source);\r\n        this.selectedSource = source;\r\n    }\r\n}\r\nKerviCameraComponent.ɵfac = function KerviCameraComponent_Factory(t) { return new (t || KerviCameraComponent)(); };\r\nKerviCameraComponent.ɵcmp = ɵɵdefineComponent({ type: KerviCameraComponent, selectors: [[\"kervi-camera-base\"]], inputs: { streamObservers: \"streamObservers\", selectedSource: \"selectedSource\", cameraId: \"cameraId\", camera: \"camera\", linkParameters: \"linkParameters\", inline: \"inline\", dashboardSizes: \"dashboardSizes\", isBackground: \"isBackground\" }, decls: 0, vars: 0, template: function KerviCameraComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviCameraComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-camera-base',\r\n                template: '',\r\n                styleUrls: [],\r\n            }]\r\n    }], function () { return []; }, { streamObservers: [{\r\n            type: Input\r\n        }], selectedSource: [{\r\n            type: Input\r\n        }], cameraId: [{\r\n            type: Input\r\n        }], camera: [{\r\n            type: Input\r\n        }], linkParameters: [{\r\n            type: Input\r\n        }], inline: [{\r\n            type: Input\r\n        }], dashboardSizes: [{\r\n            type: Input\r\n        }], isBackground: [{\r\n            type: Input\r\n        }] }); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviColorComponent extends KerviValueComponent {\r\n    constructor() {\r\n        super();\r\n        this.displayType = \"button\";\r\n    }\r\n    setKerviValue(value) {\r\n        this.value.set(value);\r\n    }\r\n    ngOnInitColor() {\r\n        this.ngOnInitValue();\r\n        var self = this;\r\n        if (this.linkParameters.type) {\r\n            this.displayType = this.linkParameters.type;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        else if (!this.inline && this.linkParameters.size > 0) {\r\n            this.inline = true;\r\n        }\r\n    }\r\n}\r\nKerviColorComponent.ɵfac = function KerviColorComponent_Factory(t) { return new (t || KerviColorComponent)(); };\r\nKerviColorComponent.ɵcmp = ɵɵdefineComponent({ type: KerviColorComponent, selectors: [[\"kervi-value-color-base\"]], features: [ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function KerviColorComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviColorComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-value-color-base',\r\n                template: ''\r\n            }]\r\n    }], function () { return []; }, null); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviDateTimeComponent extends KerviValueComponent {\r\n    constructor() {\r\n        super();\r\n        this.displayType = \"datetime\";\r\n    }\r\n    setKerviValue(value) {\r\n        this.value.set(value);\r\n    }\r\n    ngOnInitDateTime() {\r\n        this.ngOnInitValue();\r\n        var self = this;\r\n        if (this.linkParameters.type) {\r\n            this.displayType = this.linkParameters.type;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        if (self.linkParameters.type == \"time\")\r\n            this.dateTimeFormat = this.kerviService.application$.value.display.unit_system.datetime.time;\r\n        else if (self.linkParameters.type == \"date\")\r\n            this.dateTimeFormat = self.kerviService.application$.value.display.unit_system.datetime.date;\r\n        else\r\n            this.dateTimeFormat = this.kerviService.application$.value.display.unit_system.datetime.datetime;\r\n    }\r\n}\r\nKerviDateTimeComponent.ɵfac = function KerviDateTimeComponent_Factory(t) { return new (t || KerviDateTimeComponent)(); };\r\nKerviDateTimeComponent.ɵcmp = ɵɵdefineComponent({ type: KerviDateTimeComponent, selectors: [[\"kervi-value-datetime-base\"]], features: [ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function KerviDateTimeComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviDateTimeComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-value-datetime-base',\r\n                template: ''\r\n            }]\r\n    }], function () { return []; }, null); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviStringComponent extends KerviValueComponent {\r\n    constructor() {\r\n        super();\r\n        this.displayType = \"\";\r\n    }\r\n    setKerviValue(value) {\r\n        this.value.set(value);\r\n    }\r\n    ngOnInitString() {\r\n        this.ngOnInitValue();\r\n        var self = this;\r\n        if (this.linkParameters.type) {\r\n            this.displayType = this.linkParameters.type;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n    }\r\n}\r\nKerviStringComponent.ɵfac = function KerviStringComponent_Factory(t) { return new (t || KerviStringComponent)(); };\r\nKerviStringComponent.ɵcmp = ɵɵdefineComponent({ type: KerviStringComponent, selectors: [[\"kervi-value-string-base\"]], features: [ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function KerviStringComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviStringComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-value-string-base',\r\n                template: ''\r\n            }]\r\n    }], function () { return []; }, null); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviUserLogComponent {\r\n    constructor() {\r\n        this.logLength = 10;\r\n        this.linkParameters = null;\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.lastMessage$ = null;\r\n        this.messages$ = null;\r\n        this.messageCount$ = null;\r\n        this.logState$ = null;\r\n        this.messageCount = 0;\r\n        this.UserLogState = UserLogStateType.normal;\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n        this.messages$ = this.kerviService.getLogMessages$();\r\n        this.lastMessage$ = this.kerviService.getLastLogMessage$();\r\n        this.messageCount$ = this.kerviService.getLogMessageCount$();\r\n        this.logState$ = this.kerviService.getLogState$();\r\n        this.messageCount$.subscribe(function (v) {\r\n            this.messageCount = v;\r\n        });\r\n    }\r\n    ngOnInitUserLog() {\r\n    }\r\n}\r\nKerviUserLogComponent.ɵfac = function KerviUserLogComponent_Factory(t) { return new (t || KerviUserLogComponent)(); };\r\nKerviUserLogComponent.ɵcmp = ɵɵdefineComponent({ type: KerviUserLogComponent, selectors: [[\"kervi-user-log-base\"]], inputs: { logLength: \"logLength\", linkParameters: \"linkParameters\", inline: \"inline\", dashboardSizes: \"dashboardSizes\" }, decls: 0, vars: 0, template: function KerviUserLogComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviUserLogComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-user-log-base',\r\n                template: '',\r\n                styleUrls: [],\r\n            }]\r\n    }], function () { return []; }, { logLength: [{\r\n            type: Input\r\n        }], linkParameters: [{\r\n            type: Input\r\n        }], inline: [{\r\n            type: Input\r\n        }], dashboardSizes: [{\r\n            type: Input\r\n        }] }); })();\n\nclass KerviDirectoryComponent {\r\n    constructor() {\r\n        this.path = '/';\r\n        this.directory = null;\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    loadDirectory() {\r\n        //this.directory = this.kerviService.GetDirectory(this.path);\r\n    }\r\n}\r\nKerviDirectoryComponent.ɵfac = function KerviDirectoryComponent_Factory(t) { return new (t || KerviDirectoryComponent)(); };\r\nKerviDirectoryComponent.ɵcmp = ɵɵdefineComponent({ type: KerviDirectoryComponent, selectors: [[\"kervi-directory\"]], decls: 0, vars: 0, template: function KerviDirectoryComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviDirectoryComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-directory',\r\n                template: ''\r\n            }]\r\n    }], function () { return []; }, null); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass KerviAppHealthComponent {\r\n    constructor() {\r\n        this.linkParameters = null;\r\n        this.inline = false;\r\n        this.dashboardSizes = new DashboardSizes();\r\n        this.mps = 0;\r\n        this.pingDiff = 0;\r\n        this.pingDelay = 0;\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n    ngOnInitAppHealth() {\r\n        const self = this;\r\n        this.kerviService.mps$.subscribe(function (mps) {\r\n            self.mps = mps;\r\n        });\r\n        this.kerviService.appPingDiff$.subscribe(function (diff) {\r\n            self.pingDiff = diff;\r\n        });\r\n        this.kerviService.appPingDelay$.subscribe(function (diff) {\r\n            self.pingDelay = diff;\r\n        });\r\n    }\r\n}\r\nKerviAppHealthComponent.ɵfac = function KerviAppHealthComponent_Factory(t) { return new (t || KerviAppHealthComponent)(); };\r\nKerviAppHealthComponent.ɵcmp = ɵɵdefineComponent({ type: KerviAppHealthComponent, selectors: [[\"kervi-app-health-base\"]], inputs: { linkParameters: \"linkParameters\", inline: \"inline\", dashboardSizes: \"dashboardSizes\", mps: \"mps\", pingDiff: \"pingDiff\", pingDelay: \"pingDelay\" }, decls: 0, vars: 0, template: function KerviAppHealthComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(KerviAppHealthComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'kervi-app-health-base',\r\n                template: '',\r\n                styleUrls: [],\r\n            }]\r\n    }], function () { return []; }, { linkParameters: [{\r\n            type: Input\r\n        }], inline: [{\r\n            type: Input\r\n        }], dashboardSizes: [{\r\n            type: Input\r\n        }], mps: [{\r\n            type: Input\r\n        }], pingDiff: [{\r\n            type: Input\r\n        }], pingDelay: [{\r\n            type: Input\r\n        }] }); })();\n\nclass NgxKerviComponent {\r\n    constructor() { }\r\n    ngOnInit() {\r\n    }\r\n}\r\nNgxKerviComponent.ɵfac = function NgxKerviComponent_Factory(t) { return new (t || NgxKerviComponent)(); };\r\nNgxKerviComponent.ɵcmp = ɵɵdefineComponent({ type: NgxKerviComponent, selectors: [[\"lib-ngx-kervi\"]], decls: 2, vars: 0, template: function NgxKerviComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵelementStart(0, \"p\");\r\n        ɵɵtext(1, \" ngx-kervi works! \");\r\n        ɵɵelementEnd();\r\n    } }, encapsulation: 2 });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(NgxKerviComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'lib-ngx-kervi',\r\n                template: `\r\n    <p>\r\n      ngx-kervi works!\r\n    </p>\r\n  `,\r\n                styles: []\r\n            }]\r\n    }], function () { return []; }, null); })();\n\nclass TranslatePipe {\r\n    constructor(kerviService) {\r\n        this.kerviService = kerviService;\r\n    }\r\n    transform(value, args) {\r\n        return this.kerviService.text(value, value);\r\n    }\r\n}\r\nTranslatePipe.ɵfac = function TranslatePipe_Factory(t) { return new (t || TranslatePipe)(ɵɵdirectiveInject(NGXKerviService)); };\r\nTranslatePipe.ɵpipe = ɵɵdefinePipe({ name: \"translate\", type: TranslatePipe, pure: true });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(TranslatePipe, [{\r\n        type: Pipe,\r\n        args: [{\r\n                name: 'translate'\r\n            }]\r\n    }], function () { return [{ type: NGXKerviService }]; }, null); })();\n\n// Copyright (c) 2016, Tim Wentzlau\r\nclass NGXKerviPipesModule {\r\n}\r\nNGXKerviPipesModule.ɵmod = ɵɵdefineNgModule({ type: NGXKerviPipesModule });\r\nNGXKerviPipesModule.ɵinj = ɵɵdefineInjector({ factory: function NGXKerviPipesModule_Factory(t) { return new (t || NGXKerviPipesModule)(); }, providers: [], imports: [[]] });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵɵsetNgModuleScope(NGXKerviPipesModule, { declarations: [TranslatePipe], exports: [TranslatePipe] }); })();\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(NGXKerviPipesModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [],\r\n                exports: [\r\n                    TranslatePipe\r\n                ],\r\n                providers: [],\r\n                declarations: [\r\n                    TranslatePipe\r\n                ]\r\n            }]\r\n    }], null, null); })();\n\nclass NgxKerviModule {\r\n    constructor(injector) {\r\n        this.injector = injector;\r\n        setAppInjector(injector);\r\n    }\r\n}\r\nNgxKerviModule.ɵmod = ɵɵdefineNgModule({ type: NgxKerviModule });\r\nNgxKerviModule.ɵinj = ɵɵdefineInjector({ factory: function NgxKerviModule_Factory(t) { return new (t || NgxKerviModule)(ɵɵinject(Injector)); }, providers: [NGXKerviService, KerviTemplateService], imports: [[],\r\n        NGXKerviPipesModule] });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵɵsetNgModuleScope(NgxKerviModule, { declarations: [NgxKerviComponent,\r\n        KerviDashboardComponent,\r\n        KerviDashboardPanelComponent,\r\n        KerviControllerPadComponent,\r\n        KerviNumberComponent,\r\n        KerviStringComponent,\r\n        KerviBooleanComponent,\r\n        KerviColorComponent,\r\n        KerviDateTimeComponent,\r\n        KerviActionComponent,\r\n        KerviValueComponent,\r\n        KerviWidgetComponent,\r\n        KerviCameraComponent,\r\n        KerviUserLogComponent,\r\n        KerviDirectoryComponent,\r\n        KerviAppHealthComponent], exports: [NgxKerviComponent,\r\n        KerviDashboardComponent,\r\n        KerviDashboardPanelComponent,\r\n        KerviControllerPadComponent,\r\n        KerviNumberComponent,\r\n        KerviWidgetComponent,\r\n        KerviStringComponent,\r\n        KerviBooleanComponent,\r\n        KerviColorComponent,\r\n        KerviDateTimeComponent,\r\n        KerviActionComponent,\r\n        KerviCameraComponent,\r\n        KerviUserLogComponent,\r\n        KerviActionComponent,\r\n        KerviAppHealthComponent,\r\n        NGXKerviPipesModule] }); })();\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(NgxKerviModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [],\r\n                declarations: [\r\n                    NgxKerviComponent,\r\n                    KerviDashboardComponent,\r\n                    KerviDashboardPanelComponent,\r\n                    KerviControllerPadComponent,\r\n                    KerviNumberComponent,\r\n                    KerviStringComponent,\r\n                    KerviBooleanComponent,\r\n                    KerviColorComponent,\r\n                    KerviDateTimeComponent,\r\n                    KerviActionComponent,\r\n                    KerviValueComponent,\r\n                    KerviWidgetComponent,\r\n                    KerviCameraComponent,\r\n                    KerviUserLogComponent,\r\n                    KerviDirectoryComponent,\r\n                    KerviAppHealthComponent\r\n                ],\r\n                providers: [NGXKerviService, KerviTemplateService],\r\n                exports: [\r\n                    NgxKerviComponent,\r\n                    KerviDashboardComponent,\r\n                    KerviDashboardPanelComponent,\r\n                    KerviControllerPadComponent,\r\n                    KerviNumberComponent,\r\n                    KerviWidgetComponent,\r\n                    KerviStringComponent,\r\n                    KerviBooleanComponent,\r\n                    KerviColorComponent,\r\n                    KerviDateTimeComponent,\r\n                    KerviActionComponent,\r\n                    KerviCameraComponent,\r\n                    KerviUserLogComponent,\r\n                    KerviActionComponent,\r\n                    KerviAppHealthComponent,\r\n                    NGXKerviPipesModule\r\n                ]\r\n            }]\r\n    }], function () { return [{ type: Injector }]; }, null); })();\n\n/*\r\n * Public API Surface of ngx-kervi\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AppInjector, KerviActionComponent, KerviAppHealthComponent, KerviBooleanComponent, KerviCameraComponent, KerviColorComponent, KerviControllerPadComponent, KerviDashboardComponent, KerviDashboardPanelComponent, KerviDateTimeComponent, KerviDirectoryComponent, KerviNumberComponent, KerviStringComponent, KerviTemplateService, KerviUserLogComponent, KerviWidgetComponent, NGXKerviPipesModule, NGXKerviService, NgxKerviComponent, NgxKerviModule, TranslatePipe };\n//# sourceMappingURL=ngx-kervi.js.map\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { NGXKerviService } from \"ngx-kervi\";\r\nimport { ConnectionState } from \"ngx-kervi\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  private currentPage=null;\r\n  \r\n  constructor (private kerviService:NGXKerviService, private router:Router, private route:ActivatedRoute){\r\n    var self = this;\r\n    \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n\r\n    this.kerviService.connectionState$.subscribe(function(connectedState){\r\n      console.log(\"connected service state\",connectedState, self);\r\n      if (connectedState == ConnectionState.disconnected){\r\n        self.router.navigate(['/connect']);\r\n      }\r\n      if (connectedState == ConnectionState.loading){\r\n      }\r\n      if (connectedState == ConnectionState.authenticate){\r\n        self.router.navigate(['/authenticate']);\r\n      }\r\n      if (connectedState == ConnectionState.connected){\r\n        if (self.currentPage)\r\n          self.router.navigate([self.currentPage]);\r\n        else {\r\n          var defaultDashboard = self.kerviService.getDefaultDashboard();\r\n          self.router.navigate(['/'+defaultDashboard.componentType+'/'+defaultDashboard.id])\r\n        }\r\n      }\r\n    });\r\n\r\n    setTimeout(function(){\r\n      self.kerviService.connect();\r\n    },0)\r\n    \r\n  }\r\n}\r\n","<router-outlet>\r\n              \r\n</router-outlet>\r\n<!-- <kervi-user-messages></kervi-user-messages> -->","\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\n\r\nimport { NgZorroAntdModule, NZ_I18N, NZ_ICONS, en_US } from 'ng-zorro-antd';\r\nimport { IconDefinition } from '@ant-design/icons-angular';\r\nimport * as AllIcons from '@ant-design/icons-angular/icons'\r\nimport { registerLocaleData } from '@angular/common';\r\nimport en from '@angular/common/locales/en';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ConnectComponent } from './connect/connect.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { MediaComponent } from './media/media.component' ;\r\nimport { NgxKerviModule } from 'ngx-kervi';\r\nimport { NGXKerviPipesModule } from 'ngx-kervi'\r\nimport { KerviZorroModule  } from 'kervi-zorro'\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { ImgViewerComponent } from './image-viewer/image-viewer.component'\r\n\r\n\r\nregisterLocaleData(en);\r\n\r\nconst antDesignIcons = AllIcons as {\r\n  [key: string]: IconDefinition;\r\n};\r\nconst icons: IconDefinition[] = Object.keys(antDesignIcons).map(key => antDesignIcons[key])\r\n\r\n\r\nconst ROUTES: Routes = [\r\n\r\n  { path: 'connect', component: ConnectComponent },\r\n  { path: 'authenticate', component: LoginComponent },\r\n  { path: 'dashboard/:name', component: DashboardComponent },\r\n  { path: 'media', component: MediaComponent },\r\n  {\r\n    path: '',\r\n    redirectTo: '',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    ConnectComponent,\r\n    DashboardComponent,\r\n    MediaComponent,\r\n    ImgViewerComponent\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    NgxKerviModule,\r\n    NGXKerviPipesModule,\r\n    //KerviZorroModule,\r\n    FlexLayoutModule,\r\n    NgZorroAntdModule,\r\n    //NgxKerviComponentsModule,\r\n    RouterModule.forRoot(ROUTES)\r\n  ],\r\n  providers:[\r\n    { provide: NZ_I18N, useValue: en_US },\r\n    { provide: NZ_ICONS, useValue: icons }\r\n  ],\r\n  \r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ConnectionState } from \"ngx-kervi\";\r\nimport { NGXKerviService } from \"ngx-kervi\";\r\n@Component({\r\n  selector: 'app-connect',\r\n  templateUrl: './connect.component.html',\r\n  styleUrls: ['./connect.component.css']\r\n})\r\nexport class ConnectComponent implements OnInit {\r\n\r\n  current = 1;\r\n\r\n  constructor(private kerviService:NGXKerviService,) { \r\n    \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    this.kerviService.connectionState$.subscribe(function(connectedState){\r\n      console.log(\"connected service state\",connectedState, self);\r\n      if (connectedState == ConnectionState.disconnected){\r\n        self.current=1\r\n      }\r\n      if (connectedState == ConnectionState.loading){\r\n        self.current=2\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<nz-layout>\r\n    <nz-content class=\"kervi-app-initializing\">\r\n      <div nz-row>\r\n        <div nz-col nzSpan=\"12\" nzOffset=\"9\">\r\n          <nz-steps [nzCurrent]=\"current\" nzDirection=\"vertical\">\r\n            <nz-step nzTitle=\"Initializing\" nzDescription=\"&nbsp;\" nzIcon=\"setting\" ></nz-step>\r\n            <nz-step nzTitle=\"Connecting\" nzDescription=\"&nbsp;\" nzIcon=\"wifi\"></nz-step>\r\n            <nz-step nzTitle=\"Loading dashboards\" nzDescription=\"&nbsp;\" nzIcon=\"download\"></nz-step>\r\n          </nz-steps>\r\n        </div>\r\n      </div>\r\n    </nz-content>\r\n</nz-layout>\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router} from '@angular/router';\r\nimport { KerviDashboardComponent, NGXKerviService, ConnectionState} from 'ngx-kervi'\r\ndeclare var window:any;\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent extends KerviDashboardComponent implements OnInit {\r\n  @ViewChild(\"leftPad\") leftPad:ElementRef;\r\n  @ViewChild(\"rightPad\") rightPad:ElementRef;\r\n  private padSize=180;\r\n  private isConnected:false;\r\n  public leftPadTop:number;\r\n  public leftPadLeft:number;\r\n\r\n  public rightPadTop:number;\r\n  public rightPadLeft:number;\r\n  cameraIdx = \"\";\r\n  mediaHidden = true;\r\n\r\n  constructor(private router:Router, private activatedRoute:ActivatedRoute ) {\r\n    super();\r\n   }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    this.cameraId$.subscribe(function(camId){\r\n      console.log(\"db cid\", camId);\r\n      this.cameraIdx = camId;\r\n    })\r\n    this.kerviService.componentsChanged$.subscribe(function() {\r\n      console.log(\"adb changed\");\r\n      const id = self.dashboardId;\r\n      //self.loadDashboard(\"0\");\r\n      self.loadDashboard(id);\r\n      \r\n      \r\n    });\r\n\r\n    this.activatedRoute.params.subscribe(params => {\r\n      var dashboardId = params['name'];\r\n      console.log(\"dbi\", dashboardId);\r\n      this.loadDashboard(dashboardId);\r\n      \r\n      console.log(\"rid\", dashboardId);\r\n      setTimeout(() => {\r\n        var h = window.innerHeight;\r\n        var w = window.innerWidth;\r\n\r\n        self.leftPadTop = h / 2 - self.padSize/2\r\n        self.leftPadLeft = w / 4 - self.padSize/2 \r\n        \r\n        self.rightPadTop = h / 2 - self.padSize/2\r\n        self.rightPadLeft = w - w / 4 - self.padSize/2 \r\n        \r\n\r\n      }, 0);\r\n    });\r\n  }\r\n\r\n  handleMediaClose(): void {\r\n    console.log('click ok');\r\n    this.mediaHidden = true;\r\n  }\r\n\r\n}\r\n","<nz-layout *ngIf=\"dashboard\">\r\n\t<nz-header *ngIf='!isAppEmpty'>\r\n\t\t<div nz-row>\r\n\t\t\t<div nz-col nzSpan=\"6\">\t\t\r\n\t\t\t\t<ul nz-menu  nzMode=\"horizontal\" class=\"kervi-main-menu\">\r\n\t\t\t\t\t<li nz-submenu  *ngIf=\"showMenu\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<span title><i nz-icon nzTheme=\"twotone\" type=\"dashboard\" [nzTwotoneColor]=\"'#9fd037'\"></i> {{dashboard.name}}</span>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<ng-container *ngIf=\"dashboards.length > 1\">\r\n\t\t\t\t\t\t\t\t<li nz-menu-item *ngFor=\"let dashboard of dashboards\" [routerLink]=\"['/dashboard', dashboard.id]\">{{dashboard.name}}</li>\r\n\t\t\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\t\t<li *ngIf=\"authenticated && dashboards.length > 1\">\r\n\t\t\t\t\t\t\t\t<nz-divider></nz-divider>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li nz-menu-item *ngIf=\"authenticated && anonymous\" href=\"javascript: return false;\" (click)=\"logoff($event)\" ><i nz-icon type=\"login\"></i> {{('login' | translate)}}</li>\r\n\t\t\t\t\t\t\t<li nz-menu-item *ngIf=\"authenticated && !anonymous\" href=\"javascript: return false;\" (click)=\"logoff($event)\"><i nz-icon type=\"logout\"></i>{{('logout' | translate)}}</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li nz-menu-item *ngIf=\"showPanelController\">\r\n\t\t\t\t\t\t<a  (click)=\"dashboardPanelsHidden = !dashboardPanelsHidden;\">\r\n\t\t\t\t\t\t\t<i nz-icon type=\"sliders\" nzTheme=\"twotone\" [nzTwotoneColor]=\"'#9fd037'\"></i>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"kervi-sys-panel\" *ngIf=\"dashboard && dashboard.sysPanel\" nz-col nzSpan=\"18\">\r\n\t\t\t\t<kervi-dashboard-panel [dashboardSizes]=\"dashboardSizes\" [inline]=\"true\" [panel]=\"dashboard.sysPanel\" ></kervi-dashboard-panel>\r\n\t\t\t\t&nbsp;<a  (click)=\"mediaHidden = !mediaHidden;\">\r\n\t\t\t\t\t\t<i nz-icon nzType=\"folder-open\" nzTheme=\"twotone\" [nzTwotoneColor]=\"'#9fd037'\"> </i>\r\n\t\t\t\t</a>\r\n\t\t\t\t<kervi-message-button></kervi-message-button>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n\t</nz-header>\r\n\t\t\r\n\t<nz-content >\r\n\r\n\t\t<ng-container *ngIf=\"isAppEmpty\">\r\n\t\t\t<div nz-row>\r\n\t\t\t\t<div nz-col nzSpan=\"12\" nzOffset=\"6\">\r\n\t\t\t\t\t<nz-alert\r\n\t\t\t\t\t\tnzType=\"error\"\r\n\t\t\t\t\t\t[nzMessage] =\"'hello_world' | translate\"\r\n\t\t\t\t\t\t[nzDescription]=\" 'empty_app' | translate\"\r\n\t\t\t\t\t\tnzShowIcon\t\r\n\t\t\t\t\t  >\r\n\t\t\t\t\t  </nz-alert>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</ng-container>\r\n\t\t<kervi-cam-viewer *ngIf=\"cameraId\" [isBackground]=\"true\" [cameraId]=\"(cameraId$| async)\" [linkParameters]=\"cameraParameters\"></kervi-cam-viewer>\r\n\t\t<div #leftPad class=\"kervi-controller-pad\" *ngIf=\"showLeftPad\" [style.left.px]=\"leftPadLeft\" [style.top.px]=\"leftPadTop\" >\r\n\t\t\t<kervi-controller-pad [autoCenter]=\"autoCenterLeftPad\" [XValue]=\"leftPadXValue\" [YValue]=\"leftPadYValue\"></kervi-controller-pad>\r\n\t\t</div>\r\n\t\t<div #rightPad class=\"kervi-controller-pad\" *ngIf=\"showRightPad\" [style.left.px]=\"rightPadLeft\" [style.top.px]=\"rightPadTop\" >\r\n\t\t\t<kervi-controller-pad [autoCenter]=\"autoCenterRightPad\" [XValue]=\"rightPadXValue\" [YValue]=\"rightPadYValue\"></kervi-controller-pad>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"kervi-panels\" fxLayout=\" column\" fxLayout.xs=\"column\" fxLayoutGap=\"0.5%\" fxLayoutAlign=\"\"  *ngIf=\"!dashboardPanelsHidden\" style=\"\">\r\n\t\t\t<ng-container *ngFor=\"let panel of dashboard.panels\">\r\n\t\t\t\t\t<kervi-dashboard-panel [fxFlex]=\"panel.parameters.width\" fxFlex.xs=\"100%\" [dashboardSizes]=\"defaultSizes\" [panel]=\"panel\"></kervi-dashboard-panel>\r\n\t\t\t\t\r\n\t\t\t</ng-container>\r\n\t\t</div>\r\n\t</nz-content>\r\n\t<nz-footer *ngIf='!isAppEmpty'>\r\n\t\t<div nz-col nzSpan=\"8\" style=\"text-align: left\">\r\n\t\t\t<kervi-dashboard-panel [inline]=\"true\" *ngIf=\"dashboard.footerLeftPanel\" [dashboardSizes]=\"defaultSizes\" [panel]=\"dashboard.footerLeftPanel\"></kervi-dashboard-panel>\r\n\t\t</div>\r\n\t\t<div nz-col nzSpan=\"8\" style=\"text-align:center\">\r\n\t\t\t<kervi-dashboard-panel [inline]=\"true\" *ngIf=\"dashboard.footerCenterPanel\" [dashboardSizes]=\"defaultSizes\" [panel]=\"dashboard.footerCenterPanel\"></kervi-dashboard-panel>\r\n\t\t</div>\r\n\t\t<div nz-col nzSpan=\"8\"  style=\"text-align: right\">\r\n\t\t\t<kervi-dashboard-panel [inline]=\"true\" *ngIf=\"dashboard.footerRightPanel\" [dashboardSizes]=\"defaultSizes\" [panel]=\"dashboard.footerRightPanel\"></kervi-dashboard-panel>\r\n\t\t\t<button nz-button nzShape=\"round\" (mousedown)=\"toggleFullScreen()\"><i nz-icon [nzType]=\"inFullScreen ? 'fullscreen' : 'fullscreen-exit'\" title=\"{{( 'toggle_screen' | translate)}}\"></i></button>\r\n\t\t</div>\r\n\t</nz-footer>\r\n</nz-layout>\r\n\r\n<nz-modal \r\n\tnzWrapClassName=\"vertical-center-modal\"\r\n\t[(nzVisible)]=\"!mediaHidden\"\r\n\tnzTitle=\"Media\"\r\n\t(nzOnCancel)=\"handleMediaClose()\"\r\n\t\r\n>\r\n<div style=\"display:inline-block;width:100%\"> <app-media ></app-media></div>\t\r\n\r\n</nz-modal>\r\n\r\n\r\n\r\n","\r\n//based on https://github.com/LZHD/ng-picture-viewer\r\n//Copyright 2019 Tim Wentzlau\r\n// Licensed under MIT\r\nimport {\r\n    AfterViewInit,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Inject,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Optional,\r\n    Output,\r\n    Renderer2\r\n  } from '@angular/core';\r\n  import {DOCUMENT} from '@angular/common';\r\n  import ImageViewer from 'iv-viewer';\r\n  import {FullScreenViewer} from 'iv-viewer';\r\n  import {ImgViewerConfig} from './image-viewer.config';\r\n  import {IvViewerType} from './interfaces/iv-viewer.type';\r\n  import {ImgViewerType} from './interfaces/img-viewer.type';\r\n\r\n  @Component({\r\n    selector: 'nz-picture-viewer',\r\n    templateUrl: './image-viewer.component.html',\r\n    styleUrls: ['./image-viewer.component.scss']\r\n  })\r\n  export class ImgViewerComponent implements OnInit, OnDestroy, AfterViewInit {\r\n    @Input() imgViewerClass: string;\r\n    @Input() images: string[] = [];\r\n    @Input() showOperate = true;\r\n    @Input() zoom = true;\r\n    @Input() rotate = true;\r\n    @Input() reset = true;\r\n    @Input() fullscreen = true;\r\n    @Input() download = true;\r\n    @Input() defaultName = 'download';\r\n    @Output() prevChange: EventEmitter<number> = new EventEmitter<number>();\r\n    @Output() nextChange: EventEmitter<number> = new EventEmitter<number>();\r\n    @Output() closeViewer: EventEmitter<number> = new EventEmitter();\r\n    ROTATE_ANGLE = 90;\r\n    imageViewer$: any;\r\n    fullScreenViewer$: any;\r\n    element: HTMLElement;\r\n    currentImgIndex = 1;\r\n    imgTotal = 0;\r\n    zoomValue = 100;\r\n    isVertical = false;\r\n    imgRotate = 0;\r\n    imgViewerConfig: ImgViewerConfig;\r\n    ivViewerType: IvViewerType;\r\n    imageViewerType: ImgViewerType;\r\n\r\n    constructor(\r\n      private el: ElementRef,\r\n      private renderer: Renderer2,\r\n      @Inject(DOCUMENT) private doc: Document,\r\n      @Optional() private config: ImgViewerConfig\r\n    ) {\r\n      this.element = this.el.nativeElement as HTMLElement;\r\n      this.imgViewerConfig = new ImgViewerConfig();\r\n      this.ivViewerType = this.imgViewerConfig.ivViewerType;\r\n      this.imageViewerType = this.imgViewerConfig.imageViewerType;\r\n      if (this.config && this.config.ivViewerType) {\r\n        this.ivViewerType = Object.assign(this.ivViewerType, this.config.ivViewerType);\r\n      }\r\n      if (this.config && this.config.imageViewerType) {\r\n        this.imageViewerType = Object.assign(this.imageViewerType, this.config.imageViewerType);\r\n      }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n      this.imgTotal = this.images.length;\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n      this.initImgViewer();\r\n    }\r\n\r\n    zoomInImg(): void {\r\n      this.zoomValue += 10;\r\n      this.imageViewer$.zoom(this.zoomValue);\r\n    }\r\n\r\n    zoomOutImg(): void {\r\n      if (this.zoomValue === 100) {\r\n        return;\r\n      }\r\n      this.zoomValue -= 10;\r\n      if (this.zoomValue < 0) {\r\n        this.zoomValue = 0;\r\n      }\r\n      this.imageViewer$.zoom(this.zoomValue);\r\n    }\r\n\r\n    rotateImg(isClockwise: boolean): void {\r\n      this.beforeRotateImg().then((time: number) => {\r\n        if (isClockwise) {\r\n          this.imgRotate += this.ROTATE_ANGLE;\r\n        } else {\r\n          this.imgRotate -= this.ROTATE_ANGLE;\r\n        }\r\n        this.isVertical = !this.isVertical;\r\n        time <= 0 ? this.addImgRotate() : setTimeout(() => this.addImgRotate(), time);\r\n      });\r\n    }\r\n\r\n    fullscreenImg(): void {\r\n      this.beforeRotateImg().then((time: number) => {\r\n        if (time <= 0) {\r\n          this.fullScreenViewer$.show(this.images[this.currentImgIndex - 1]);\r\n          this.addImgRotate(false);\r\n        } else {\r\n          setTimeout(() => {\r\n            this.fullScreenViewer$.show(this.images[this.currentImgIndex - 1]);\r\n            this.addImgRotate(false);\r\n          }, time);\r\n        }\r\n      });\r\n    }\r\n\r\n    downloadImg(): void {\r\n      const download = this.renderer.createElement('a');\r\n      this.renderer.setAttribute(download, 'download', `${this.defaultName}-${this.currentImgIndex}`);\r\n      this.renderer.setAttribute(download, 'display', 'none');\r\n      this.renderer.setAttribute(download, 'href', this.images[this.currentImgIndex - 1]);\r\n      this.renderer.setAttribute(download, 'target', '_blank');\r\n      this.renderer.appendChild(this.element, download);\r\n      download.click();\r\n      this.renderer.removeChild(this.renderer, download);\r\n    }\r\n\r\n    prevImg(): void {\r\n      this.isVertical = false;\r\n      this.currentImgIndex--;\r\n      if (this.currentImgIndex <= 0) {\r\n        this.currentImgIndex = this.imgTotal;\r\n      }\r\n      //this.showImg();\r\n      this.prevChange.emit(this.currentImgIndex);\r\n    }\r\n\r\n    nextImg(): void {\r\n      this.isVertical = false;\r\n      this.currentImgIndex++;\r\n      if (this.currentImgIndex > this.imgTotal) {\r\n        this.currentImgIndex = 1;\r\n      }\r\n      //this.showImg();\r\n      this.nextChange.emit(this.currentImgIndex);\r\n    }\r\n\r\n    closeImageViewer(){\r\n      this.closeViewer.emit();\r\n    }\r\n\r\n    private initImgViewer(): void {\r\n      this.imageViewer$ = new ImageViewer(this.element.querySelector('.img-viewer-panel-body-content'), this.ivViewerType);\r\n      this.fullScreenViewer$ = new FullScreenViewer(this.ivViewerType);\r\n      //this.showImg();\r\n    }\r\n\r\n    private addImgRotate(isAnimation = true): void {\r\n      let scale = '';\r\n      if (this.isVertical && this.isImgOverVertical()) {\r\n        scale = `scale(${this.getScale()})`;\r\n      }\r\n      const rotate = `rotate(${this.imgRotate}deg)`;\r\n      if (isAnimation) {\r\n        this.addTransition('iv-snap-image');\r\n        this.addTransition('iv-small-image');\r\n      }\r\n      this.setImgRotate('iv-snap-image', rotate, scale);\r\n      this.setImgRotate('iv-small-image', rotate, scale);\r\n      setTimeout(() => {\r\n        if (isAnimation) {\r\n          this.removeAnimation('iv-snap-image');\r\n          this.removeAnimation('iv-small-image');\r\n        }\r\n      }, 500);\r\n    }\r\n\r\n    private async beforeRotateImg(): Promise<any> {\r\n      this.zoomValue = 100;\r\n      const time: number = this.imageViewer$._state.zoomValue - this.zoomValue;\r\n      await this.imageViewer$.resetZoom();\r\n      await this.imageViewer$.refresh();\r\n      return time === 0 ? 0 : 500;\r\n    }\r\n\r\n    private beforeShowImg(): void {\r\n      this.imgRotate = 0;\r\n      this.isVertical = false;\r\n      const currentImg = this.element.querySelector('.iv-small-image');\r\n      if (!!currentImg) {\r\n        this.renderer.removeChild(this.element, currentImg);\r\n      }\r\n      this.setStyle('iv-loader', 'visibility', 'auto');\r\n      this.setStyle('options-image-viewer', 'visibility', 'inherit');\r\n    }\r\n\r\n    showImg(): void {\r\n      this.beforeShowImg();\r\n      \r\n      this.imageViewer$.load(this.images[0]);\r\n    }\r\n\r\n    private isImgOverVertical(): boolean {\r\n      const imgViewerHeight = this.element.clientHeight;\r\n      const currentImgWidth = this.element.querySelector('.iv-small-image').clientWidth;\r\n      return imgViewerHeight < currentImgWidth + 10;\r\n    }\r\n\r\n    private getScale(): number {\r\n      const imgViewerHeight = this.element.querySelector('.img-viewer-panel-body-content').clientHeight;\r\n      const currentImgWidth = this.element.querySelector('.iv-small-image').clientWidth;\r\n      const differenceWidth = currentImgWidth - imgViewerHeight;\r\n      if (differenceWidth >= 250 && differenceWidth < 300) {\r\n        return differenceWidth / imgViewerHeight - 0.1;\r\n      } else if (differenceWidth >= 300 && differenceWidth < 400) {\r\n        return differenceWidth / imgViewerHeight - 0.15;\r\n      } else if (differenceWidth >= 400) {\r\n        return differenceWidth / imgViewerHeight - 0.32;\r\n      } else if (differenceWidth < 0) {\r\n        return 1;\r\n      }\r\n      return 0.6;\r\n    }\r\n\r\n    private addTransition(node): void {\r\n      this.setStyle(node, 'transition', '0.5s linear');\r\n    }\r\n\r\n    private removeAnimation(node): void {\r\n      this.setStyle(node, 'transition', 'auto');\r\n    }\r\n\r\n    private setImgRotate(node, roate, scale): void {\r\n      this.setStyle(node, 'transform', `${roate} ${scale}`);\r\n    }\r\n\r\n    private setStyle(node, name, value): void {\r\n      const elements = this.doc.querySelectorAll(`.${node}`);\r\n      elements.forEach(ele => this.renderer.setStyle(ele, name, value));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n      if (!!this.imageViewer$) {\r\n        this.imageViewer$ = this.imageViewer$.destroy();\r\n      }\r\n      if (!!this.fullScreenViewer$) {\r\n        this.fullScreenViewer$ = this.fullScreenViewer$.destroy();\r\n      }\r\n    }\r\n  }\r\n","<div class=\"img-viewer {{imgViewerClass}}\">\r\n    <div class=\"img-viewer-panel\">\r\n      <div class=\"img-viewer-panel-header\">\r\n        <div nz-row>\r\n          <div nz-col nzSpan=\"3\">\r\n              <i nz-icon (click)=\"closeImageViewer()\" nzType=\"rollback\" nzTheme=\"outline\"></i>\r\n          </div>\r\n        <div nz-col nzSpan=\"21\">\r\n          <div *ngIf=\"showOperate\" class=\"img-viewer-panel-header-operation\">\r\n            <span nz-tooltip nzPlacement=\"bottom\" [nzTitle]=\"imageViewerType.zoomInToolTip\" *ngIf=\"zoom\" (click)=\"zoomInImg()\"><i nz-icon nzType=\"zoom-in\"></i></span>\r\n            <span nz-tooltip nzPlacement=\"bottom\" [nzTitle]=\"imageViewerType.zoomOutToolTip\" *ngIf=\"zoom\" (click)=\"zoomOutImg()\"><i nz-icon nzType=\"zoom-out\"></i></span>\r\n            <span nz-tooltip nzPlacement=\"bottom\" [nzTitle]=\"imageViewerType.rotateLeftToolTip\" *ngIf=\"rotate\" (click)=\"rotateImg(false)\"><i nz-icon nzType=\"undo\"></i></span>\r\n            <span nz-tooltip nzPlacement=\"bottom\" [nzTitle]=\"imageViewerType.rotateRightToolTip\" *ngIf=\"rotate\" (click)=\"rotateImg(true)\"><i nz-icon nzType=\"redo\"></i></span>\r\n            <span nz-tooltip nzPlacement=\"bottom\" [nzTitle]=\"imageViewerType.resetToolTip\" *ngIf=\"reset\" (click)=\"showImg()\"><i nz-icon nzType=\"sync\"></i></span>\r\n            <span nz-tooltip nzPlacement=\"bottom\" [nzTitle]=\"imageViewerType.fullScreenToolTip\" *ngIf=\"fullscreen\" (click)=\"fullscreenImg()\"><i nz-icon nzType=\"fullscreen\"></i></span>\r\n            <span nz-tooltip nzPlacement=\"bottom\" [nzTitle]=\"imageViewerType.downloadToolTip\" *ngIf=\"download\" (click)=\"downloadImg()\"><i nz-icon nzType=\"download\"></i></span>\r\n          </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      <div class=\"img-viewer-panel-body\" [class.img-viewer-panel-body-has-footer]=\"images.length > 1\">\r\n        <div class=\"img-viewer-panel-body-content\">\r\n  \r\n        </div>\r\n        <span *ngIf=\"imgTotal > 1\" class=\"img-viewer-panel-body-prev\" (click)=\"prevImg()\"><i nz-icon nzType=\"left\"></i></span>\r\n        <span *ngIf=\"imgTotal > 1\" class=\"img-viewer-panel-body-next\" (click)=\"nextImg()\"><i nz-icon nzType=\"right\"></i></span>\r\n      </div>\r\n      <div *ngIf=\"imgTotal > 1\" class=\"img-viewer-panel-footer\">\r\n      {{currentImgIndex}} / {{imgTotal}}\r\n      </div>\r\n    </div>\r\n  </div>","import {IvViewerType} from './interfaces/iv-viewer.type';\r\nimport {ImgViewerType} from './interfaces/img-viewer.type';\r\n\r\nexport class ImgViewerConfig {\r\n  ivViewerType?: IvViewerType = {\r\n    zoomValue: 100,\r\n    maxZoom: 500,\r\n    snapView: false,\r\n    refreshOnResize: true,\r\n    zoomOnMouseWheel: true,\r\n  };\r\n  imageViewerType?: ImgViewerType = {\r\n    zoomInToolTip: 'Zoom in',\r\n    zoomOutToolTip: 'Zoom put',\r\n    rotateLeftToolTip: 'Rotate left',\r\n    rotateRightToolTip: 'Rotate right',\r\n    resetToolTip: 'Reset tools',\r\n    fullScreenToolTip: 'Full screen',\r\n    downloadToolTip: 'Download',\r\n  };\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { NGXKerviService } from 'ngx-kervi'\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  userName: AbstractControl;\r\n  password: AbstractControl;\r\n  invalidCredentials:boolean = false;\r\n  \r\n  \r\n  constructor(fb: FormBuilder, private kerviService:NGXKerviService) {\r\n    var self = this;\r\n    this.loginForm = fb.group({  \r\n    'userName':  ['', Validators.required],\r\n    'password':  ['', Validators.required]  \r\n    });\r\n    \r\n    this.userName = this.loginForm.controls['userName'];\r\n    this.password = this.loginForm.controls['password']; \r\n   }\r\n\r\n   submitForm(): void {\r\n     var self = this;\r\n     if (this.loginForm.valid){\r\n      console.log(\"fv\");\r\n      this.kerviService.authenticate(this.userName.value, this.password.value)\r\n      .then(function(){\r\n         console.log(\"login ok\");\r\n       }).catch(function(){\r\n         console.log(\"login error\");\r\n         self.invalidCredentials=true;\r\n       });\r\n     } else {\r\n       console.log(\"fve\");\r\n    //   // for (const i in this.loginForm.controls) {\r\n    //   //   this.loginForm.controls[i].markAsDirty();\r\n    //   //   this.loginForm.controls[i].updateValueAndValidity();\r\n    //   // }\r\n     }\r\n    \r\n  } \r\n  ngOnInit() {\r\n  }\r\n}\r\n","<nz-layout>\r\n  <nz-content class=\"kervi-app-initializing\">\r\n    <div nz-row>\r\n      <div nz-col nzSpan=\"12\" nzOffset=\"6\">\r\n        <form nz-form \r\n          [formGroup]=\"loginForm\" \r\n          (ngSubmit)=\"submitForm()\"\r\n        >\r\n            <nz-form-item>\r\n              <nz-form-control>\r\n                <nz-input-group [nzPrefix]=\"prefixUser\">\r\n                  <input formControlName=\"userName\" nz-input placeholder=\"Username\" />\r\n                </nz-input-group>\r\n                <nz-form-explain *ngIf=\"loginForm.get('userName')?.dirty && loginForm.get('userName')?.errors\"\r\n                  >Please input your username!</nz-form-explain\r\n                >\r\n              </nz-form-control>\r\n            </nz-form-item>\r\n            <nz-form-item>\r\n              <nz-form-control>\r\n                <nz-input-group [nzPrefix]=\"prefixLock\">\r\n                  <input formControlName=\"password\" nz-input type=\"password\" placeholder=\"Password\" />\r\n                </nz-input-group>\r\n                <nz-form-explain *ngIf=\"loginForm.get('password')?.dirty && loginForm.get('password')?.errors\"\r\n                  >Please input your Password!</nz-form-explain\r\n                >\r\n              </nz-form-control>\r\n            </nz-form-item>\r\n            <nz-form-item>\r\n              <nz-form-control>\r\n                <button nz-button nzType=\"primary\" [disabled]=\"!loginForm.valid\">Log in</button>\r\n                <nz-form-explain *ngIf=\"invalidCredentials\"\r\n                  >Invalid user name or password</nz-form-explain\r\n                >\r\n              </nz-form-control>\r\n            </nz-form-item>\r\n          </form>\r\n          <ng-template #prefixUser><i nz-icon type=\"user\"></i></ng-template>\r\n          <ng-template #prefixLock><i nz-icon type=\"lock\"></i></ng-template>\r\n      </div>\r\n    </div>\r\n  </nz-content>\r\n</nz-layout>","// Copyright (c) 2019, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\r\nimport { KerviDirectoryComponent } from 'ngx-kervi';\r\nimport { NzFormatEmitEvent, NzTreeNodeOptions, NzTreeComponent } from 'ng-zorro-antd';\r\nimport { ImgViewerComponent } from '../image-viewer/image-viewer.component';\r\n\r\n@Component({\r\n  selector: 'app-media',\r\n  templateUrl: './media.component.html',\r\n  styleUrls: ['./media.component.css']\r\n})\r\nexport class MediaComponent extends KerviDirectoryComponent implements OnInit {\r\n  @ViewChild('nzTreeComponent') nzTreeComponent: NzTreeComponent;\r\n  @ViewChild('imageViewer', { static: true }) imageViewer: ImgViewerComponent;\r\n  @Input() files = [\r\n\r\n  ];\r\n  showImageViewer = false;\r\n  directoryFiles = {};\r\n\r\n\r\n  @Input() nodes: NzTreeNodeOptions[] = [\r\n    { title: 'root', key: '/' }\r\n  ];\r\n\r\n  defaultExpandedKeys = [];\r\n\r\n  constructor( ) {\r\n    super();\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  nzEvent(event: Required<NzFormatEmitEvent>): void {\r\n    console.log('trev', event);\r\n    const node = event.node;\r\n    if (event.eventName === 'click') {\r\n      this.files = [];\r\n      this.kerviService.GetDirectory(node.key).then( d => {\r\n        const files = d.files$.getValue();\r\n        for(const file of files) {\r\n          if (file.isFile){\r\n            this.kerviService.GetThumbnail(file.path).then( t =>{\r\n              this.files.push( { title: file.name, key: file.path, thumb: t});\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n    if (event.eventName === 'expand') {\r\n      if (node && node.getChildren().length === 0 && node.isExpanded) {\r\n        this.kerviService.GetDirectory(node.key).then( d => {\r\n          const files = d.files$.getValue();\r\n          const dirs = [];\r\n          for(const file of files) {\r\n            if (!file.isFile) {\r\n              dirs.push({ title: file.name, key: file.path, isLeaf: false});\r\n            }\r\n          }\r\n          node.addChildren(dirs);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  showImage(filePath) {\r\n    this.showImageViewer = true;\r\n    this.imageViewer.imgTotal = this.files.length;\r\n    this.kerviService.GetFile(filePath).then( f => {\r\n      this.imageViewer.images = ['data:image/png;base64,' + f];\r\n      this.imageViewer.showImg();\r\n    });\r\n  }\r\n\r\n  nextImage(event){\r\n    console.log(\"ni\", event);\r\n    const filePath = this.files[this.imageViewer.currentImgIndex-1].key;\r\n    this.kerviService.GetFile(filePath).then( f => {\r\n      this.imageViewer.images = ['data:image/png;base64,' + f];\r\n      this.imageViewer.showImg();\r\n    });\r\n  }\r\n\r\n  closeViewer(){\r\n    this.showImageViewer = false;\r\n  }\r\n}\r\n","<div [hidden]=\"!showImageViewer\">\r\n\t<nz-picture-viewer (closeViewer)=\"closeViewer()\" (prevChange)='nextImage($event)' (nextChange)='nextImage($event)' #imageViewer></nz-picture-viewer>\r\n</div>\r\n<div [hidden]=\"showImageViewer\">\r\n\t<div style=\"max-height: 80%;overflow-y: auto; \" nz-col nzSpan=\"8\">\r\n\t\t<nz-tree [nzData]=\"nodes\" [nzExpandedKeys]=\"defaultExpandedKeys\" nzAsyncData (nzClick)=\"nzEvent($event)\" (nzExpandChange)=\"nzEvent($event)\"> </nz-tree>\r\n\t</div>\r\n\t<div style=\"min-height:40px;max-height: 300px;overflow-y: auto; border-left: 1px solid black;\" nz-col nzSpan=\"16\">\r\n\t\t\r\n\t\t<nz-empty *ngIf=\"files.length==0\" nzNotFoundContent=\"No files in folder\"></nz-empty>\r\n\t\t<div (dblclick)=\"showImage(file.key)\"  style=\"display: inline-block;margin-left:5px; margin-bottom:5px;\" *ngFor=\"let file of files\" nzHoverable >\r\n\t\t\t<img alt=\"example\" [attr.src]=\"'data:image/png;base64,' + file.thumb\" />\r\n\t\t</div>\r\n\t\t<!-- <nz-card style=\"display: inline-block;\" *ngFor=\"let file of files\" nzHoverable style=\"width:140px\" >\r\n\t\t\t<img alt=\"example\" [attr.src]=\"'data:image/png;base64,' + file.data\" />\r\n\t\t\t<ng-template #coverTemplate>\r\n\t\t\t\t\r\n\t\t\t</ng-template>\r\n\t\t</nz-card> -->\r\n\t\t\r\n\t</div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"]}