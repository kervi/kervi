{"version":3,"sources":["webpack:///projects/webApp/src/app/app.module.ts","webpack:///projects/ngx-kervi/src/lib/ngx-kervi.service.ts","webpack:///projects/ngx-kervi/src/lib/ngx-kervi-template.service.ts","webpack:///projects/ngx-kervi/src/lib/app-injector.service.ts","webpack:///projects/ngx-kervi/src/lib/dashboard/kervi-dashboard.component.ts","webpack:///projects/ngx-kervi/src/lib/dashboard/kervi-dashboard-panel.component.ts","webpack:///projects/ngx-kervi/src/lib/dashboard/kervi-controller-pad.component.ts","webpack:///projects/ngx-kervi/src/lib/dashboard/kervi-widget.component.ts","webpack:///projects/ngx-kervi/src/lib/values/value.component.ts","webpack:///projects/ngx-kervi/src/lib/values/kervi-number-value.component.ts","webpack:///projects/ngx-kervi/src/lib/values/kervi-boolean-value.component.ts","webpack:///projects/ngx-kervi/src/lib/actions/kervi-action.component.ts","webpack:///projects/ngx-kervi/src/lib/camera/kervi-camera.component.ts","webpack:///projects/ngx-kervi/src/lib/values/kervi-color-value.component.ts","webpack:///projects/ngx-kervi/src/lib/values/kervi-datetime-value.component.ts","webpack:///projects/ngx-kervi/src/lib/values/kervi-string-value.component.ts","webpack:///projects/ngx-kervi/src/lib/user-log/user-log.component.ts","webpack:///projects/ngx-kervi/src/lib/files/kervi-directory.component.ts","webpack:///projects/ngx-kervi/src/lib/dashboard/app-health.component.ts","webpack:///projects/ngx-kervi/src/lib/ngx-kervi.component.ts","webpack:///projects/ngx-kervi/src/lib/pipes/textPipe.ts","webpack:///projects/ngx-kervi/src/lib/pipes/pipes.module.ts","webpack:///projects/ngx-kervi/src/lib/ngx-kervi.module.ts","webpack:///projects/ngx-kervi/src/public_api.ts","webpack:///projects/ngx-kervi/src/ngx-kervi.ts","webpack:///projects/webApp/src/app/dashboard/dashboard.component.ts","webpack:///projects/webApp/src/app/dashboard/dashboard.component.html","webpack:///projects/kervi-zorro/src/lib/kervi-zorro.service.ts","webpack:///projects/kervi-zorro/src/lib/ui-components/sparkline/sparkline.component.ts","webpack:///projects/kervi-zorro/src/lib/ui-components/sparkline/sparkline.component.html","webpack:///projects/kervi-zorro/src/lib/values/number-value/number-value.component.ts","webpack:///projects/kervi-zorro/src/lib/values/number-value/number-value.component.html","webpack:///projects/kervi-zorro/src/lib/ui-components/switch-button/switch-button.component.ts","webpack:///projects/kervi-zorro/src/lib/ui-components/switch-button/switch-button.component.html","webpack:///projects/kervi-zorro/src/lib/ui-components/button/button.component.ts","webpack:///projects/kervi-zorro/src/lib/ui-components/button/button.component.html","webpack:///projects/kervi-zorro/src/lib/values/boolean-value/boolean-value.component.ts","webpack:///projects/kervi-zorro/src/lib/values/boolean-value/boolean-value.component.html","webpack:///projects/kervi-zorro/src/lib/values/string-value/string-value.component.ts","webpack:///projects/kervi-zorro/src/lib/values/string-value/string-value.component.html","webpack:///projects/kervi-zorro/src/lib/ui-components/color/color.component.ts","webpack:///projects/kervi-zorro/src/lib/ui-components/color/color.component.html","webpack:///projects/kervi-zorro/src/lib/values/color-value/color-value.component.ts","webpack:///projects/kervi-zorro/src/lib/values/color-value/color-value.component.html","webpack:///projects/kervi-zorro/src/lib/ui-components/datetimepicker/datetimepicker.component.ts","webpack:///projects/kervi-zorro/src/lib/ui-components/datetimepicker/datetimepicker.component.html","webpack:///projects/kervi-zorro/src/lib/values/datetime-value/datetime-value.component.ts","webpack:///projects/kervi-zorro/src/lib/values/datetime-value/datetime-value.component.html","webpack:///projects/kervi-zorro/src/lib/values/kervi-value/kervi-value.component.ts","webpack:///projects/kervi-zorro/src/lib/values/kervi-value/kervi-value.component.html","webpack:///projects/kervi-zorro/src/lib/action/action.component.ts","webpack:///projects/kervi-zorro/src/lib/action/action.component.html","webpack:///projects/kervi-zorro/src/lib/ui-components/mpeg-viewer/mpeg-viewer.component.ts","webpack:///projects/kervi-zorro/src/lib/ui-components/mpeg-viewer/mpeg-viewer.component.html","webpack:///projects/kervi-zorro/src/lib/nipple-pad/nipple-pad.component.ts","webpack:///projects/kervi-zorro/src/lib/nipple-pad/nipple-pad.component.html","webpack:///projects/kervi-zorro/src/lib/cam-viewer/cam-viewer.component.html","webpack:///projects/kervi-zorro/src/lib/cam-viewer/cam-viewer.component.ts","webpack:///projects/kervi-zorro/src/lib/ui-components/gauge/gauge.component.ts","webpack:///projects/kervi-zorro/src/lib/ui-components/gauge/gauge.component.html","webpack:///projects/kervi-zorro/src/lib/ui-components/chart/chart.component.ts","webpack:///projects/kervi-zorro/src/lib/ui-components/chart/chart.component.html","webpack:///projects/kervi-zorro/src/lib/widget/widget.component.html","webpack:///projects/kervi-zorro/src/lib/widget/widget.component.ts","webpack:///projects/kervi-zorro/src/lib/log/user-log/user-log.component.ts","webpack:///projects/kervi-zorro/src/lib/log/user-log/user-log.component.html","webpack:///projects/kervi-zorro/src/lib/app-health/app-health.component.ts","webpack:///projects/kervi-zorro/src/lib/app-health/app-health.component.html","webpack:///projects/kervi-zorro/src/lib/dashboard-panel/dashboard-panel.component.html","webpack:///projects/kervi-zorro/src/lib/dashboard-panel/dashboard-panel.component.ts","webpack:///projects/kervi-zorro/src/lib/ui-components/slider/slider.component.ts","webpack:///projects/kervi-zorro/src/lib/ui-components/icons/icons.component.ts","webpack:///projects/kervi-zorro/src/lib/ui-components/icons/icons.component.html","webpack:///projects/kervi-zorro/src/lib/ui-components/ui-components.module.ts","webpack:///projects/kervi-zorro/src/lib/values/values.module.ts","webpack:///projects/kervi-zorro/src/lib/controller-pad/controller-pad.component.ts","webpack:///projects/kervi-zorro/src/lib/controller-pad/controller-pad.component.html","webpack:///projects/kervi-zorro/src/lib/log/messages/messages.component.ts","webpack:///projects/kervi-zorro/src/lib/log/messages/messages.component.html","webpack:///projects/kervi-zorro/src/lib/log/message-button/message-button.component.ts","webpack:///projects/kervi-zorro/src/lib/log/message-button/message-button.component.html","webpack:///projects/kervi-zorro/src/lib/kervi-zorro.module.ts","webpack:///projects/kervi-zorro/src/lib/media/media.component.ts","webpack:///projects/kervi-zorro/src/public_api.ts","webpack:///projects/kervi-zorro/src/kervi-zorro.ts","webpack:///projects/webApp/src/app/media/media.component.ts","webpack:///projects/webApp/src/app/media/media.component.html","webpack:///projects/webApp/src/main.ts","webpack:///projects/webApp/src/app/connect/connect.component.ts","webpack:///projects/webApp/src/app/connect/connect.component.html","webpack:///projects/webApp/src/app/image-viewer/image-viewer.component.ts","webpack:///projects/webApp/src/app/image-viewer/image-viewer.component.html","webpack:///projects/webApp/src/app/login/login.component.ts","webpack:///projects/webApp/src/app/login/login.component.html","webpack:///projects/webApp/src/environments/environment.ts","webpack:///projects/webApp/src/app/image-viewer/image-viewer.config.ts","webpack:///projects/kervi-js/src/lib/spine/kervi-spinebase.ts","webpack:///projects/kervi-js/src/lib/spine/kervi-ws.ts","webpack:///projects/kervi-js/src/lib/spine/kervi-rmq.ts","webpack:///projects/kervi-js/src/lib/models/IComponent.model.ts","webpack:///projects/kervi-js/src/lib/models/KerviValues.model.ts","webpack:///projects/kervi-js/src/lib/models/ComponentRef.ts","webpack:///projects/kervi-js/src/lib/models/controller.model.ts","webpack:///projects/kervi-js/src/lib/models/dashboard.model.ts","webpack:///projects/kervi-js/src/lib/models/action.model.ts","webpack:///projects/kervi-js/src/lib/models/factory.ts","webpack:///projects/kervi-js/src/lib/models/file.model.ts","webpack:///projects/kervi-js/src/lib/models/stream.model.ts","webpack:///projects/kervi-js/src/lib/kervi-js.service.ts","webpack:///projects/kervi-js/src/lib/kervi-js.component.ts","webpack:///projects/kervi-js/src/lib/kervi-js.module.ts","webpack:///projects/kervi-js/src/public_api.ts","webpack:///projects/kervi-js/src/kervi-js.ts","webpack:///projects/webApp/src/app/app.component.ts","webpack:///projects/webApp/src/app/app.component.html","webpack:///$_lazy_route_resource lazy namespace object"],"names":["antDesignIcons","icons","Object","keys","map","key","ROUTES","path","component","redirectTo","pathMatch","AppModule","provide","useValue","forRoot","NGXKerviService","KerviTemplateService","remUnit","console","log","parseFloat","getComputedStyle","document","documentElement","fontSize","rem","value","isNaN","containerSize","lastIndexOf","px","convertRemToPixels","percentage","style","selector","sheet","sheets","styleSheets","i","l","length","cssRules","j","k","rule","selectorText","split","indexOf","text","possible","charAt","Math","floor","random","colorName","cssClass","styleValue","getStyleRuleValue","AppInjector","setAppInjector","injector","error","KerviDashboardComponent","dashboardId","dashboard","dashboards","dashboardSizes","isAppEmpty","showMenu","dashboardPanelsHidden","showPanelController","cameraId","cameraParameters","cameraId$","authenticated","anonymous","showLeftPad","leftPadXValue","leftPadYValue","autoCenterLeftPad","showRightPad","rightPadXValue","rightPadYValue","autoCenterRightPad","inFullScreen","kerviService","get","self","componentsChanged$","subscribe","loadDashboard","event","logoff","stopPropagation","getComponent","isAnonymous","doAuthenticate","getComponentsByType","backgroundPanel","components","id","next","parameters","LeftPadXPanel","LeftPadYPanel","padAutoCenter","RightPadXPanel","RightPadYPanel","doc","el","body","requestMethod","requestFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullScreen","fullscreenElement","fullScreenElement","exitFullscreen","call","cancelFullScreen","mozCancelFullScreen","template","KerviDashboardPanelComponent","panel","inline","inGroup","bodyOnly","width","showHeader","expanded","title","bodyComponents","headerComponents","footerComponents","templateService","type","getSizeValue","hasHeaderComponents","linkToHeader","push","KerviControllerPadComponent","KerviWidgetComponent","widgetType","v","componentId","linkParameters","ui","componentType","controller","dashboardPanel","KerviValueComponent","valueId","KerviNumberComponent","numberFormat","displayValue","displayUnit","displayType","currentIcon","set","ngOnInitValue","minIntegerDigits","minFractionDigits","maxFractionDigits","valueIcon","value$","iconSection","range","icon","size","KerviBooleanComponent","KerviActionComponent","action","state","running$","run","actionParameters","interrupt","interruptParameters","styleUrls","KerviCameraComponent","streamObservers","isBackground","camera","cam","outputs","endsWith","pan","tilt","cameraType","source","cameraSource","updateStreamObservers","controllers","sourceStream","selectedSource","KerviColorComponent","KerviDateTimeComponent","dateTimeFormat","application$","display","unit_system","datetime","time","date","KerviStringComponent","KerviUserLogComponent","logLength","lastMessage$","messages$","messageCount$","logState$","messageCount","UserLogState","normal","getLogMessages$","getLastLogMessage$","getLogMessageCount$","getLogState$","KerviDirectoryComponent","directory","KerviAppHealthComponent","mps","pingDiff","pingDelay","mps$","appPingDiff$","diff","appPingDelay$","NgxKerviComponent","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","styles","TranslatePipe","args","name","NGXKerviPipesModule","imports","exports","providers","declarations","NgxKerviModule","DashboardComponent","router","activatedRoute","padSize","cameraIdx","mediaHidden","camId","params","setTimeout","h","window","innerHeight","w","innerWidth","leftPadTop","leftPadLeft","rightPadTop","rightPadLeft","handleMediaClose","KerviZorroService","providedIn","SparklineComponent","series","options","chart","height","sparkline","enabled","stroke","curve","fill","opacity","data","sparkline$","yaxis","min","colors","color","chartObj","destroy","ApexCharts","chartElement","nativeElement","render","getColor","schedule","createElement","updateSeries","i0.ɵɵelement","templateUrl","i0.ɵɵelementContainerStart","i0.ɵɵlistener","i0.ɵɵelementContainerEnd","i0.ɵɵadvance","i0.ɵɵproperty","i0.ɵɵpropertyInterpolate","i0.ɵɵclassMapInterpolate1","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","i0.ɵɵstyleProp","i0.ɵɵtextInterpolate1","NumberComponent","elementRef","ngOnInitNumber","SwitchButtonComponent","buttonState","buttonWidth","switchWidth","buttonHeight","switchHeight","emit","modelChange","i0.ɵɵelementContainer","ButtonComponent","BooleanComponent","ngOnInitBoolean","StringComponent","ngOnInitString","jQuery","val","change","ColorComponent","colorChange","picker","moveDelayTimer","colorValue","isInput","clearTimeout","onChangeColor","ngOnInitColor","setKerviValue","DateTimeComponent","dateTimeChanged","isReady","dateTime","format","ngOnInitDateTime","ActionComponent","ngOnInitAction","MPEGViewerComponent","domSanitizer","imageLoaded","stream","firstLoad","fpsCounter","fpsTime","Date","streamSubscription","fps","setSource","unsubscribe","close","GetStream","events$","blob","Blob","streamData","bypassSecurityTrustUrl","URL","createObjectURL","now","fpsDiff","getTime","seconds","imageReady","i0.ɵɵattribute","NipplePadComponent","mode","XMin","XMax","YMin","YMax","XValue","maxValue","minValue","YValue","nipplePad","manager","nipplejs.create","zone","position","left","top","restJoystick","autoCenter","on","evt","nipple","x","vector","y","valueX","valueY","CamViewerComponent","showCamPad","element","videoViewer","viewPortHeight","viewPortWidth","camHeight","camWidth","offsetHeight","offsetWidth","camPadTop","camPadLeft","ngOnInitCamera","GaugeComponent","gaugeSize","plotOptions","radialBar","startAngle","endAngle","hollow","track","dataLabels","show","lineCap","labels","KerviChartComponent","chartType","animations","easing","dynamicAnimation","speed","toolbar","tools","download","selection","zoom","zoomin","zoomout","reset","customIcons","autoSelected","chartTitle","align","markers","xaxis","axisBorder","offsetX","offsetY","max","legend","grid","chartGrid","borderColor","lines","animate","valueTS","WidgetComponent","ngOnInitWidget","UserLogComponent","ngOnInitUserLog","AppHealthComponent","ngOnInitAppHealth","DashboardPanelComponent","groupLayout","ngOnInitPanel","hasOnlyGroupPanels","SliderComponent","defaultSizes","sliderChanged","marks","tick","IconsComponent","UIComponentsModule","bootstrap","ValuesModule","ControllerPadComponent","inDrag","p","xy","displayPrevious","fgColor","bgColor","css","padPress","padRelease","UserMessagesComponent","notification","message","messageTemplate","nzData","UserMessageButtonComponent","visible","KerviZorroModule","MediaComponent","files","showImageViewer","directoryFiles","nodes","defaultExpandedKeys","node","eventName","GetDirectory","then","d","files$","getValue","file","isFile","GetThumbnail","t","thumb","getChildren","isExpanded","dirs","isLeaf","addChildren","filePath","imageViewer","imgTotal","GetFile","f","images","showImg","currentImgIndex","closeViewer","nextImage","nzEvent","production","bootstrapModule","err","ConnectComponent","current","connectionState$","connectedState","disconnected","loading","ImgViewerComponent","renderer","config","showOperate","rotate","fullscreen","defaultName","prevChange","nextChange","ROTATE_ANGLE","zoomValue","isVertical","imgRotate","imgViewerConfig","ivViewerType","imageViewerType","assign","initImgViewer","imageViewer$","isClockwise","beforeRotateImg","addImgRotate","fullScreenViewer$","setAttribute","appendChild","click","removeChild","querySelector","isAnimation","scale","isImgOverVertical","getScale","addTransition","setImgRotate","removeAnimation","_state","resetZoom","refresh","currentImg","setStyle","beforeShowImg","load","imgViewerHeight","clientHeight","currentImgWidth","clientWidth","differenceWidth","roate","elements","querySelectorAll","forEach","ele","closeImageViewer","LoginComponent","fb","invalidCredentials","loginForm","group","required","userName","controls","password","valid","authenticate","submitForm","environment","ImgViewerConfig","maxZoom","snapView","refreshOnResize","zoomOnMouseWheel","zoomInToolTip","zoomOutToolTip","rotateLeftToolTip","rotateRightToolTip","resetToolTip","fullScreenToolTip","downloadToolTip","KerviSpineBase","constructorOptions","isConnected","sessionId","queryHandlers","commandHandlers","eventHandlers","streamHandlers","rpcQueue","ready","messageId","sensors","sensorTypes","controllerTypes","visionRegions","application","allowAnonymous","firstOnOpen","mpsTime","websocket","address","onOpen","onClose","onAuthenticate","onAuthenticateFailed","onAuthenticateStart","onLogOff","onMPS","autoConnect","targetScope","protocol","apiToken","addEventHandler","callback","addStreamHandler","streamId","streamEvent","removeStreamHandler","extend","connect","setInterval","hangingNodes","query","hasOwnProperty","callbackTimeout","timeout","response","eventPath","n","streamBlob","streamTag","command","c","stream_id","KerviWSSpine","cmd","send","JSON","stringify","streamEvents","WebSocket","binaryType","onopen","onclose","onmessage","parse","onMessage","jsonLen","Int32Array","slice","jsonBlob","utf8decoder","TextDecoder","decode","onerror","onError","round","messageType","setTime","expires","toUTCString","session","cookie","handleRPCResponse","handleEvent","handleStream","handleCommand","arguments","Function","addRPCCallback","toString","e","KerviRMQSpine","exchange","topic","router_id","socketSession","frame","mqUrl","Stomp","client","heartbeat","incoming","app_id","api_token","headers","replace","RegExp","onPing","onMQError","api_channel","appId","session_id","topic_tag","kwargs","qts","query_id","response_address","DashboardLink","panelId","sectionId","panelName","sectionName","KerviValue","typeName","orientation","KerviValueType","prop","undefined","dashboardLinks","dashboardLink","spine","sendCommand","notify","ValueRangeType","ValueRange","start","end","warning","KerviEnumOptionModel","messageOption","selected$","selected","SelectValue","lastSelected$","option","selectOptions","selectedOptions","selectedOption","NumberValue","qtyUnitTo","ranges","unit","qtyUnitFrom","q","Qty","to","scalar","spl","spv","newValue","shift","StringValue","BooleanValue","DateTimeValue","subType","inputType","ColorValue","ComponentRef","Controller","inputs","actions","inputReferences","outputReferences","actionsReferences","ref","DashboardSizes","valueWidth","gaugeWidth","gaugeHeight","DashboardMessageModel","timestamp","sourceId","source_id","sourceName","source_name","area","level","linkId","DashboardPanelParameters","messageParameters","userLog","appHealth","layout","label","calcSize","app_health","DashboardPanel","messagePanel","subPanels","uiParameters","panels","subMessagePanel","subPanel","reload","sourceComponent","found","deleteComponents","splice","DashboardBackgroundModel","Dashboard","headerPanel","footerCenterPanel","footerLeftPanel","footerRightPanel","sysPanel","controllerPanel","currentPanel","isDefault","unitSize","sysPanels","sections","res","getDashboardPanelById","link","panelFound","newPanel","Action","runCommand","interruptCommand","running","ComponentFactory","foundComponents","createComponentsRec","linkToDashboards","result","Array","isArray","subComponents","concat","KerviValues.BooleanValue","KerviValues.NumberValue","KerviValues.StringValue","KerviValues.SelectValue","KerviValues.DateTimeValue","KerviValues.ColorValue","subComponent","updateReferences","addDashboardLink","FileBase","File","Directory","is_file","fileEntry","StreamEvent","Stream","events","e_streamId","e_streamEvent","e_data","ConnectionState","UserLogStateType","KerviBaseService","lastAppPingTime","lastPingDiff","appInfo","texts","components$","logMessages","logMessages$","lastLogMessage$","LogMessageCount$","LogMessageState$","streams","IPCReady$","authPromise","connected","dynamicValue","ts","messages","newMessage","unshift","pop","hasErrors","hasWarnings","promise","Promise","resolve","reject","sendQuery","updateFiles","thumbnail","defaultValue","asObservable","defaultDashboard","getDefaultDashboard","isEmpty","kerviSocketAddress","socketProtocol","httpProtocol","location","httpHost","hostname","onLogoff","sessionStorage","getItem","_resolveSelf","_rejectSelf","retryCount","module_load","createComponents","FixControllerReferences","getComponentInfo","first","KerviJsComponent","KerviJsModule","AppComponent","route","currentPage","navigate","webpackEmptyAsyncContext","req","Error","code","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\n\r\nimport { NgxKerviModule } from 'ngx-kervi';\r\nimport { NGXKerviPipesModule } from 'ngx-kervi'\r\nimport { KerviZorroModule  } from 'kervi-zorro'\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n\r\nimport { NgZorroAntdModule, NZ_I18N, NZ_ICONS, en_US } from 'ng-zorro-antd';\r\nimport { IconDefinition } from '@ant-design/icons-angular';\r\nimport * as AllIcons from '@ant-design/icons-angular/icons'\r\nimport { registerLocaleData } from '@angular/common';\r\nimport en from '@angular/common/locales/en';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ConnectComponent } from './connect/connect.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { MediaComponent } from './media/media.component' ;\r\nimport { ImgViewerComponent } from './image-viewer/image-viewer.component'\r\n\r\n\r\nregisterLocaleData(en);\r\n\r\nconst antDesignIcons = AllIcons as {\r\n  [key: string]: IconDefinition;\r\n};\r\nconst icons: IconDefinition[] = Object.keys(antDesignIcons).map(key => antDesignIcons[key])\r\n\r\n\r\nconst ROUTES: Routes = [\r\n\r\n  { path: 'connect', component: ConnectComponent },\r\n  { path: 'authenticate', component: LoginComponent },\r\n  { path: 'dashboard/:name', component: DashboardComponent },\r\n  { path: 'media', component: MediaComponent },\r\n  {\r\n    path: '',\r\n    redirectTo: '',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    ConnectComponent,\r\n    DashboardComponent,\r\n    MediaComponent,\r\n    ImgViewerComponent\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    NgxKerviModule,\r\n    NGXKerviPipesModule,\r\n    KerviZorroModule,\r\n    FlexLayoutModule,\r\n    NgZorroAntdModule,\r\n    //NgxKerviComponentsModule,\r\n    RouterModule.forRoot(ROUTES)\r\n  ],\r\n  providers:[\r\n    { provide: NZ_I18N, useValue: en_US },\r\n    { provide: NZ_ICONS, useValue: icons }\r\n  ],\r\n  \r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { KerviBaseService } from \"kervi-js\"\r\n\r\n@Injectable()\r\nexport class NGXKerviService extends KerviBaseService{\r\n\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class KerviTemplateService {\r\n\r\n    private remUnit:number=20;\r\n    constructor() \r\n  { \r\n    console.log(\"kervi service constructor\");\r\n        //console.log(\"ctemplate\");\r\n        this.remUnit = parseFloat(getComputedStyle(document.documentElement).fontSize)\r\n    }\r\n    \r\n    public convertRemToPixels(rem) {    \r\n        return rem * this.remUnit;\r\n    }\r\n\r\n    public getSizeValue(value){\r\n        if (value==null)\r\n            return \"100%\"\r\n        else if (value===\"\")\r\n            return \"100%\"\r\n        else if (isNaN(value)){\r\n            return value;\r\n        } else\r\n            if (value>0)\r\n                return value + \"%\";\r\n            else\r\n                return \"100%\";\r\n    }\r\n\r\n    public  getPixels(value, containerSize){\r\n        //console.log(\"gps\", value, isNaN(value));\r\n        if (isNaN(value)){\r\n          if (value.lastIndexOf(\"px\")>-1){\r\n            var px = parseFloat(value);\r\n            return px;\r\n          } else if (value.lastIndexOf(\"rem\")>-1){\r\n            var rem = parseFloat(value);\r\n            var px = this.convertRemToPixels(rem);\r\n            console.log(\"remx\",rem, px);\r\n            return px;\r\n          } else if (value.lastIndexOf(\"%\")>-1){\r\n            var percentage = parseFloat(value)/100.0;\r\n            return containerSize * percentage;\r\n          }\r\n        } else \r\n          return value;\r\n      }\r\n\r\n    private getStyleRuleValue(style, selector, sheet) {\r\n        var sheets = sheet!=null ? [sheet] : document.styleSheets;\r\n        for (var i = 0, l = sheets.length; i < l; i++) {\r\n            \r\n            var sheet = sheets[i];\r\n            if( !sheet.cssRules ) { continue; }\r\n            for (var j = 0, k = sheet.cssRules.length; j < k; j++) {\r\n                var rule = sheet.cssRules[j];\r\n                if (rule.selectorText && rule.selectorText.split(',').indexOf(selector) !== -1) {\r\n                    return rule.style[style];\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public makeId()\r\n    {\r\n        var text = \"\";\r\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n        for( var i=0; i < 5; i++ )\r\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n        return text;\r\n    }\r\n\r\n    public getColor(colorName:string,cssClass:string){\r\n        var styleValue=this.getStyleRuleValue(colorName,cssClass,null);\r\n        //console.log(\"sv\", cssClass,styleValue);\r\n        return styleValue;\r\n    }\r\n}","import { Injector } from '@angular/core';\r\nexport let AppInjector: Injector;\r\nexport function setAppInjector(injector: Injector) {\r\n    if (AppInjector) {\r\n        // Should not happen\r\n        console.error('Programming error: AppInjector was already set');\r\n    }\r\n    else {\r\n        AppInjector = injector;\r\n    }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Dashboard, DashboardSizes, NumberValue } from 'kervi-js';\r\nimport { NGXKerviService } from '../ngx-kervi.service';\r\nimport { AppInjector } from '../app-injector.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\n@Component({\r\n  selector: 'kervi-dashboard',\r\n  template: ''\r\n})\r\nexport class KerviDashboardComponent {\r\n  protected dashboardId: string = null;\r\n  public dashboard: Dashboard = null;\r\n  protected kerviService: NGXKerviService;\r\n  protected dashboards: Dashboard[] = null;\r\n  protected dashboardSizes: DashboardSizes = null;\r\n  public isAppEmpty = true;\r\n  public showMenu = false;\r\n  public dashboardPanelsHidden = false;\r\n  public showPanelController = false;\r\n  @Input() public cameraId: string = null;\r\n  @Input() public cameraParameters: any = null;\r\n  public cameraId$: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n  public authenticated: Boolean = false;\r\n  private anonymous: Boolean = true;\r\n\r\n  public showLeftPad: boolean = false;\r\n  public leftPadXValue: NumberValue = null;\r\n  public leftPadYValue: NumberValue = null;\r\n  public autoCenterLeftPad: boolean = false;\r\n\r\n  public showRightPad: boolean = false;\r\n  public rightPadXValue: NumberValue = null;\r\n  public rightPadYValue: NumberValue = null;\r\n  public autoCenterRightPad: boolean = false;\r\n\r\n  public inFullScreen: boolean = false;\r\n  constructor() {\r\n    this.kerviService = AppInjector.get(NGXKerviService);\r\n    var self = this;\r\n    this.kerviService.componentsChanged$.subscribe(function() {\r\n      self.loadDashboard(self.dashboardId);\r\n    });\r\n   }\r\n\r\n  protected logoff(event){\r\n    this.kerviService.logoff();\r\n    event.stopPropagation();\r\n  }\r\n\r\n  protected loadDashboard(dashboardId: string) {\r\n    this.dashboardId = dashboardId;\r\n    this.dashboard = this.kerviService.getComponent(dashboardId, 'dashboard') as Dashboard;\r\n    this.anonymous = this.kerviService.isAnonymous();\r\n    this.isAppEmpty = this.kerviService.isAppEmpty();\r\n    this.authenticated = this.kerviService.doAuthenticate;\r\n    if (this.dashboard){\r\n      this.dashboards = this.kerviService.getComponentsByType('dashboard');\r\n      this.showMenu = (this.dashboards.length > 1 || this.kerviService.doAuthenticate);\r\n      this.showPanelController=false;\r\n      this.cameraId = null;\r\n      this.cameraParameters = null;\r\n      this.showLeftPad = false;\r\n      this.showRightPad = false;\r\n      this.dashboardPanelsHidden=false;\r\n      if (this.dashboard.backgroundPanel){\r\n        if (this.dashboard.backgroundPanel.components.length > 0)\r\n        {\r\n          this.dashboardPanelsHidden=true;\r\n          this.showPanelController=true;\r\n          this.cameraId=this.dashboard.backgroundPanel.components[0].component.id;\r\n          this.cameraId$.next(this.cameraId);\r\n          this.cameraParameters=this.dashboard.backgroundPanel.components[0].parameters;\r\n          console.log(\"db set cam\", this.cameraId, this.cameraParameters);\r\n        } \r\n      }\r\n      if (this.dashboard.LeftPadXPanel && this.dashboard.LeftPadXPanel.components.length || this.dashboard.LeftPadYPanel && this.dashboard.LeftPadYPanel.components.length){\r\n        this.showLeftPad = true;\r\n        if (this.dashboard.LeftPadXPanel.components.length){\r\n          this.leftPadXValue=this.dashboard.LeftPadXPanel.components[0].component as NumberValue;\r\n          if (this.dashboard.LeftPadXPanel.components[0].parameters.padAutoCenter)\r\n            this.autoCenterLeftPad = true;\r\n        }\r\n        if (this.dashboard.LeftPadYPanel.components.length){\r\n          this.leftPadYValue=this.dashboard.LeftPadYPanel.components[0].component as NumberValue;\r\n          if (this.dashboard.LeftPadXPanel.components[0].parameters.padAutoCenter)\r\n            this.autoCenterLeftPad = true;\r\n        }\r\n      }\r\n\r\n      if (this.dashboard.RightPadXPanel && this.dashboard.RightPadXPanel.components.length || this.dashboard.RightPadYPanel && this.dashboard.RightPadYPanel.components.length){\r\n        this.showRightPad = true;\r\n        if (this.dashboard.RightPadXPanel.components.length){\r\n          this.rightPadXValue=this.dashboard.RightPadXPanel.components[0].component as NumberValue;\r\n          if (this.dashboard.LeftPadXPanel.components[0].parameters.padAutoCenter)\r\n            this.autoCenterRightPad = true;\r\n        }\r\n        if (this.dashboard.RightPadYPanel.components.length){\r\n          this.rightPadYValue=this.dashboard.RightPadYPanel.components[0].component as NumberValue;\r\n          if (this.dashboard.RightPadXPanel.components[0].parameters.padAutoCenter)\r\n            this.autoCenterRightPad = true;\r\n        }\r\n      }\r\n      console.log(\"load db\", dashboardId, this.dashboard, this);\r\n    }\r\n  }\r\n\r\n  toggleFullScreen() {\r\n    var doc: any;\r\n    doc = document;\r\n    var el = doc.body;\r\n\r\n    // Supports most browsers and their versions.\r\n    var requestMethod = el.requestFullScreen || el.webkitRequestFullScreen \r\n    || el.mozRequestFullScreen || el.msRequestFullScreen;\r\n\r\n\r\n    if ((doc.fullscreenElement && doc.fullScreenElement !== null))   {\r\n      console.log(\"in full screen\");\r\n      doc.exitFullscreen();\r\n      this.inFullScreen = false;\r\n    } else if (requestMethod) {\r\n\r\n      // Native full screen.\r\n      requestMethod.call(el);\r\n      this.inFullScreen = true;\r\n    }\r\n  }\r\n\r\n  toggleFullScreenx() {\r\n    var doc:any;\r\n    doc = document;\r\n    \r\n    console.log(\"fs\", this.inFullScreen, doc.documentElement.requestFullScreen);\r\n    var doc:any;\r\n    doc = document;\r\n    if ((doc.fullScreenElement && doc.fullScreenElement !== null))     \r\n     /*(!doc.mozFullScreen && !document.webkitIsFullScreen))*/ {\r\n       this.inFullScreen = true;\r\n      if (doc.documentElement.requestFullScreen) {  \r\n        doc.documentElement.requestFullScreen();  \r\n      } else if (doc.documentElement.mozRequestFullScreen) {  \r\n        doc.documentElement.mozRequestFullScreen();  \r\n      }// } else if (document.documentElement.webkitRequestFullScreen) {  \r\n      //   doc.documentElement.webkitRequestFullScreen();  \r\n      // }  \r\n    } else {  \r\n      this.inFullScreen=false;\r\n      if (doc.cancelFullScreen) {  \r\n        doc.cancelFullScreen();  \r\n      } else if (doc.mozCancelFullScreen) {  \r\n        doc.mozCancelFullScreen();  \r\n      }// } else if (document.webkitCancelFullScreen) {  \r\n      //   doc.webkitCancelFullScreen();  \r\n      // }  \r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { DashboardSizes, DashboardPanel } from 'kervi-js';\r\nimport { NGXKerviService } from '../ngx-kervi.service';\r\nimport { KerviTemplateService } from '../ngx-kervi-template.service';\r\nimport { AppInjector } from '../app-injector.service';\r\n\r\n@Component({\r\n  selector: 'kervi-dashboard-panel-base',\r\n  template: ''\r\n})\r\nexport class KerviDashboardPanelComponent {\r\n  @Input() dashboardSizes: DashboardSizes;\r\n  @Input() panel:DashboardPanel=null;\r\n  @Input() inline:boolean = false;\r\n  @Input() inGroup:boolean = false;\r\n  @Input() bodyOnly:boolean = false;\r\n  \r\n  \r\n  public width:string = \"\";\r\n  public showHeader:boolean = false;\r\n  public expanded:boolean = false;\r\n  public title:string = null;\r\n  public bodyComponents:any[]=[];\r\n  public headerComponents: any[] = [];\r\n  public footerComponents: any[] = [];\r\n  //messages: DashboardMessageModel[] = [];\r\n  \r\n  //panelComponents:IComponent[] = []\r\n  protected templateService: KerviTemplateService = null;\r\n  protected kerviService:NGXKerviService = null;\r\n  constructor (){\r\n    this.templateService = AppInjector.get(KerviTemplateService);    \r\n    this.kerviService = AppInjector.get(NGXKerviService);  \r\n  }\r\n\r\n    calcWidth(panel:DashboardPanel, inGroup){\r\n        if (panel.type==\"group\"){\r\n            if (panel.parameters.width==null || panel.parameters.width==\"0\")\r\n                return \"100%\"\r\n            else\r\n                return this.templateService.getSizeValue(panel.parameters.width);\r\n        } else\r\n            return inGroup ? \"\" : this.templateService.getSizeValue(panel.parameters.width);\r\n    }\r\n\r\n    showPanelHeader(panel:DashboardPanel){\r\n        var hasHeaderComponents = false\r\n        for( let component of this.panel.components){\r\n            if (component.parameters.linkToHeader)\r\n                hasHeaderComponents = true\r\n        }\r\n        \r\n        return (panel.parameters.title != null && panel.parameters.title.length>0) || hasHeaderComponents\r\n        \r\n    }\r\n\r\n    ngOnInitPanel() {\r\n        var self=this;\r\n        \r\n        this.title = this.panel.parameters.title;\r\n        \r\n        for( let component of this.panel.components){\r\n            if (component.parameters.linkToHeader)\r\n                this.headerComponents.push(component)\r\n            else\r\n                this.bodyComponents.push(component)\r\n        }\r\n        \r\n        this.showHeader = (this.panel.parameters.title != null && this.panel.parameters.title.length>0) || (this.headerComponents.length > 0)\r\n        \r\n\r\n        if (this.panel.type==\"group\"){\r\n            if (this.panel.parameters.width==null || this.panel.parameters.width==\"0\" || this.panel.parameters.width==\"\")\r\n                this.width = \"100%\"\r\n            else\r\n                this.width = this.templateService.getSizeValue(this.panel.parameters.width);\r\n        } else\r\n            //this.width = this.inGroup ? \"100%\" : this.templateService.getSizeValue(this.panel.parameters.width);\r\n            this.width = this.templateService.getSizeValue(this.panel.parameters.width);\r\n    }\r\n  }","import { Component, OnInit, Input } from '@angular/core';\r\nimport { DashboardSizes } from 'kervi-js';\r\n\r\n@Component({\r\n  selector: 'kervi-controller-pad-base',\r\n  template: ''\r\n})\r\nexport class KerviControllerPadComponent implements OnInit {\r\n  @Input() dashboardSizes: DashboardSizes;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, Input, ElementRef } from '@angular/core';\r\nimport { IComponent, DashboardPanel, DashboardSizes, Controller } from 'kervi-js';\r\nimport { NGXKerviService } from '../ngx-kervi.service';\r\nimport { AppInjector } from '../app-injector.service';\r\n@Component({\r\n\tselector: 'kervi-widget-base',\r\n\ttemplate: ''\r\n})\r\nexport class KerviWidgetComponent   {\r\n\t@Input() set componentId(v:string){\r\n\t\tthis.component = this.kerviService.getComponent(this.componentId);\r\n\t}\r\n\t@Input() component:IComponent = null;\r\n\t@Input() dashboardPanel: DashboardPanel;\r\n\t@Input() linkParameters:any;\r\n\t@Input() dashboardSizes:DashboardSizes = new DashboardSizes();\r\n    @Input() inline:boolean;\r\n\tpublic widgetType:string=\"value\";\r\n\t\r\n\t\r\n\tprivate kerviService: NGXKerviService;\r\n\tprivate elementRef: ElementRef;\r\n\tconstructor() { \r\n\t\t//console.log(\"cnio\",this);\r\n\t\tthis.kerviService = AppInjector.get(NGXKerviService);  \r\n\t}\r\n\r\n\tngOnInitWidget() {\r\n\t\t\t\r\n\t\tif (!this.linkParameters)\r\n              this.linkParameters = this.component.ui;\r\n    \r\n        if (!this.inline && this.linkParameters.inline){\r\n            this.inline = true;\r\n\t\t}\r\n\t\t//console.log(\"widget\", this.component, this.linkParameters);\r\n\t\tif (this.component.componentType == \"controller\"){\r\n\t\t\tvar controller = this.component as Controller;\r\n\t\t\tconsole.log(\"widget ctrl\", controller);\r\n\t\t\tif (controller.type == \"camera\")\r\n\t\t\t\tthis.widgetType = \"camera\"\r\n\t\t\t\t\r\n\t\t} else if (this.linkParameters.type){\r\n\t\t\tif (this.linkParameters.type.indexOf(\"gauge\") > -1 ){\r\n\t\t\t\tthis.widgetType = \"gauge\";\r\n\r\n\t\t\t} else if (this.linkParameters.type==\"chart\"){\r\n\t\t\t\tthis.widgetType=\"chart\"\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, Input, HostListener } from '@angular/core';\r\nimport { KerviValue, DashboardPanel, DashboardSizes } from 'kervi-js';\r\nimport { NGXKerviService } from '../ngx-kervi.service';\r\nimport { AppInjector } from '../app-injector.service';\r\n@Component({\r\n\tselector: 'kervi-value-base',\r\n\ttemplate: ''\r\n})\r\nexport class KerviValueComponent<T extends KerviValue>   {\r\n\t@Input() set valueId(v:string){\r\n\t\tthis.value = this.kerviService.getComponent(this.valueId) as T;\r\n\t}\r\n\t@Input() value:T = null;\r\n\t\r\n\t@Input() linkParameters:any;\r\n\t@Input() dashboardSizes:DashboardSizes = new DashboardSizes();\r\n\t@Input() inline:boolean;\r\n\tprotected kerviService: NGXKerviService;\r\n\tconstructor() { \r\n\t\tthis.kerviService = AppInjector.get(NGXKerviService);  \r\n\t}\r\n\r\n\tngOnInitValue() {\r\n\t\tif (!this.linkParameters)\r\n      \t\tthis.linkParameters = this.value.ui;\r\n\t}\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component } from '@angular/core';\r\nimport { NumberValue } from 'kervi-js';\r\nimport { KerviValueComponent } from './value.component'\r\n\r\n@Component({\r\n\tselector: 'kervi-value-number-base',\r\n\ttemplate: ''\r\n})\r\nexport class KerviNumberComponent extends KerviValueComponent<NumberValue> {\r\n\tpublic numberFormat = \"1.2-2\";\r\n\tpublic displayValue:number = 0;\r\n\tpublic displayUnit:string = \"\";\r\n\tpublic displayType:string=\"\";\r\n\tpublic currentIcon:string=null;\r\n\t\r\n\tconstructor(){ \r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic setKerviValue(value){\r\n\t\tthis.value.set(value);\r\n\t}\r\n\r\n\tngOnInitNumber() {\r\n\t\tthis.ngOnInitValue();\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tthis.numberFormat = this.linkParameters.minIntegerDigits + \".\" + this.linkParameters.minFractionDigits + \"-\" + this.linkParameters.maxFractionDigits\r\n\t\tif (!this.linkParameters.valueIcon)\r\n\t\t\tthis.currentIcon = null;\r\n\t\telse if (typeof(this.linkParameters.valueIcon) == \"string\" )\r\n\t\t\tthis.currentIcon = this.linkParameters.valueIcon;\r\n\t\telse {\r\n\t\t\tthis.value.value$.subscribe(function(v){\r\n\t\t\t\tfor(let iconSection of self.linkParameters.valueIcon){\r\n\t\t\t\t\tif (v >= iconSection.range[0] && v <= iconSection.range[1]){\r\n\t\t\t\t\t\tself.currentIcon = iconSection.icon;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\t\t\r\n\r\n\t\tif (!this.inline && this.linkParameters.inline){\r\n\t\t\tthis.inline = true;\r\n\t\t}else if (!this.inline && this.linkParameters.size > 0)\r\n\t\t{\r\n\t\t\tthis.inline = true;\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component } from '@angular/core';\r\nimport { BooleanValue } from 'kervi-js';\r\nimport { KerviValueComponent } from './value.component'\r\n\r\n@Component({\r\n\tselector: 'kervi-value-boolean-base',\r\n\ttemplate: ''\r\n})\r\nexport class KerviBooleanComponent extends KerviValueComponent<BooleanValue> {\r\n\tpublic displayType:string=\"switch\";\r\n\t\r\n\tconstructor(){ \r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic setKerviValue(value){\r\n\t\tthis.value.set(value);\r\n\t}\r\n\r\n\tngOnInitBoolean() {\r\n\t\tthis.ngOnInitValue();\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tif (this.linkParameters.type){\r\n\t\t\tthis.displayType = this.linkParameters.type\r\n\t\t}\r\n\t\t\r\n\t\tif (!this.inline && this.linkParameters.inline){\r\n\t\t\tthis.inline = true;\r\n\t\t} else if (!this.inline && this.linkParameters.size > 0)\r\n\t\t{\r\n\t\t\tthis.inline = true;\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, Input } from '@angular/core';\r\nimport { Action } from 'kervi-js';\r\nimport { DashboardSizes  } from 'kervi-js';\r\nimport { NGXKerviService } from '../ngx-kervi.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { AppInjector } from '../app-injector.service';\r\n\r\n@Component({\r\n  selector: 'kervi-action-base',\r\n  template: '',\r\n  styleUrls: [],\r\n})\r\nexport class KerviActionComponent {\r\n    @Input() action: Action = null;\r\n    @Input() linkParameters: any = null;\r\n    @Input() inline = false;\r\n    @Input() dashboardSizes:DashboardSizes = new DashboardSizes();\r\n    public state: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    protected kerviService:NGXKerviService;\r\n\r\n    public displayType = 'switch';\r\n    constructor() {\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n\r\n    ngOnInitAction() {\r\n        var self = this;\r\n        if (!this.linkParameters)\r\n            this.linkParameters = this.action.ui;\r\n\r\n        if (this.linkParameters.displayType){\r\n            this.displayType = this.linkParameters.displayType;\r\n        }\r\n\r\n        if (!this.inline && this.linkParameters.inline){\r\n            this.inline = true;\r\n        }\r\n\r\n        self.state.next(this.action.running$.value);\r\n        this.action.running$.subscribe(function(v){\r\n            console.log(\"ar\", self.action.id, v)\r\n            self.state.next(v);\r\n        })\r\n    }\r\n\r\n    public setActionState(value){\r\n        if (value)\r\n            this.action.run(this.linkParameters.actionParameters);\r\n        else\r\n            this.action.interrupt(this.linkParameters.interruptParameters)\r\n    }\r\n}","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, Input } from '@angular/core';\r\nimport { Controller, NumberValue } from 'kervi-js';\r\nimport { DashboardSizes  } from 'kervi-js';\r\nimport { NGXKerviService } from '../ngx-kervi.service';\r\nimport { AppInjector } from '../app-injector.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'kervi-camera-base',\r\n  template: '',\r\n  styleUrls: [],\r\n})\r\nexport class KerviCameraComponent {\r\n    @Input() streamObservers: Controller[] = [];\r\n    @Input() public selectedSource: string;\r\n    private cam: Controller;\r\n\r\n    @Input() set cameraId(id: string) {\r\n        console.log('setcamid', id);\r\n\r\n        this.camera = this.kerviService.getComponent(id) as Controller;\r\n    }\r\n    @Input() set camera(v: Controller) {\r\n        console.log('setcam', v);\r\n\r\n        this.cam = v;\r\n        if (v){\r\n            for (let i of v.outputs) {\r\n                if (i.id.endsWith('.pan')) {\r\n                    this.pan = i as NumberValue;\r\n                } else if (i.id.endsWith('.tilt')) {\r\n                    this.tilt = i as NumberValue;\r\n                }\r\n            }\r\n            this.cameraType = v.ui.type;\r\n            if (this.cameraType === 'frame' ) {\r\n                if (v.ui.source) {\r\n                    this.cameraSource = this.cam.id;\r\n                }\r\n                this.cameraSource = this.cam.id;\r\n            }\r\n            this.updateStreamObservers();\r\n        }\r\n    }\r\n\r\n    get camera() { return this.cam; }\r\n    @Input() linkParameters: any = null;\r\n    @Input() inline = false;\r\n    @Input() dashboardSizes = new DashboardSizes();\r\n    @Input() isBackground = false;\r\n\r\n    protected kerviService: NGXKerviService;\r\n    public pan: NumberValue;\r\n    public tilt: NumberValue;\r\n    public cameraType: string;\r\n    public cameraSource: string;\r\n    constructor() {\r\n        const self = this;\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n\r\n    updateStreamObservers() {\r\n        const streamObservers = [];\r\n        const controllers = this.kerviService.getComponentsByType('controller');\r\n        for (let controller of controllers) {\r\n            if (controller.type === 'stream_observer') {\r\n                if (controller.ui.sourceStream === this.cameraSource) {\r\n                    streamObservers.push(controller);\r\n                }\r\n            }\r\n        }\r\n        this.streamObservers = streamObservers;\r\n        if (this.selectedSource !== this.cameraSource){\r\n            this.selectedSource = this.cameraSource;\r\n        }\r\n    }\r\n\r\n    public setPan(v) {\r\n        this.pan.set(v);\r\n    }\r\n\r\n    public setTilt(v) {\r\n        this.tilt.set(v);\r\n    }\r\n\r\n    ngOnInitCamera() {\r\n        console.log('ngi cam', this.camera.id);\r\n        const self = this;\r\n        if (!this.linkParameters) {\r\n              this.linkParameters = this.camera.ui;\r\n        }\r\n        if (!this.inline && this.linkParameters.inline) {\r\n            this.inline = true;\r\n        }\r\n        this.kerviService.componentsChanged$.subscribe(function() {\r\n            self.updateStreamObservers();\r\n        });\r\n        this.updateStreamObservers();\r\n        this.selectedSource = this.cameraSource;\r\n    }\r\n\r\n    changeSource(source: string) {\r\n        console.log('cs', source);\r\n        this.selectedSource = source;\r\n      }\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component } from '@angular/core';\r\nimport { ColorValue } from 'kervi-js';\r\nimport { KerviValueComponent } from './value.component'\r\n\r\n@Component({\r\n\tselector: 'kervi-value-color-base',\r\n\ttemplate: ''\r\n})\r\nexport class KerviColorComponent extends KerviValueComponent<ColorValue> {\r\n\tpublic displayType:string=\"button\";\r\n\t\r\n\tconstructor(){ \r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic setKerviValue(value){\r\n\t\tthis.value.set(value);\r\n\t}\r\n\r\n\tngOnInitColor() {\r\n\t\tthis.ngOnInitValue();\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tif (this.linkParameters.type){\r\n\t\t\tthis.displayType = this.linkParameters.type\r\n\t\t}\r\n\t\t\r\n\t\tif (!this.inline && this.linkParameters.inline){\r\n\t\t\tthis.inline = true;\r\n\t\t} else if (!this.inline && this.linkParameters.size > 0)\r\n\t\t{\r\n\t\t\tthis.inline = true;\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component } from '@angular/core';\r\nimport { DateTimeValue } from 'kervi-js';\r\nimport { KerviValueComponent } from './value.component'\r\n\r\n@Component({\r\n\tselector: 'kervi-value-datetime-base',\r\n\ttemplate: ''\r\n})\r\nexport class KerviDateTimeComponent extends KerviValueComponent<DateTimeValue> {\r\n\tpublic displayType:string=\"datetime\";\r\n\tpublic dateTimeFormat:string;\r\n\tconstructor(){ \r\n\t\tsuper();\r\n\t}\r\n\r\n\r\n\r\n\tpublic setKerviValue(value){\r\n\t\tthis.value.set(value);\r\n\t}\r\n\r\n\tpublic ngOnInitDateTime() {\r\n\t\tthis.ngOnInitValue();\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tif (this.linkParameters.type){\r\n\t\t\tthis.displayType = this.linkParameters.type\r\n\t\t}\r\n\t\t\r\n\t\tif (!this.inline && this.linkParameters.inline){\r\n\t\t\tthis.inline = true;\r\n\t\t}\r\n\r\n\t\tif (self.linkParameters.type==\"time\")\r\n        \tthis.dateTimeFormat = this.kerviService.application$.value.display.unit_system.datetime.time;\r\n      \telse if (self.linkParameters.type==\"date\")\r\n        \tthis.dateTimeFormat = self.kerviService.application$.value.display.unit_system.datetime.date;\r\n      \telse\r\n        \tthis.dateTimeFormat = this.kerviService.application$.value.display.unit_system.datetime.datetime;\r\n      \r\n\t}\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component } from '@angular/core';\r\nimport { StringValue } from 'kervi-js';\r\nimport { KerviValueComponent } from './value.component'\r\n\r\n@Component({\r\n\tselector: 'kervi-value-string-base',\r\n\ttemplate: ''\r\n})\r\nexport class KerviStringComponent extends KerviValueComponent<StringValue> {\r\n\tpublic displayType:string=\"\";\r\n\t\r\n\tconstructor(){ \r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic setKerviValue(value){\r\n\t\tthis.value.set(value);\r\n\t}\r\n\r\n\tpublic ngOnInitString() {\r\n\t\tthis.ngOnInitValue();\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tif (this.linkParameters.type){\r\n\t\t\tthis.displayType = this.linkParameters.type\r\n\t\t}\r\n\t\t\r\n\t\tif (!this.inline && this.linkParameters.inline){\r\n\t\t\tthis.inline = true;\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, Input } from '@angular/core';\r\nimport { DashboardSizes, DashboardMessageModel, UserLogStateType } from 'kervi-js';\r\nimport { NGXKerviService } from '../ngx-kervi.service';\r\nimport { AppInjector } from '../app-injector.service';\r\nimport {  Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'kervi-user-log-base',\r\n  template: '',\r\n  styleUrls: [],\r\n})\r\n\r\nexport class KerviUserLogComponent {\r\n    @Input() logLength = 10;\r\n    @Input() linkParameters: any = null;\r\n    @Input() inline = false;\r\n    @Input() dashboardSizes: DashboardSizes = new DashboardSizes();\r\n    protected kerviService: NGXKerviService;\r\n    lastMessage$: Observable<DashboardMessageModel> = null;\r\n    messages$: Observable<DashboardMessageModel[]> = null;\r\n    messageCount$: Observable<number> = null;\r\n    logState$: Observable<UserLogStateType> = null;\r\n    public messageCount = 0;\r\n    public UserLogState: UserLogStateType = UserLogStateType.normal;\r\n\r\n    constructor() {\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n        this.messages$ = this.kerviService.getLogMessages$();\r\n        this.lastMessage$ = this.kerviService.getLastLogMessage$();\r\n        this.messageCount$ = this.kerviService.getLogMessageCount$();\r\n        this.logState$ = this.kerviService.getLogState$();\r\n        this.messageCount$.subscribe(function(v){\r\n          this.messageCount = v;\r\n        });\r\n    }\r\n\r\n    protected ngOnInitUserLog() {\r\n\r\n    }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NGXKerviService } from '../ngx-kervi.service';\r\nimport { AppInjector } from '../app-injector.service';\r\nimport { Directory } from 'kervi-js';\r\n\r\n@Component({\r\n  selector: 'kervi-directory',\r\n  template: ''\r\n})\r\nexport class KerviDirectoryComponent {\r\n    protected path = '/';\r\n    protected directory: Directory = null;\r\n    protected kerviService: NGXKerviService;\r\n\r\n    constructor() {\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n\r\n    protected loadDirectory() {\r\n        //this.directory = this.kerviService.GetDirectory(this.path);\r\n    }\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, Input } from '@angular/core';\r\nimport { DashboardSizes, DashboardMessageModel, UserLogStateType } from 'kervi-js';\r\nimport { NGXKerviService } from '../ngx-kervi.service';\r\nimport { AppInjector } from '../app-injector.service';\r\nimport {  Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'kervi-app-health-base',\r\n  template: '',\r\n  styleUrls: [],\r\n})\r\n\r\nexport class KerviAppHealthComponent {\r\n    @Input() linkParameters: any = null;\r\n    @Input() inline = false;\r\n    @Input() dashboardSizes: DashboardSizes = new DashboardSizes();\r\n    @Input() mps = 0;\r\n    @Input() pingDiff = 0;\r\n    @Input() pingDelay = 0;\r\n    protected kerviService: NGXKerviService;\r\n\r\n    constructor() {\r\n        this.kerviService = AppInjector.get(NGXKerviService);\r\n    }\r\n\r\n    protected ngOnInitAppHealth() {\r\n      const self = this;\r\n      this.kerviService.mps$.subscribe(function(mps) {\r\n        self.mps = mps;\r\n      });\r\n\r\n      this.kerviService.appPingDiff$.subscribe(function(diff) {\r\n        self.pingDiff = diff;\r\n      });\r\n\r\n      this.kerviService.appPingDelay$.subscribe(function(diff) {\r\n        self.pingDelay = diff;\r\n      });\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-ngx-kervi',\r\n  template: `\r\n    <p>\r\n      ngx-kervi works!\r\n    </p>\r\n  `,\r\n  styles: []\r\n})\r\nexport class NgxKerviComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { NGXKerviService } from \"../ngx-kervi.service\"\r\n@Pipe({\r\n  name: 'translate'\r\n})\r\nexport class TranslatePipe implements PipeTransform {\r\n  constructor(private kerviService: NGXKerviService) {\r\n\r\n  }\r\n  transform(value: string, args?: any): any {\r\n    return this.kerviService.text(value, value);\r\n  }\r\n}","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { TranslatePipe } from './textPipe' \r\n@NgModule({\r\n  imports: [\r\n  ],\r\n  exports:[\r\n    TranslatePipe\r\n  ],\r\n  providers: [  \r\n      \r\n  ],\r\n  declarations: [\r\n    TranslatePipe\r\n  ]\r\n})\r\nexport class NGXKerviPipesModule { }\r\n","import { NgModule, Injector } from '@angular/core';\r\nimport { NgxKerviComponent } from './ngx-kervi.component';\r\nimport { KerviDashboardComponent } from './dashboard/kervi-dashboard.component';\r\nimport { setAppInjector } from \"./app-injector.service\";\r\nimport { KerviDashboardPanelComponent } from './dashboard/kervi-dashboard-panel.component';\r\nimport { KerviControllerPadComponent } from './dashboard/kervi-controller-pad.component';\r\nimport { NGXKerviService } from './ngx-kervi.service';\r\nimport { KerviTemplateService } from './ngx-kervi-template.service';\r\nimport { KerviValueComponent } from './values/value.component';\r\nimport { KerviNumberComponent } from './values/kervi-number-value.component';\r\nimport { KerviStringComponent } from './values/kervi-string-value.component';\r\nimport { KerviBooleanComponent } from './values/kervi-boolean-value.component';\r\nimport { KerviColorComponent } from './values/kervi-color-value.component';\r\nimport { KerviDateTimeComponent } from './values/kervi-datetime-value.component';\r\nimport { KerviActionComponent } from './actions/kervi-action.component';\r\nimport { KerviCameraComponent } from './camera/kervi-camera.component';\r\nimport { KerviWidgetComponent } from './dashboard/kervi-widget.component';\r\nimport { KerviUserLogComponent } from './user-log/user-log.component';\r\nimport { KerviDirectoryComponent } from './files/kervi-directory.component';\r\nimport { KerviAppHealthComponent } from './dashboard/app-health.component';\r\nimport {  NGXKerviPipesModule } from '../lib/pipes/pipes.module'\r\n@NgModule({\r\n  imports: [\r\n  ],\r\n  declarations: [\r\n    NgxKerviComponent,\r\n    KerviDashboardComponent,\r\n    KerviDashboardPanelComponent,\r\n    KerviControllerPadComponent,\r\n    KerviNumberComponent,\r\n    KerviStringComponent,\r\n    KerviBooleanComponent,\r\n    KerviColorComponent,\r\n    KerviDateTimeComponent,\r\n    KerviActionComponent,\r\n    KerviValueComponent,\r\n    KerviWidgetComponent,\r\n    KerviCameraComponent,\r\n    KerviUserLogComponent,\r\n    KerviDirectoryComponent,\r\n    KerviAppHealthComponent\r\n  ],\r\n  providers: [NGXKerviService, KerviTemplateService],\r\n  exports: [\r\n    NgxKerviComponent,\r\n    KerviDashboardComponent,\r\n    KerviDashboardPanelComponent,\r\n    KerviControllerPadComponent,\r\n    KerviNumberComponent,\r\n    KerviWidgetComponent,\r\n    KerviStringComponent,\r\n    KerviBooleanComponent,\r\n    KerviColorComponent,\r\n    KerviDateTimeComponent,\r\n    KerviActionComponent,\r\n    KerviCameraComponent,\r\n    KerviUserLogComponent,\r\n    KerviActionComponent,\r\n    KerviAppHealthComponent,\r\n    NGXKerviPipesModule\r\n  ]\r\n})\r\nexport class NgxKerviModule {\r\n  constructor(private injector:Injector){\r\n    setAppInjector(injector);\r\n  }\r\n }\r\n","/*\r\n * Public API Surface of ngx-kervi\r\n */\r\n\r\nexport * from './lib/ngx-kervi.service';\r\nexport { KerviTemplateService } from './lib/ngx-kervi-template.service';\r\nexport { ConnectionState, DashboardSizes } from \"kervi-js\";\r\nexport { KerviDashboardComponent } from './lib/dashboard/kervi-dashboard.component';\r\nexport { KerviDashboardPanelComponent } from './lib/dashboard/kervi-dashboard-panel.component';\r\nexport { KerviControllerPadComponent } from './lib//dashboard/kervi-controller-pad.component';\r\nexport { KerviWidgetComponent } from './lib/dashboard/kervi-widget.component';\r\nexport { KerviNumberComponent } from './lib/values/kervi-number-value.component';\r\nexport { KerviBooleanComponent } from './lib/values/kervi-boolean-value.component';\r\nexport { KerviActionComponent } from './lib/actions/kervi-action.component';\r\nexport { KerviCameraComponent } from './lib/camera/kervi-camera.component';\r\nexport { KerviColorComponent } from './lib/values/kervi-color-value.component';\r\nexport { KerviDateTimeComponent } from './lib/values/kervi-datetime-value.component';\r\nexport { KerviStringComponent } from './lib/values/kervi-string-value.component';\r\nexport { KerviUserLogComponent } from './lib/user-log/user-log.component';\r\nexport { KerviDirectoryComponent } from './lib/files/kervi-directory.component';\r\nexport { KerviAppHealthComponent } from './lib/dashboard/app-health.component';\r\n\r\nexport  { AppInjector } from './lib/app-injector.service';\r\n\r\nexport * from './lib/ngx-kervi.component';\r\nexport * from './lib/ngx-kervi.module';\r\nexport * from './lib/pipes/pipes.module'\r\nexport * from './lib/pipes/textPipe';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, Router} from '@angular/router';\r\nimport { KerviDashboardComponent, NGXKerviService, ConnectionState} from 'ngx-kervi'\r\nimport { DashboardPanelComponent } from 'kervi-zorro'\r\ndeclare var window:any;\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent extends KerviDashboardComponent implements OnInit {\r\n  @ViewChild(\"leftPad\") leftPad:ElementRef;\r\n  @ViewChild(\"rightPad\") rightPad:ElementRef;\r\n  private padSize=180;\r\n  private isConnected:false;\r\n  public leftPadTop:number;\r\n  public leftPadLeft:number;\r\n\r\n  public rightPadTop:number;\r\n  public rightPadLeft:number;\r\n  cameraIdx = \"\";\r\n  mediaHidden = true;\r\n\r\n  constructor(private router:Router, private activatedRoute:ActivatedRoute ) {\r\n    super();\r\n   }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    this.cameraId$.subscribe(function(camId){\r\n      console.log(\"db cid\", camId);\r\n      this.cameraIdx = camId;\r\n    })\r\n    this.kerviService.componentsChanged$.subscribe(function() {\r\n      console.log(\"adb changed\");\r\n      const id = self.dashboardId;\r\n      //self.loadDashboard(\"0\");\r\n      self.loadDashboard(id);\r\n      \r\n      \r\n    });\r\n\r\n    this.activatedRoute.params.subscribe(params => {\r\n      var dashboardId = params['name'];\r\n      console.log(\"dbi\", dashboardId);\r\n      this.loadDashboard(dashboardId);\r\n      \r\n      console.log(\"rid\", dashboardId);\r\n      setTimeout(() => {\r\n        var h = window.innerHeight;\r\n        var w = window.innerWidth;\r\n\r\n        self.leftPadTop = h / 2 - self.padSize/2\r\n        self.leftPadLeft = w / 4 - self.padSize/2 \r\n        \r\n        self.rightPadTop = h / 2 - self.padSize/2\r\n        self.rightPadLeft = w - w / 4 - self.padSize/2 \r\n        \r\n\r\n      }, 0);\r\n    });\r\n  }\r\n\r\n  handleMediaClose(): void {\r\n    console.log('click ok');\r\n    this.mediaHidden = true;\r\n  }\r\n\r\n}\r\n","<nz-layout >\r\n\t<nz-header *ngIf='!isAppEmpty'>\r\n\t\t<div nz-row>\r\n\t\t\t<div nz-col nzSpan=\"6\">\t\t\r\n\t\t\t\t<ul nz-menu  nzMode=\"horizontal\" class=\"kervi-main-menu\">\r\n\t\t\t\t\t<li nz-submenu  *ngIf=\"showMenu\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<span title><i nz-icon nzTheme=\"twotone\" nzType=\"dashboard\" [nzTwotoneColor]=\"'#9fd037'\"></i> {{dashboard.name}}</span>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<ng-container *ngIf=\"dashboards.length > 1\">\r\n\t\t\t\t\t\t\t\t<li nz-menu-item *ngFor=\"let dashboard of dashboards\" [routerLink]=\"['/dashboard', dashboard.id]\">{{dashboard.name}}</li>\r\n\t\t\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\t\t<li *ngIf=\"authenticated && dashboards.length > 1\">\r\n\t\t\t\t\t\t\t\t<nz-divider></nz-divider>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li nz-menu-item *ngIf=\"authenticated && anonymous\" (click)=\"logoff($event)\"> <i nz-icon nzType=\"login\" nzTheme=\"outline\"></i>  {{('login' | translate)}}</li>\r\n\t\t\t\t\t\t\t<li nz-menu-item *ngIf=\"authenticated && !anonymous\" (click)=\"logoff($event)\"> <i nz-icon nzType=\"logout\"></i> {{('logout' | translate)}}</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li nz-menu-item *ngIf=\"showPanelController\">\r\n\t\t\t\t\t\t<a  (click)=\"dashboardPanelsHidden = !dashboardPanelsHidden;\">\r\n\t\t\t\t\t\t\t<i nz-icon nzType=\"sliders\" nzTheme=\"twotone\" [nzTwotoneColor]=\"'#9fd037'\"></i>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"kervi-sys-panel\" *ngIf=\"dashboard && dashboard.sysPanel\" nz-col nzSpan=\"18\">\r\n\t\t\t\t<kervi-dashboard-panel [dashboardSizes]=\"dashboardSizes\" [inline]=\"true\" [panel]=\"dashboard.sysPanel\" ></kervi-dashboard-panel>\r\n\t\t\t\t&nbsp;<a  (click)=\"mediaHidden = !mediaHidden;\">\r\n\t\t\t\t\t\t<i nz-icon nzType=\"folder-open\" nzTheme=\"twotone\" [nzTwotoneColor]=\"'#9fd037'\"> </i>\r\n\t\t\t\t</a>\r\n\t\t\t\t<kervi-message-button></kervi-message-button>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n\t</nz-header>\r\n\t\t\r\n\t<nz-content>\r\n\t\t<ng-container *ngIf=\"isAppEmpty\">\r\n\t\t\t<div nz-row style=\"height:100%\" class=\"kervi-panels\">\r\n\t\t\t\t<div nz-col nzSpan=\"12\" nzOffset=\"6\">\r\n\t\t\t\t\t<p></p>\r\n\t\t\t\t\t<nz-alert\r\n\t\t\t\t\t\tnzType=\"warning\"\r\n\t\t\t\t\t\t[nzMessage] =\"'hello_world' | translate\"\r\n\t\t\t\t\t\t[nzDescription]=\" 'empty_app' | translate\"\r\n\t\t\t\t\t\tnzShowIcon\t\r\n\t\t\t\t\t  >\r\n\t\t\t\t\t</nz-alert>\r\n\t\t\t\t\t<p></p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</ng-container>\r\n\t\t<kervi-cam-viewer *ngIf=\"cameraId\" [isBackground]=\"true\" [cameraId]=\"(cameraId$| async)\" [linkParameters]=\"cameraParameters\"></kervi-cam-viewer>\r\n\t\t<div #leftPad class=\"kervi-controller-pad\" *ngIf=\"showLeftPad\" [style.left.px]=\"0\" [style.top.px]=\"65\" [style.bottom.px]=\"65\" [style.right.%]=\"66\" >\r\n\t\t\t<kervi-nipple-pad [autoCenter]=\"autoCenterLeftPad\" [XValue]=\"leftPadXValue\" [YValue]=\"leftPadYValue\" style=\"width: 100%; height: 100%;\"></kervi-nipple-pad>\r\n\t\t</div>\r\n\t\t<div #rightPad class=\"kervi-controller-pad\" *ngIf=\"showRightPad\" [style.left.%]=\"66\" [style.top.px]=\"65\" [style.bottom.px]=\"65\" [style.right.px]=\"0\" >\r\n\t\t\t<kervi-nipple-pad [autoCenter]=\"autoCenterRightPad\" [XValue]=\"rightPadXValue\" [YValue]=\"rightPadYValue\" style=\"width: 100%; height: 100%;\"></kervi-nipple-pad>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"kervi-panels\" fxLayout=\" column\" fxLayout.xs=\"column\" fxLayoutGap=\"0.5%\" fxLayoutAlign=\"\"  *ngIf=\"!dashboardPanelsHidden && !isAppEmpty\" style=\"\">\r\n\t\t\t<ng-container *ngFor=\"let panel of dashboard.panels\">\r\n\t\t\t\t\t<kervi-dashboard-panel [fxFlex]=\"panel.parameters.width\" fxFlex.xs=\"100%\" [dashboardSizes]=\"defaultSizes\" [panel]=\"panel\"></kervi-dashboard-panel>\r\n\t\t\t\t\r\n\t\t\t</ng-container>\r\n\t\t</div>\r\n\t</nz-content>\r\n\t<nz-footer *ngIf='!isAppEmpty'>\r\n\t\t<div nz-row>\r\n\t\t\t<div nz-col nzSpan=\"8\" style=\"text-align: left\">\r\n\t\t\t\t<kervi-dashboard-panel [inline]=\"true\" *ngIf=\"dashboard.footerLeftPanel\" [dashboardSizes]=\"defaultSizes\" [panel]=\"dashboard.footerLeftPanel\"></kervi-dashboard-panel>\r\n\t\t\t</div>\r\n\t\t\t<div nz-col nzSpan=\"8\" style=\"text-align:center\">\r\n\t\t\t\t<kervi-dashboard-panel [inline]=\"true\" *ngIf=\"dashboard.footerCenterPanel\" [dashboardSizes]=\"defaultSizes\" [panel]=\"dashboard.footerCenterPanel\"></kervi-dashboard-panel>\r\n\t\t\t</div>\r\n\t\t\t<div nz-col nzSpan=\"8\"  style=\"text-align: right\">\r\n\t\t\t\t<kervi-dashboard-panel [inline]=\"true\" *ngIf=\"dashboard.footerRightPanel\" [dashboardSizes]=\"defaultSizes\" [panel]=\"dashboard.footerRightPanel\"></kervi-dashboard-panel>\r\n\t\t\t\t<button nz-button nz-type=\"text\"  (mousedown)=\"toggleFullScreen()\"><i nz-icon [nzType]=\"inFullScreen ? 'fullscreen-exit' : 'fullscreen'\" title=\"{{( 'toggle_screen' | translate)}}\"></i></button>\r\n\t\t\t</div>\r\n\t</div>\r\n\t</nz-footer>\r\n</nz-layout>\r\n\r\n<nz-modal \r\n\tnzWrapClassName=\"vertical-center-modal\"\r\n\t[(nzVisible)]=\"!mediaHidden\"\r\n\tnzTitle=\"Media\"\r\n\t(nzOnCancel)=\"handleMediaClose()\"\r\n\t\r\n>\r\n<div style=\"display:inline-block;width:100%\"> <app-media ></app-media></div>\t\r\n\r\n</nz-modal>\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class KerviZorroService {\r\n\r\n  constructor() { }\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { NumberValue, DashboardSizes   } from 'kervi-js';\r\nimport { NGXKerviService, KerviTemplateService } from 'ngx-kervi';\r\nimport { asapScheduler } from 'rxjs';\r\n\r\ndeclare var ApexCharts: any;\r\n\r\n@Component({\r\n  selector: 'value-sparkline',\r\n  templateUrl: './sparkline.component.html',\r\n  styleUrls: ['./sparkline.component.scss'],\r\n})\r\n\r\nexport class SparklineComponent implements OnInit {\r\n  @Input() value: NumberValue = null;\r\n  @Input() linkParameters: any = null;\r\n  @Input() type: string;\r\n  @Input() size:number;\r\n  @Input() dashboardSizes:DashboardSizes = new DashboardSizes();\r\n  @ViewChild('chart') private chartElement: ElementRef;\r\n  private series=[];\r\n  private chartObj: any;\r\n  private options:any;\r\n  constructor(private kerviService:NGXKerviService, private templateService:KerviTemplateService ) {\r\n\r\n  }\r\n\r\n  private createElement(){\r\n    this.series = [this.value.value]\r\n\r\n    this.options ={\r\n      chart: {\r\n          height: 14,\r\n          width:60,\r\n          type: 'area',\r\n          sparkline: {\r\n            enabled: true\r\n          }\r\n      },\r\n      stroke: {\r\n        curve: 'straight',\r\n        width:1\r\n      },\r\n      fill: {\r\n        opacity: 0.3,\r\n      },\r\n      series: [{\r\n        data: this.value.sparkline$.value\r\n      }],\r\n      yaxis: {\r\n        min: 0\r\n      },\r\n      colors: [this.color(\"color\",\".kervi-sparkline\")],\r\n    }\r\n  \r\n    if (this.chartObj) {\r\n      this.chartObj.destroy();\r\n    }\r\n    console.log(\"create sparkline\", this.value.id);\r\n    this.chartObj = new ApexCharts(\r\n      this.chartElement.nativeElement,\r\n      this.options\r\n    );\r\n    this.chartObj.render();\r\n  }\r\n\r\n  \r\n\r\n  private color(style,selector){\r\n    return this.templateService.getColor(style,selector);\r\n  }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    asapScheduler.schedule(() => {\r\n      this.createElement();\r\n    });\r\n\r\n    this.value.sparkline$.subscribe(function(v){\r\n      if (self.chartObj && v){\r\n        self.chartObj.updateSeries([{\r\n          data: v\r\n        }]);\r\n      }\r\n    });\r\n  }\r\n}","<div #chart></div>","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, ElementRef } from '@angular/core';\r\nimport { KerviNumberComponent } from 'ngx-kervi'\r\n@Component({\r\n\tselector: 'kervi-value-number',\r\n\ttemplateUrl: './number-value.component.html',\r\n\tstyleUrls: ['./number-value.component.scss']\r\n})\r\nexport class NumberComponent extends KerviNumberComponent implements OnInit {\r\n\tconstructor(private elementRef:ElementRef) { \r\n\t\tsuper();\r\n\t}\r\n\t\r\n\tngOnInit() {\r\n\t\tthis.ngOnInitNumber();\r\n\t}\r\n\tsliderMouseDown(){\r\n\t\tconsole.log(\"md\");\r\n\r\n\t}\r\n\r\n\tsliderMouseUp(){\r\n\t\tconsole.log(\"mu\");\r\n\t}\r\n}\r\n","<ng-container *ngIf=\"linkParameters.isInput\">\r\n    \r\n    <nz-form-control >\r\n        <span (mousedown)=\"sliderMouseDown()\" (mouseup)=\"sliderMouseUp()\"><nz-slider [nzMin]=\"value.minValue\" [nzMax]=\"value.maxValue\" [nzStep]=\"1\"  [(ngModel)]=\"value.value\" ></nz-slider></span>\r\n        <nz-input-number id=\"{{value.id}}\" [nzMin]=\"value.minValue\" [nzMax]=\"value.maxValue\" [nzStep]=\"1\" [(ngModel)]=\"value.value\"  ></nz-input-number>\r\n        \r\n    </nz-form-control>\r\n    \r\n</ng-container>\r\n<ng-container *ngIf=\"!linkParameters.isInput\">\r\n\r\n    <span class=\"value-value\" [style.min-width.rem]=\"linkParameters.valueSize\">\r\n        <i *ngIf=\"currentIcon\" class=\"fa fa-{{currentIcon}}\"></i>\r\n        <value-sparkline *ngIf=\"linkParameters.showSparkline && !linkParameters.isInput\" [value]=\"value\"></value-sparkline>\r\n        {{(value.value$ | async | number:numberFormat)}}\r\n        <span *ngIf=\"linkParameters.displayUnit\">{{value.unit}}</span>\r\n    </span>\r\n</ng-container>\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, Input, Output, ElementRef, ViewEncapsulation, EventEmitter } from '@angular/core';\r\nimport { DashboardSizes } from 'kervi-js'\r\n@Component({\r\n  selector: 'kervi-switchbutton',\r\n  templateUrl: './switch-button.component.html',\r\n  styleUrls: ['./switch-button.component.scss'],\r\n})\r\nexport class SwitchButtonComponent implements OnInit {\r\n  @Input() value: Boolean;\r\n  @Input() linkParameters:any;\r\n  @Input() inline:boolean = false;\r\n  @Input() dashboardSizes:DashboardSizes = new DashboardSizes();\r\n  @Output() buttonState = new EventEmitter();\r\n  public width:string;\r\n  public height:string;\r\n  constructor() { }\r\n  \r\n  ngOnInit() {\r\n    console.log(\"sb\", this.value);\r\n    if (this.linkParameters){\r\n      \r\n      if (!this.linkParameters.buttonWidth)\r\n        this.width = this.dashboardSizes.switchWidth;\r\n      else\r\n        this.width = this.linkParameters.buttonWidth;\r\n\r\n      if (!this.linkParameters.buttonHeight)\r\n        this.height = this.dashboardSizes.switchHeight;\r\n      else\r\n        this.height = this.linkParameters.buttonHeight;\r\n\r\n    } else{\r\n      this.width = this.dashboardSizes.switchWidth;\r\n      this.height = this.dashboardSizes.switchHeight;\r\n    }\r\n  }\r\n\r\n  modelChange(state){\r\n    this.buttonState.emit(state);\r\n  }\r\n}\r\n","<nz-switch \r\n    [(ngModel)]=\"value\"\r\n    [nzCheckedChildren]=\"checkedTemplate\" [nzUnCheckedChildren]=\"unCheckedTemplate\"\r\n    (ngModelChange)=\"modelChange($event)\"\r\n>\r\n\r\n</nz-switch>\r\n<ng-template #checkedTemplate>\r\n    <i *ngIf=\"linkParameters.onIcon\"  nz-icon [nzType]=\"linkParameters.onIcon\"></i>\r\n    <span >{{ linkParameters.onText }}</span>\r\n</ng-template>\r\n<ng-template #unCheckedTemplate>\r\n    <i *ngIf=\"linkParameters.offIcon\"  nz-icon [nzType]=\"linkParameters.offIcon\"></i>\r\n    <span >{{ linkParameters.offText }}</span>\r\n</ng-template>\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { DashboardSizes, BooleanValue } from 'kervi-js';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\ndeclare var jQuery:any;\r\n@Component({\r\n  selector: 'kervi-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss'],\r\n})\r\n\r\nexport class ButtonComponent implements OnInit {\r\n  @Input() value: BooleanValue;\r\n  @Input() linkParameters: any = null;\r\n  @Input() type: string;\r\n  @Input() inline:boolean = false;\r\n  @Input() dashboardSizes:DashboardSizes = new DashboardSizes();\r\n  @Input() title:string;\r\n  @Output() buttonState = new EventEmitter();\r\n  public width:string;\r\n  public height:string;\r\n  \r\n  constructor() {  \r\n  }\r\n \r\n  ngOnInit() {\r\n    var self = this; \r\n    if (self.linkParameters){\r\n      \r\n      if (!self.linkParameters.buttonWidth)\r\n        this.width = this.dashboardSizes.buttonWidth;\r\n      else\r\n        this.width = self.linkParameters.buttonWidth;\r\n\r\n      if (!self.linkParameters.buttonHeight)\r\n        this.height = this.dashboardSizes.buttonHeight;\r\n      else\r\n        this.height = self.linkParameters.buttonHeight;\r\n\r\n    } else{\r\n      this.width = this.dashboardSizes.buttonWidth;\r\n      this.height = this.dashboardSizes.buttonHeight;\r\n    }\r\n  }\r\n\r\n  public confirm() {\r\n    console.log(\"c\", this.value);\r\n    this.buttonState.emit(true);\r\n    this.buttonState.emit(false);\r\n  }\r\n\r\n  public press() {\r\n\r\n    console.log(\"p\", this.value);\r\n    this.buttonState.emit(true);\r\n  }\r\n\r\n  public release() {\r\n    this.buttonState.emit(false);\r\n  }\r\n}","<ng-template #buttonContentTemplate>\r\n    <i *ngIf=\"!linkParameters.buttonIcon && linkParameters.onIcon && value.value\" nz-icon [nzType]=\"linkParameters.onIcon\"></i>\r\n    <i *ngIf=\"!linkParameters.buttonIcon && linkParameters.offIcon && !value.value\" nz-icon [nzType]=\"linkParameters.offIcon\"></i>\r\n    <i *ngIf=\"linkParameters.buttonIcon\" nz-icon [nzType]=\"linkParameters.buttonIcon\"></i>\r\n    <span *ngIf=\"linkParameters.buttonText\">{{ linkParameters.buttonText }}</span>\r\n    <span *ngIf=\"!linkParameters.buttonText && linkParameters.onText && value.value\">{{ linkParameters.onText }}</span>\r\n    <span *ngIf=\"!linkParameters.buttonText && linkParameters.offText && !value.value\">{{ linkParameters.offText }}</span>\r\n\r\n</ng-template>\r\n<button\r\n    *ngIf = \"linkParameters.confirm\"\r\n    nz-button nzType=\"primary\"\r\n    (nzOnConfirm)=\"confirm()\" \r\n    nz-popconfirm [nzTitle]=\"linkParameters.confirmMessage\"\r\n>\r\n<ng-container *ngTemplateOutlet=\"buttonContentTemplate\"></ng-container>\r\n</button>\r\n<button\r\n    *ngIf = \"!linkParameters.confirm\"\r\n    nz-button nzType=\"primary\"\r\n    (mousedown)=\"press()\" \r\n    (mouseup)=\"release()\"\r\n>\r\n<ng-container *ngTemplateOutlet=\"buttonContentTemplate\"></ng-container>\r\n</button>\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { KerviBooleanComponent } from 'ngx-kervi';\r\n\r\n@Component({\r\n\tselector: 'kervi-value-boolean',\r\n\ttemplateUrl: './boolean-value.component.html',\r\n\tstyleUrls: ['./boolean-value.component.scss']\r\n})\r\nexport class BooleanComponent extends KerviBooleanComponent implements OnInit {\r\n\tconstructor() { \r\n\t\tsuper();\r\n\t}\r\n\r\n\tchangeState(event){\r\n\t\tthis.value.set(event);\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.ngOnInitBoolean();\r\n\t}\r\n}\r\n","<kervi-switchbutton \r\n    *ngIf=\"displayType!='button'\"\r\n    [dashboardSizes]=\"dashboardSizes\" \r\n    [inline]=\"inline\" \r\n    [value]=\"value.value\" \r\n    [linkParameters]=\"linkParameters\"\r\n    (buttonState)=\"changeState($event)\"\r\n></kervi-switchbutton>\r\n<kervi-button \r\n    *ngIf=\"displayType=='button'\"    \r\n    [dashboardSizes]=\"dashboardSizes\" \r\n    [value]=\"value\" \r\n    [inline]=\"inline\" \r\n    [linkParameters]=\"linkParameters\" \r\n    (buttonState)=\"changeState($event)\" \r\n></kervi-button>\r\n\r\n\r\n\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, Input, OnInit, ElementRef } from '@angular/core';\r\nimport { KerviStringComponent } from 'ngx-kervi'\r\n\r\ndeclare var jQuery:any;\r\n@Component({\r\n\tselector: 'kervi-value-string',\r\n\ttemplateUrl: './string-value.component.html',\r\n\tstyleUrls: ['./string-value.component.scss']\r\n})\r\nexport class StringComponent extends KerviStringComponent implements OnInit {\r\n\tconstructor(private elementRef: ElementRef) \r\n\t{\r\n\t\tsuper();\r\n\t }\r\n\r\n\tngOnInit(){\r\n\t\tvar self = this;\r\n\t\tthis.ngOnInitString();\r\n\t\tthis.value.value$.subscribe(function(v){\r\n\t\t \tjQuery(\"input\", self.elementRef.nativeElement).val(v).change();\r\n\t\t})\r\n\t}\r\n\r\n\tonChange(event){\r\n\t\tvar v = jQuery(\"input\", this.elementRef.nativeElement).val();\r\n\t\tconsole.log(\"evv\", v, event);\r\n\t\tthis.value.set(v);\r\n\t}\r\n}\r\n","<input nz-input *ngIf=\"linkParameters.isInput\"  [(ngModel)]=\"value.value\"/>\r\n<span *ngIf=\"!linkParameters.isInput\" class=\"form-control pull-right\"   >{{(value.value$ | async)}}</span>\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, Input, Output, ElementRef, EventEmitter} from '@angular/core';\r\nimport { DashboardSizes } from 'kervi-js'\r\nimport { BehaviorSubject } from 'rxjs';\r\n//declare var jQuery: any;\r\n//declare var Colors: any;\r\n@Component({\r\n  selector: 'kervi-color',\r\n  templateUrl: './color.component.html',\r\n  styleUrls: ['./color.component.scss'],\r\n})\r\nexport class ColorComponent implements OnInit {\r\n    public colorValue:string;\r\n    @Input() set color(v:string) {\r\n        if (v){\r\n            this.colorValue = v;\r\n        }\r\n  };\r\n  @Output() colorChange = new EventEmitter()\r\n  @Input() linkParameters:any;\r\n  @Input() inline:boolean = false;\r\n  @Input() dashboardSizes:DashboardSizes = new DashboardSizes();\r\n  private width:string;\r\n  private height:string;\r\n  private state:any;\r\n  private rgbString:string;\r\n  private picker:any = null;\r\n  private moveDelayTimer = null;\r\n  \r\n  constructor() { }\r\n    \r\n  ngOnInit() {\r\n    var self = this;\r\n    if (!self.linkParameters.buttonWidth)\r\n        this.width = this.dashboardSizes.switchWidth;\r\n    else\r\n        this.width = self.linkParameters.buttonWidth;\r\n    \r\n    if (this.linkParameters.isInput){\r\n        \r\n    }\r\n  }\r\n\r\n  public onChangeColor(color: string) {\r\n    const self = this;\r\n    if (self.moveDelayTimer) {\r\n        clearTimeout(self.moveDelayTimer);\r\n    }\r\n    self.moveDelayTimer = setTimeout(function () {\r\n        self.colorChange.emit(color);\r\n    }, 200);\r\n  }\r\n}\r\n","<nz-form-control >\r\n    <input nz-input\r\n    [value]=\"colorValue\"\r\n    [(colorPicker)]=\"colorValue\"\r\n    [style.background]=\"colorValue\"\r\n    [cpOKButton]=\"true\"\r\n    [cpSaveClickOutside]=\"false\"\r\n    [cpAlphaChannel]=\"'disabled'\"\r\n    (colorPickerChange)=\"onChangeColor($event)\"/>\r\n</nz-form-control>","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, Input, OnInit, ElementRef } from '@angular/core';\r\nimport { KerviColorComponent } from 'ngx-kervi'\r\n\r\n@Component({\r\n\tselector: 'kervi-value-color',\r\n\ttemplateUrl: './color-value.component.html',\r\n\tstyleUrls: ['./color-value.component.scss']\r\n})\r\nexport class ColorComponent extends KerviColorComponent implements OnInit {\r\n\t\r\n\tconstructor() { \r\n\t\tsuper();\r\n\t\t//console.log(\"cnio\",this);\r\n\t}\r\n\r\n\r\n\tsetValue(v){\r\n\t\tconsole.log(v);\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.ngOnInitColor();\r\n\t}\r\n}\r\n","<kervi-color [color]=\"(value.value$ | async)\" (colorChange)=\"setKerviValue($event)\" [linkParameters]=\"linkParameters\" ></kervi-color>\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, Input, Output, ElementRef, EventEmitter } from '@angular/core';\r\nimport { DateTimeValue } from 'kervi-js'\r\n@Component({\r\n  selector: 'kervi-datetime',\r\n  templateUrl: './datetimepicker.component.html',\r\n  styleUrls: ['./datetimepicker.component.scss']\r\n})\r\n\r\nexport class DateTimeComponent implements OnInit {\r\n  @Input() dateTime:DateTimeValue;\r\n  @Input() type:string;\r\n  @Input() format: string;\r\n  @Output() dateTimeChanged = new EventEmitter\r\n  private isReady=false;\r\n  constructor(private elementRef:ElementRef) {  \r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  \r\n    \r\n  }\r\n}","<nz-date-picker \r\n*ngIf=\"type=='datetime'\"\r\nnzShowTime\r\n[(ngModel)]=\"dateTime.value\"\r\n[nzFormat] = \"format\"\r\n></nz-date-picker>\r\n\r\n<nz-date-picker \r\n*ngIf=\"type=='date'\"\r\n[(ngModel)]=\"dateTime.value\"\r\n[nzFormat] = \"format\"\r\n></nz-date-picker>\r\n\r\n\r\n<nz-time-picker \r\n*ngIf=\"type=='time'\"\r\n[(ngModel)]=\"dateTime.value\"\r\n[nzFormat] = \"format\"\r\n></nz-time-picker>\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { KerviDateTimeComponent } from 'ngx-kervi';\r\ndeclare var moment:any;\r\n\r\n@Component({\r\n\tselector: 'kervi-value-datetime',\r\n\ttemplateUrl: './datetime-value.component.html',\r\n\tstyleUrls: ['./datetime-value.component.scss']\r\n})\r\nexport class DateTimeComponent extends KerviDateTimeComponent implements OnInit {\r\n\tconstructor() { \r\n\t\tsuper();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.ngOnInitDateTime();\r\n\t}\r\n}\r\n","<kervi-datetime [type]=\"displayType\" [format]=\"dateTimeFormat\" [dateTime]=\"value\"></kervi-datetime>\r\n    ","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, Input } from '@angular/core';\r\nimport { KerviValue, DashboardPanel, DashboardSizes } from 'kervi-js'\r\n\r\n@Component({\r\n\tselector: 'kervi-value',\r\n\ttemplateUrl: './kervi-value.component.html',\r\n\tstyleUrls: ['./kervi-value.component.scss']\r\n\t//directives: [ CommonModule  ],\r\n})\r\nexport class KerviValueComponent {\r\n\t@Input() value: KerviValue;\r\n\t@Input() dashboardPanel: DashboardPanel;\r\n\t@Input() linkParameters:any;\r\n\t@Input() inline:boolean = false;\r\n\t@Input() dashboardSizes:DashboardSizes = new DashboardSizes();\r\n\r\n\tconstructor() { \r\n\t}\r\n\t \r\n\t\r\n}\r\n","    <kervi-value-number *ngIf=\"value.typeName=='Number'\" [value]=\"value\" [dashboardSizes]=\"dashboardSizes\" [linkParameters]=\"linkParameters\" [inline]=\"inline\" ></kervi-value-number>\r\n    <kervi-value-boolean *ngIf=\"value.typeName=='Boolean'\" [dashboardSizes]=\"dashboardSizes\" [linkParameters]=\"linkParameters\" [inline]=\"inline\" [value]=\"value\"></kervi-value-boolean>\r\n    <kervi-value-string *ngIf=\"value.typeName=='String'\" [dashboardSizes]=\"dashboardSizes\" [linkParameters]=\"linkParameters\" [inline]=\"inline\" [value]=\"value\"></kervi-value-string>\r\n    <kervi-value-color *ngIf=\"value.typeName=='Color'\" [dashboardSizes]=\"dashboardSizes\" [linkParameters]=\"linkParameters\" [inline]=\"inline\" [value]=\"value\"></kervi-value-color>\r\n    <kervi-value-datetime *ngIf=\"value.typeName=='DateTime'\" [dashboardSizes]=\"dashboardSizes\" [linkParameters]=\"linkParameters\" [inline]=\"inline\" [value]=\"value\"></kervi-value-datetime>\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { KerviActionComponent } from 'ngx-kervi';\r\n//import { TemplateService } from '../../template.service';\r\n\r\n@Component({\r\n  selector: 'kervi-action',\r\n  templateUrl: './action.component.html',\r\n  styleUrls: ['./action.component.scss'],\r\n})\r\n\r\nexport class ActionComponent extends KerviActionComponent implements OnInit {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n  ngOnInit() {\r\n   this.ngOnInitAction();\r\n  }\r\n}","<kervi-switchbutton \r\n    [dashboardSizes]=\"dashboardSizes\" \r\n    [inline]=\"inline\" \r\n    [value]=\"(state | async)\" \r\n    [linkParameters]=\"linkParameters\"\r\n    (buttonState)=\"setActionState($event)\"\r\n    *ngIf=\"displayType!='button'\"\r\n></kervi-switchbutton>\r\n<kervi-button \r\n    [title]=\"action.name\" \r\n    [dashboardSizes]=\"dashboardSizes\" \r\n    [value]=\"(state | async)\" \r\n    [inline]=\"inline\" \r\n    [linkParameters]=\"linkParameters\"\r\n    (buttonState)=\"setActionState($event)\" \r\n    *ngIf=\"displayType=='button'\"\r\n></kervi-button>\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, Input, Output, EventEmitter, OnInit, OnDestroy} from '@angular/core';\r\nimport { NGXKerviService } from 'ngx-kervi';\r\nimport { Stream } from 'kervi-js';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n@Component({\r\n  selector: 'kervi-mpeg-viewer',\r\n  templateUrl: './mpeg-viewer.component.html',\r\n  styleUrls: ['./mpeg-viewer.component.scss']\r\n})\r\nexport class MPEGViewerComponent implements OnInit, OnDestroy{\r\n  @Input() set cameraSource(id: string) {\r\n    console.log('set cam source', id);\r\n    this.setSource(id);\r\n};\r\n  \r\n  @Input() width: number = null;\r\n  @Input() height: number = null;\r\n  @Output() imageLoaded = new EventEmitter();\r\n  stream: Stream = null;\r\n  @Input()\r\n  streamData: any;\r\n  private firstLoad = true;\r\n  private fpsCounter = 0;\r\n  private fpsTime = new Date();\r\n  private streamSubscription = null;\r\n\r\n  @Input()\r\n  fps = 0;\r\n\r\n  constructor( private kerviService: NGXKerviService, private domSanitizer: DomSanitizer) {\r\n  \r\n  }\r\n\r\n  ngOnInit() {\r\n    const self = this;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.stream) {\r\n      this.streamSubscription.unsubscribe();\r\n      this.stream.close();\r\n    }\r\n  }\r\n\r\n  setSource(source: string) {\r\n    console.log(\"sc\", source);\r\n    const self = this;\r\n    if (this.stream) {\r\n      this.streamSubscription.unsubscribe();\r\n      this.stream.close();\r\n    }\r\n    this.stream = this.kerviService.GetStream(source, ['IMAGE_FRAME']);\r\n    console.log(\"scx\", this.stream);\r\n    this.streamSubscription = this.stream.events$.subscribe( function(event) {\r\n      //console.log('ce', event);\r\n      if (event) {\r\n        var blob = new Blob( [ event.data ], { type: \"image/jpeg\" } );\r\n        self.streamData = self.domSanitizer.bypassSecurityTrustUrl(URL.createObjectURL(blob));\r\n        self.fpsCounter += 1;\r\n        const now   = new Date();\r\n        const fpsDiff = now.getTime() - self.fpsTime.getTime();\r\n        const seconds = fpsDiff / 1000;\r\n        if (seconds > 1) {\r\n          self.fps = self.fpsCounter / seconds;\r\n          //console.log('fps', self.fpsCounter, seconds, source, self.fps);\r\n          self.fpsCounter = 0;\r\n          self.fpsTime = now;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  imageReady(){\r\n    if (this.firstLoad){\r\n        this.firstLoad=false;\r\n        this.imageLoaded.emit(true);\r\n    }\r\n  }\r\n}","<img (load)=\"imageReady()\" class=\"camImage\" [attr.src]=\"streamData\" [style.height.%]=\"height\" [style.width.%]=\"width\">\r\n","import { Component, Input, OnInit, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { Observable, fromEvent, BehaviorSubject, combineLatest, Subject } from 'rxjs';\r\nimport { NumberValue } from 'kervi-js';\r\nimport * as nipplejs from 'nipplejs';\r\nimport { takeUntil, tap, switchMap, publishReplay, refCount, take, map, delay, repeat, mergeMap, debounceTime } from 'rxjs/operators';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n//declare var nipplejs: any;\r\n\r\n@Component({\r\n  selector: 'kervi-nipple-pad',\r\n  templateUrl: './nipple-pad.component.html',\r\n  styleUrls: ['./nipple-pad.component.css']\r\n})\r\nexport class NipplePadComponent implements OnInit, AfterViewInit {\r\n    @Input() XValue: NumberValue;\r\n    @Input() YValue: NumberValue;\r\n    @Input() autoCenter: boolean;\r\n    @Input() mode = 'semi';\r\n\r\n\r\n    private XMin = 0;\r\n    private XMax = 0;\r\n    private YMin = 0;\r\n    private YMax = 0;\r\n    @ViewChild('nipplePad') nipplePad;\r\n    private manager: nipplejs.JoystickManager;\r\n    private moveDelayTimer = null;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n    ngAfterViewInit() {\r\n        const self = this;\r\n        this.XMax = this.XValue != null ? this.XValue.maxValue : 0;\r\n        this.XMin = this.XValue != null ? this.XValue.minValue : 0;\r\n        this.YMax = this.YValue != null ? this.YValue.maxValue : 0;\r\n        this.YMin = this.XValue != null ? this.YValue.minValue : 0;\r\n        console.log('np', this.nipplePad, this.nipplePad.nativeElement);\r\n        this.manager = nipplejs.create( {\r\n            zone: this.nipplePad.nativeElement,\r\n            position: {left: '50%', top: '50%'},\r\n            mode: 'semi',\r\n            restJoystick: this.autoCenter\r\n        });\r\n\r\n        this.manager.on('start',  (evt, nipple) => {\r\n            console.log('np start', nipple);\r\n          });\r\n\r\n        this.manager.on('move',  (evt, nipple) => {\r\n            console.log('np move', nipple);\r\n            const x = nipple.vector.x;\r\n            const y = nipple.vector.y;\r\n            if (self.moveDelayTimer) {\r\n                clearTimeout(self.moveDelayTimer);\r\n            }\r\n            self.moveDelayTimer = setTimeout(function () {\r\n                if (self.XValue) {\r\n                  let valueX = 0;\r\n                    if (x < 0) {\r\n                        valueX = self.XMin * x;\r\n                    } else if (x > 0) {\r\n                        valueX = self.XMax * x;\r\n                    }\r\n                    self.XValue.set(valueX);\r\n                }\r\n\r\n                if (self.YValue) {\r\n                    let valueY = 0;\r\n                      if (y < 0) {\r\n                          valueY = self.YMin * y;\r\n                      } else if (y > 0) {\r\n                          valueY = self.YMax * y;\r\n                      }\r\n                      self.YValue.set(valueY);\r\n                  }\r\n              }, 0);\r\n          });\r\n\r\n        this.manager.on('end',  (evt, nipple) => {\r\n            console.log('np end', nipple);\r\n            if (self.autoCenter) {\r\n                if (self.XValue) {\r\n                    self.XValue.set(0);\r\n                }\r\n                if (self.YValue) {\r\n                    self.YValue.set(0);\r\n                }\r\n            }\r\n          });\r\n      }\r\n}\r\n","<div #nipplePad class=\"nipple-pad\" style=\"width:100%; height:100%;position: relative;\">\r\n    \r\n</div>","<ng-container *ngIf=\"isBackground && camera!==null\">\r\n\t<div #videoViewer id=\"video-viewer\" class=\"video video-background\" style=\"text-align:center;position:fixed;top:60px;left:0px;height:100%;\" [style.height.px]=\"camHeight\" [style.width.px]=\"camWidth\">\r\n\t\t<div style=\"position:fixed;z-index:3000\" *ngIf=\"streamObservers.length > 0\">\r\n\t\t\t<button (click)=\"changeSource(cameraSource)\" >base</button>\r\n\t\t\t<button *ngFor=\"let observer of streamObservers\" (click)=\"changeSource(observer.ui.stream)\"> {{ observer.name}}</button>\t\t\t\r\n\t\t</div>\r\n\t\t<span class=\"camImage\" style=\"top:0px;left:0px;\">\r\n\t\t\t<kervi-mpeg-viewer (imageLoaded)=\"imageLoaded()\" [height]=100   [cameraSource]=\"selectedSource\" > </kervi-mpeg-viewer>\r\n\t\t</span>\r\n\t\t<canvas id=\"camCanvas\" style=\"position:absolute;top:0px;left:0px;\" [style.height.px]=\"camHeight\" [style.width.px]=\"camWidth\"></canvas>\r\n\t\t<canvas id=\"poiCanvas\" style=\"position:absolute;top:0px;left:0px;width:100%;height:100%\"></canvas>\r\n\t\t<div class=\"cam-pad-area\" *ngIf=\"showCamPad\" [style.left.%]=\"33\" [style.top.px]=\"0\" [style.bottom.px]=\"0\" [style.right.%]=\"33\" style=\"position:absolute;z-index: 2000\">\r\n\t\t\t<kervi-nipple-pad [XValue]=\"pan\" [YValue]=\"tilt\"> </kervi-nipple-pad>\r\n\t\t</div>\r\n\t\t<div style=\"position:absolute;top:30px;left:0px;width:100%;height:50px\">\r\n\t\t\t<ng-container  *ngFor=\"let action of camera.actions\">\r\n\t\t\t\t<kervi-action title=\"{{( action.name | translate)}}\" *ngIf=\"action.visible\" [action]=\"action\" ></kervi-action>\r\n\t\t\t</ng-container>\r\n\t\t</div>\r\n\t</div>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"!isBackground && camera!==null\">\r\n\t<div #videoViewer id=\"video-viewer\" class=\"video\" style=\"overflow:hidden;position:relative;width:100%\">\r\n\t\t<span class=\"camImage\" style=\"top:0px;left:0px;height:100%;width:100%\">\r\n\t\t\t<kervi-mpeg-viewer (imageLoaded)=\"imageLoaded()\" [width]=100  [cameraSource]=\"cameraSource\" > </kervi-mpeg-viewer>\r\n\t\t</span>\r\n\t\t<canvas id=\"camCanvas\" style=\"position:absolute;top:0px;left:0px;width:100%;height:100%\"></canvas>\r\n\t\t<canvas id=\"poiCanvas\" style=\"position:absolute;top:0px;left:0px;width:100%;height:100%\"></canvas>\r\n\t\t<div class=\"cam-pad-area\" *ngIf=\"showCamPad\" [style.left.px]=\"0\" [style.top.px]=\"0\" [style.bottom.px]=\"0\" [style.right.px]=\"0\" style=\"position:absolute\">\r\n     \t\t<kervi-nipple-pad [XValue]=\"pan\" [YValue]=\"tilt\" [mode]=\"'static'\"> </kervi-nipple-pad>\r\n\t\t</div>\r\n\t</div>\r\n\t<div>\r\n\t\t<ng-container  *ngFor=\"let action of camera.actions\">\r\n\t\t\t<kervi-action *ngIf=\"action.ui.visible\" title=\"{{( action.name | translate)}}\" [action]=\"action\" ></kervi-action>\r\n\t\t</ng-container>\r\n\t\t<!-- <button class=\"btn btn-primary\" (mousedown)=\"imageViewer.show()\" title=\"{{( 'media_folder' | translate)}}\">\r\n\t\t\t<i  class='fa fa-folder'></i>\r\n\t\t</button> -->\r\n\t</div>\r\n</ng-container>\r\n<!-- <kervi-image-viewer #imageViewer [camComponent]=\"this\" [cameraSource]=\"cameraSource\"></kervi-image-viewer> -->","import { Component, ElementRef, OnInit, AfterViewInit, ViewChild, Input } from '@angular/core';\r\nimport { KerviCameraComponent } from 'ngx-kervi';\r\ndeclare var window: any;\r\n\r\n@Component({\r\n  selector: 'kervi-cam-viewer',\r\n  templateUrl: './cam-viewer.component.html',\r\n  styleUrls: ['./cam-viewer.component.css']\r\n})\r\nexport class CamViewerComponent extends KerviCameraComponent implements OnInit, AfterViewInit {\r\n  public camHeight: number;\r\n  public camWidth: number;\r\n  public camPadLeft: number;\r\n  public camPadTop: number;\r\n  public showCamPad = false;\r\n  @ViewChild('videoViewer') videoViewer: ElementRef;\r\n  padSize = 180;\r\n  constructor(private elementRef: ElementRef) {\r\n    super();\r\n  }\r\n\r\n  imageLoaded() {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const self = this;\r\n    if (this.camera !== null) {\r\n      const element = self.videoViewer.nativeElement;\r\n      const viewPortHeight = window.innerHeight;\r\n      const viewPortWidth = window.innerWidth;\r\n\r\n      this.camHeight = viewPortHeight - 65;\r\n      this.camWidth = viewPortWidth;\r\n      console.log('avic', this.camHeight, this.camWidth);\r\n\r\n      setTimeout(() => {\r\n\r\n        const h = element.offsetHeight;\r\n        const w = element.offsetWidth;\r\n        if (w < self.padSize) {\r\n          self.padSize = w - 10;\r\n        }\r\n        console.log('cami', h, w, self.padSize, element);\r\n        self.camPadTop = h / 2 - (self.padSize / 2);\r\n        self.camPadLeft =  w / 2 - (self.padSize / 2);\r\n        self.showCamPad = true;\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ngOnInitCamera();\r\n  }\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { NumberValue, DashboardSizes   } from 'kervi-js';\r\nimport { NGXKerviService, KerviTemplateService } from 'ngx-kervi';\r\nimport { asapScheduler } from 'rxjs';\r\n\r\ndeclare var ApexCharts: any;\r\n\r\n@Component({\r\n  selector: 'kervi-gauge',\r\n  templateUrl: './gauge.component.html',\r\n  styleUrls: ['./gauge.component.scss'],\r\n})\r\n\r\nexport class GaugeComponent implements OnInit {\r\n  @Input() value: NumberValue = null;\r\n  @Input() linkParameters: any = null;\r\n  @Input() type: string;\r\n  @Input() size:number;\r\n  @Input() dashboardSizes:DashboardSizes = new DashboardSizes();\r\n  @ViewChild('chart') private chartElement: ElementRef;\r\n  private series=[];\r\n  private chartObj: any;\r\n  private options:any;\r\n  constructor(private kerviService:NGXKerviService, private templateService:KerviTemplateService ) {\r\n\r\n  }\r\n\r\n  private createElement(){\r\n    this.series = [this.value.value]\r\n\r\n    this.options ={\r\n      chart: {\r\n        type: 'radialBar',\r\n        height: this.linkParameters.gaugeSize\r\n      },\r\n      plotOptions: {\r\n        radialBar: {\r\n          startAngle: -135,\r\n          endAngle:135,  \r\n          hollow: {\r\n            size: '70%',\r\n          },\r\n          \r\n          track:{\r\n            startAngle: -135,\r\n            endAngle: 135,\r\n          },\r\n          dataLabels: {\r\n            name: {\r\n              show: true,\r\n              color: this.color(\"color\",\".kervi-gauge-text\"),\r\n              fontSize:\"14px\"\r\n            },\r\n            value: {\r\n              fontSize: \"24px\",\r\n              color: this.color(\"color\",\".kervi-gauge-text\"),\r\n              show: true\r\n            }\r\n          }\r\n        } \r\n      },\r\n      colors: [this.color(\"color\",\".kervi-gauge\")],// ['#9fd037'],\r\n      series: this.series,\r\n      stroke: {\r\n        lineCap: \"round\"\r\n      },\r\n      labels: [this.value.name],\r\n\r\n    }\r\n  \r\n    if (this.chartObj) {\r\n      this.chartObj.destroy();\r\n    }\r\n    console.log(\"create gauge\", this.value.id);\r\n    this.chartObj = new ApexCharts(\r\n      this.chartElement.nativeElement,\r\n      this.options\r\n    );\r\n    this.chartObj.render();\r\n  }\r\n\r\n  public render(): Promise<void> {\r\n    return this.chartObj.render();\r\n  }\r\n\r\n  private color(style,selector){\r\n    return this.templateService.getColor(style,selector);\r\n  }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    asapScheduler.schedule(() => {\r\n      this.createElement();\r\n    });\r\n\r\n    this.value.value$.subscribe(function(v){\r\n      if (self.chartObj && v){\r\n        // console.log(\"gv\", v);\r\n        self.chartObj.updateSeries( [v]);\r\n      }\r\n    });\r\n  }\r\n\r\n  public loadPeriod(){\r\n    var self = this;\r\n    //console.log(\"lp\", this.periodStart, this.periodEnd);\r\n    //this.kerviService.spine.sendQuery(\"getSensorData\", this.value.id, this.periodStart.toISOString(), this.periodEnd.toISOString(), function (results) {\r\n        //console.log(\"gsd\", results);\r\n        //var sensorData = results;\r\n        //self.chartData.length = 0;\r\n        //for (var i = 0; (i < sensorData.length); i++) {\r\n          //var dataItem = sensorData[i]\r\n          //self.chartData.push({ x: new Date(dataItem.ts + \" utc\"), y: dataItem.value });\r\n        //}\r\n        //self.chart.render();\r\n        //self.chart.update();\r\n    //});\r\n  }\r\n\r\n  private cleanData(){\r\n    // if(this.updateChart){\r\n    //   var doClean = true;\r\n    //   var limitTS = this.getPeriodLimit();\r\n    //   var ds = this.chart.data.datasets[0].data\r\n    //   while ( ds.length>0 && doClean){\r\n    //     if (ds[0].x < limitTS)\r\n    //       ds.shift();\r\n    //     else\r\n    //       doClean = false\r\n    //   }\r\n    // }\r\n  }\r\n}","<div #chart></div>","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { NumberValue, DashboardSizes   } from 'kervi-js';\r\nimport { NGXKerviService, KerviTemplateService } from 'ngx-kervi';\r\nimport { asapScheduler } from 'rxjs';\r\n\r\ndeclare var ApexCharts: any;\r\n\r\n@Component({\r\n  selector: 'kervi-chart',\r\n  templateUrl: './chart.component.html',\r\n  styleUrls: ['./chart.component.scss'],\r\n})\r\n\r\nexport class KerviChartComponent implements OnInit {\r\n  @Input() value: NumberValue = null;\r\n  @Input() linkParameters: any = null;\r\n  @Input() type: string;\r\n  @Input() size:number;\r\n  @Input() dashboardSizes:DashboardSizes = new DashboardSizes();\r\n  @ViewChild('chart') private chartElement: ElementRef;\r\n  private series=[];\r\n  private chartObj: any;\r\n  private options:any;\r\n  constructor(private kerviService:NGXKerviService, private templateService:KerviTemplateService ) {\r\n\r\n  }\r\n  \r\n  private createElement(){\r\n    this.series= [\r\n    {\r\n        name: this.value.name,\r\n        data: [ ]\r\n    }]\r\n\r\n    \r\n    this.options ={\r\n      chart: {\r\n          id: \"chart_\" + this.value.id,\r\n          width:\"100%\",\r\n          height:300,\r\n          type: this.linkParameters.chartType,\r\n          animations: {\r\n            enabled: true,\r\n            easing: 'linear',\r\n            dynamicAnimation: {\r\n              speed: 100\r\n            }\r\n          },\r\n          toolbar: {\r\n            show: false,\r\n            tools: {\r\n              download: true,\r\n              selection: true,\r\n              zoom: true,\r\n              zoomin: true,\r\n              zoomout: true,\r\n              pan: true,\r\n              reset: true ,\r\n              customIcons: []\r\n            },\r\n            autoSelected: 'zoom' \r\n          },\r\n          zoom: {\r\n            enabled: true\r\n          }\r\n        },\r\n      dataLabels: {\r\n          enabled: false\r\n        },\r\n      stroke: {\r\n          curve: 'smooth',\r\n          width:1\r\n        },\r\n\r\n      title: {\r\n          text: this.linkParameters.chartTitle,\r\n          align: 'left',\r\n          style: {\r\n            color: this.color(\"color\",\".kervi-chart-axis\")//\"#6c757d \",\r\n          }\r\n        },\r\n      markers: {\r\n          size: 0\r\n        },\r\n      xaxis: {\r\n          type: 'datetime',\r\n          labels: {\r\n            \r\n            style: {\r\n              colors: this.color(\"color\",\".kervi-chart-axis\")//\"#6c757d \",\r\n            }\r\n          },\r\n          axisBorder: {\r\n            show: true,\r\n            color: this.color(\"color\",\".kervi-chart-axis\"),\r\n            height: 1,\r\n            width: '100%',\r\n            offsetX: 0,\r\n            offsetY: 0\r\n        }\r\n          //range: 1552983230 - 300,\r\n      },\r\n      yaxis: {\r\n          max: this.value.maxValue,\r\n          min:this.value.minValue,\r\n          labels: {\r\n            \r\n            style: {\r\n              colors: this.color(\"color\",\".kervi-chart-axis\"),\r\n            }\r\n          },\r\n        },\r\n      legend: {\r\n          show: false\r\n      },\r\n      grid: {\r\n        show: this.linkParameters.chartGrid,\r\n        borderColor: this.color(\"color\",\".kervi-chart-grid\"),\r\n        xaxis: {\r\n          lines: {\r\n            show: true,\r\n            animate: true\r\n          }\r\n        },\r\n        yaxis: {\r\n          lines: {\r\n            show: true,\r\n            animate: true\r\n          }\r\n        }\r\n      },\r\n      colors: [this.color(\"color\",\".kervi-chart-line\")],// ['#9fd037'],\r\n      series: this.series\r\n    }\r\n  \r\n    if (this.chartObj) {\r\n      this.chartObj.destroy();\r\n    }\r\n\r\n    if (!this.linkParameters.chartTitle)\r\n      delete(this.options[\"title\"]);\r\n\r\n    console.log(\"create chart\", this.value.id);\r\n    this.chartObj = new ApexCharts(\r\n      this.chartElement.nativeElement,\r\n      this.options\r\n    );\r\n    this.chartObj.render();\r\n  }\r\n\r\n  private color(style,selector){\r\n    return this.templateService.getColor(style,selector);\r\n  }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    asapScheduler.schedule(() => {\r\n      this.createElement();\r\n    });\r\n\r\n    this.value.value$.subscribe(function(v){\r\n      if (self.chartObj){\r\n        self.series[0].data.push([ self.value.valueTS.getTime(), v ]);\r\n        self.chartObj.updateSeries( self.series);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  public loadPeriod(){\r\n    var self = this;\r\n    //console.log(\"lp\", this.periodStart, this.periodEnd);\r\n    //this.kerviService.spine.sendQuery(\"getSensorData\", this.value.id, this.periodStart.toISOString(), this.periodEnd.toISOString(), function (results) {\r\n        //console.log(\"gsd\", results);\r\n        //var sensorData = results;\r\n        //self.chartData.length = 0;\r\n        //for (var i = 0; (i < sensorData.length); i++) {\r\n          //var dataItem = sensorData[i]\r\n          //self.chartData.push({ x: new Date(dataItem.ts + \" utc\"), y: dataItem.value });\r\n        //}\r\n        //self.chart.render();\r\n        //self.chart.update();\r\n    //});\r\n  }\r\n\r\n  private cleanData(){\r\n    // if(this.updateChart){\r\n    //   var doClean = true;\r\n    //   var limitTS = this.getPeriodLimit();\r\n    //   var ds = this.chart.data.datasets[0].data\r\n    //   while ( ds.length>0 && doClean){\r\n    //     if (ds[0].x < limitTS)\r\n    //       ds.shift();\r\n    //     else\r\n    //       doClean = false\r\n    //   }\r\n    // }\r\n  }\r\n}","<div #chart></div>","<ng-container *ngIf=\"widgetType=='value'\">\r\n    <div fxLayout=\"row\" *ngIf=\"!inline\" class=\"kervi-block-widget\"> \r\n        <div fxFlex=\"60\" class=\"kervi-value-label\">\r\n            <!-- <i nz-icon nzType=\"bulb\" nzTheme=\"outline\"></i> -->\r\n            <i nz-icon  *ngIf=\"linkParameters.labelIcon\" [nzType]=\"linkParameters.labelIcon\"></i>\r\n            <span  *ngIf=\"linkParameters.label\">{{linkParameters.label}}</span>\r\n        </div>\r\n        \r\n        <div fxFlex class=\"kervi-value-section\">\r\n            <kervi-value *ngIf=\"component.componentType=='KerviValue'\" [value]=\"component\" [inline]=\"false\" [dashboardSizes]=\"dashboardSizes\"  [linkParameters]=\"linkParameters\"></kervi-value>\r\n            <kervi-action  *ngIf=\"component.componentType=='action'\" [action]=\"component\" [inline]=\"false\" [dashboardSizes]=\"dashboardSizes\"  [linkParameters]=\"linkParameters\"></kervi-action>\r\n        </div>\r\n            \r\n    </div>\r\n\r\n    <div *ngIf=\"inline\" class=\"kervi-inline-widget\">\r\n        <div class=\"kervi-value-label\"> \r\n            <i nz-icon style=\"display:inline\"  *ngIf=\"linkParameters.labelIcon\" [nzType]=\"linkParameters.labelIcon\"></i>\r\n            <span style=\"display:inline\"  *ngIf=\"linkParameters.label\"  >{{linkParameters.label}}</span>\r\n        </div>\r\n        <div class=\"kervi-value-section\">\r\n            <kervi-value *ngIf=\"component.componentType=='KerviValue'\" [value]=\"component\" [inline]=\"false\" [dashboardSizes]=\"dashboardSizes\"  [linkParameters]=\"linkParameters\"></kervi-value>\r\n            <kervi-action  *ngIf=\"component.componentType=='action'\" [action]=\"component\" [inline]=\"false\" [dashboardSizes]=\"dashboardSizes\"  [linkParameters]=\"linkParameters\"></kervi-action>\r\n        </div>\r\n    </div>\r\n</ng-container>    \r\n<ng-container *ngIf=\"widgetType=='camera'\" class=\"block-component\" >\r\n    <kervi-cam-viewer [isBackground]=\"false\" [camera]=\"component\" [linkParameters]=\"linkParameters\"></kervi-cam-viewer>\r\n</ng-container>\r\n    \r\n    \r\n<ng-container *ngIf=\"widgetType=='gauge'\" class=\"block-component\" >\r\n    <kervi-gauge [dashboardSizes]=\"dashboardSizes\" [value]=\"component\" [linkParameters]=\"linkParameters\"></kervi-gauge>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"widgetType=='chart'\" class=\"\" >\r\n    <kervi-chart [dashboardSizes]=\"dashboardSizes\" [value]=\"component\" [linkParameters]=\"linkParameters\" ></kervi-chart>\r\n</ng-container>","import { Component, OnInit } from '@angular/core';\r\nimport { KerviWidgetComponent } from 'ngx-kervi'\r\n\r\n@Component({\r\n  selector: 'kervi-widget',\r\n  templateUrl: \"./widget.component.html\",\r\n  styles: []\r\n})\r\nexport class WidgetComponent extends KerviWidgetComponent implements OnInit {\r\n  constructor() {\r\n    super();\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.ngOnInitWidget();\r\n  }\r\n\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { KerviUserLogComponent } from 'ngx-kervi';\r\n//import { TemplateService } from '../../template.service';\r\n\r\n@Component({\r\n  selector: 'kervi-user-log',\r\n  templateUrl: './user-log.component.html',\r\n  styleUrls: ['./user-log.component.scss'],\r\n})\r\n\r\nexport class UserLogComponent extends KerviUserLogComponent implements OnInit {\r\n    constructor() {\r\n        super(); \r\n    \r\n    }\r\n\r\n  ngOnInit() {\r\n    this.ngOnInitUserLog(); \r\n  }\r\n\r\n  \r\n  \r\n}","<nz-timeline >\r\n    <nz-timeline-item [nzDot]=\"message.level==1 ? dotTemplate1 :  message.level==2 ? dotTemplate2 : dotTemplate3\" *ngFor=\"let message of messages$ | async\">\r\n            <strong>{{message.sourceName}}</strong><br>\r\n            <span style=\"font-size:80%\">{{message.timestamp | date: 'HH:mm:ss'}}</span><br>    \r\n            {{message.topic}}\r\n            <nz-divider></nz-divider>\r\n    </nz-timeline-item>\r\n</nz-timeline>\r\n<ng-template #dotTemplate1>\r\n    <i nz-icon type=\"close-circle\" style=\"font-size: 16px;\" [nzTheme]=\"'twotone'\" [nzTwotoneColor]=\"'#f5222d'\"></i>\r\n</ng-template>\r\n<ng-template #dotTemplate2>\r\n    <i nz-icon type=\"warning\" style=\"font-size: 16px;\" [nzTheme]=\"'twotone'\" [nzTwotoneColor]=\"'#faad14'\"></i>\r\n</ng-template>\r\n<ng-template #dotTemplate3>\r\n    <i nz-icon nz-icon type=\"check-circle\" [nzTheme]=\"'twotone'\" [nzTwotoneColor]=\"'#52c41a'\" style=\"font-size: 16px;\"></i>\r\n</ng-template>","// Copyright (c) 2019, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { KerviAppHealthComponent } from 'ngx-kervi';\r\n//import { TemplateService } from '../../template.service';\r\n\r\n@Component({\r\n  selector: 'kervi-app-health',\r\n  templateUrl: './app-health.component.html',\r\n  styleUrls: ['./app-health.component.scss'],\r\n})\r\n\r\nexport class AppHealthComponent extends KerviAppHealthComponent implements OnInit {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.ngOnInitAppHealth();\r\n  }\r\n}","<div fxLayout=\"row\" *ngIf=\"!inline\" class=\"kervi-block-widget\"> \r\n    <div fxFlex=\"60\" class=\"kervi-value-label\">\r\n        web socket messages \r\n    </div>\r\n    \r\n    <div fxFlex class=\"kervi-value-section\">\r\n        <span class=\"value-value\" >\r\n            <!-- <i *ngIf=\"currentIcon\" class=\"fa fa-{{currentIcon}}\"></i> -->\r\n            <!-- <value-sparkline [value]=\"value\"></value-sparkline> -->\r\n            {{mps}}\r\n        </span>\r\n    </div>\r\n        \r\n</div>\r\n\r\n<div fxLayout=\"row\" *ngIf=\"!inline\" class=\"kervi-block-widget\"> \r\n    <div fxFlex=\"60\" class=\"kervi-value-label\">\r\n        Ping diff \r\n    </div>\r\n    \r\n    <div fxFlex class=\"kervi-value-section\">\r\n        <span class=\"value-value\" >\r\n            <!-- <i *ngIf=\"currentIcon\" class=\"fa fa-{{currentIcon}}\"></i> -->\r\n            <!-- <value-sparkline [value]=\"value\"></value-sparkline> -->\r\n            {{pingDiff}}\r\n        </span>\r\n    </div>\r\n        \r\n</div>\r\n\r\n<div fxLayout=\"row\" *ngIf=\"!inline\" class=\"kervi-block-widget\"> \r\n    <div fxFlex=\"60\" class=\"kervi-value-label\">\r\n        Ping delay \r\n    </div>\r\n    \r\n    <div fxFlex class=\"kervi-value-section\">\r\n        <span class=\"value-value\" >\r\n            <!-- <i *ngIf=\"currentIcon\" class=\"fa fa-{{currentIcon}}\"></i> -->\r\n            <!-- <value-sparkline [value]=\"value\"></value-sparkline> -->\r\n            {{pingDelay}}\r\n        </span>\r\n    </div>\r\n        \r\n</div>","<!-- <p>{{panel.name}} - {{panel.type}} - {{groupLayout}} - {{bodyOnly}} - {{inline}} - {{panel.subPanels.length}} - {{panel.components.length}} - {{headerComponents.length}} - {{bodyComponents.length}}</p> -->\r\n<!-- <p>w={{width}} - {{inGroup}}</p> -->\r\n<!-- {{ panel.parameters | json}} -->\r\n<ng-container *ngIf=\"panel.type=='group'\">\r\n    <div class=\"kervi-panel-deck\" [fxLayout]=\"panel.parameters.layout\" fxLayout.xs=\"column\"  fxLayoutGap=\"0.5%\">\r\n        <ng-container *ngFor=\"let subPanel of panel.subPanels\">\r\n            <ng-container *ngIf=\"subPanel.type!='group'\">\r\n                        <kervi-dashboard-panel fxFlex.xs=\"100\" [fxFlex]=\"subPanel.parameters.width\" [bodyOnly]=\"true\" [inGroup]=\"true\" [dashboardSizes]=\"dashboardSizes\"  [panel]=\"subPanel\"></kervi-dashboard-panel>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"subPanel.type=='group'\">\r\n                    <kervi-dashboard-panel fxFlex.xs=\"100\" [fxFlex]=\"subPanel.parameters.width\" [inGroup]=\"true\" [dashboardSizes]=\"dashboardSizes\"  [panel]=\"subPanel\"></kervi-dashboard-panel>\r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"panel.type!='group' && !inline\">\r\n    \r\n    <nz-card  [nzTitle]=\"showHeader ? title : null\" [nzExtra]=\"headerComponents.length>0 ? extraTemplate : null\">\r\n        \r\n        <ng-template #extraTemplate>\r\n            <ng-container *ngFor=\"let panelComponent of headerComponents\">\r\n                        <kervi-widget [component]=\"panelComponent.component\" [dashboardPanel]=\"panel\" [inline]=\"inline\"  [linkParameters]=\"panelComponent.parameters\"></kervi-widget>\r\n            </ng-container>\r\n        </ng-template>\r\n        <ng-container *ngFor=\"let panelComponent of bodyComponents\">\r\n            <kervi-widget [component]=\"panelComponent.component\" [dashboardPanel]=\"panel\"  [inline]=\"inline\"  [linkParameters]=\"panelComponent.parameters\"></kervi-widget>\r\n        </ng-container>\r\n    \r\n        <div *ngIf=\"panel.parameters.userLog\"  >\r\n            \r\n            <kervi-user-log></kervi-user-log>\r\n        </div>\r\n        <div *ngIf=\"panel.parameters.appHealth\"  >\r\n            \r\n            <kervi-app-health></kervi-app-health>\r\n        </div> \r\n    </nz-card>\r\n</ng-container>\r\n\r\n<ng-template [ngIf]=\"inline && panel.components.length>0\" >\r\n    <ng-container *ngFor=\"let panelComponent of panel.components\" >\r\n        <kervi-widget [component]=\"panelComponent.component\"  [inline]=\"inline\" [dashboardPanel]=\"panel\"  [linkParameters]=\"panelComponent.parameters\"></kervi-widget>\r\n    </ng-container>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { KerviDashboardPanelComponent } from 'ngx-kervi'\r\nimport { group } from '@angular/animations';\r\n@Component({\r\n  selector: 'kervi-dashboard-panel',\r\n  templateUrl: './dashboard-panel.component.html',\r\n  styleUrls: ['./dashboard-panel.component.css']\r\n})\r\nexport class DashboardPanelComponent extends KerviDashboardPanelComponent {\r\n  public groupLayout=\"row\";\r\n  constructor() {\r\n    super();\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.ngOnInitPanel();\r\n    if (this.panel.hasOnlyGroupPanels)\r\n      this.groupLayout = \"row\";\r\n  }\r\n\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, Input, Output, EventEmitter, OnInit, ElementRef } from '@angular/core';\r\nimport { DashboardSizes } from 'kervi-js'\r\nimport { KerviTemplateService } from 'ngx-kervi'\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n  selector: 'ui-slider',\r\n  templateUrl: './slider.component.html',\r\n  styleUrls: ['./slider.component.scss']\r\n})\r\nexport class SliderComponent implements OnInit {\r\n  @Input() value = 0;\r\n  @Input() type = \"horizontal_slider\";\r\n  @Input() tick: number;\r\n  @Input() linkParameters: any;\r\n  @Input() defaultSizes: DashboardSizes = new DashboardSizes();\r\n  @Input() maxValue: number;\r\n  @Input() minValue: number;\r\n  @Output() sliderChanged = new EventEmitter();\r\n\r\n  private marks = {};\r\n\r\n  constructor(private elementRef: ElementRef, private templateService:KerviTemplateService) { \r\n    //console.log(\"cnio\",this);\r\n  }\r\n\r\n  private color(style,selector){\r\n    return this.templateService.getColor(style,selector);\r\n  }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n\r\n  }\r\n\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, Input, ElementRef, ChangeDetectionStrategy } from '@angular/core';\r\n@Component({\r\n  selector: 'kervi-icon',\r\n  templateUrl: './icons.component.html',\r\n  styleUrls: ['./icons.component.scss'],\r\n})\r\n\r\nexport class IconsComponent implements OnInit {\r\n  @Input() icon: string = null;\r\n \r\n  constructor() {  \r\n  }\r\n\r\n  \r\n  \r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n  \r\n}","<i class=\"pi pi-{{icon}}\"></i>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NGXKerviPipesModule  } from 'ngx-kervi';\r\nimport { SparklineComponent } from './sparkline/sparkline.component';\r\nimport { SliderComponent } from './slider/slider.component';\r\nimport { GaugeComponent } from './gauge/gauge.component';\r\nimport { KerviChartComponent } from './chart/chart.component';\r\nimport { SwitchButtonComponent} from './switch-button/switch-button.component';\r\nimport { ButtonComponent} from './button/button.component';\r\nimport { MPEGViewerComponent } from './mpeg-viewer/mpeg-viewer.component';\r\nimport { DateTimeComponent } from './datetimepicker/datetimepicker.component';\r\nimport { IconsComponent } from './icons/icons.component';\r\nimport { NgxGaugeModule } from 'ngx-gauge';\r\nimport { ColorComponent } from './color/color.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { ColorPickerModule } from 'ngx-color-picker';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SparklineComponent,\r\n    SliderComponent,\r\n    IconsComponent,\r\n    GaugeComponent,\r\n    KerviChartComponent,\r\n    SwitchButtonComponent,\r\n    ButtonComponent,\r\n    MPEGViewerComponent,\r\n    DateTimeComponent,\r\n    ColorComponent\r\n  ],\r\n  exports:[\r\n      SparklineComponent,\r\n      SliderComponent,\r\n      IconsComponent,\r\n      MPEGViewerComponent,\r\n      GaugeComponent,\r\n      KerviChartComponent,\r\n      SwitchButtonComponent,\r\n      ButtonComponent,\r\n      DateTimeComponent,\r\n      ColorComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NGXKerviPipesModule,\r\n    CommonModule,\r\n    NgxGaugeModule,\r\n    FormsModule,\r\n    NgZorroAntdModule,\r\n    NgApexchartsModule,\r\n    ColorPickerModule \r\n  ],\r\n  providers: [],\r\n  bootstrap: []\r\n})\r\nexport class UIComponentsModule {\r\n  constructor () {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common'\r\nimport { NumberComponent} from './number-value/number-value.component'\r\nimport { NGXKerviPipesModule  } from 'ngx-kervi'\r\nimport { BooleanComponent} from './boolean-value/boolean-value.component'\r\nimport { StringComponent} from './string-value/string-value.component'\r\nimport { DateTimeComponent} from './datetime-value/datetime-value.component'\r\nimport { ColorComponent} from './color-value/color-value.component'\r\n// import { EnumComponent} from './enum-value/enum-value.component'\r\nimport { UIComponentsModule} from '../ui-components/ui-components.module'\r\nimport { KerviValueComponent } from './kervi-value/kervi-value.component'\r\nimport { FormsModule }    from '@angular/forms';\r\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\r\n@NgModule({\r\n  declarations: [\r\n    NumberComponent,\r\n    BooleanComponent,\r\n    KerviValueComponent,\r\n    StringComponent,\r\n    //EnumComponent,\r\n    DateTimeComponent,\r\n    ColorComponent\r\n  ],\r\n  exports:[\r\n      NumberComponent,\r\n      BooleanComponent,\r\n      KerviValueComponent,\r\n      StringComponent,\r\n      //EnumComponent,\r\n      DateTimeComponent,\r\n      ColorComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NGXKerviPipesModule,\r\n    UIComponentsModule,\r\n    FormsModule,\r\n    NgZorroAntdModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: []\r\n})\r\nexport class ValuesModule {\r\n  constructor (){}\r\n}\r\n","import { Component, Input, OnInit,ElementRef } from '@angular/core';\r\nimport { NumberValue } from \"kervi-js\"\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n  selector: 'kervi-controller-pad',\r\n  templateUrl: './controller-pad.component.html',\r\n  styleUrls: ['./controller-pad.component.css']\r\n})\r\nexport class ControllerPadComponent implements OnInit {\r\n  @Input() XValue:NumberValue;\r\n  @Input() YValue:NumberValue;\r\n  @Input() autoCenter:boolean;\r\n  padSize:number=180;\r\n  private moveDelayTimer = null;\r\n  private inDrag:boolean = false;\r\n  \r\n  constructor(private elementRef:ElementRef) { }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    if (this.XValue){\r\n      jQuery(\"input[name='pad-x']\", self.elementRef.nativeElement).val(this.XValue.value$.value).change();\r\n      this.XValue.value$.subscribe(function (v) {\r\n        console.log(\"pad-x\", self.YValue.name, v);\r\n        jQuery(\"input[name='pad-x']\", self.elementRef.nativeElement).val(v).change();\r\n      });\r\n    }\r\n\r\n    if (this.YValue){\r\n      jQuery(\"input[name='pad-y']\", self.elementRef.nativeElement).val(this.YValue.value$.value).change();        \r\n      this.YValue.value$.subscribe(function (v) {\r\n        console.log(\"pad-y\", self.YValue.name, v);\r\n        jQuery(\"input[name='pad-y']\", self.elementRef.nativeElement).val(v).change();\r\n      });\r\n    }\r\n\r\n    var color = \"rgba(255,255,255,.5)\";\r\n    var p = jQuery('fieldset', self.elementRef.nativeElement).xy({\r\n      displayPrevious: false\r\n      , min: -100\r\n      , max: 100\r\n      , width: self.padSize\r\n      , height: self.padSize\r\n      , fgColor: color\r\n      , bgColor: color\r\n      , change: function (value) {\r\n        if (self.moveDelayTimer) {\r\n          clearTimeout(self.moveDelayTimer);\r\n        }\r\n        \r\n        self.moveDelayTimer = setTimeout(function () {\r\n          if (self.XValue)\r\n            self.XValue.set(value[0]);\r\n          if (self.YValue)\r\n            self.YValue.set(value[1]);\r\n        }, 0);\r\n      }\r\n    })\r\n    .css({ 'border': '2px solid ' + color });  \r\n  }\r\n\r\n  padPress(){\r\n    this.inDrag=true;\r\n  }\r\n\r\n  padRelease(){\r\n    console.log(\"pr\", this.inDrag, this.autoCenter);   \r\n    this.inDrag=false;\r\n       if (this.autoCenter && this.XValue){\r\n         console.log(\"x-auto center\");\r\n         jQuery(\"input[name='pad-x']\", this.elementRef.nativeElement).val(0).change();\r\n         this.XValue.set(0);\r\n       }\r\n       if (this.autoCenter && this.YValue){\r\n        console.log(\"y-auto center\"); \r\n        jQuery(\"input[name='pad-y']\", this.elementRef.nativeElement).val(0).change();\r\n         this.YValue.set(0);\r\n       }\r\n  }\r\n\r\n\r\n}\r\n","<div (mousedown)=\"padPress()\" (mouseup)=\"padRelease()\">\r\n  <fieldset id=\"leftPad\" style=\"position:absolute\" class=\"pad\" [attr.data-width]=\"padSize\" [attr.data-height]=\"padSize\" >\r\n    <legend></legend>\r\n    <input type=\"hidden\" name=\"pad-x\" value=\"0\"><input type=\"hidden\"  name=\"pad-y\" value=\"0\">\r\n  </fieldset>\r\n</div>","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { KerviUserLogComponent } from 'ngx-kervi';\r\nimport { NzNotificationService } from 'ng-zorro-antd';\r\n@Component({\r\n  selector: 'kervi-user-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.scss'],\r\n})\r\n\r\nexport class UserMessagesComponent extends KerviUserLogComponent implements OnInit {\r\n  @ViewChild(TemplateRef) messageTemplate: TemplateRef<{}>;  \r\n  constructor(private notification: NzNotificationService) {\r\n        super(); \r\n        var self = this;\r\n        this.lastMessage$.subscribe(function(message){\r\n          if (message){\r\n            self.notification.template(self.messageTemplate, { nzData: message });\r\n          }\r\n        })\r\n    }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    this.ngOnInitUserLog(); \r\n    \r\n  }\r\n}","<ng-template let-message=\"data\">\r\n    <div class=\"ant-notification-notice-content\">\r\n        <div class=\"ant-notification-notice-with-icon\">\r\n            <span class=\"ant-notification-notice-icon\">\r\n                <i *ngIf=\"message.level==3\" nz-icon type=\"check-circle\" [nzTheme]=\"'twotone'\" [nzTwotoneColor]=\"'#52c41a'\"></i>\r\n                <i *ngIf=\"message.level==2\" nz-icon type=\"warning\" [nzTheme]=\"'twotone'\" [nzTwotoneColor]=\"'#faad14'\"></i>\r\n                <i *ngIf=\"message.level==1\" nz-icon type=\"close-circle\" [nzTheme]=\"'twotone'\" [nzTwotoneColor]=\"'#f5222d'\"></i>\r\n            </span>\r\n            <div class=\"ant-notification-notice-message\">{{message.sourceName}}</div>\r\n            <div class=\"ant-notification-notice-description\">\r\n                {{ message.topic }}                \r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n</ng-template>","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { KerviUserLogComponent } from 'ngx-kervi';\r\n@Component({\r\n  selector: 'kervi-message-button',\r\n  templateUrl: './message-button.component.html',\r\n  styleUrls: ['./message-button.component.scss'],\r\n})\r\n\r\nexport class UserMessageButtonComponent extends KerviUserLogComponent implements OnInit {\r\n  visible = false;\r\n  \r\n  constructor() {\r\n        super(); \r\n    }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    this.ngOnInitUserLog(); \r\n  }\r\n\r\n  open(): void {\r\n    this.visible = true;\r\n  }\r\n\r\n  close(): void {\r\n    this.visible = false;\r\n  }\r\n}","<nz-badge [nzCount]=\"messageCount$ | async\" [nzOverflowCount]=\"99\">\r\n    <button *ngIf=\"(messageCount$ | async)>0\" nz-button nzGhost  nzType=\"default\" nzShape=\"circle\" (click)=\"open()\">\r\n        <i nz-icon nzType=\"notification\" nzTheme=\"twotone\" [nzTwotoneColor]=\"'#9fd037'\"></i>\r\n    </button>\r\n</nz-badge>\r\n\r\n<nz-drawer\r\n      [nzClosable]=\"false\"\r\n      [nzVisible]=\"visible\"\r\n      nzPlacement=\"right\"\r\n      nzTitle=\"Log\"\r\n      (nzOnClose)=\"close()\"\r\n    >\r\n    <kervi-user-log [inline]=\"false\"></kervi-user-log>\r\n</nz-drawer>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\r\nimport { NgxKerviModule, NGXKerviPipesModule  } from 'ngx-kervi'\r\nimport { DashboardPanelComponent } from './dashboard-panel/dashboard-panel.component';\r\nimport { WidgetComponent } from './widget/widget.component';\r\nimport {  ValuesModule } from './values/values.module';\r\n\r\nimport { ControllerPadComponent } from './controller-pad/controller-pad.component';\r\nimport { NipplePadComponent } from './nipple-pad/nipple-pad.component';\r\nimport { CamViewerComponent } from './cam-viewer/cam-viewer.component';\r\nimport { ActionComponent } from './action/action.component';\r\nimport { UIComponentsModule} from './ui-components/ui-components.module';\r\nimport { UserLogComponent} from './log/user-log/user-log.component';\r\nimport { AppHealthComponent} from './app-health/app-health.component';\r\nimport { UserMessagesComponent } from './log/messages/messages.component';\r\nimport { UserMessageButtonComponent } from './log/message-button/message-button.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    NGXKerviPipesModule,\r\n    NgxKerviModule,\r\n    ValuesModule,\r\n    NgZorroAntdModule,\r\n    FlexLayoutModule,\r\n    UIComponentsModule\r\n  ],\r\n  declarations: [\r\n    DashboardPanelComponent,\r\n    WidgetComponent,\r\n    ControllerPadComponent,\r\n    CamViewerComponent,\r\n    ActionComponent,\r\n    UserLogComponent,\r\n    UserMessageButtonComponent,\r\n    UserMessagesComponent,\r\n    AppHealthComponent,\r\n    NipplePadComponent\r\n  ],\r\n  exports: [\r\n    DashboardPanelComponent,\r\n    ControllerPadComponent,\r\n    CamViewerComponent,\r\n    UserLogComponent,\r\n    UserMessageButtonComponent,\r\n    UserMessagesComponent,\r\n    AppHealthComponent,\r\n    NipplePadComponent\r\n  ]\r\n})\r\nexport class KerviZorroModule { }\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { KerviActionComponent } from 'ngx-kervi';\r\n//import { TemplateService } from '../../template.service';\r\n\r\n@Component({\r\n  selector: 'kervi-action',\r\n  templateUrl: './media.component.html',\r\n  styleUrls: ['./media.component.scss'],\r\n})\r\n\r\nexport class ActionComponent extends KerviActionComponent implements OnInit {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n  ngOnInit() {\r\n   this.ngOnInitAction();\r\n  }\r\n}","/*\r\n * Public API Surface of kervi-zorro\r\n */\r\n\r\nexport * from './lib/kervi-zorro.service';\r\nexport * from './lib/kervi-zorro.module';\r\nexport * from './lib/dashboard-panel/dashboard-panel.component';\r\nexport * from './lib/controller-pad/controller-pad.component';\r\nexport * from './lib/app-health/app-health.component';\r\nexport * from './lib/cam-viewer/cam-viewer.component';\r\nexport * from './lib/media/media.component';\r\nexport * from './lib/log/message-button/message-button.component';\r\nexport * from './lib/log/messages/messages.component';\r\nexport * from './lib/log/user-log/user-log.component';\r\n\r\nexport { DashboardPanelComponent } from './lib/dashboard-panel/dashboard-panel.component';\r\nexport { NipplePadComponent } from './lib/nipple-pad/nipple-pad.component'","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n","// Copyright (c) 2019, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\r\nimport { KerviDirectoryComponent } from 'ngx-kervi';\r\nimport { NzFormatEmitEvent, NzTreeNodeOptions, NzTreeComponent } from 'ng-zorro-antd';\r\nimport { ImgViewerComponent } from '../image-viewer/image-viewer.component';\r\n\r\n@Component({\r\n  selector: 'app-media',\r\n  templateUrl: './media.component.html',\r\n  styleUrls: ['./media.component.css']\r\n})\r\nexport class MediaComponent extends KerviDirectoryComponent implements OnInit {\r\n  @ViewChild('nzTreeComponent') nzTreeComponent: NzTreeComponent;\r\n  @ViewChild('imageViewer', { static: true }) imageViewer: ImgViewerComponent;\r\n  @Input() files = [\r\n\r\n  ];\r\n  showImageViewer = false;\r\n  directoryFiles = {};\r\n\r\n\r\n  @Input() nodes: NzTreeNodeOptions[] = [\r\n    { title: 'root', key: '/' }\r\n  ];\r\n\r\n  defaultExpandedKeys = [];\r\n\r\n  constructor( ) {\r\n    super();\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  nzEvent(event: Required<NzFormatEmitEvent>): void {\r\n    console.log('trev', event);\r\n    const node = event.node;\r\n    if (event.eventName === 'click') {\r\n      this.files = [];\r\n      this.kerviService.GetDirectory(node.key).then( d => {\r\n        const files = d.files$.getValue();\r\n        for(const file of files) {\r\n          if (file.isFile){\r\n            this.kerviService.GetThumbnail(file.path).then( t =>{\r\n              this.files.push( { title: file.name, key: file.path, thumb: t});\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n    if (event.eventName === 'expand') {\r\n      if (node && node.getChildren().length === 0 && node.isExpanded) {\r\n        this.kerviService.GetDirectory(node.key).then( d => {\r\n          const files = d.files$.getValue();\r\n          const dirs = [];\r\n          for(const file of files) {\r\n            if (!file.isFile) {\r\n              dirs.push({ title: file.name, key: file.path, isLeaf: false});\r\n            }\r\n          }\r\n          node.addChildren(dirs);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  showImage(filePath) {\r\n    this.showImageViewer = true;\r\n    this.imageViewer.imgTotal = this.files.length;\r\n    this.kerviService.GetFile(filePath).then( f => {\r\n      this.imageViewer.images = ['data:image/png;base64,' + f];\r\n      this.imageViewer.showImg();\r\n    });\r\n  }\r\n\r\n  nextImage(event){\r\n    console.log(\"ni\", event);\r\n    const filePath = this.files[this.imageViewer.currentImgIndex-1].key;\r\n    this.kerviService.GetFile(filePath).then( f => {\r\n      this.imageViewer.images = ['data:image/png;base64,' + f];\r\n      this.imageViewer.showImg();\r\n    });\r\n  }\r\n\r\n  closeViewer(){\r\n    this.showImageViewer = false;\r\n  }\r\n}\r\n","<div [hidden]=\"!showImageViewer\">\r\n\t<nz-picture-viewer (closeViewer)=\"closeViewer()\" (prevChange)='nextImage($event)' (nextChange)='nextImage($event)' #imageViewer></nz-picture-viewer>\r\n</div>\r\n<div [hidden]=\"showImageViewer\">\r\n\t<div style=\"max-height: 80%;overflow-y: auto; \" nz-col nzSpan=\"8\">\r\n\t\t<nz-tree [nzData]=\"nodes\" [nzExpandedKeys]=\"defaultExpandedKeys\" nzAsyncData (nzClick)=\"nzEvent($event)\" (nzExpandChange)=\"nzEvent($event)\"> </nz-tree>\r\n\t</div>\r\n\t<div style=\"min-height:40px;max-height: 300px;overflow-y: auto; border-left: 1px solid black;\" nz-col nzSpan=\"16\">\r\n\t\t\r\n\t\t<nz-empty *ngIf=\"files.length==0\" nzNotFoundContent=\"No files in folder\"></nz-empty>\r\n\t\t<div (dblclick)=\"showImage(file.key)\"  style=\"display: inline-block;margin-left:5px; margin-bottom:5px;\" *ngFor=\"let file of files\" nzHoverable >\r\n\t\t\t<img alt=\"example\" [attr.src]=\"'data:image/png;base64,' + file.thumb\" />\r\n\t\t</div>\r\n\t\t<!-- <nz-card style=\"display: inline-block;\" *ngFor=\"let file of files\" nzHoverable style=\"width:140px\" >\r\n\t\t\t<img alt=\"example\" [attr.src]=\"'data:image/png;base64,' + file.data\" />\r\n\t\t\t<ng-template #coverTemplate>\r\n\t\t\t\t\r\n\t\t\t</ng-template>\r\n\t\t</nz-card> -->\r\n\t\t\r\n\t</div>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ConnectionState } from \"ngx-kervi\";\r\nimport { NGXKerviService } from \"ngx-kervi\";\r\n@Component({\r\n  selector: 'app-connect',\r\n  templateUrl: './connect.component.html',\r\n  styleUrls: ['./connect.component.css']\r\n})\r\nexport class ConnectComponent implements OnInit {\r\n\r\n  current = 1;\r\n\r\n  constructor(private kerviService:NGXKerviService,) { \r\n    \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    this.kerviService.connectionState$.subscribe(function(connectedState){\r\n      console.log(\"connected service state\",connectedState, self);\r\n      if (connectedState == ConnectionState.disconnected){\r\n        self.current=1\r\n      }\r\n      if (connectedState == ConnectionState.loading){\r\n        self.current=2\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<nz-layout>\r\n    <nz-content class=\"kervi-app-initializing\">\r\n      <div nz-row>\r\n        <div nz-col nzSpan=\"12\" nzOffset=\"9\">\r\n          <nz-steps [nzCurrent]=\"current\" nzDirection=\"vertical\">\r\n            <nz-step nzTitle=\"Initializing\" nzDescription=\"&nbsp;\" nzIcon=\"setting\" ></nz-step>\r\n            <nz-step nzTitle=\"Connecting\" nzDescription=\"&nbsp;\" nzIcon=\"wifi\"></nz-step>\r\n            <nz-step nzTitle=\"Loading dashboards\" nzDescription=\"&nbsp;\" nzIcon=\"download\"></nz-step>\r\n          </nz-steps>\r\n        </div>\r\n      </div>\r\n    </nz-content>\r\n</nz-layout>\r\n","\r\n//based on https://github.com/LZHD/ng-picture-viewer\r\n//Copyright 2019 Tim Wentzlau\r\n// Licensed under MIT\r\nimport {\r\n    AfterViewInit,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Inject,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Optional,\r\n    Output,\r\n    Renderer2\r\n  } from '@angular/core';\r\n  import {DOCUMENT} from '@angular/common';\r\n  import ImageViewer from 'iv-viewer';\r\n  import {FullScreenViewer} from 'iv-viewer';\r\n  import {ImgViewerConfig} from './image-viewer.config';\r\n  import {IvViewerType} from './interfaces/iv-viewer.type';\r\n  import {ImgViewerType} from './interfaces/img-viewer.type';\r\n\r\n  @Component({\r\n    selector: 'nz-picture-viewer',\r\n    templateUrl: './image-viewer.component.html',\r\n    styleUrls: ['./image-viewer.component.scss']\r\n  })\r\n  export class ImgViewerComponent implements OnInit, OnDestroy, AfterViewInit {\r\n    @Input() imgViewerClass: string;\r\n    @Input() images: string[] = [];\r\n    @Input() showOperate = true;\r\n    @Input() zoom = true;\r\n    @Input() rotate = true;\r\n    @Input() reset = true;\r\n    @Input() fullscreen = true;\r\n    @Input() download = true;\r\n    @Input() defaultName = 'download';\r\n    @Output() prevChange: EventEmitter<number> = new EventEmitter<number>();\r\n    @Output() nextChange: EventEmitter<number> = new EventEmitter<number>();\r\n    @Output() closeViewer: EventEmitter<number> = new EventEmitter();\r\n    ROTATE_ANGLE = 90;\r\n    imageViewer$: any;\r\n    fullScreenViewer$: any;\r\n    element: HTMLElement;\r\n    currentImgIndex = 1;\r\n    imgTotal = 0;\r\n    zoomValue = 100;\r\n    isVertical = false;\r\n    imgRotate = 0;\r\n    imgViewerConfig: ImgViewerConfig;\r\n    ivViewerType: IvViewerType;\r\n    imageViewerType: ImgViewerType;\r\n\r\n    constructor(\r\n      private el: ElementRef,\r\n      private renderer: Renderer2,\r\n      @Inject(DOCUMENT) private doc: Document,\r\n      @Optional() private config: ImgViewerConfig\r\n    ) {\r\n      this.element = this.el.nativeElement as HTMLElement;\r\n      this.imgViewerConfig = new ImgViewerConfig();\r\n      this.ivViewerType = this.imgViewerConfig.ivViewerType;\r\n      this.imageViewerType = this.imgViewerConfig.imageViewerType;\r\n      if (this.config && this.config.ivViewerType) {\r\n        this.ivViewerType = Object.assign(this.ivViewerType, this.config.ivViewerType);\r\n      }\r\n      if (this.config && this.config.imageViewerType) {\r\n        this.imageViewerType = Object.assign(this.imageViewerType, this.config.imageViewerType);\r\n      }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n      this.imgTotal = this.images.length;\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n      this.initImgViewer();\r\n    }\r\n\r\n    zoomInImg(): void {\r\n      this.zoomValue += 10;\r\n      this.imageViewer$.zoom(this.zoomValue);\r\n    }\r\n\r\n    zoomOutImg(): void {\r\n      if (this.zoomValue === 100) {\r\n        return;\r\n      }\r\n      this.zoomValue -= 10;\r\n      if (this.zoomValue < 0) {\r\n        this.zoomValue = 0;\r\n      }\r\n      this.imageViewer$.zoom(this.zoomValue);\r\n    }\r\n\r\n    rotateImg(isClockwise: boolean): void {\r\n      this.beforeRotateImg().then((time: number) => {\r\n        if (isClockwise) {\r\n          this.imgRotate += this.ROTATE_ANGLE;\r\n        } else {\r\n          this.imgRotate -= this.ROTATE_ANGLE;\r\n        }\r\n        this.isVertical = !this.isVertical;\r\n        time <= 0 ? this.addImgRotate() : setTimeout(() => this.addImgRotate(), time);\r\n      });\r\n    }\r\n\r\n    fullscreenImg(): void {\r\n      this.beforeRotateImg().then((time: number) => {\r\n        if (time <= 0) {\r\n          this.fullScreenViewer$.show(this.images[this.currentImgIndex - 1]);\r\n          this.addImgRotate(false);\r\n        } else {\r\n          setTimeout(() => {\r\n            this.fullScreenViewer$.show(this.images[this.currentImgIndex - 1]);\r\n            this.addImgRotate(false);\r\n          }, time);\r\n        }\r\n      });\r\n    }\r\n\r\n    downloadImg(): void {\r\n      const download = this.renderer.createElement('a');\r\n      this.renderer.setAttribute(download, 'download', `${this.defaultName}-${this.currentImgIndex}`);\r\n      this.renderer.setAttribute(download, 'display', 'none');\r\n      this.renderer.setAttribute(download, 'href', this.images[this.currentImgIndex - 1]);\r\n      this.renderer.setAttribute(download, 'target', '_blank');\r\n      this.renderer.appendChild(this.element, download);\r\n      download.click();\r\n      this.renderer.removeChild(this.renderer, download);\r\n    }\r\n\r\n    prevImg(): void {\r\n      this.isVertical = false;\r\n      this.currentImgIndex--;\r\n      if (this.currentImgIndex <= 0) {\r\n        this.currentImgIndex = this.imgTotal;\r\n      }\r\n      //this.showImg();\r\n      this.prevChange.emit(this.currentImgIndex);\r\n    }\r\n\r\n    nextImg(): void {\r\n      this.isVertical = false;\r\n      this.currentImgIndex++;\r\n      if (this.currentImgIndex > this.imgTotal) {\r\n        this.currentImgIndex = 1;\r\n      }\r\n      //this.showImg();\r\n      this.nextChange.emit(this.currentImgIndex);\r\n    }\r\n\r\n    closeImageViewer(){\r\n      this.closeViewer.emit();\r\n    }\r\n\r\n    private initImgViewer(): void {\r\n      this.imageViewer$ = new ImageViewer(this.element.querySelector('.img-viewer-panel-body-content'), this.ivViewerType);\r\n      this.fullScreenViewer$ = new FullScreenViewer(this.ivViewerType);\r\n      //this.showImg();\r\n    }\r\n\r\n    private addImgRotate(isAnimation = true): void {\r\n      let scale = '';\r\n      if (this.isVertical && this.isImgOverVertical()) {\r\n        scale = `scale(${this.getScale()})`;\r\n      }\r\n      const rotate = `rotate(${this.imgRotate}deg)`;\r\n      if (isAnimation) {\r\n        this.addTransition('iv-snap-image');\r\n        this.addTransition('iv-small-image');\r\n      }\r\n      this.setImgRotate('iv-snap-image', rotate, scale);\r\n      this.setImgRotate('iv-small-image', rotate, scale);\r\n      setTimeout(() => {\r\n        if (isAnimation) {\r\n          this.removeAnimation('iv-snap-image');\r\n          this.removeAnimation('iv-small-image');\r\n        }\r\n      }, 500);\r\n    }\r\n\r\n    private async beforeRotateImg(): Promise<any> {\r\n      this.zoomValue = 100;\r\n      const time: number = this.imageViewer$._state.zoomValue - this.zoomValue;\r\n      await this.imageViewer$.resetZoom();\r\n      await this.imageViewer$.refresh();\r\n      return time === 0 ? 0 : 500;\r\n    }\r\n\r\n    private beforeShowImg(): void {\r\n      this.imgRotate = 0;\r\n      this.isVertical = false;\r\n      const currentImg = this.element.querySelector('.iv-small-image');\r\n      if (!!currentImg) {\r\n        this.renderer.removeChild(this.element, currentImg);\r\n      }\r\n      this.setStyle('iv-loader', 'visibility', 'auto');\r\n      this.setStyle('options-image-viewer', 'visibility', 'inherit');\r\n    }\r\n\r\n    showImg(): void {\r\n      this.beforeShowImg();\r\n      \r\n      this.imageViewer$.load(this.images[0]);\r\n    }\r\n\r\n    private isImgOverVertical(): boolean {\r\n      const imgViewerHeight = this.element.clientHeight;\r\n      const currentImgWidth = this.element.querySelector('.iv-small-image').clientWidth;\r\n      return imgViewerHeight < currentImgWidth + 10;\r\n    }\r\n\r\n    private getScale(): number {\r\n      const imgViewerHeight = this.element.querySelector('.img-viewer-panel-body-content').clientHeight;\r\n      const currentImgWidth = this.element.querySelector('.iv-small-image').clientWidth;\r\n      const differenceWidth = currentImgWidth - imgViewerHeight;\r\n      if (differenceWidth >= 250 && differenceWidth < 300) {\r\n        return differenceWidth / imgViewerHeight - 0.1;\r\n      } else if (differenceWidth >= 300 && differenceWidth < 400) {\r\n        return differenceWidth / imgViewerHeight - 0.15;\r\n      } else if (differenceWidth >= 400) {\r\n        return differenceWidth / imgViewerHeight - 0.32;\r\n      } else if (differenceWidth < 0) {\r\n        return 1;\r\n      }\r\n      return 0.6;\r\n    }\r\n\r\n    private addTransition(node): void {\r\n      this.setStyle(node, 'transition', '0.5s linear');\r\n    }\r\n\r\n    private removeAnimation(node): void {\r\n      this.setStyle(node, 'transition', 'auto');\r\n    }\r\n\r\n    private setImgRotate(node, roate, scale): void {\r\n      this.setStyle(node, 'transform', `${roate} ${scale}`);\r\n    }\r\n\r\n    private setStyle(node, name, value): void {\r\n      const elements = this.doc.querySelectorAll(`.${node}`);\r\n      elements.forEach(ele => this.renderer.setStyle(ele, name, value));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n      if (!!this.imageViewer$) {\r\n        this.imageViewer$ = this.imageViewer$.destroy();\r\n      }\r\n      if (!!this.fullScreenViewer$) {\r\n        this.fullScreenViewer$ = this.fullScreenViewer$.destroy();\r\n      }\r\n    }\r\n  }\r\n","<div class=\"img-viewer {{imgViewerClass}}\">\r\n    <div class=\"img-viewer-panel\">\r\n      <div class=\"img-viewer-panel-header\">\r\n        <div nz-row>\r\n          <div nz-col nzSpan=\"3\">\r\n              <i nz-icon (click)=\"closeImageViewer()\" nzType=\"rollback\" nzTheme=\"outline\"></i>\r\n          </div>\r\n        <div nz-col nzSpan=\"21\">\r\n          <div *ngIf=\"showOperate\" class=\"img-viewer-panel-header-operation\">\r\n            <span nz-tooltip nzTooltipPlacement=\"bottom\" [nzTooltipTitle]=\"imageViewerType.zoomInToolTip\" *ngIf=\"zoom\" (click)=\"zoomInImg()\"><i nz-icon nzType=\"zoom-in\"></i></span>\r\n            <span nz-tooltip nzTooltipPlacement=\"bottom\" [nzTooltipTitle]=\"imageViewerType.zoomOutToolTip\" *ngIf=\"zoom\" (click)=\"zoomOutImg()\"><i nz-icon nzType=\"zoom-out\"></i></span>\r\n            <span nz-tooltip nzTooltipPlacement=\"bottom\" [nzTooltipTitle]=\"imageViewerType.rotateLeftToolTip\" *ngIf=\"rotate\" (click)=\"rotateImg(false)\"><i nz-icon nzType=\"undo\"></i></span>\r\n            <span nz-tooltip nzTooltipPlacement=\"bottom\" [nzTooltipTitle]=\"imageViewerType.rotateRightToolTip\" *ngIf=\"rotate\" (click)=\"rotateImg(true)\"><i nz-icon nzType=\"redo\"></i></span>\r\n            <span nz-tooltip nzTooltipPlacement=\"bottom\" [nzTooltipTitle]=\"imageViewerType.resetToolTip\" *ngIf=\"reset\" (click)=\"showImg()\"><i nz-icon nzType=\"sync\"></i></span>\r\n            <span nz-tooltip nzTooltipPlacement=\"bottom\" [nzTooltipTitle]=\"imageViewerType.fullScreenToolTip\" *ngIf=\"fullscreen\" (click)=\"fullscreenImg()\"><i nz-icon nzType=\"fullscreen\"></i></span>\r\n            <span nz-tooltip nzTooltipPlacement=\"bottom\" [nzTooltipTitle]=\"imageViewerType.downloadToolTip\" *ngIf=\"download\" (click)=\"downloadImg()\"><i nz-icon nzType=\"download\"></i></span>\r\n          </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      <div class=\"img-viewer-panel-body\" [class.img-viewer-panel-body-has-footer]=\"images.length > 1\">\r\n        <div class=\"img-viewer-panel-body-content\">\r\n  \r\n        </div>\r\n        <span *ngIf=\"imgTotal > 1\" class=\"img-viewer-panel-body-prev\" (click)=\"prevImg()\"><i nz-icon nzType=\"left\"></i></span>\r\n        <span *ngIf=\"imgTotal > 1\" class=\"img-viewer-panel-body-next\" (click)=\"nextImg()\"><i nz-icon nzType=\"right\"></i></span>\r\n      </div>\r\n      <div *ngIf=\"imgTotal > 1\" class=\"img-viewer-panel-footer\">\r\n      {{currentImgIndex}} / {{imgTotal}}\r\n      </div>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { NGXKerviService } from 'ngx-kervi'\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  userName: AbstractControl;\r\n  password: AbstractControl;\r\n  invalidCredentials:boolean = false;\r\n  \r\n  \r\n  constructor(fb: FormBuilder, private kerviService:NGXKerviService) {\r\n    var self = this;\r\n    this.loginForm = fb.group({  \r\n    'userName':  ['', Validators.required],\r\n    'password':  ['', Validators.required]  \r\n    });\r\n    \r\n    this.userName = this.loginForm.controls['userName'];\r\n    this.password = this.loginForm.controls['password']; \r\n   }\r\n\r\n   submitForm(): void {\r\n     var self = this;\r\n     if (this.loginForm.valid){\r\n      console.log(\"fv\");\r\n      this.kerviService.authenticate(this.userName.value, this.password.value)\r\n      .then(function(){\r\n         console.log(\"login ok\");\r\n       }).catch(function(){\r\n         console.log(\"login error\");\r\n         self.invalidCredentials=true;\r\n       });\r\n     } else {\r\n       console.log(\"fve\");\r\n    //   // for (const i in this.loginForm.controls) {\r\n    //   //   this.loginForm.controls[i].markAsDirty();\r\n    //   //   this.loginForm.controls[i].updateValueAndValidity();\r\n    //   // }\r\n     }\r\n    \r\n  } \r\n  ngOnInit() {\r\n  }\r\n}\r\n","<nz-layout>\r\n  <nz-content class=\"kervi-app-initializing\">\r\n    <div nz-row>\r\n      <div nz-col nzSpan=\"12\" nzOffset=\"6\">\r\n        <form nz-form \r\n          [formGroup]=\"loginForm\" \r\n          (ngSubmit)=\"submitForm()\"\r\n        >\r\n            <nz-form-item>\r\n              <nz-form-control>\r\n                <nz-input-group [nzPrefix]=\"prefixUser\">\r\n                  <input formControlName=\"userName\" nz-input placeholder=\"Username\" />\r\n                </nz-input-group>\r\n                <nz-form-explain *ngIf=\"loginForm.get('userName')?.dirty && loginForm.get('userName')?.errors\"\r\n                  >Please input your username!</nz-form-explain\r\n                >\r\n              </nz-form-control>\r\n            </nz-form-item>\r\n            <nz-form-item>\r\n              <nz-form-control>\r\n                <nz-input-group [nzPrefix]=\"prefixLock\">\r\n                  <input formControlName=\"password\" nz-input type=\"password\" placeholder=\"Password\" />\r\n                </nz-input-group>\r\n                <nz-form-explain *ngIf=\"loginForm.get('password')?.dirty && loginForm.get('password')?.errors\"\r\n                  >Please input your Password!</nz-form-explain\r\n                >\r\n              </nz-form-control>\r\n            </nz-form-item>\r\n            <nz-form-item>\r\n              <nz-form-control>\r\n                <button nz-button nzType=\"primary\" [disabled]=\"!loginForm.valid\"> {{( 'login' | translate)}}</button>\r\n                <nz-form-explain *ngIf=\"invalidCredentials\"\r\n                  >Invalid user name or password</nz-form-explain\r\n                >\r\n              </nz-form-control>\r\n            </nz-form-item>\r\n          </form>\r\n          <ng-template #prefixUser><i nz-icon nzType=\"user\"></i></ng-template>\r\n          <ng-template #prefixLock><i nz-icon nzType=\"lock\"></i></ng-template>\r\n      </div>\r\n    </div>\r\n  </nz-content>\r\n</nz-layout>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import {IvViewerType} from './interfaces/iv-viewer.type';\r\nimport {ImgViewerType} from './interfaces/img-viewer.type';\r\n\r\nexport class ImgViewerConfig {\r\n  ivViewerType?: IvViewerType = {\r\n    zoomValue: 100,\r\n    maxZoom: 500,\r\n    snapView: false,\r\n    refreshOnResize: true,\r\n    zoomOnMouseWheel: true,\r\n  };\r\n  imageViewerType?: ImgViewerType = {\r\n    zoomInToolTip: 'Zoom in',\r\n    zoomOutToolTip: 'Zoom put',\r\n    rotateLeftToolTip: 'Rotate left',\r\n    rotateRightToolTip: 'Rotate right',\r\n    resetToolTip: 'Reset tools',\r\n    fullScreenToolTip: 'Full screen',\r\n    downloadToolTip: 'Download',\r\n  };\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nexport class  KerviSpineBase {\r\n\r\n    public isConnected = false;\r\n    public doAuthenticate = false;\r\n\r\n    sessionId = null;\r\n    queryHandlers = [];\r\n    commandHandlers = [];\r\n    eventHandlers = [];\r\n    streamHandlers = [];\r\n    rpcQueue = {};\r\n    ready = false;\r\n    messageId = 0;\r\n    sensors = {};\r\n    controllers = {};\r\n    sensorTypes = [];\r\n    controllerTypes = [];\r\n    visionRegions = [];\r\n    application = null;\r\n    allowAnonymous = true;\r\n    firstOnOpen = true;\r\n    messageCount = 0;\r\n    mpsTime = new Date;\r\n    mps = 0;\r\n\r\n    protected websocket = null;\r\n\r\n    public options: any = {\r\n            userName: 'anonymous',\r\n            password: null,\r\n            address: null,\r\n            onOpen: null,\r\n            onClose: null,\r\n            onAuthenticate: null,\r\n            onAuthenticateFailed: null,\r\n            onAuthenticateStart: null,\r\n            onLogOff: null,\r\n            onMPS: null,\r\n            autoConnect: true,\r\n            targetScope: null,\r\n            protocol: 'ws',\r\n            apiToken: null\r\n    }\r\n\r\n    constructor(public constructorOptions) {\r\n        console.log('Kervi base spine init', this.options, constructorOptions);\r\n        this.options = this.extend(this.options, constructorOptions);\r\n        console.log('kbo', this.options);\r\n        this.connect();\r\n        const self = this;\r\n        setInterval(\r\n            function() {\r\n                var hangingNodes = []\r\n                for(let id in self.rpcQueue) {\r\n                    var query = self.rpcQueue[id];\r\n                    if (query['callbackTimeout']) {\r\n                        if (Date.now() - query['ts'] > query['timeout']){\r\n                            var callback = query['callbackTimeout']; \r\n                            hangingNodes.push(id);\r\n                            callback.call(self.options.targetScope);\r\n                        }\r\n                    }\r\n                }\r\n                for(let id of hangingNodes) {\r\n                    delete self.rpcQueue[id];\r\n                }\r\n            }\r\n        , 1);\r\n    }\r\n\r\n    protected extend(...p: any[])\r\n    {\r\n        for (let i = 1; i < p.length; i++) {\r\n            for(let key in p[i]) {\r\n                if(p[i].hasOwnProperty(key)) {\r\n                    p[0][key] = p[i][key];\r\n                }\r\n            }\r\n        }\r\n        return p[0];\r\n    }\r\n\r\n    protected addRPCCallback(id: string, callback, callbackTimeout, timeout) {\r\n        if (callback) {\r\n            this.rpcQueue[id] = {\r\n                'callback': callback,\r\n                'callbackTimeout': callbackTimeout,\r\n                'timeout': timeout,\r\n                'ts': Date.now(),\r\n             };\r\n        }\r\n    }\r\n\r\n    protected handleRPCResponse(message){\r\n        if (message.id in this.rpcQueue){\r\n            var callback = this.rpcQueue[message.id]['callback'];\r\n            if (callback){\r\n                delete this.rpcQueue[message.id];\r\n                callback.call(this.options.targetScope,message.response,message.response);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected handleEvent(message){\r\n        // console.log('ev', message)\r\n        const eventName = message.event;\r\n        const id = message.id;\r\n\r\n        let eventPath=eventName;\r\n        if (id) {\r\n            eventPath += '/' + id;\r\n        }\r\n\r\n        let value = null;\r\n        if(message.args && message.args.length) {\r\n            value = message.args[0];\r\n        }\r\n        for(var n = 0; (n < this.eventHandlers.length); n++)\r\n        {\r\n            let h = this.eventHandlers[n];\r\n            if (h.eventName === eventPath) \r\n                h.callback.call(value,id,value);\r\n            else if (h.eventName === eventName)\r\n                h.callback.call(value,id,value);\r\n        }\r\n    }\r\n\r\n    protected handleStream(message, streamBlob) {\r\n        const streamTag = message.streamId + '/' + message.streamEvent ;\r\n        for (let n = 0; (n < this.streamHandlers.length); n++) {\r\n            const h = this.streamHandlers[n];\r\n            if (h.streamTag === streamTag) {\r\n                h.callback.call(message.streamId, message.streamId, message.streamEvent, streamBlob);\r\n            } else if (h.streamTag === message.streamId) {\r\n                h.callback.call(message.streamId, message.streamId, message.streamEvent, streamBlob);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected handleCommand(message){\r\n        console.log('cmd',this,message);\r\n        var command=message.command\r\n        \r\n        var args=null;\r\n        if(message.args && message.args.length){\r\n            args=message.args[0];\r\n        }\r\n        \r\n        for(var n=0;(n<this.commandHandlers.length);n++)\r\n        {\r\n            var c=this.commandHandlers[n];\r\n            if (c.command==command)\r\n                c.callback.call(this,args);\r\n        }\r\n    }\r\n\r\n    protected connect() {\r\n\r\n    }\r\n\r\n    protected onOpen(evt) {\r\n        console.log('Kervi open', this, evt);\r\n\r\n        this.isConnected = true;\r\n        this.eventHandlers = [];\r\n        this.streamHandlers = [];\r\n        this.commandHandlers = [];\r\n        this.queryHandlers = [];\r\n        console.log('Kervi spine ready');\r\n\r\n    }\r\n\r\n    protected onClose(evt) {\r\n        console.log('Kervi spine on close', evt);\r\n        this.isConnected = false;\r\n        const self = this;\r\n        if (this.options.onClose)\r\n            this.options.onClose.call(this.options.targetScope,evt);\r\n        this.firstOnOpen = true;\r\n        if (this.options.autoConnect) {\r\n            setTimeout(function() {\r\n                self.connect();\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    public authenticate(userName, password) {\r\n\r\n    }\r\n\r\n    public logoff() {\r\n\r\n    }\r\n\r\n    protected onMessage(evt) {\r\n\r\n    }\r\n\r\n    protected onError(evt) {\r\n        console.log('Kervi on error', evt);\r\n    }\r\n\r\n    public addCommandHandler (command: string, callback) {\r\n\r\n    }\r\n\r\n    public addQueryHandler(query: string, callback) {\r\n\r\n    }\r\n\r\n    public addEventHandler = function(eventName: string, id: string, callback) {\r\n\r\n    };\r\n\r\n    public addStreamHandler = function(streamId: string, streamEvent: string[], callback) {\r\n\r\n    }\r\n\r\n    public removeStreamHandler = function(streamId: string, streamEvent: string[], callback) {\r\n\r\n    }\r\n\r\n    public sendCommand(command: string, ...p: any[]) {\r\n\r\n    }\r\n\r\n    public sendQuery(query, ...p: any[]) {\r\n\r\n    }\r\n\r\n    public triggerEvent(eventName: string, id: string) {\r\n\r\n    }\r\n\r\n    public streamData(stream_id: string, event: string , data: any) {\r\n\r\n    }\r\n}\r\n","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\nimport {KerviSpineBase} from './kervi-spinebase'\r\nexport class  KerviWSSpine extends KerviSpineBase{\r\n    constructor(public constructorOptions){\r\n        super(constructorOptions);\r\n        console.log('kervi spine constructor');\r\n    }\r\n\r\n    protected connect() {\r\n        if (this.isConnected) {\r\n            console.log('Kervi is connected');\r\n            return;\r\n        }\r\n        const self = this;\r\n        this.websocket = new WebSocket(this.options.protocol + '://' + this.options.address);\r\n        this.websocket.binaryType = 'arraybuffer';\r\n        this.websocket.onopen = function(evt) {\r\n            console.log('kervi spine on open');\r\n            self.onOpen(evt);\r\n        };\r\n\r\n        this.websocket.onclose = function(evt) {\r\n            self.onClose(evt) ;\r\n        };\r\n\r\n        this.websocket.onmessage = function(evt) {\r\n            if (typeof evt.data === 'string') {\r\n                const message = JSON.parse(evt.data);\r\n                self.onMessage(message);\r\n            } else {\r\n                const jsonLen = new Int32Array(evt.data.slice(0, 4))[0];\r\n                const jsonBlob = evt.data.slice(4, jsonLen + 4);\r\n                const streamBlob = evt.data.slice(4 + jsonLen);\r\n                const utf8decoder = new TextDecoder();\r\n                const j = utf8decoder.decode(jsonBlob);\r\n                self.onMessage(JSON.parse(j), streamBlob);\r\n            }\r\n        };\r\n\r\n        this.websocket.onerror = function(evt) {\r\n            self.onError(evt);\r\n        };\r\n    }\r\n\r\n    public authenticate(userName, password) {\r\n        this.options.userName = userName;\r\n        this.options.password = password;\r\n        const cmd = {id: this.messageId++, 'messageType': 'authenticate', 'userName': userName, 'password': password};\r\n        console.log('swa', cmd);\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    }\r\n\r\n    public logoff() {\r\n        const cmd = {id: this.messageId++, 'messageType': 'logoff', 'session': this.sessionId};\r\n        this.sessionId = null;\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    }\r\n\r\n    onMessage(message, streamBlob= null) {\r\n        // if (message.messageType !== 'stream') {\r\n        //     console.log('on m', message);\r\n        // }\r\n        const self = this;\r\n        const now   = new Date();\r\n        const fpsDiff = now.getTime() - this.mpsTime.getTime();\r\n        const seconds = fpsDiff / 1000;\r\n        this.messageCount ++;\r\n        if (seconds > 1) {\r\n          this.mps = Math.round(this.messageCount / seconds);\r\n          this.messageCount = 0;\r\n          this.mpsTime = now;\r\n          if (this.options.onMPS) {\r\n             this.options.onMPS.call(this.options.targetScope, this.mps);\r\n          }\r\n        }\r\n\r\n        if (message.messageType === 'authenticate') {\r\n            console.log('authenticate');\r\n            this.doAuthenticate = true;\r\n            if (this.options.userName)\r\n                this.authenticate(this.options.userName, this.options.password)\r\n            else\r\n                this.options.onAuthenticate.call(this.options.targetScope,message);\r\n        } else if (message.messageType === 'authentication_failed') {\r\n            console.log('authentication failed', this.options.userName);\r\n            if (this.options.userName == 'anonymous') {\r\n                this.allowAnonymous = false;\r\n                this.options.userName = null;\r\n                this.options.password = null;\r\n                this.sessionId = null;\r\n                if (self.options.onLogOff) {\r\n                    self.options.onLogOff.call(self.options.targetScope, message);\r\n                }\r\n            } else\r\n                this.options.onAuthenticateFailed.call(this.options.targetScope,message);\r\n        }\r\n        else if (message.messageType === 'session_authenticated'){\r\n            const date = new Date();\r\n\r\n            date.setTime(date.getTime() + (2 * 60 * 60 * 1000));\r\n            const expires = '; expires=' + date.toUTCString();\r\n            this.sessionId = message.session;\r\n            document.cookie = 'kervisession' + '=' + message.session + expires + '; path=/';\r\n\r\n            setTimeout(function() {\r\n                console.log('to', self.options);\r\n                if (self.options.onOpen)\r\n                    self.options.onOpen.call(self.options.targetScope, self.firstOnOpen,message);\r\n                    self.firstOnOpen = false;\r\n            }, 100\r\n            );\r\n        } else if (message.messageType == 'session_logoff') { \r\n            if (self.options.onLogOff)\r\n                self.options.onLogOff.call(self.options.targetScope,message);\r\n            if (this.allowAnonymous && this.options.userName != 'anonymous'){\r\n                this.authenticate('anonymous', null)\r\n            } else {\r\n                self.options.userName = null;\r\n                self.options.password = null;\r\n                self.sessionId = null;\r\n            }\r\n        } else if (message.messageType=='response')\r\n            this.handleRPCResponse(message);\r\n        else if (message.messageType=='event')\r\n            this.handleEvent(message);\r\n        else if (message.messageType=='stream')\r\n            this.handleStream(message, streamBlob);\r\n        else if (message.messageType=='command')\r\n            this.handleCommand(message);\r\n        else\r\n            console.log('Kervi spine message unknown',this.rpcQueue, message);\r\n    }\r\n\r\n    onError(evt){\r\n        console.log('Kervi on error',evt);\r\n    }\r\n\r\n    public addCommandHandler (command:string,callback){\r\n        this.commandHandlers.push({command:command,callback:callback});\r\n        var cmd={id:this.messageId++,'messageType':'registerCommandHandler','command':command};\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n\r\n    public addQueryHandler(query:string,callback){\r\n        this.queryHandlers.push({query:query,callback:callback});\r\n        var cmd={id:this.messageId++,'messageType':'registerQueryHandler','query':query};\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n\r\n    public addEventHandler = function(eventName: string, id: string, callback){\r\n        if (id)\r\n            this.eventHandlers.push({'eventName':eventName+'/'+id,callback:callback});\r\n        else\r\n            this.eventHandlers.push({'eventName':eventName,callback:callback});\r\n        var cmd={id:this.messageId++,'messageType':'registerEventHandler','event':eventName,'eventId':id};\r\n        //console.log('add event handler',cmd);\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n\r\n    public addStreamHandler = function(streamId: string, streamEvents: string[], callback) {\r\n        if (streamEvents && streamEvents.length > 0) {\r\n            for (let event of streamEvents) {\r\n                this.streamHandlers.push({'streamTag': streamId + '/' + event, callback: callback});\r\n                const cmd = {\r\n                    id: this.messageId++,\r\n                    'messageType': 'registerStreamHandler',\r\n                    'streamId': streamId,\r\n                    'streamEvent': event\r\n                };\r\n                console.log('as', cmd);\r\n                this.websocket.send(JSON.stringify(cmd));\r\n            }\r\n        } else {\r\n            this.streamHandlers.push({'streamTag': streamId, callback: callback});\r\n            const cmd = {\r\n                id: this.messageId++,\r\n                'messageType': 'registerStreamHandler',\r\n                'streamId': streamId,\r\n                'streamEvent': event\r\n            };\r\n            console.log('as', cmd);\r\n            this.websocket.send(JSON.stringify(cmd));\r\n        }\r\n    };\r\n\r\n    public removeStreamHandler = function(streamId: string, streamEvents: string[]) {\r\n        if (streamEvents && streamEvents.length > 0) {\r\n            for (let event of streamEvents) {\r\n                //this.streamHandlers.push({'streamTag': streamId + '/' + event, callback: callback});\r\n                const cmd = {\r\n                    id: this.messageId++,\r\n                    'messageType': 'removeStreamHandler',\r\n                    'streamId': streamId,\r\n                    'streamEvent': event\r\n                };\r\n                console.log('as', cmd);\r\n                this.websocket.send(JSON.stringify(cmd));\r\n            }\r\n        } else {\r\n            //this.streamHandlers.push({'streamTag': streamId, callback: callback});\r\n            const cmd = {\r\n                id: this.messageId++,\r\n                'messageType': 'removeStreamHandler',\r\n                'streamId': streamId,\r\n                'streamEvent': event\r\n            };\r\n            console.log('as', cmd);\r\n            this.websocket.send(JSON.stringify(cmd));\r\n        }\r\n    };\r\n\r\n    public sendCommand(command:string,...p:any[]){\r\n        console.log('sec',arguments);\r\n        var args=[];\r\n        \r\n        var callback=null;\r\n\r\n        for (var i=0;(i<p.length);i++){\r\n            if (p[i] instanceof Function)\r\n                callback=p[i];\r\n            else\r\n                args.push(p[i]);\r\n        }\r\n        \r\n        var cmd={id:this.messageId++,'messageType':'command','command':command,'args':args};\r\n        if (callback && callback instanceof Function)\r\n            this.addRPCCallback(cmd.id.toString(), callback, null, 0);\r\n        \r\n        console.log('sendCommand',this,cmd);\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n\r\n    public sendQuery(query,...p:any[]){\r\n        var args=[];\r\n        var callback=null;\r\n        var callbackTimeout = null\r\n        var timeout = 10000\r\n        for (var i=0;(i<p.length);i++){\r\n            if (p[i] instanceof Function)\r\n                if (!callback) \r\n                    callback=p[i];\r\n                else\r\n                    callbackTimeout = p[i];\r\n            else{\r\n                if (callbackTimeout)\r\n                    timeout = p[i]\r\n                else\r\n                    args.push(p[i]);\r\n            }\r\n        }\r\n         \r\n        var cmd={id:this.messageId++,'messageType':'query','query':query,'args':args};\r\n        this.addRPCCallback(cmd.id.toString(),callback, callbackTimeout, timeout);\r\n        console.log('sendQuery', callback,cmd);\r\n        this.websocket.send(JSON.stringify(cmd));\r\n    };\r\n\r\n    public triggerEvent(eventName:string,id:string){\r\n        var e={id:this.messageId++,'messageType':'event','event':eventName,'args':arguments};\r\n        this.websocket.send(JSON.stringify(e));\r\n    };\r\n}","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\nimport {KerviSpineBase} from \"./kervi-spinebase\";\r\ndeclare var Stomp:any;\r\nexport class  KerviRMQSpine extends KerviSpineBase {\r\n\tprivate socketSession:null;\r\n\tprivate exchange = \"/exchange/\";\r\n\t\r\n\tconstructor(public constructorOptions){\r\n\t\tsuper(constructorOptions);\r\n\t\tconsole.log(\"Kervi io spine init y\", this.options,constructorOptions);\r\n\t\t\r\n\t}\r\n\r\n\tprivate onMQError(frame){\r\n\t\tconsole.log(\"MQ error\", frame);\r\n\t}\r\n\r\n\t\r\n\tprotected connect(){\r\n\t\tif (this.isConnected){\r\n\t\t\tconsole.log(\"Kervi is connected\");\r\n\t\t\treturn\r\n\t\t}\r\n\t\tvar self=this;\r\n\t\t//var mqUrl= this.options.protocol + \"://\" + this.options.address\r\n\t\tvar mqUrl= \"wss://mq.kervi.io:15673/ws\"\r\n\t\tthis.websocket = Stomp.client(mqUrl);\r\n\t\tthis.websocket.heartbeat.incoming = 0;\r\n\t\tself.exchange = \"/exchange/\" +  self.options.apiToken.app_id;\r\n\t\tconsole.log(\"exchange\", self.exchange)\r\n\t\tthis.websocket.connect(\r\n\t\t\tself.options.apiToken.api_token, \r\n\t\t\t\"ui\", \r\n\t\t\tfunction (frame){\r\n\t\t\t\tconsole.log(\"MQ connect\", frame, self.websocket, this, self);\r\n\t\t\t\tself.socketSession = frame.headers.session;\r\n\t\t\t\tself.exchange = \"/exchange/\" +  self.options.apiToken.app_id;\r\n\t\t\t\tself.websocket.subscribe(self.exchange, function(message) {\r\n\t\t\t\t\tconsole.log(\"mq \", message);\r\n\t\t\t\t\tif (message.headers[\"topic\"])\r\n\t\t\t\t\t\tmessage.headers[\"topic\"] = message.headers[\"topic\"].replace(new RegExp(\"\\\\c\",\"g\"),\":\");\r\n\t\t\t\t\tif (message.command==\"CONNECTED\"){\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (message.headers[\"topic\"] == \"ping\")\r\n\t\t\t\t\t\tself.onPing(message);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tself.onMessage(message);\r\n\t\t\t\t}, { });\r\n\t\t\t},\r\n\t\t\tself.onMQError, self.options.apiToken.api_channel);\r\n\t}\r\n\r\n\t\r\n\tonPing(message){\r\n\t\tconsole.log(\"onping\", this.options.appId, message, );\r\n\t\tvar self = this;\r\n\t\tif (!this.isConnected && message.headers[\"connection_id\"]== self.options.apiToken.app_id){\r\n\t\t\tthis.onOpen(message);\r\n\t\t\tthis.websocket.send(self.exchange, { topic:\"session:new\", router_id:message.headers[\"router_id\"], session_id:this.socketSession}, \"{}\")\t\r\n\t\t}\r\n\t}\r\n\r\n\tauthenticate(userName, password){\r\n\t\tthis.options.userName = userName;\r\n\t\tthis.options.password = password;\r\n\t\tif (this.options.onAuthenticateStart)\r\n\t\t\tthis.options.onAuthenticateStart.call(this.options.targetScope);\r\n\t\tvar cmd={id:this.messageId++,\"messageType\":\"authenticate\",\"userName\":this.options.userName, \"password\": this.options.password};\r\n\t\tthis.websocket.send(JSON.stringify(cmd));\r\n\t}\r\n\r\n\tlogoff(){\r\n\t\t//this.options.userName = this.allowAnonymous ? \"anonymous\" : null;\r\n\t\t//this.options.password = null;\r\n\r\n\t\tvar cmd={id:this.messageId++,\"messageType\":\"logoff\", \"session\": this.sessionId};\r\n\t\tthis.sessionId = null;\r\n\t\tthis.websocket.send(JSON.stringify(cmd));\r\n\t}\r\n\r\n\tonMessage(evt){\r\n\t\tconsole.log(\"on m\",evt);\r\n\t\tvar message=JSON.parse(evt.body);\r\n\t\tvar self = this;\r\n\t\tvar topic = evt.headers[\"topic\"];\r\n\r\n\t\tif (topic==\"authenticate\"){\r\n\t\t\tconsole.log(\"authenticate\");\r\n\t\t\tthis.doAuthenticate = true;\r\n\t\t\tif (this.options.userName)\r\n\t\t\t\tthis.authenticate(this.options.userName, this.options.password)\r\n\t\t\telse\r\n\t\t\t\tthis.options.onAuthenticate.call(this.options.targetScope,evt);\r\n\t\t}\r\n\t\telse if (topic==\"authentication_failed\"){\r\n\t\t\tconsole.log(\"authentication failed\", this.options.userName);\r\n\t\t\tif (this.options.userName == \"anonymous\") {\r\n\t\t\t\tthis.allowAnonymous = false;\r\n\t\t\t\tthis.options.userName = null;\r\n\t\t\t\tthis.options.password = null;\r\n\t\t\t\tthis.sessionId = null;\r\n\t\t\t\tconsole.log(\"x\", self.options)\r\n\t\t\t\tif (self.options.onLogOff){\r\n\t\t\t\t\tconsole.log(\"x1\")\r\n\t\t\t\t\tself.options.onLogOff.call(self.options.targetScope,evt);\r\n\t\t\t\t}\r\n\t\t\t} else\r\n\t\t\t\tthis.options.onAuthenticateFailed.call(this.options.targetScope,evt);\r\n\t\t}\r\n\t\telse if (topic==\"session_authenticated\"){\r\n\t\t\tvar date = new Date();\r\n\t\t\t\r\n        \tdate.setTime(date.getTime() + (2*60*60*1000));\r\n        \tvar expires = \"; expires=\" + date.toUTCString();\r\n\t\t\tthis.sessionId = message.session;\r\n\t\t\tdocument.cookie = \"kervisession\" + \"=\" + message.session + expires + \"; path=/\";\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tif (self.options.onOpen)\r\n\t\t\t\t\tself.options.onOpen.call(self.options.targetScope, self.firstOnOpen,evt);\r\n\t\t\t\t\tself.firstOnOpen = false;\r\n\t\t\t}, 100\r\n\t\t\t);\r\n\t\t\t\r\n\t\t} else if (topic == \"session_logoff\"){ \r\n\t\t\tif (self.options.onLogOff)\r\n\t\t\t\tself.options.onLogOff.call(self.options.targetScope,evt);\r\n\t\t\tif (this.allowAnonymous && this.options.userName != \"anonymous\"){\r\n\t\t\t\tthis.authenticate(\"anonymous\", null)\r\n\t\t\t} else {\r\n\t\t\t\tself.options.userName = null;\r\n\t\t\t\tself.options.password = null;\r\n\t\t\t\tself.sessionId = null;\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t} else if (evt.headers[\"type\"]==\"query_response\"){\r\n\t\t\tthis.handleRPCResponse({id:evt.headers[\"query_id\"], response:message});\r\n\t\t}else if (evt.headers[\"type\"]==\"event\"){\r\n\t\t\tconsole.log(\"e\", evt);\r\n\t\t\tvar topic_tag= evt.headers[\"topic\"].split(\":\");\r\n\t\t\t\r\n\t\t\tthis.handleEvent({event:topic_tag[1], id:topic_tag[2], args:message.args});\r\n\t\t}else if (message.messageType==\"command\")\r\n\t\t\tthis.handleCommand(message);\r\n\t\telse\r\n\t\t\tconsole.log(\"Kervi spine message unknown\",this.rpcQueue,evt);\r\n\t}\r\n\r\n\tonError(evt){\r\n\t\tconsole.log(\"Kervi on error\",evt);\r\n\t}\r\n\r\n\tpublic addCommandHandler (command:string,callback){\r\n\t\tthis.commandHandlers.push({command:command,callback:callback});\r\n\t\tvar cmd={id:this.messageId++,\"messageType\":\"registerCommandHandler\",\"command\":command};\r\n\t\t//this.websocket.send(JSON.stringify(cmd));\r\n\t\tthis.websocket.send(\r\n\t\t\tthis.exchange,\r\n\t\t\t{ topic:\"registerCommandHandler\", router_id:this.socketSession},\r\n\t\t\tJSON.stringify(cmd)\r\n\t\t)\t\r\n\t};\r\n\r\n\tpublic addQueryHandler(query:string,callback){\r\n\t\tthis.queryHandlers.push({query:query,callback:callback});\r\n\t\tvar cmd={id:this.messageId++,\"messageType\":\"registerQueryHandler\",\"query\":query};\r\n\t\tthis.websocket.send(\r\n\t\t\tthis.exchange,\r\n\t\t\t{ topic:\"registerQueryHandler\", router_id:this.socketSession},\r\n\t\t\tJSON.stringify(cmd)\r\n\t\t)\r\n\t};\r\n\r\n\tpublic addEventHandler=function(eventName:string,id:string,callback){\r\n\t\tif (id)\r\n\t\t\tthis.eventHandlers.push({\"eventName\":eventName+\"/\"+id,callback:callback});\r\n\t\telse\r\n\t\t\tthis.eventHandlers.push({\"eventName\":eventName,callback:callback});\r\n\t\tvar cmd={id:this.messageId++,\"messageType\":\"registerEventHandler\",\"event\":eventName,\"eventId\":id};\r\n\t\tthis.websocket.send(\r\n\t\t\tthis.exchange,\r\n\t\t\t{ topic:\"registerEventHandler\", router_id:this.socketSession},\r\n\t\t\tJSON.stringify(cmd)\r\n\t\t)\r\n\t};\r\n\r\n\tpublic sendCommand(command:string,...p:any[]){\r\n\t\tconsole.log(\"sec\",arguments);\r\n\t\tvar args=[];\r\n\t\t\r\n\t\tvar callback=null;\r\n\r\n\t\tfor (var i=0;(i<p.length);i++){\r\n\t\t\tif (p[i] instanceof Function)\r\n\t\t\t\tcallback=p[i];\r\n\t\t\telse\r\n\t\t\t\targs.push(p[i]);\r\n\t\t}\r\n\t\t\r\n\t\t/*if (p.length>1){\r\n\t\t\tvar argOffset=1;\r\n\t\t\tif ( callback && callback instanceof Function )\r\n\t\t\t\targOffset+=1;\r\n\t\t\tfor (var i=argOffset;(i<arguments.length);i++){\r\n\t\t\t\targs.push(arguments[i]);\r\n\t\t\t}\r\n\t\t}*/\r\n\t\tvar cmd={id:this.messageId++,\"args\":args, kwargs:{}};\r\n\t\t\r\n\t\tif (callback && callback instanceof Function)\r\n\t\t\tthis.addRPCCallback(cmd.id.toString(),callback, null, 0);\r\n\t\tconsole.log(\"sendCommand\",this,cmd);\r\n\t\tthis.websocket.send(\r\n\t\t\tthis.exchange,\r\n\t\t\t{ topic:\"command:\"+ command, router_id:this.socketSession},\r\n\t\t\tJSON.stringify(cmd)\r\n\t\t)\r\n\t};\r\n\r\n\tpublic sendQuery(query,...p:any[]){\r\n\t\tvar args=[];\r\n\t\tvar callback=null;\r\n\t\tvar callbackTimeout=null;\r\n\t\tvar timeout = 10000;\r\n\t\tfor (var i=0;(i<p.length);i++){\r\n\t\t\tif (p[i] instanceof Function)\r\n\t\t\t\tif (!callback) \r\n\t\t\t\t\tcallback=p[i];\r\n\t\t\t\telse\r\n\t\t\t\t\tcallbackTimeout = p[i];\r\n\t\t\telse{\r\n\t\t\t\tif (callbackTimeout)\r\n\t\t\t\t\ttimeout = p[i]\r\n\t\t\t\telse\r\n\t\t\t\t\targs.push(p[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t \r\n\t\tvar cmd={id:this.messageId++,\"messageType\":\"query\",\"query\":query,\"args\":args, kwargs:[], qts:0};\r\n\t\tthis.addRPCCallback(cmd.id.toString(),callback, callbackTimeout, timeout);\r\n\t\tconsole.log(\"sendQuery\", callback,cmd);\r\n\t\t//this.websocket.send(JSON.stringify(cmd));\r\n\t\tthis.websocket.send(\r\n\t\t\tthis.exchange,\r\n\t\t\t{ topic:\"query:\" + query, qts:0, query_id: cmd.id.toString(), router_id:this.socketSession, response_address:this.socketSession},\r\n\t\t\tJSON.stringify(cmd)\r\n\t\t)\r\n\t};\r\n\r\n\tpublic triggerEvent(eventName:string,id:string){\r\n\t\tvar e={id:this.messageId++,\"messageType\":\"event\",\"event\":eventName,\"args\":arguments};\r\n\t\tthis.websocket.send(JSON.stringify(e));\r\n\t};\r\n}","\r\nexport class DashboardLink{\r\n    dashboardId:string;\r\n    panelId:string;\r\n    panelName:string;\r\n    component:IComponent;\r\n    parameters:any;\r\n\r\n    /*constructor(dashboardId:string, sectionId:string, sectionName:string){\r\n        this.dashboardId = dashboardId;\r\n        this.sectionId = sectionId;\r\n        this.sectionName = sectionName;\r\n    }*/\r\n\r\n    constructor(component:IComponent, message:any){\r\n        this.dashboardId = message.dashboardId;\r\n        this.panelId = message.sectionId;\r\n        this.panelName = message.sectionName;\r\n        this.component = component;\r\n        this.parameters = message.parameters;\r\n    }\r\n}\r\n\r\nexport interface IComponent {\r\n    id: string;\r\n    name: string;\r\n    componentType: string;\r\n    ui:any;\r\n    dashboards : DashboardLink[];\r\n\r\n    //updateReferences(kerviService:KerviBaseService);\r\n    //reload(component:IComponent);\r\n    //removeReferences(components:IComponent[]);\r\n}","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\nimport { IComponent, DashboardLink } from \"./IComponent.model\"\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { KerviBaseService } from '../kervi-js.service'\r\ndeclare var Qty:any;\r\n\r\nexport class KerviValue implements IComponent{\r\n    public name: string;\r\n    public componentType = \"KerviValue\"\r\n    public typeName:string = null;    \r\n    public id: string;\r\n    public dashboards: DashboardLink[] = [];\r\n    public isInput:boolean;\r\n    public command: string;\r\n    public valueTS:Date;\r\n\r\n    public ui = {\r\n        type: \"\",\r\n        orientation: \"\",\r\n        visible: true\r\n    }\r\n}\r\n\r\nexport abstract class KerviValueType<valueType> extends KerviValue{\r\n    \r\n    public value$: BehaviorSubject<valueType>;\r\n    protected kerviService:KerviBaseService = null;\r\n\r\n    constructor(message:any, kerviService:KerviBaseService){\r\n        super();\r\n        this.kerviService = kerviService;\r\n        this.value$= new BehaviorSubject<valueType>(message.value);\r\n        this.name = message.name;\r\n        this.isInput = message.isInput;\r\n        this.ui = message.ui;\r\n        this.command = message.command;\r\n        this.id = message.id;\r\n        this.ui[\"type\"] = message.componentType;\r\n        this.ui[\"orientation\"] = message.orientation;\r\n        this.ui[\"visible\"] = message.visible;\r\n        \r\n        for (var prop in message.ui) {\r\n            if (this.ui[prop] != undefined)\r\n                this.ui[prop] = message.ui[prop];\r\n        }\r\n\r\n        for (let dashboardLink of message.dashboardLinks){\r\n            this.dashboards.push( new DashboardLink(this, dashboardLink)); \r\n        }\r\n    }\r\n\r\n    get value(){\r\n       \r\n        //console.log(\"gv\", this.id, this.value$.value)\r\n       return this.value$.value \r\n    }\r\n\r\n    set value(value:valueType){\r\n        console.log(\"sv\", this.id);\r\n        this.value$.next(value); \r\n        this.kerviService.spine.sendCommand(this.command, value);\r\n     }\r\n\r\n    protected abstract getDefaultValue():valueType;\r\n    public set(v:valueType, notify:boolean=true){\r\n        this.value$.next(v);\r\n        if (notify)\r\n            this.kerviService.spine.sendCommand(this.command, v);\r\n    }\r\n}\r\n\r\n\r\nexport enum ValueRangeType {normal, warning, error};\r\n\r\nexport class ValueRange{\r\n    \r\n    public start:number = null;\r\n    public end:number = null;\r\n    public type:ValueRangeType = null;\r\n\r\n    constructor(range:any){\r\n        this.start = range[\"start\"];\r\n        this.end = range[\"end\"]\r\n        if (range[\"type\"] == \"warning\")\r\n            this.type = ValueRangeType.warning;\r\n        else if (range[\"type\"] == \"error\")\r\n            this.type = ValueRangeType.error;\r\n        else\r\n            this.type = ValueRangeType.normal;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class KerviEnumOptionModel{\r\n    public value:string;\r\n    public text:string;\r\n    public selected$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n    constructor(messageOption:any){\r\n        this.value = messageOption.value;\r\n        this.text = messageOption.text;\r\n        this.selected$.next(messageOption.selected);\r\n    }\r\n    updateReferences(){};\r\n    reload(component:IComponent){};\r\n    removeReferences(components:IComponent[]){};\r\n}\r\n\r\nexport class SelectValue extends KerviValueType<string[]>{\r\n    public options:KerviEnumOptionModel[] = [];\r\n    public lastSelected$:BehaviorSubject<KerviEnumOptionModel> = new BehaviorSubject<KerviEnumOptionModel>(null); \r\n    \r\n    constructor (message:any, kerviService:KerviBaseService){\r\n        super(message, kerviService);\r\n        var self = this;\r\n        this.options = []\r\n        \r\n        for (let option of message.options){\r\n            this.options.push( new KerviEnumOptionModel(option) );\r\n        }\r\n\r\n        this.selectOptions(this.value$.value);\r\n        this.value$.subscribe(function(v){\r\n            self.selectOptions(v);\r\n        });\r\n    }\r\n\r\n    protected getDefaultValue():string[]{\r\n        return [];\r\n    }\r\n\r\n    \r\n    public selectOptions(selectedOptions:any){\r\n        console.log(\"soc\");\r\n        if (!selectedOptions)\r\n            return;\r\n        for (let option of this.options){\r\n            option.selected$.next(false);\r\n        }\r\n        for (let selectedOption of selectedOptions){\r\n            console.log(\"so\", selectedOption)\r\n            for(let option of this.options){\r\n                console.log(\"sox\", option )\r\n                if (option.value == selectedOption){\r\n                    option.selected$.next(true);\r\n                    this.lastSelected$.next(option);\r\n                    console.log(\"os\", option.text, option.selected$.value);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class NumberValue extends KerviValueType<number> {\r\n    public unit: string;\r\n    public qtyUnitFrom:string;\r\n    public qtyUnitTo:string = null;\r\n    public maxValue: number;\r\n    public minValue: number;\r\n    public sparkline$: BehaviorSubject<number[]> = new BehaviorSubject<number[]>([]);\r\n    public ranges: ValueRange[] = [];\r\n\r\n    protected getDefaultValue():number{\r\n        return 0;\r\n    }\r\n\r\n    constructor(message: any, kerviService:KerviBaseService) {\r\n        super(message, kerviService);\r\n        this.unit = message.unit;\r\n        this.typeName = \"Number\";\r\n    \r\n        \t\r\n        this.qtyUnitFrom = message.unit;\r\n        if (this.unit == \"c\" && kerviService.application$.value[\"display\"][\"unit_system\"][\"temperature\"]==\"F\"){\r\n            this.qtyUnitFrom = \"tempC\";\r\n            this.qtyUnitTo = \"tempF\";\r\n            this.unit = \"F\"\r\n        }\r\n\r\n        for (var range of message.ranges){\r\n            if (this.qtyUnitTo){\r\n                var q = new Qty(range[\"start\"], this.qtyUnitFrom);\r\n                range[\"start\"] = q.to(this.qtyUnitTo).scalar\r\n                var q = new Qty(range[\"end\"], this.qtyUnitFrom);\r\n                range[\"end\"] = q.to(this.qtyUnitTo).scalar\r\n                this.ranges.push(new ValueRange(range));\r\n            } else\r\n                this.ranges.push(new ValueRange(range));\r\n        }\r\n        \r\n        if (this.qtyUnitTo && message.maxValue){\r\n            var q = new Qty(message.maxValue, this.qtyUnitFrom);\r\n            this.maxValue = q.to(this.qtyUnitTo).scalar;\r\n        } else\r\n            this.maxValue = message.maxValue; \r\n\r\n        if (this.qtyUnitTo && message.minValue){\r\n            var q = new Qty(message.minValue, this.qtyUnitFrom);\r\n            this.minValue = q.to(this.qtyUnitTo).scalar;\r\n        } else\r\n            this.minValue = message.minValue; \r\n        \r\n        \r\n        var spl = []\r\n        for(var spv of message.sparkline){\r\n            if (this.qtyUnitTo){\r\n                console.log(\"spv\", spv);\r\n                var q = new Qty(spv.value, this.qtyUnitFrom);\r\n                //spv.value = q.to(this.qtyUnitTo).scalar;\r\n            }\r\n            spl.push(spv)\r\n        }\r\n        this.sparkline$.next(spl);\r\n        this.set(message.value, false);\r\n    }\r\n\r\n    set(v, notify=true){\r\n        var newValue = v;\r\n        if (this.qtyUnitTo){\r\n            var q = new Qty(v, this.qtyUnitFrom);\r\n            newValue = q.to(this.qtyUnitTo).scalar;\r\n        } \r\n\r\n        this.value$.next(newValue);\r\n        if (notify)\r\n            this.kerviService.spine.sendCommand(this.command, v);\r\n        var spl=this.sparkline$.value;\r\n        spl.push(newValue);\r\n        if (spl.length>10)\r\n             spl.shift();\r\n        this.sparkline$.next(spl);  \r\n        \r\n    }\r\n}\r\n\r\nexport class StringValue extends KerviValueType<string> {\r\n    \r\n    protected getDefaultValue():string{\r\n        return \"\";\r\n    }\r\n\r\n    constructor(message: any, kerviService:KerviBaseService) {\r\n        super(message, kerviService)\r\n        this.typeName = \"String\";\r\n    }\r\n    \r\n}\r\n\r\nexport class BooleanValue extends KerviValueType<boolean> {\r\n    constructor(message, kerviService:KerviBaseService) {\r\n        super(message, kerviService)\r\n        this.typeName = \"Boolean\";\r\n    }\r\n\r\n    protected getDefaultValue():boolean{\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class DateTimeValue extends KerviValueType<Date> {\r\n    public subType: string;\r\n    \r\n    constructor(message, kerviService:KerviBaseService) {\r\n        super(message, kerviService)\r\n        this.subType = message.inputType;\r\n        this.typeName = \"DateTime\";\r\n    }\r\n\r\n    protected getDefaultValue():Date{\r\n        return new Date();\r\n    }\r\n    \r\n}\r\n\r\nexport class ColorValue extends KerviValueType<string> {\r\n    \r\n    constructor(message, kerviService:KerviBaseService) {\r\n        super(message, kerviService)\r\n        this.typeName = \"Color\";\r\n    }\r\n\r\n    protected getDefaultValue():string{\r\n        return \"#ffffff\";\r\n    }    \r\n}","export class ComponentRef{\r\n    public id: string;\r\n\r\n    constructor(message){\r\n        this.id= message.id;\r\n    }\r\n}","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\nimport { IComponent, DashboardLink } from \"./IComponent.model\"\r\nimport { ComponentRef } from \"./ComponentRef\"\r\nimport { KerviBaseService } from '../kervi-js.service'\r\n\r\nexport class Controller implements IComponent {\r\n    public type: string;\r\n    public visible: boolean;\r\n    public componentType=\"controller\"\r\n    public ui:any = {}\r\n    public name: string;\r\n    public id: string;\r\n    public parameters: any;\r\n    public inputs: IComponent[] = [];\r\n    public outputs: IComponent[] = [];\r\n    public actions: IComponent[] = [];\r\n    public inputReferences: ComponentRef[] = [];\r\n    public outputReferences: ComponentRef[] = [];\r\n    public actionsReferences: ComponentRef[] = [];\r\n    public dashboards: DashboardLink[]=[];\r\n    public template:string;\r\n    private kerviService:KerviBaseService\r\n\r\n    constructor(message: any, kerviService:KerviBaseService) {\r\n        this.kerviService = kerviService;\r\n        this.id = message.id;\r\n        this.name = message.name;\r\n        this.type = message.type;\r\n        this.ui = message.ui;\r\n        this.visible = message.visible;\r\n        this.parameters = message.parameters;\r\n        this.template=message.template;\r\n        for(var ref of message.inputs){\r\n            this.inputReferences.push( new ComponentRef(ref));\r\n        }\r\n\r\n        for(var ref of message.outputs){\r\n            this.outputReferences.push( new ComponentRef(ref));\r\n        }\r\n\r\n        for(var ref of message.actions){\r\n            this.actionsReferences.push( new ComponentRef(ref));\r\n        }\r\n\r\n        for (let dashboardLink of message.dashboardLinks){\r\n            this.dashboards.push( new DashboardLink(this, dashboardLink)); \r\n        }\r\n    }\r\n\r\n    updateReferences(){\r\n        if (this.inputs.length==0){\r\n            for(var ref of this.inputReferences){\r\n                var component = this.kerviService.getComponent(ref.id)\r\n                if (component)\r\n                    this.inputs.push(component)\r\n            }\r\n        }\r\n        if (this.outputs.length==0){\r\n            for(var ref of this.outputReferences){\r\n                var component = this.kerviService.getComponent(ref.id)\r\n                if (component)\r\n                    this.outputs.push(component)\r\n            }\r\n        }\r\n        if (this.actions.length==0){\r\n            for(var ref of this.actionsReferences){\r\n                var component = this.kerviService.getComponent(ref.id)\r\n                if (component)\r\n                    this.actions.push(component)\r\n            }\r\n        }\r\n    };\r\n    removeReferences(components:IComponent[]){};\r\n    reload(component:IComponent){};\r\n}","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { IComponent, DashboardLink } from './IComponent.model'\r\n\r\n\r\nexport class DashboardSizes{\r\n    public valueWidth:string ='3rem';\r\n    public buttonWidth:string = '25px';\r\n    public buttonHeight:string = '';\r\n    public switchWidth:string = '25px';\r\n    public switchHeight:string = '25px';\r\n    public gaugeWidth:string = '100px';\r\n    public gaugeHeight:string = '200px';\r\n}\r\n\r\nexport class DashboardMessageModel{\r\n    public sourceId:string;\r\n    public sourceName:string;\r\n    public area: string;\r\n    public level: number;\r\n    public timestamp: Date;\r\n    public topic:string;\r\n    public body:string;\r\n    public type:string;\r\n\r\n    constructor(message){\r\n        this.timestamp = new Date(message.timestamp*1000);\r\n        this.topic = message.topic;\r\n        this.body = message.body;\r\n        this.type = message.type;\r\n        this.sourceId = message.source_id;\r\n        this.sourceName = message.source_name;\r\n        this.area = message.area;\r\n        this.level = message.level;\r\n    }\r\n}\r\n\r\nexport class DashboardPanelComponent{\r\n    public component:IComponent;\r\n    public componentId:string;\r\n    public linkId:any;\r\n    public parameters:any;\r\n\r\n    constructor(private message: any){\r\n        this.linkId = message.linkId;\r\n        this.componentId = message.componentId;\r\n        this.component = message.component;\r\n        this.parameters = message.parameters;\r\n    }\r\n}\r\n\r\nexport class DashboardPanelParameters{\r\n    public title: string = null;\r\n    public width: string = null;\r\n    public height: string = null;\r\n    public type: string = null;\r\n    public userLog: boolean = null;\r\n    public appHealth: boolean = null;\r\n    public logLength = 5;\r\n    public layout = 'row';\r\n\r\n    constructor(messageParameters) {\r\n        this.title = messageParameters.label;\r\n        this.height = this.calcSize(messageParameters.height);\r\n        this.width = this.calcSize(messageParameters.width);\r\n        this.userLog = messageParameters.userLog;\r\n        this.logLength = messageParameters.logLength;\r\n        this.appHealth = messageParameters.app_health;\r\n\r\n        if (messageParameters.type) {\r\n            this.type = messageParameters.type;\r\n        }\r\n        if (messageParameters.layout) {\r\n            this.layout = messageParameters.layout;\r\n        }\r\n    }\r\n\r\n    private calcSize(value){\r\n        if (value==null)\r\n            return ''\r\n        else if (value==='')\r\n            return ''\r\n        else if (isNaN(value)){\r\n            return value;\r\n        } else\r\n            if (value>0)\r\n                return value + '%';\r\n            else\r\n                return '';\r\n    }\r\n}\r\n\r\nexport class DashboardPanel {\r\n    public id:string;\r\n    public name:string;\r\n    public parameters: DashboardPanelParameters;\r\n    public components: DashboardPanelComponent[]=[];\r\n    public dashboard: Dashboard;\r\n    public type:string;\r\n    public subPanels: DashboardPanel[] = [];\r\n    public hasOnlyGroupPanels:boolean = true;\r\n    \r\n    constructor (dashboard, messagePanel) {\r\n        this.dashboard=dashboard;\r\n        this.id=messagePanel.id;\r\n        this.name=messagePanel.name;\r\n        this.type=messagePanel.type;\r\n        this.parameters=new DashboardPanelParameters(messagePanel.uiParameters);\r\n        /*if (messagePanel.components)\r\n            for(var componentRef of messagePanel.components){\r\n                this.components.push(new DashboardPanelComponentModel(componentRef))\r\n            }*/\r\n        \r\n        if (messagePanel.panels){\r\n            //console.log('spa',messagePanel.panels);\r\n            for(var subMessagePanel of messagePanel.panels){\r\n                var panel=new DashboardPanel(this, subMessagePanel);\r\n                this.subPanels.push(panel);\r\n                if (panel.type !== 'group')\r\n                    this.hasOnlyGroupPanels = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    public reload(source:DashboardPanel){\r\n        //console.log('rl', this);\r\n        for(var subPanel of source.subPanels){\r\n            this.reload(subPanel)\r\n        }\r\n        for(var sourceComponent of source.components){\r\n            var found=false;\r\n            for(var component of this.components){\r\n                if (component.componentId == sourceComponent.componentId){\r\n                    found=true;\r\n                }\r\n            }\r\n            if (!found){\r\n                this.components.push(sourceComponent);\r\n            }\r\n        }\r\n        var deleteComponents:DashboardPanelComponent[] = [];\r\n        for (var component of this.components){\r\n            var found=false;\r\n            for(var sourceComponent of source.components){\r\n                if (sourceComponent.componentId == component.componentId){\r\n                    found=true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!found)\r\n                deleteComponents.push(component);\r\n        }\r\n        //console.log('dsc',deleteComponents);\r\n        for(var component of deleteComponents){\r\n            this.components.splice( this.components.indexOf(component), 1 );\r\n        }\r\n    }\r\n}\r\n\r\nexport class DashboardBackgroundModel{\r\n    public type:string;\r\n    public cameraId:string;\r\n    public image:string;\r\n\r\n    constructor(message){\r\n        this.type=message.type;\r\n        this.cameraId=message.cameraId\r\n    }\r\n}\r\n\r\nexport class Dashboard implements IComponent{\r\n    public id:string;\r\n    public name:string;\r\n    public componentType:string;\r\n    public type:string;\r\n    public isDefault:Boolean;\r\n    public template:string;\r\n    public panels:DashboardPanel[];\r\n    public sysPanels:DashboardPanel[];\r\n    public headerPanel: DashboardPanel=null;\r\n    public footerCenterPanel: DashboardPanel=null;\r\n    public footerLeftPanel: DashboardPanel=null;\r\n    public footerRightPanel: DashboardPanel=null;\r\n    public sysPanel: DashboardPanel=null;\r\n    public backgroundPanel: DashboardPanel=null;\r\n    public controllerPanel: DashboardPanel=null;\r\n    public LeftPadXPanel: DashboardPanel=null;\r\n    public LeftPadYPanel: DashboardPanel=null;\r\n    public RightPadXPanel: DashboardPanel=null;\r\n    public RightPadYPanel: DashboardPanel=null;\r\n    //public background: DashboardBackgroundModel=null;\r\n    public unitSize: number;\r\n\r\n    //not used in dashboards\r\n    public visible:boolean;\r\n    public ui:any;\r\n    public dashboards:any[] = [];\r\n\r\n    private currentPanel:DashboardPanel = null;\r\n \r\n    constructor(message){\r\n        this.id=message.id;\r\n        this.name=message.name;\r\n        this.componentType='dashboard';\r\n        this.type=message.type;\r\n        this.isDefault=message.isDefault;\r\n        this.template=message.template;\r\n        this.unitSize=message.unitSize;\r\n        //this.background=new DashboardBackgroundModel(message.background);\r\n        this.panels=[];\r\n        this.sysPanels=[];\r\n        if (!this.template){\r\n            \r\n            for (let messagePanel of message.sections){\r\n                if (!messagePanel){\r\n                    console.log('dashboard with null panel', this.id);\r\n                    continue;\r\n                }\r\n                var panel = new DashboardPanel(this, messagePanel);\r\n                var sysPanel = true;\r\n                if (panel.id=='header_center')\r\n                    this.headerPanel=panel;\r\n                else if (panel.id=='footer_left')\r\n                    this.footerLeftPanel=panel;\r\n                else if (panel.id=='footer_center')\r\n                    this.footerCenterPanel=panel;\r\n                else if (panel.id=='footer_right')\r\n                    this.footerRightPanel=panel;\r\n                else if (panel.id=='header_right')\r\n                    this.sysPanel=panel;\r\n                else if (panel.id=='controllers')\r\n                    this.controllerPanel=panel;\r\n                else if (panel.id=='background')\r\n                    this.backgroundPanel=panel;\r\n                else if (panel.id=='left_pad_x')\r\n                    this.LeftPadXPanel=panel;\r\n                else if (panel.id=='left_pad_y')\r\n                    this.LeftPadYPanel=panel;\r\n                else if (panel.id=='right_pad_x')\r\n                    this.RightPadXPanel=panel;\r\n                else if (panel.id=='right_pad_y')\r\n                    this.RightPadYPanel=panel;\r\n                else{\r\n                    sysPanel=false;\r\n                    if (panel.type!='group'){\r\n                        if(this.currentPanel==null){\r\n                            this.currentPanel = new DashboardPanel(\r\n                            this,\r\n                            {\r\n                                'id':null,\r\n                                'name': '',\r\n                                'type':'group',\r\n                                'components':[],\r\n                                'panels':[],\r\n                                'uiParameters':{\r\n                                    'title':'',\r\n                                    'width':100,\r\n                                    'height':0,\r\n                                    'userLog':false,\r\n                                    'logLength':0\r\n                                }    \r\n                            });\r\n                            this.currentPanel.subPanels.push(panel);\r\n                            this.panels.push(this.currentPanel);\r\n                        } else {\r\n                            this.currentPanel.subPanels.push(panel)\r\n                        }\r\n                    }   \r\n                    else{\r\n                        this.panels.push(panel);\r\n                        this.currentPanel=null;\r\n                    }\r\n                }\r\n                if (sysPanel)\r\n                    this.sysPanels.push(panel);      \r\n            }\r\n\r\n            if (!this.currentPanel){\r\n                this.currentPanel = new DashboardPanel(\r\n                    this,\r\n                    {\r\n                        'id':null,\r\n                        'name': '',\r\n                        'type':'group',\r\n                        'components':[],\r\n                        'panels':[],\r\n                        'uiParameters':{\r\n                            'title':'',\r\n                            'width':100,\r\n                            'height':0,\r\n                            'userLog':false,\r\n                            'logLength':0\r\n                        }    \r\n                    });\r\n                    //this.currentPanel.subPanels.push(panel);\r\n                    this.panels.push(this.currentPanel);\r\n            }\r\n        }\r\n    }\r\n    public isEmpty(){\r\n        if (this.panels.length == 1 && this.panels[0].components.length === 0 && this.panels[0].subPanels.length === 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    removeReferences(deleteComponents:IComponent[]){};\r\n    updateReferences(){};\r\n    reload(component:IComponent){\r\n        var source = component as Dashboard;\r\n        if (!this.backgroundPanel && source.backgroundPanel)\r\n            this.backgroundPanel=source.backgroundPanel;\r\n        else if (this.backgroundPanel && !source.backgroundPanel)\r\n            this.backgroundPanel = null\r\n        else if (this.backgroundPanel)\r\n            this.backgroundPanel.reload(source.backgroundPanel)\r\n\r\n        if (!this.footerLeftPanel && source.footerLeftPanel)\r\n            this.footerLeftPanel=source.footerLeftPanel;\r\n        else if (this.footerLeftPanel && !source.footerLeftPanel)\r\n            this.footerLeftPanel = null\r\n        else if (this.footerLeftPanel)\r\n            this.footerLeftPanel.reload(source.footerLeftPanel)\r\n\r\n        if (!this.footerRightPanel && source.footerRightPanel)\r\n            this.footerRightPanel=source.footerRightPanel;\r\n        else if (this.footerRightPanel && !source.footerRightPanel)\r\n            this.footerRightPanel = null\r\n        else if (this.footerRightPanel)\r\n            this.footerRightPanel.reload(source.footerRightPanel)\r\n\r\n        if (!this.footerCenterPanel && source.footerCenterPanel)\r\n            this.footerCenterPanel=source.footerCenterPanel;\r\n        else if (this.footerCenterPanel && !source.footerCenterPanel)\r\n            this.footerCenterPanel = null\r\n        else if (this.footerCenterPanel)\r\n            this.footerCenterPanel.reload(source.footerCenterPanel)\r\n\r\n        /*if (!this.headerPanel && source.headerPanel)\r\n            this.headerPanel=source.headerPanel;\r\n        else if (this.headerPanel && !source.headerPanel)\r\n            this.headerPanel = null\r\n        else if (this.headerPanel)\r\n            this.headerPanel.reload(source.headerPanel)*/\r\n\r\n        if (!this.sysPanel && source.sysPanel)\r\n            this.sysPanel=source.sysPanel;\r\n        else if (this.sysPanel && !source.sysPanel)\r\n            this.sysPanel = null\r\n        else if (this.sysPanel)\r\n            this.sysPanel.reload(source.sysPanel)\r\n\r\n        if (!this.LeftPadXPanel && source.LeftPadXPanel)\r\n            this.LeftPadXPanel=source.LeftPadXPanel;\r\n        else if (this.LeftPadXPanel && !source.LeftPadXPanel)\r\n            this.LeftPadXPanel = null\r\n        else if (this.LeftPadXPanel)\r\n            this.LeftPadXPanel.reload(source.LeftPadXPanel)\r\n\r\n        if (!this.LeftPadYPanel && source.LeftPadYPanel)\r\n            this.LeftPadYPanel=source.LeftPadYPanel;\r\n        else if (this.LeftPadYPanel && !source.LeftPadYPanel)\r\n            this.LeftPadYPanel = null\r\n        else if (this.LeftPadYPanel)\r\n            this.LeftPadYPanel.reload(source.LeftPadYPanel)\r\n\r\n        if (!this.RightPadXPanel && source.RightPadXPanel)\r\n            this.RightPadXPanel=source.RightPadXPanel;\r\n        else if (this.RightPadXPanel && !source.RightPadXPanel)\r\n            this.RightPadXPanel = null\r\n        else if (this.RightPadXPanel)\r\n            this.RightPadXPanel.reload(source.RightPadXPanel)\r\n\r\n        if (!this.RightPadYPanel && source.RightPadYPanel)\r\n            this.RightPadYPanel=source.RightPadYPanel;\r\n        else if (this.RightPadYPanel && !source.RightPadYPanel)\r\n            this.RightPadYPanel = null\r\n        else if (this.RightPadYPanel)\r\n            this.RightPadYPanel.reload(source.RightPadYPanel)\r\n\r\n        if (!this.controllerPanel && source.controllerPanel)\r\n            this.controllerPanel=source.controllerPanel;\r\n        else if (this.controllerPanel && !source.controllerPanel)\r\n            this.controllerPanel = null\r\n        else if (this.controllerPanel)\r\n            this.controllerPanel.reload(source.controllerPanel)\r\n    };\r\n\r\n    private getDashboardPanelById(id:string, panels:DashboardPanel[]){\r\n        for(let panel of panels){\r\n            if (panel.id == id)\r\n                return panel; \r\n            else{\r\n                var res = this.getDashboardPanelById(id, panel.subPanels);\r\n                if (res)\r\n                    return res;\r\n            }\r\n        } \r\n        return null;\r\n    }\r\n\r\n    public addDashboardLink(link:DashboardLink){\r\n        if (link.dashboardId == '*' || link.dashboardId == this.id || (link.dashboardId=='**default**' && this.isDefault)){\r\n            var panelFound = false;\r\n            var panel = this.getDashboardPanelById(link.panelId, this.panels);\r\n            if (!panel)\r\n                panel = this.getDashboardPanelById(link.panelId, this.sysPanels);\r\n            if (panel){\r\n                panel.components.push(new DashboardPanelComponent(link));\r\n            } else {\r\n                // console.log('adh',link);\r\n                var messagePanel ={\r\n                    id:link.panelId,\r\n                    name:link.panelName,\r\n                    type:'panel',\r\n                    uiParameters:{\r\n                        'title':'',\r\n                        'width':0,\r\n                        'height':0,\r\n                        'userLog':false,\r\n                        'logLength':0\r\n                    }\r\n                }\r\n                var newPanel = new DashboardPanel(this, messagePanel);\r\n                this.currentPanel.subPanels.push(newPanel);\r\n                newPanel.components.push(new DashboardPanelComponent(link));\r\n            }\r\n        }\r\n    }\r\n}","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { IComponent, DashboardLink } from './IComponent.model'\r\nimport { KerviBaseService } from '../kervi-js.service'\r\nexport class Action implements IComponent {\r\n    private kerviService: KerviBaseService = null;\r\n\r\n    public id: string = null;\r\n    public name: string = null;\r\n    public componentType = 'action';\r\n    public runCommand = '';\r\n    public interruptCommand = '';\r\n    public ui = {\r\n        type: '',\r\n        orientation: '',\r\n        visible: true\r\n    }\r\n    public dashboards: DashboardLink[] = [];\r\n    public running$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n    constructor(message: any, kerviService:KerviBaseService){\r\n        this.kerviService = kerviService;\r\n        this.id = message.id;\r\n        this.name = message.name;\r\n        this.ui = message.ui;\r\n        this.ui.visible = message.visible;\r\n        this.ui.type = message.type;\r\n        this.runCommand = message.runCommand;\r\n        this.interruptCommand = message.interruptCommand;\r\n        this.running$.next(message.running);\r\n\r\n        for (let dashboardLink of message.dashboardLinks){\r\n            this.dashboards.push(new DashboardLink(this, dashboardLink)); \r\n        }\r\n    }\r\n\r\n    public run(parameters){\r\n        //if (!this.running$.value){\r\n            if (parameters && parameters.length>0)\r\n                this.kerviService.spine.sendCommand(this.runCommand, ...parameters);\r\n            else\r\n                this.kerviService.spine.sendCommand(this.runCommand);\r\n        //}\r\n    }\r\n\r\n    public interrupt(parameters){\r\n        if (parameters && parameters.length>0)\r\n            this.kerviService.spine.sendCommand(this.interruptCommand, ...parameters);\r\n        else\r\n            this.kerviService.spine.sendCommand(this.interruptCommand);\r\n    }\r\n}","\r\nimport * as KerviValues from './KerviValues.model';\r\nimport { Controller } from './controller.model';\r\nimport { Dashboard } from './dashboard.model';\r\nimport { Action } from './action.model';\r\nimport { IComponent } from './IComponent.model';\r\nimport { KerviBaseService } from '../kervi-js.service';\r\n\r\nexport class ComponentFactory {\r\n\r\n    public static createComponents(message: any, kerviService: KerviBaseService) {\r\n        const foundComponents = this.createComponentsRec(message, kerviService);\r\n        this.linkToDashboards(foundComponents[0], foundComponents[1]);\r\n        return foundComponents[0];\r\n    }\r\n\r\n    private static createComponentsRec(message: any, kerviService) {\r\n        let result = [];\r\n        let dashboards = [];\r\n        if (Array.isArray(message)) {\r\n            for (let i = 0; (i < message.length); i++) {\r\n                const subComponents = this.createComponentsRec(message[i], kerviService);\r\n                result = result.concat(subComponents[0]);\r\n                dashboards = dashboards.concat(subComponents[1]);\r\n            }\r\n        } else {\r\n            let component: any = null;\r\n            const subComponents: any[] = [];\r\n            if (message.componentType === 'KerviAction') {\r\n                component = new Action(message, kerviService);\r\n            } else if (message.componentType === 'dashboard') {\r\n                component = new Dashboard(message);\r\n                dashboards.push(component);\r\n            } else if (message.componentType === 'controller') {\r\n                component = new Controller(message, kerviService);\r\n            } else if (message.componentType === 'boolean-value') {\r\n                component = new KerviValues.BooleanValue(message, kerviService);\r\n            } else if (message.componentType === 'number-value') {\r\n                component = new KerviValues.NumberValue(message, kerviService);\r\n            } else if (message.componentType === 'string-value') {\r\n                component = new KerviValues.StringValue(message, kerviService);\r\n            } else if (message.componentType === 'enum-value') {\r\n                component = new KerviValues.SelectValue(message, kerviService);\r\n            } else if (message.componentType === 'datetime-value') {\r\n                component = new KerviValues.DateTimeValue(message, kerviService);\r\n            } else if (message.componentType === 'color-value') {\r\n                component = new KerviValues.ColorValue(message, kerviService);\r\n            }\r\n            if (component) {\r\n                result.push(component);\r\n            }\r\n            if (subComponents) {\r\n                for (let subComponent of subComponents) {\r\n                    result.push(subComponent);\r\n                }\r\n            }\r\n        }\r\n        return [result, dashboards];\r\n    }\r\n\r\n    public static FixControllerReferences(components: IComponent[]){\r\n        for (let component of components) {\r\n            const controller = component as Controller;\r\n            if (controller && controller.componentType === 'controller') {\r\n                controller.updateReferences();\r\n            }\r\n        }\r\n    }\r\n\r\n    private static linkToDashboards(components: IComponent[], dashboards: Dashboard[]) {\r\n        console.log('ltd', components, dashboards);\r\n        for (let component of components) {\r\n            if (!(component instanceof Dashboard)) {\r\n                for (let link of component.dashboards) {\r\n                    for (let dashboard of dashboards) {\r\n                        dashboard.addDashboardLink(link);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import {  BehaviorSubject, Observable } from 'rxjs';\r\n\r\nexport class FileBase{\r\n    public name: string;\r\n    public path: string;\r\n    public isFile = true;\r\n}\r\n\r\nexport class File extends FileBase{\r\n    public size: number;\r\n}\r\n\r\nexport class Directory extends FileBase{\r\n    public files$: BehaviorSubject<FileBase[]> = new BehaviorSubject([]);\r\n\r\n    constructor(path: string) {\r\n        super();\r\n        this.path = path;\r\n    }\r\n\r\n    public updateFiles(files) {\r\n        let result = []\r\n        for(let file of files) {\r\n            if (file.is_file) {\r\n                const fileEntry = new File();\r\n                fileEntry.name = file.name;\r\n                const p = this.path !== '/' ? this.path : '';\r\n                fileEntry.path = p + '/' + file.name;\r\n                result.push(fileEntry);\r\n            } else {\r\n                const p = this.path !== '/' ? this.path : '';\r\n                const directory = new Directory(p + '/' + file.name);\r\n                directory.name = file.name;\r\n                directory.isFile = false;\r\n                result.push(directory);\r\n            }\r\n        }\r\n        this.files$.next(result);\r\n    }\r\n}\r\n\r\n","import {  BehaviorSubject, Observable } from 'rxjs';\r\nimport { KerviBaseService } from '../kervi-js.service'\r\n\r\nexport class StreamEvent {\r\n    public streamId: string;\r\n    public event: string;\r\n    public data: any;\r\n\r\n    constructor(streamId: string, streamEvent: string, data: any) {\r\n        this.streamId = streamId;\r\n        this.event = streamEvent;\r\n        this.data = data;\r\n    }\r\n}\r\n\r\nexport class Stream {\r\n    public events$: BehaviorSubject<StreamEvent> = new BehaviorSubject<StreamEvent>(null);\r\n\r\n    constructor(private streamId: string, private events: string[], private kerviService: KerviBaseService){\r\n        const self = this;\r\n        kerviService.spine.addStreamHandler(streamId, events, function(e_streamId: string, e_streamEvent: string, e_data: any) {\r\n            const event = new StreamEvent(e_streamId, e_streamEvent, e_data);\r\n            let notify = false;\r\n            if (events === null || events.length === 0 || events.indexOf(e_streamEvent) >= 0) {\r\n                notify = true;\r\n            }\r\n            if (notify) {\r\n                self.events$.next(event);\r\n            }\r\n        });\r\n    }\r\n\r\n    public close() {\r\n        this.kerviService.spine.removeStreamHandler(this.streamId, this.events, null);\r\n    }\r\n}","// Copyright (c) 2016, Tim Wentzlau\r\n// Licensed under MIT\r\nimport { Injectable } from '@angular/core';\r\nimport { KerviSpineBase } from './spine/kervi-spinebase';\r\nimport { KerviWSSpine } from './spine/kervi-ws';\r\nimport { KerviRMQSpine } from './spine/kervi-rmq';\r\nimport {  BehaviorSubject, Observable } from 'rxjs';\r\nimport { IComponent } from './models/IComponent.model';\r\nimport { ComponentFactory } from './models/factory';\r\nimport { DashboardMessageModel } from './models/dashboard.model';\r\nimport { Dashboard } from './models/dashboard.model';\r\nimport { FileBase, Directory } from './models/file.model';\r\nimport { Stream } from './models/stream.model';\r\ndeclare var kerviSocketAddress: any;\r\ndeclare var socketProtocol: any;\r\n\r\nexport enum ConnectionState {disconnected, loading, authenticate, connected}\r\nexport enum UserLogStateType {normal, warning, error}\r\n\r\n@Injectable()\r\nexport class KerviBaseService {\r\n  public spine: KerviSpineBase = null;\r\n  private lastAppPingTime: Date = null;\r\n  private lastPingDiff = 0;\r\n  public appPingDiff$: BehaviorSubject<number> = new BehaviorSubject<number>(0);\r\n  public appPingDelay$: BehaviorSubject<number> = new BehaviorSubject<number>(0);\r\n  public mps$: BehaviorSubject<number> = new BehaviorSubject<number>(0);\r\n  private appInfo = null;\r\n  private  texts: {} = null;\r\n  private components: IComponent[] = [];\r\n  private components$: BehaviorSubject<IComponent[]> = new  BehaviorSubject<IComponent[]>([]);\r\n\r\n  public connectionState$: BehaviorSubject<ConnectionState> = new  BehaviorSubject<ConnectionState>(ConnectionState.disconnected);\r\n  public  application$: BehaviorSubject<any>;\r\n  public doAuthenticate = false;\r\n  public componentsChanged$: BehaviorSubject<Boolean> = new  BehaviorSubject<Boolean>(false);\r\n\r\n  private logMessages: DashboardMessageModel[] = [];\r\n  private logMessages$: BehaviorSubject<DashboardMessageModel[]> = new  BehaviorSubject<DashboardMessageModel[]>([]);\r\n  private lastLogMessage$: BehaviorSubject<DashboardMessageModel> = new  BehaviorSubject<DashboardMessageModel>(null);\r\n  private LogMessageCount$: BehaviorSubject<number> = new  BehaviorSubject<number>(0);\r\n  private LogMessageState$: BehaviorSubject<UserLogStateType> = new  BehaviorSubject<UserLogStateType>(UserLogStateType.normal);\r\n\r\n  private streams = {}\r\n\r\n  IPCReady$: BehaviorSubject<Boolean> = new  BehaviorSubject<Boolean>(false);\r\n\r\n  private _resolveSelf;\r\n  private _rejectSelf;\r\n  private authPromise: Promise<string> = null;\r\n\r\n  constructor() {\r\n    console.log('kervi service constructor');\r\n    const self = this;\r\n    this.application$ = new BehaviorSubject<any>(null);\r\n    this.IPCReady$.subscribe(function(connected) {\r\n      if (connected) {\r\n        console.log('kervi service ipc ready (connected)');\r\n        self.spine.addEventHandler('valueChanged', '', function(id, value) {\r\n          for (const component of self.components) {\r\n            if (component.id === value.id) {\r\n              const dynamicValue = component as any;\r\n              dynamicValue.valueTS = new Date(this.timestamp);\r\n              dynamicValue.set(value.value, false);\r\n            }\r\n          }\r\n        });\r\n\r\n        self.spine.addEventHandler('appPing', null, function(id, data) {\r\n          // console.log('appPing', self.lastAppPingTime, id, data);\r\n          if (self.lastAppPingTime === null) {\r\n            self.lastAppPingTime = new Date();\r\n          } else {\r\n            const now = new Date();\r\n            const pingDiff = now.getTime() - self.lastAppPingTime.getTime() - 1000;\r\n            const pingDelay = now.getTime() - data.ts * 1000;\r\n            self.appPingDelay$.next(pingDelay);\r\n            self.lastAppPingTime = now;\r\n            if (pingDiff !== self.lastPingDiff) {\r\n              self.lastPingDiff = pingDiff;\r\n              self.appPingDiff$.next(self.lastPingDiff);\r\n            }\r\n          }\r\n        });\r\n\r\n        self.spine.addEventHandler('actionStarted', '', function(id) {\r\n          console.log('as', id);\r\n          for (const component of self.components) {\r\n            if (component.id === id) {\r\n              const action = component as any;\r\n              action.running$.next(true);\r\n            }\r\n          }\r\n        });\r\n\r\n        self.spine.addEventHandler('actionDone', '', function(id) {\r\n          console.log('ad', id);\r\n          for (const component of self.components) {\r\n            if (component.id === id) {\r\n              const action = component as any;\r\n              action.running$.next(false);\r\n            }\r\n          }\r\n        });\r\n\r\n        self.spine.addEventHandler('userLogMessage', null, function(v) {\r\n          const messages = self.logMessages$.value;\r\n          const newMessage = new DashboardMessageModel(this);\r\n          messages.unshift(newMessage);\r\n          if (messages.length > 10) {\r\n            messages.pop();\r\n          }\r\n\r\n          let hasErrors = 0;\r\n          let hasWarnings = 0;\r\n          for (const message of messages) {\r\n            if (message.level === 1) {\r\n              hasErrors ++;\r\n            }\r\n            if (message.level === 2) {\r\n              hasWarnings ++;\r\n            }\r\n          }\r\n          if (hasErrors) {\r\n            self.LogMessageState$.next(UserLogStateType.error);\r\n          } else if (hasWarnings) {\r\n            self.LogMessageState$.next(UserLogStateType.warning);\r\n          } else {\r\n            self.LogMessageState$.next(UserLogStateType.normal);\r\n          }\r\n          self.LogMessageCount$.next(messages.length);\r\n          self.lastLogMessage$.next(newMessage);\r\n          self.logMessages$.next(messages);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public GetDirectory(path: string): Promise<Directory> {\r\n    const promise = new Promise<Directory>((resolve, reject) => {\r\n      const directory = new Directory(path);\r\n      this.spine.sendQuery('files_get_dir', path, function(directoryFiles) {\r\n        directory.updateFiles(directoryFiles);\r\n        resolve(directory);\r\n      });\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  public GetThumbnail(path: string): Promise<string> {\r\n    const promise = new Promise<string>((resolve, reject) => {\r\n      this.spine.sendQuery('files_get_thumbnail', path, function(thumbnail) {\r\n        resolve(thumbnail);\r\n      });\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  public GetFile(path: string): Promise<string> {\r\n    const promise = new Promise<string>((resolve, reject) => {\r\n      this.spine.sendQuery('files_get_file', path, function(file) {\r\n        resolve(file);\r\n      });\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  public GetStream(streamId: string, events = []) {\r\n    return new Stream(streamId, events, this);\r\n  }\r\n\r\n  public text(key: string, defaultValue: string= ''): string {\r\n    if (this.texts && key in this.texts) {\r\n      return this.texts[key];\r\n    } else {\r\n      return defaultValue;\r\n    }\r\n  }\r\n\r\n  public getLogMessages$(): Observable<DashboardMessageModel[]> {\r\n    return this.logMessages$.asObservable();\r\n  }\r\n\r\n  public getLastLogMessage$(): Observable<DashboardMessageModel> {\r\n    return this.lastLogMessage$.asObservable();\r\n  }\r\n\r\n  public getLogState$(): Observable<UserLogStateType> {\r\n    return this.LogMessageState$.asObservable();\r\n  }\r\n\r\n  public getLogMessageCount$(): Observable<number> {\r\n    return this.LogMessageCount$.asObservable();\r\n  }\r\n\r\n  public isAppEmpty() {\r\n    const defaultDashboard = this.getDefaultDashboard();\r\n    if (defaultDashboard) {\r\n      return defaultDashboard.isEmpty();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public getComponent(id: string, componentType: string = null) {\r\n    for (const component of this.components) {\r\n      if (component.id === id && (componentType == null || component.componentType === componentType)) {\r\n        return component;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public getComponentsByType(type: string) {\r\n    const result = [];\r\n    for (const component of this.components) {\r\n      if (component.componentType === type) {\r\n        result.push(component);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public getDefaultDashboard(): Dashboard {\r\n    const dashboards = this.getComponentsByType('dashboard') as Dashboard[];\r\n    for (const dashboard of dashboards) {\r\n      if (dashboard.isDefault) {\r\n          return dashboard;\r\n      }\r\n    }\r\n    if (dashboards.length > 0) {\r\n      return dashboards[0];\r\n    }\r\n    return null;\r\n}\r\n\r\n  public connect() {\r\n    let address = null;\r\n    let protocol = 'ws';\r\n    try {\r\n      if (kerviSocketAddress) {\r\n        address = kerviSocketAddress;\r\n      }\r\n      if (socketProtocol) {\r\n        protocol = socketProtocol;\r\n      }\r\n    } catch (e) {\r\n      // for testing with ng serve\r\n      const httpProtocol = location.protocol;\r\n      if (httpProtocol === 'https') {\r\n        protocol = 'wss';\r\n      }\r\n      const httpHost = window.location.hostname;\r\n      address = httpHost + ':9000';\r\n    }\r\n    console.log('ks', address);\r\n\r\n    this.spine = new KerviWSSpine({\r\n      address: address,\r\n      protocol: protocol,\r\n      onOpen: this.onOpen,\r\n      onClose: this.onClose,\r\n      onAuthenticate: this.onAuthenticate,\r\n      onAuthenticateFailed: this.onAuthenticateFailed,\r\n      onLogOff: this.onLogoff,\r\n      onAuthenticateStart: this.onAuthenticateStart,\r\n      onMPS: this.onMPS,\r\n      targetScope: this\r\n    });\r\n  }\r\n\r\n  public connectMQ() {\r\n    console.log('ks', sessionStorage.getItem('mqc'));\r\n\r\n    if (sessionStorage.getItem('mqc')) {\r\n      this.spine = new KerviRMQSpine({\r\n        onOpen: this.onOpen,\r\n        onClose: this.onClose,\r\n        onAuthenticate: this.onAuthenticate,\r\n        onAuthenticateFailed: this.onAuthenticateFailed,\r\n        onLogOff: this.onLogoff,\r\n        onAuthenticateStart: this.onAuthenticateStart,\r\n        targetScope: this,\r\n        apiToken: JSON.parse(sessionStorage.getItem('mqc'))\r\n      });\r\n    } else {\r\n      console.log('qmc not found in storage');\r\n    }\r\n  }\r\n\r\n  isAnonymous() {\r\n    return this.spine.options.userName === 'anonymous';\r\n  }\r\n\r\n  authenticate(userName, password) {\r\n    console.log('sa', userName, password);\r\n    this.authPromise = new Promise<string>((resolve, reject) => {\r\n      this._resolveSelf = resolve;\r\n      this._rejectSelf = reject;\r\n    });\r\n    this.spine.authenticate(userName, password);\r\n    return this.authPromise;\r\n  }\r\n\r\n  logoff() {\r\n    this.spine.logoff();\r\n  }\r\n\r\n  private onAuthenticateStart() {\r\n\r\n  }\r\n\r\n  private onAuthenticate() {\r\n    this.doAuthenticate = true;\r\n    this.reset();\r\n    this._resolveSelf('ok');\r\n  }\r\n\r\n  private onAuthenticateFailed() {\r\n    this._rejectSelf('error');\r\n  }\r\n\r\n  private onLogoff() {\r\n    this.doAuthenticate = true;\r\n    if (this.spine.firstOnOpen) {\r\n      this.IPCReady$.next(true);\r\n    }\r\n    this.reset();\r\n  }\r\n\r\n  private reset() {\r\n    this.components = [];\r\n    this.components$.next(this.components);\r\n\r\n    const messages = [];\r\n    this.LogMessageState$.next(UserLogStateType.normal);\r\n    this.LogMessageCount$.next(messages.length);\r\n    this.logMessages$.next(messages);\r\n\r\n    if (this.IPCReady$.value) {\r\n      this.connectionState$.next(ConnectionState.authenticate);\r\n    } else {\r\n      this.connectionState$.next(ConnectionState.disconnected);\r\n    }\r\n  }\r\n\r\n  private getComponentInfo(retryCount, module_load) {\r\n    const self = this;\r\n    this.spine.sendQuery('GetApplicationInfo', function(appInfo) {\r\n      console.log('app info', appInfo);\r\n      this.spine.sendQuery('getComponentInfo', function(message) {\r\n        console.log('component info', message);\r\n        self.application$.next(appInfo);\r\n        self.texts = appInfo.display.texts;\r\n        self.components = ComponentFactory.createComponents(message, self);\r\n        ComponentFactory.FixControllerReferences(self.getComponentsByType('controller'));\r\n        self.components$.next(self.components);\r\n        self.connectionState$.next(ConnectionState.connected);\r\n        if (module_load) {\r\n          self.componentsChanged$.next(true);\r\n        }\r\n        console.log('components', self.components);\r\n      },\r\n      function() {\r\n        console.error('get component info timeout');\r\n        if (retryCount > 0) {\r\n          self.getComponentInfo(retryCount - 1, module_load);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private onOpen(first) {\r\n    console.log('kervi service on open', this.spine.firstOnOpen, first, this);\r\n    const self = this;\r\n    this.connectionState$.next(ConnectionState.loading);\r\n    this.doAuthenticate = this.spine.doAuthenticate;\r\n    this.getComponentInfo(2, false);\r\n    if (self.spine.firstOnOpen) {\r\n      this.IPCReady$.next(true);\r\n      this.spine.addEventHandler('moduleStarted', '', function() {\r\n          console.log('module loaded', self.components);\r\n          setTimeout(function() {\r\n            self.getComponentInfo(2, true);\r\n          }\r\n          , 2000);\r\n      });\r\n\r\n      this.spine.addEventHandler('moduleStopped', '', function() {\r\n          console.log('module unloaded');\r\n          setTimeout(function() {\r\n            console.log('module unloaded, refresh');\r\n            self.getComponentInfo(2, true);\r\n        }, 5000);\r\n      });\r\n    }\r\n  }\r\n\r\n  private onClose() {\r\n    this.reset();\r\n    console.log('ks on close');\r\n    this.IPCReady$.next(false);\r\n  }\r\n\r\n  private onMPS(mps: number) {\r\n    this.mps$.next(mps);\r\n  }\r\n\r\n  private onHeartbeat() {\r\n\r\n  }\r\n\r\n  private onConnect() {\r\n\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-kervi-js',\r\n  template: `\r\n    <p>\r\n      kervi-js works!\r\n    </p>\r\n  `,\r\n  styles: []\r\n})\r\nexport class KerviJsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { KerviJsComponent } from './kervi-js.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n  ],\r\n  declarations: [KerviJsComponent],\r\n  exports: [KerviJsComponent]\r\n})\r\nexport class KerviJsModule { }\r\n","\r\n/*\r\n * Public API Surface of kervi-js\r\n */\r\n\r\nexport { KerviBaseService, ConnectionState } from './lib/kervi-js.service';\r\nexport * from './lib/models/KerviValues.model';\r\nexport * from './lib/models/dashboard.model';\r\nexport * from './lib/models/action.model';\r\nexport * from './lib/models/IComponent.model';\r\nexport * from './lib/models/controller.model';\r\nexport * from './lib/models/file.model';\r\nexport * from './lib/models/stream.model';\r\n\r\nexport { KerviValue, ValueRange, ValueRangeType } from './lib/models/KerviValues.model';\r\n\r\n\r\nexport * from './lib/kervi-js.service';\r\nexport * from './lib/kervi-js.component';\r\nexport * from './lib/kervi-js.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { NGXKerviService } from \"ngx-kervi\";\r\nimport { ConnectionState } from \"ngx-kervi\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  private currentPage=null;\r\n  \r\n  constructor (private kerviService:NGXKerviService, private router:Router, private route:ActivatedRoute){\r\n    var self = this;\r\n    \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n\r\n    this.kerviService.connectionState$.subscribe(function(connectedState){\r\n      console.log(\"connected service state\",connectedState, self);\r\n      if (connectedState == ConnectionState.disconnected){\r\n        self.router.navigate(['/connect']);\r\n      }\r\n      if (connectedState == ConnectionState.loading){\r\n      }\r\n      if (connectedState == ConnectionState.authenticate){\r\n        self.router.navigate(['/authenticate']);\r\n      }\r\n      if (connectedState == ConnectionState.connected){\r\n        if (self.currentPage)\r\n          self.router.navigate([self.currentPage]);\r\n        else {\r\n          var defaultDashboard = self.kerviService.getDefaultDashboard();\r\n          self.router.navigate(['/'+defaultDashboard.componentType+'/'+defaultDashboard.id])\r\n        }\r\n      }\r\n    });\r\n\r\n    setTimeout(function(){\r\n      self.kerviService.connect();\r\n    },0)\r\n    \r\n  }\r\n}\r\n","<router-outlet>\r\n              \r\n</router-outlet>\r\n<!-- <kervi-user-messages></kervi-user-messages> -->","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}